/*
Copyright 2021 The Crossplane Authors.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by ack-generate. DO NOT EDIT.

package v1alpha1

import (
	xpv1 "github.com/crossplane/crossplane-runtime/apis/common/v1"
	metav1 "k8s.io/apimachinery/pkg/apis/meta/v1"
	"k8s.io/apimachinery/pkg/runtime/schema"
)

// AccessGrantsInstanceParameters defines the desired state of AccessGrantsInstance
type AccessGrantsInstanceParameters struct {
	// Region is which region the AccessGrantsInstance will be created.
	// +kubebuilder:validation:Required
	Region string `json:"region"`
	// The ID of the Amazon Web Services account that is making this request.
	// +kubebuilder:validation:Required
	AccountID *string `json:"accountID"`
	// If you would like to associate your S3 Access Grants instance with an Amazon
	// Web Services IAM Identity Center instance, use this field to pass the Amazon
	// Resource Name (ARN) of the Amazon Web Services IAM Identity Center instance
	// that you are associating with your S3 Access Grants instance. An IAM Identity
	// Center instance is your corporate identity directory that you added to the
	// IAM Identity Center. You can use the ListInstances (https://docs.aws.amazon.com/singlesignon/latest/APIReference/API_ListInstances.html)
	// API operation to retrieve a list of your Identity Center instances and their
	// ARNs.
	IdentityCenterARN *string `json:"identityCenterARN,omitempty"`
	// The Amazon Web Services resource tags that you are adding to the S3 Access
	// Grants instance. Each tag is a label consisting of a user-defined key and
	// value. Tags can help you manage, identify, organize, search for, and filter
	// resources.
	Tags                                 []*Tag `json:"tags,omitempty"`
	CustomAccessGrantsInstanceParameters `json:",inline"`
}

// AccessGrantsInstanceSpec defines the desired state of AccessGrantsInstance
type AccessGrantsInstanceSpec struct {
	xpv1.ResourceSpec `json:",inline"`
	ForProvider       AccessGrantsInstanceParameters `json:"forProvider"`
}

// AccessGrantsInstanceObservation defines the observed state of AccessGrantsInstance
type AccessGrantsInstanceObservation struct {
	// The Amazon Resource Name (ARN) of the S3 Access Grants instance.
	AccessGrantsInstanceARN *string `json:"accessGrantsInstanceARN,omitempty"`
	// The ID of the S3 Access Grants instance. The ID is default. You can have
	// one S3 Access Grants instance per Region per account.
	AccessGrantsInstanceID *string `json:"accessGrantsInstanceID,omitempty"`
	// The date and time when you created the S3 Access Grants instance.
	CreatedAt *metav1.Time `json:"createdAt,omitempty"`

	CustomAccessGrantsInstanceObservation `json:",inline"`
}

// AccessGrantsInstanceStatus defines the observed state of AccessGrantsInstance.
type AccessGrantsInstanceStatus struct {
	xpv1.ResourceStatus `json:",inline"`
	AtProvider          AccessGrantsInstanceObservation `json:"atProvider,omitempty"`
}

// +kubebuilder:object:root=true

// AccessGrantsInstance is the Schema for the AccessGrantsInstances API
// +kubebuilder:printcolumn:name="READY",type="string",JSONPath=".status.conditions[?(@.type=='Ready')].status"
// +kubebuilder:printcolumn:name="SYNCED",type="string",JSONPath=".status.conditions[?(@.type=='Synced')].status"
// +kubebuilder:printcolumn:name="EXTERNAL-NAME",type="string",JSONPath=".metadata.annotations.crossplane\\.io/external-name"
// +kubebuilder:printcolumn:name="AGE",type="date",JSONPath=".metadata.creationTimestamp"
// +kubebuilder:subresource:status
// +kubebuilder:storageversion
// +kubebuilder:resource:scope=Cluster,categories={crossplane,managed,aws}
type AccessGrantsInstance struct {
	metav1.TypeMeta   `json:",inline"`
	metav1.ObjectMeta `json:"metadata,omitempty"`
	Spec              AccessGrantsInstanceSpec   `json:"spec"`
	Status            AccessGrantsInstanceStatus `json:"status,omitempty"`
}

// +kubebuilder:object:root=true

// AccessGrantsInstanceList contains a list of AccessGrantsInstances
type AccessGrantsInstanceList struct {
	metav1.TypeMeta `json:",inline"`
	metav1.ListMeta `json:"metadata,omitempty"`
	Items           []AccessGrantsInstance `json:"items"`
}

// Repository type metadata.
var (
	AccessGrantsInstanceKind             = "AccessGrantsInstance"
	AccessGrantsInstanceGroupKind        = schema.GroupKind{Group: CRDGroup, Kind: AccessGrantsInstanceKind}.String()
	AccessGrantsInstanceKindAPIVersion   = AccessGrantsInstanceKind + "." + GroupVersion.String()
	AccessGrantsInstanceGroupVersionKind = GroupVersion.WithKind(AccessGrantsInstanceKind)
)

func init() {
	SchemeBuilder.Register(&AccessGrantsInstance{}, &AccessGrantsInstanceList{})
}
