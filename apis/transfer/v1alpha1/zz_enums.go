/*
Copyright 2021 The Crossplane Authors.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by ack-generate. DO NOT EDIT.

package v1alpha1

type AgreementStatusType string

const (
	AgreementStatusType_ACTIVE   AgreementStatusType = "ACTIVE"
	AgreementStatusType_INACTIVE AgreementStatusType = "INACTIVE"
)

type As2Transport string

const (
	As2Transport_HTTP As2Transport = "HTTP"
)

type CertificateStatusType string

const (
	CertificateStatusType_ACTIVE           CertificateStatusType = "ACTIVE"
	CertificateStatusType_PENDING_ROTATION CertificateStatusType = "PENDING_ROTATION"
	CertificateStatusType_INACTIVE         CertificateStatusType = "INACTIVE"
)

type CertificateType string

const (
	CertificateType_CERTIFICATE                  CertificateType = "CERTIFICATE"
	CertificateType_CERTIFICATE_WITH_PRIVATE_KEY CertificateType = "CERTIFICATE_WITH_PRIVATE_KEY"
)

type CertificateUsageType string

const (
	CertificateUsageType_SIGNING    CertificateUsageType = "SIGNING"
	CertificateUsageType_ENCRYPTION CertificateUsageType = "ENCRYPTION"
)

type CompressionEnum string

const (
	CompressionEnum_ZLIB     CompressionEnum = "ZLIB"
	CompressionEnum_DISABLED CompressionEnum = "DISABLED"
)

type CustomStepStatus string

const (
	CustomStepStatus_SUCCESS CustomStepStatus = "SUCCESS"
	CustomStepStatus_FAILURE CustomStepStatus = "FAILURE"
)

type Domain string

const (
	Domain_S3  Domain = "S3"
	Domain_EFS Domain = "EFS"
)

type EncryptionAlg string

const (
	EncryptionAlg_AES128_CBC EncryptionAlg = "AES128_CBC"
	EncryptionAlg_AES192_CBC EncryptionAlg = "AES192_CBC"
	EncryptionAlg_AES256_CBC EncryptionAlg = "AES256_CBC"
	EncryptionAlg_NONE       EncryptionAlg = "NONE"
)

type EncryptionType string

const (
	EncryptionType_PGP EncryptionType = "PGP"
)

type EndpointType string

const (
	EndpointType_PUBLIC       EndpointType = "PUBLIC"
	EndpointType_VPC          EndpointType = "VPC"
	EndpointType_VPC_ENDPOINT EndpointType = "VPC_ENDPOINT"
)

type ExecutionErrorType string

const (
	ExecutionErrorType_PERMISSION_DENIED     ExecutionErrorType = "PERMISSION_DENIED"
	ExecutionErrorType_CUSTOM_STEP_FAILED    ExecutionErrorType = "CUSTOM_STEP_FAILED"
	ExecutionErrorType_THROTTLED             ExecutionErrorType = "THROTTLED"
	ExecutionErrorType_ALREADY_EXISTS        ExecutionErrorType = "ALREADY_EXISTS"
	ExecutionErrorType_NOT_FOUND             ExecutionErrorType = "NOT_FOUND"
	ExecutionErrorType_BAD_REQUEST           ExecutionErrorType = "BAD_REQUEST"
	ExecutionErrorType_TIMEOUT               ExecutionErrorType = "TIMEOUT"
	ExecutionErrorType_INTERNAL_SERVER_ERROR ExecutionErrorType = "INTERNAL_SERVER_ERROR"
)

type ExecutionStatus string

const (
	ExecutionStatus_IN_PROGRESS        ExecutionStatus = "IN_PROGRESS"
	ExecutionStatus_COMPLETED          ExecutionStatus = "COMPLETED"
	ExecutionStatus_EXCEPTION          ExecutionStatus = "EXCEPTION"
	ExecutionStatus_HANDLING_EXCEPTION ExecutionStatus = "HANDLING_EXCEPTION"
)

type HomeDirectoryType string

const (
	HomeDirectoryType_PATH    HomeDirectoryType = "PATH"
	HomeDirectoryType_LOGICAL HomeDirectoryType = "LOGICAL"
)

type IdentityProviderType string

const (
	IdentityProviderType_SERVICE_MANAGED       IdentityProviderType = "SERVICE_MANAGED"
	IdentityProviderType_API_GATEWAY           IdentityProviderType = "API_GATEWAY"
	IdentityProviderType_AWS_DIRECTORY_SERVICE IdentityProviderType = "AWS_DIRECTORY_SERVICE"
	IdentityProviderType_AWS_LAMBDA            IdentityProviderType = "AWS_LAMBDA"
)

type MdnResponse string

const (
	MdnResponse_SYNC MdnResponse = "SYNC"
	MdnResponse_NONE MdnResponse = "NONE"
)

type MdnSigningAlg string

const (
	MdnSigningAlg_SHA256  MdnSigningAlg = "SHA256"
	MdnSigningAlg_SHA384  MdnSigningAlg = "SHA384"
	MdnSigningAlg_SHA512  MdnSigningAlg = "SHA512"
	MdnSigningAlg_SHA1    MdnSigningAlg = "SHA1"
	MdnSigningAlg_NONE    MdnSigningAlg = "NONE"
	MdnSigningAlg_DEFAULT MdnSigningAlg = "DEFAULT"
)

type OverwriteExisting string

const (
	OverwriteExisting_TRUE  OverwriteExisting = "TRUE"
	OverwriteExisting_FALSE OverwriteExisting = "FALSE"
)

type ProfileType string

const (
	ProfileType_LOCAL   ProfileType = "LOCAL"
	ProfileType_PARTNER ProfileType = "PARTNER"
)

type Protocol string

const (
	Protocol_SFTP Protocol = "SFTP"
	Protocol_FTP  Protocol = "FTP"
	Protocol_FTPS Protocol = "FTPS"
	Protocol_AS2  Protocol = "AS2"
)

type SetStatOption string

const (
	SetStatOption_DEFAULT      SetStatOption = "DEFAULT"
	SetStatOption_ENABLE_NO_OP SetStatOption = "ENABLE_NO_OP"
)

type SftpAuthenticationMethods string

const (
	SftpAuthenticationMethods_PASSWORD                SftpAuthenticationMethods = "PASSWORD"
	SftpAuthenticationMethods_PUBLIC_KEY              SftpAuthenticationMethods = "PUBLIC_KEY"
	SftpAuthenticationMethods_PUBLIC_KEY_OR_PASSWORD  SftpAuthenticationMethods = "PUBLIC_KEY_OR_PASSWORD"
	SftpAuthenticationMethods_PUBLIC_KEY_AND_PASSWORD SftpAuthenticationMethods = "PUBLIC_KEY_AND_PASSWORD"
)

type SigningAlg string

const (
	SigningAlg_SHA256 SigningAlg = "SHA256"
	SigningAlg_SHA384 SigningAlg = "SHA384"
	SigningAlg_SHA512 SigningAlg = "SHA512"
	SigningAlg_SHA1   SigningAlg = "SHA1"
	SigningAlg_NONE   SigningAlg = "NONE"
)

type State string

const (
	State_OFFLINE      State = "OFFLINE"
	State_ONLINE       State = "ONLINE"
	State_STARTING     State = "STARTING"
	State_STOPPING     State = "STOPPING"
	State_START_FAILED State = "START_FAILED"
	State_STOP_FAILED  State = "STOP_FAILED"
)

type TLSSessionResumptionMode string

const (
	TLSSessionResumptionMode_DISABLED TLSSessionResumptionMode = "DISABLED"
	TLSSessionResumptionMode_ENABLED  TLSSessionResumptionMode = "ENABLED"
	TLSSessionResumptionMode_ENFORCED TLSSessionResumptionMode = "ENFORCED"
)

type WorkflowStepType string

const (
	WorkflowStepType_COPY    WorkflowStepType = "COPY"
	WorkflowStepType_CUSTOM  WorkflowStepType = "CUSTOM"
	WorkflowStepType_TAG     WorkflowStepType = "TAG"
	WorkflowStepType_DELETE  WorkflowStepType = "DELETE"
	WorkflowStepType_DECRYPT WorkflowStepType = "DECRYPT"
)
