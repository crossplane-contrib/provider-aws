/*
Copyright 2021 The Crossplane Authors.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by ack-generate. DO NOT EDIT.

package v1alpha1

type ActionTypeEnum string

const (
	ActionTypeEnum_forward              ActionTypeEnum = "forward"
	ActionTypeEnum_authenticate_oidc    ActionTypeEnum = "authenticate-oidc"
	ActionTypeEnum_authenticate_cognito ActionTypeEnum = "authenticate-cognito"
	ActionTypeEnum_redirect             ActionTypeEnum = "redirect"
	ActionTypeEnum_fixed_response       ActionTypeEnum = "fixed-response"
)

type AuthenticateCognitoActionConditionalBehaviorEnum string

const (
	AuthenticateCognitoActionConditionalBehaviorEnum_deny         AuthenticateCognitoActionConditionalBehaviorEnum = "deny"
	AuthenticateCognitoActionConditionalBehaviorEnum_allow        AuthenticateCognitoActionConditionalBehaviorEnum = "allow"
	AuthenticateCognitoActionConditionalBehaviorEnum_authenticate AuthenticateCognitoActionConditionalBehaviorEnum = "authenticate"
)

type AuthenticateOIDCActionConditionalBehaviorEnum string

const (
	AuthenticateOIDCActionConditionalBehaviorEnum_deny         AuthenticateOIDCActionConditionalBehaviorEnum = "deny"
	AuthenticateOIDCActionConditionalBehaviorEnum_allow        AuthenticateOIDCActionConditionalBehaviorEnum = "allow"
	AuthenticateOIDCActionConditionalBehaviorEnum_authenticate AuthenticateOIDCActionConditionalBehaviorEnum = "authenticate"
)

type IPAddressType string

const (
	IPAddressType_ipv4      IPAddressType = "ipv4"
	IPAddressType_dualstack IPAddressType = "dualstack"
)

type LoadBalancerSchemeEnum string

const (
	LoadBalancerSchemeEnum_internet_facing LoadBalancerSchemeEnum = "internet-facing"
	LoadBalancerSchemeEnum_internal        LoadBalancerSchemeEnum = "internal"
)

type LoadBalancerStateEnum string

const (
	LoadBalancerStateEnum_active          LoadBalancerStateEnum = "active"
	LoadBalancerStateEnum_provisioning    LoadBalancerStateEnum = "provisioning"
	LoadBalancerStateEnum_active_impaired LoadBalancerStateEnum = "active_impaired"
	LoadBalancerStateEnum_failed          LoadBalancerStateEnum = "failed"
)

type LoadBalancerTypeEnum string

const (
	LoadBalancerTypeEnum_application LoadBalancerTypeEnum = "application"
	LoadBalancerTypeEnum_network     LoadBalancerTypeEnum = "network"
	LoadBalancerTypeEnum_gateway     LoadBalancerTypeEnum = "gateway"
)

type ProtocolEnum string

const (
	ProtocolEnum_HTTP    ProtocolEnum = "HTTP"
	ProtocolEnum_HTTPS   ProtocolEnum = "HTTPS"
	ProtocolEnum_TCP     ProtocolEnum = "TCP"
	ProtocolEnum_TLS     ProtocolEnum = "TLS"
	ProtocolEnum_UDP     ProtocolEnum = "UDP"
	ProtocolEnum_TCP_UDP ProtocolEnum = "TCP_UDP"
	ProtocolEnum_GENEVE  ProtocolEnum = "GENEVE"
)

type RedirectActionStatusCodeEnum string

const (
	RedirectActionStatusCodeEnum_HTTP_301 RedirectActionStatusCodeEnum = "HTTP_301"
	RedirectActionStatusCodeEnum_HTTP_302 RedirectActionStatusCodeEnum = "HTTP_302"
)

type TargetGroupIPAddressTypeEnum string

const (
	TargetGroupIPAddressTypeEnum_ipv4 TargetGroupIPAddressTypeEnum = "ipv4"
	TargetGroupIPAddressTypeEnum_ipv6 TargetGroupIPAddressTypeEnum = "ipv6"
)

type TargetHealthReasonEnum string

const (
	TargetHealthReasonEnum_Elb_RegistrationInProgress      TargetHealthReasonEnum = "Elb.RegistrationInProgress"
	TargetHealthReasonEnum_Elb_InitialHealthChecking       TargetHealthReasonEnum = "Elb.InitialHealthChecking"
	TargetHealthReasonEnum_Target_ResponseCodeMismatch     TargetHealthReasonEnum = "Target.ResponseCodeMismatch"
	TargetHealthReasonEnum_Target_Timeout                  TargetHealthReasonEnum = "Target.Timeout"
	TargetHealthReasonEnum_Target_FailedHealthChecks       TargetHealthReasonEnum = "Target.FailedHealthChecks"
	TargetHealthReasonEnum_Target_NotRegistered            TargetHealthReasonEnum = "Target.NotRegistered"
	TargetHealthReasonEnum_Target_NotInUse                 TargetHealthReasonEnum = "Target.NotInUse"
	TargetHealthReasonEnum_Target_DeregistrationInProgress TargetHealthReasonEnum = "Target.DeregistrationInProgress"
	TargetHealthReasonEnum_Target_InvalidState             TargetHealthReasonEnum = "Target.InvalidState"
	TargetHealthReasonEnum_Target_IpUnusable               TargetHealthReasonEnum = "Target.IpUnusable"
	TargetHealthReasonEnum_Target_HealthCheckDisabled      TargetHealthReasonEnum = "Target.HealthCheckDisabled"
	TargetHealthReasonEnum_Elb_InternalError               TargetHealthReasonEnum = "Elb.InternalError"
)

type TargetHealthStateEnum string

const (
	TargetHealthStateEnum_initial     TargetHealthStateEnum = "initial"
	TargetHealthStateEnum_healthy     TargetHealthStateEnum = "healthy"
	TargetHealthStateEnum_unhealthy   TargetHealthStateEnum = "unhealthy"
	TargetHealthStateEnum_unused      TargetHealthStateEnum = "unused"
	TargetHealthStateEnum_draining    TargetHealthStateEnum = "draining"
	TargetHealthStateEnum_unavailable TargetHealthStateEnum = "unavailable"
)

type TargetTypeEnum string

const (
	TargetTypeEnum_instance TargetTypeEnum = "instance"
	TargetTypeEnum_ip       TargetTypeEnum = "ip"
	TargetTypeEnum_lambda   TargetTypeEnum = "lambda"
	TargetTypeEnum_alb      TargetTypeEnum = "alb"
)
