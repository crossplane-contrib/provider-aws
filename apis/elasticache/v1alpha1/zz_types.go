/*
Copyright 2021 The Crossplane Authors.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by ack-generate. DO NOT EDIT.

package v1alpha1

<<<<<<< HEAD
<<<<<<< HEAD
=======
>>>>>>> 88b52363 (feat(elasticache-cache): #585 added elasticache user)
import (
	metav1 "k8s.io/apimachinery/pkg/apis/meta/v1"
)

// Hack to avoid import errors during build...
var (
	_ = &metav1.Time{}
)

<<<<<<< HEAD
// +kubebuilder:skipversion
type Authentication struct {
	PasswordCount *int64 `json:"passwordCount,omitempty"`
}

// +kubebuilder:skipversion
=======
=======
>>>>>>> 88b52363 (feat(elasticache-cache): #585 added elasticache user)
type Authentication struct {
	PasswordCount *int64 `json:"passwordCount,omitempty"`

	Type *string `json:"type_,omitempty"`
}

>>>>>>> a47f48ee (Add CRD and example for elasticache user.)
type AvailabilityZone struct {
	Name *string `json:"name,omitempty"`
}

<<<<<<< HEAD
// +kubebuilder:skipversion
type CacheCluster struct {
	ARN *string `json:"arn,omitempty"`

	AutoMinorVersionUpgrade *bool `json:"autoMinorVersionUpgrade,omitempty"`
=======
type CacheCluster struct {
	ARN *string `json:"arn,omitempty"`

	AtRestEncryptionEnabled *bool `json:"atRestEncryptionEnabled,omitempty"`

	AuthTokenEnabled *bool `json:"authTokenEnabled,omitempty"`
>>>>>>> a47f48ee (Add CRD and example for elasticache user.)

	CacheClusterID *string `json:"cacheClusterID,omitempty"`

	CacheClusterStatus *string `json:"cacheClusterStatus,omitempty"`

	CacheNodeType *string `json:"cacheNodeType,omitempty"`

	CacheSubnetGroupName *string `json:"cacheSubnetGroupName,omitempty"`

	ClientDownloadLandingPage *string `json:"clientDownloadLandingPage,omitempty"`

	Engine *string `json:"engine,omitempty"`

	EngineVersion *string `json:"engineVersion,omitempty"`

	NumCacheNodes *int64 `json:"numCacheNodes,omitempty"`

	PreferredAvailabilityZone *string `json:"preferredAvailabilityZone,omitempty"`

	PreferredMaintenanceWindow *string `json:"preferredMaintenanceWindow,omitempty"`

	PreferredOutpostARN *string `json:"preferredOutpostARN,omitempty"`

	ReplicationGroupID *string `json:"replicationGroupID,omitempty"`

<<<<<<< HEAD
	ReplicationGroupLogDeliveryEnabled *bool `json:"replicationGroupLogDeliveryEnabled,omitempty"`

	SnapshotRetentionLimit *int64 `json:"snapshotRetentionLimit,omitempty"`

	SnapshotWindow *string `json:"snapshotWindow,omitempty"`
}

// +kubebuilder:skipversion
=======
	SnapshotRetentionLimit *int64 `json:"snapshotRetentionLimit,omitempty"`

	SnapshotWindow *string `json:"snapshotWindow,omitempty"`

	TransitEncryptionEnabled *bool `json:"transitEncryptionEnabled,omitempty"`
}

>>>>>>> a47f48ee (Add CRD and example for elasticache user.)
type CacheEngineVersion struct {
	CacheEngineDescription *string `json:"cacheEngineDescription,omitempty"`

	CacheEngineVersionDescription *string `json:"cacheEngineVersionDescription,omitempty"`

	CacheParameterGroupFamily *string `json:"cacheParameterGroupFamily,omitempty"`

	Engine *string `json:"engine,omitempty"`

	EngineVersion *string `json:"engineVersion,omitempty"`
}

<<<<<<< HEAD
// +kubebuilder:skipversion
=======
>>>>>>> a47f48ee (Add CRD and example for elasticache user.)
type CacheNode struct {
	CacheNodeID *string `json:"cacheNodeID,omitempty"`

	CacheNodeStatus *string `json:"cacheNodeStatus,omitempty"`

	CustomerAvailabilityZone *string `json:"customerAvailabilityZone,omitempty"`

	CustomerOutpostARN *string `json:"customerOutpostARN,omitempty"`

	ParameterGroupStatus *string `json:"parameterGroupStatus,omitempty"`

	SourceCacheNodeID *string `json:"sourceCacheNodeID,omitempty"`
}

<<<<<<< HEAD
// +kubebuilder:skipversion
=======
>>>>>>> a47f48ee (Add CRD and example for elasticache user.)
type CacheNodeTypeSpecificParameter struct {
	AllowedValues *string `json:"allowedValues,omitempty"`

	DataType *string `json:"dataType,omitempty"`

	Description *string `json:"description,omitempty"`

<<<<<<< HEAD
	IsModifiable *bool `json:"isModifiable,omitempty"`

=======
>>>>>>> a47f48ee (Add CRD and example for elasticache user.)
	MinimumEngineVersion *string `json:"minimumEngineVersion,omitempty"`

	ParameterName *string `json:"parameterName,omitempty"`

	Source *string `json:"source,omitempty"`
}

<<<<<<< HEAD
// +kubebuilder:skipversion
=======
>>>>>>> a47f48ee (Add CRD and example for elasticache user.)
type CacheNodeTypeSpecificValue struct {
	CacheNodeType *string `json:"cacheNodeType,omitempty"`

	Value *string `json:"value,omitempty"`
}

<<<<<<< HEAD
// +kubebuilder:skipversion
=======
>>>>>>> a47f48ee (Add CRD and example for elasticache user.)
type CacheNodeUpdateStatus struct {
	CacheNodeID *string `json:"cacheNodeID,omitempty"`
}

<<<<<<< HEAD
// +kubebuilder:skipversion
type CacheParameterGroupStatus_SDK struct {
	CacheParameterGroupName *string `json:"cacheParameterGroupName,omitempty"`

	ParameterApplyStatus *string `json:"parameterApplyStatus,omitempty"`
}

// +kubebuilder:skipversion
type CacheParameterGroup_SDK struct {
=======
type CacheParameterGroup struct {
>>>>>>> a47f48ee (Add CRD and example for elasticache user.)
	ARN *string `json:"arn,omitempty"`

	CacheParameterGroupFamily *string `json:"cacheParameterGroupFamily,omitempty"`

	CacheParameterGroupName *string `json:"cacheParameterGroupName,omitempty"`

	Description *string `json:"description,omitempty"`
<<<<<<< HEAD

	IsGlobal *bool `json:"isGlobal,omitempty"`
}

// +kubebuilder:skipversion
=======
}

type CacheParameterGroupStatus struct {
	CacheParameterGroupName *string `json:"cacheParameterGroupName,omitempty"`

	ParameterApplyStatus *string `json:"parameterApplyStatus,omitempty"`
}

>>>>>>> a47f48ee (Add CRD and example for elasticache user.)
type CacheSecurityGroup struct {
	ARN *string `json:"arn,omitempty"`

	CacheSecurityGroupName *string `json:"cacheSecurityGroupName,omitempty"`

	Description *string `json:"description,omitempty"`

	OwnerID *string `json:"ownerID,omitempty"`
}

<<<<<<< HEAD
// +kubebuilder:skipversion
=======
>>>>>>> a47f48ee (Add CRD and example for elasticache user.)
type CacheSecurityGroupMembership struct {
	CacheSecurityGroupName *string `json:"cacheSecurityGroupName,omitempty"`

	Status *string `json:"status,omitempty"`
}

<<<<<<< HEAD
// +kubebuilder:skipversion
=======
>>>>>>> a47f48ee (Add CRD and example for elasticache user.)
type CacheSubnetGroup struct {
	ARN *string `json:"arn,omitempty"`

	CacheSubnetGroupDescription *string `json:"cacheSubnetGroupDescription,omitempty"`

	CacheSubnetGroupName *string `json:"cacheSubnetGroupName,omitempty"`

	VPCID *string `json:"vpcID,omitempty"`
}

<<<<<<< HEAD
// +kubebuilder:skipversion
type CloudWatchLogsDestinationDetails struct {
	LogGroup *string `json:"logGroup,omitempty"`
}

// +kubebuilder:skipversion
=======
>>>>>>> a47f48ee (Add CRD and example for elasticache user.)
type CustomerNodeEndpoint struct {
	Address *string `json:"address,omitempty"`

	Port *int64 `json:"port,omitempty"`
}

<<<<<<< HEAD
// +kubebuilder:skipversion
=======
>>>>>>> a47f48ee (Add CRD and example for elasticache user.)
type EC2SecurityGroup struct {
	EC2SecurityGroupName *string `json:"ec2SecurityGroupName,omitempty"`

	EC2SecurityGroupOwnerID *string `json:"ec2SecurityGroupOwnerID,omitempty"`

	Status *string `json:"status,omitempty"`
}

<<<<<<< HEAD
// +kubebuilder:skipversion
=======
>>>>>>> a47f48ee (Add CRD and example for elasticache user.)
type Endpoint struct {
	Address *string `json:"address,omitempty"`
}

<<<<<<< HEAD
// +kubebuilder:skipversion
=======
>>>>>>> a47f48ee (Add CRD and example for elasticache user.)
type EngineDefaults struct {
	CacheParameterGroupFamily *string `json:"cacheParameterGroupFamily,omitempty"`

	Marker *string `json:"marker,omitempty"`
}

<<<<<<< HEAD
// +kubebuilder:skipversion
=======
>>>>>>> a47f48ee (Add CRD and example for elasticache user.)
type Event struct {
	Message *string `json:"message,omitempty"`

	SourceIdentifier *string `json:"sourceIdentifier,omitempty"`
}

<<<<<<< HEAD
// +kubebuilder:skipversion
=======
type Filter struct {
	Name *string `json:"name,omitempty"`

	Values []*string `json:"values,omitempty"`
}

>>>>>>> a47f48ee (Add CRD and example for elasticache user.)
type GlobalNodeGroup struct {
	GlobalNodeGroupID *string `json:"globalNodeGroupID,omitempty"`

	Slots *string `json:"slots,omitempty"`
}

<<<<<<< HEAD
// +kubebuilder:skipversion
type GlobalReplicationGroup struct {
	ARN *string `json:"arn,omitempty"`

	CacheNodeType *string `json:"cacheNodeType,omitempty"`

=======
type GlobalReplicationGroup struct {
	ARN *string `json:"arn,omitempty"`

	AtRestEncryptionEnabled *bool `json:"atRestEncryptionEnabled,omitempty"`

	AuthTokenEnabled *bool `json:"authTokenEnabled,omitempty"`

	CacheNodeType *string `json:"cacheNodeType,omitempty"`

	ClusterEnabled *bool `json:"clusterEnabled,omitempty"`

>>>>>>> a47f48ee (Add CRD and example for elasticache user.)
	Engine *string `json:"engine,omitempty"`

	EngineVersion *string `json:"engineVersion,omitempty"`

	GlobalReplicationGroupDescription *string `json:"globalReplicationGroupDescription,omitempty"`

	GlobalReplicationGroupID *string `json:"globalReplicationGroupID,omitempty"`

	Status *string `json:"status,omitempty"`
<<<<<<< HEAD
}

// +kubebuilder:skipversion
=======

	TransitEncryptionEnabled *bool `json:"transitEncryptionEnabled,omitempty"`
}

>>>>>>> a47f48ee (Add CRD and example for elasticache user.)
type GlobalReplicationGroupInfo struct {
	GlobalReplicationGroupID *string `json:"globalReplicationGroupID,omitempty"`

	GlobalReplicationGroupMemberRole *string `json:"globalReplicationGroupMemberRole,omitempty"`
}

<<<<<<< HEAD
// +kubebuilder:skipversion
=======
>>>>>>> a47f48ee (Add CRD and example for elasticache user.)
type GlobalReplicationGroupMember struct {
	ReplicationGroupID *string `json:"replicationGroupID,omitempty"`

	ReplicationGroupRegion *string `json:"replicationGroupRegion,omitempty"`

	Role *string `json:"role,omitempty"`

	Status *string `json:"status,omitempty"`
}

<<<<<<< HEAD
// +kubebuilder:skipversion
type KinesisFirehoseDestinationDetails struct {
	DeliveryStream *string `json:"deliveryStream,omitempty"`
}

// +kubebuilder:skipversion
type LogDeliveryConfiguration struct {
	Message *string `json:"message,omitempty"`
}

// +kubebuilder:skipversion
=======
>>>>>>> a47f48ee (Add CRD and example for elasticache user.)
type NodeGroup struct {
	NodeGroupID *string `json:"nodeGroupID,omitempty"`

	Slots *string `json:"slots,omitempty"`

	Status *string `json:"status,omitempty"`
}

<<<<<<< HEAD
// +kubebuilder:skipversion
=======
>>>>>>> a47f48ee (Add CRD and example for elasticache user.)
type NodeGroupConfiguration struct {
	PrimaryAvailabilityZone *string `json:"primaryAvailabilityZone,omitempty"`

	PrimaryOutpostARN *string `json:"primaryOutpostARN,omitempty"`

	ReplicaCount *int64 `json:"replicaCount,omitempty"`

	Slots *string `json:"slots,omitempty"`
}

<<<<<<< HEAD
// +kubebuilder:skipversion
=======
>>>>>>> a47f48ee (Add CRD and example for elasticache user.)
type NodeGroupMember struct {
	CacheClusterID *string `json:"cacheClusterID,omitempty"`

	CacheNodeID *string `json:"cacheNodeID,omitempty"`

	CurrentRole *string `json:"currentRole,omitempty"`

	PreferredAvailabilityZone *string `json:"preferredAvailabilityZone,omitempty"`

	PreferredOutpostARN *string `json:"preferredOutpostARN,omitempty"`
}

<<<<<<< HEAD
// +kubebuilder:skipversion
=======
>>>>>>> a47f48ee (Add CRD and example for elasticache user.)
type NodeGroupMemberUpdateStatus struct {
	CacheClusterID *string `json:"cacheClusterID,omitempty"`

	CacheNodeID *string `json:"cacheNodeID,omitempty"`
}

<<<<<<< HEAD
// +kubebuilder:skipversion
=======
>>>>>>> a47f48ee (Add CRD and example for elasticache user.)
type NodeGroupUpdateStatus struct {
	NodeGroupID *string `json:"nodeGroupID,omitempty"`
}

<<<<<<< HEAD
// +kubebuilder:skipversion
=======
>>>>>>> a47f48ee (Add CRD and example for elasticache user.)
type NodeSnapshot struct {
	CacheClusterID *string `json:"cacheClusterID,omitempty"`

	CacheNodeID *string `json:"cacheNodeID,omitempty"`

	CacheSize *string `json:"cacheSize,omitempty"`

	NodeGroupID *string `json:"nodeGroupID,omitempty"`
}

<<<<<<< HEAD
// +kubebuilder:skipversion
=======
>>>>>>> a47f48ee (Add CRD and example for elasticache user.)
type NotificationConfiguration struct {
	TopicARN *string `json:"topicARN,omitempty"`

	TopicStatus *string `json:"topicStatus,omitempty"`
}

<<<<<<< HEAD
// +kubebuilder:skipversion
=======
>>>>>>> a47f48ee (Add CRD and example for elasticache user.)
type Parameter struct {
	AllowedValues *string `json:"allowedValues,omitempty"`

	DataType *string `json:"dataType,omitempty"`

	Description *string `json:"description,omitempty"`

<<<<<<< HEAD
	IsModifiable *bool `json:"isModifiable,omitempty"`

=======
>>>>>>> a47f48ee (Add CRD and example for elasticache user.)
	MinimumEngineVersion *string `json:"minimumEngineVersion,omitempty"`

	ParameterName *string `json:"parameterName,omitempty"`

	ParameterValue *string `json:"parameterValue,omitempty"`

	Source *string `json:"source,omitempty"`
}

<<<<<<< HEAD
// +kubebuilder:skipversion
=======
>>>>>>> a47f48ee (Add CRD and example for elasticache user.)
type ParameterNameValue struct {
	ParameterName *string `json:"parameterName,omitempty"`

	ParameterValue *string `json:"parameterValue,omitempty"`
}

<<<<<<< HEAD
// +kubebuilder:skipversion
=======
>>>>>>> a47f48ee (Add CRD and example for elasticache user.)
type PendingModifiedValues struct {
	CacheNodeType *string `json:"cacheNodeType,omitempty"`

	EngineVersion *string `json:"engineVersion,omitempty"`

	NumCacheNodes *int64 `json:"numCacheNodes,omitempty"`
}

<<<<<<< HEAD
// +kubebuilder:skipversion
=======
>>>>>>> a47f48ee (Add CRD and example for elasticache user.)
type ProcessedUpdateAction struct {
	CacheClusterID *string `json:"cacheClusterID,omitempty"`

	ReplicationGroupID *string `json:"replicationGroupID,omitempty"`

	ServiceUpdateName *string `json:"serviceUpdateName,omitempty"`
}

<<<<<<< HEAD
// +kubebuilder:skipversion
=======
>>>>>>> a47f48ee (Add CRD and example for elasticache user.)
type RecurringCharge struct {
	RecurringChargeFrequency *string `json:"recurringChargeFrequency,omitempty"`
}

<<<<<<< HEAD
// +kubebuilder:skipversion
=======
>>>>>>> a47f48ee (Add CRD and example for elasticache user.)
type RegionalConfiguration struct {
	ReplicationGroupID *string `json:"replicationGroupID,omitempty"`

	ReplicationGroupRegion *string `json:"replicationGroupRegion,omitempty"`
}

<<<<<<< HEAD
// +kubebuilder:skipversion
type ReplicationGroup struct {
	ARN *string `json:"arn,omitempty"`

	CacheNodeType *string `json:"cacheNodeType,omitempty"`

=======
type ReplicationGroup struct {
	ARN *string `json:"arn,omitempty"`

	AtRestEncryptionEnabled *bool `json:"atRestEncryptionEnabled,omitempty"`

	AuthTokenEnabled *bool `json:"authTokenEnabled,omitempty"`

	CacheNodeType *string `json:"cacheNodeType,omitempty"`

	ClusterEnabled *bool `json:"clusterEnabled,omitempty"`

>>>>>>> a47f48ee (Add CRD and example for elasticache user.)
	Description *string `json:"description,omitempty"`

	KMSKeyID *string `json:"kmsKeyID,omitempty"`

	ReplicationGroupID *string `json:"replicationGroupID,omitempty"`

	SnapshotRetentionLimit *int64 `json:"snapshotRetentionLimit,omitempty"`

	SnapshotWindow *string `json:"snapshotWindow,omitempty"`

	SnapshottingClusterID *string `json:"snapshottingClusterID,omitempty"`

	Status *string `json:"status,omitempty"`
<<<<<<< HEAD
}

// +kubebuilder:skipversion
=======

	TransitEncryptionEnabled *bool `json:"transitEncryptionEnabled,omitempty"`

	UserGroupIDs []*string `json:"userGroupIDs,omitempty"`
}

>>>>>>> a47f48ee (Add CRD and example for elasticache user.)
type ReplicationGroupPendingModifiedValues struct {
	PrimaryClusterID *string `json:"primaryClusterID,omitempty"`
}

<<<<<<< HEAD
// +kubebuilder:skipversion
=======
>>>>>>> a47f48ee (Add CRD and example for elasticache user.)
type ReservedCacheNode struct {
	CacheNodeType *string `json:"cacheNodeType,omitempty"`

	OfferingType *string `json:"offeringType,omitempty"`

	ProductDescription *string `json:"productDescription,omitempty"`

	ReservationARN *string `json:"reservationARN,omitempty"`

	ReservedCacheNodeID *string `json:"reservedCacheNodeID,omitempty"`

	ReservedCacheNodesOfferingID *string `json:"reservedCacheNodesOfferingID,omitempty"`

	State *string `json:"state,omitempty"`
}

<<<<<<< HEAD
// +kubebuilder:skipversion
=======
>>>>>>> a47f48ee (Add CRD and example for elasticache user.)
type ReservedCacheNodesOffering struct {
	CacheNodeType *string `json:"cacheNodeType,omitempty"`

	OfferingType *string `json:"offeringType,omitempty"`

	ProductDescription *string `json:"productDescription,omitempty"`

	ReservedCacheNodesOfferingID *string `json:"reservedCacheNodesOfferingID,omitempty"`
}

<<<<<<< HEAD
// +kubebuilder:skipversion
=======
>>>>>>> a47f48ee (Add CRD and example for elasticache user.)
type SecurityGroupMembership struct {
	SecurityGroupID *string `json:"securityGroupID,omitempty"`

	Status *string `json:"status,omitempty"`
}

<<<<<<< HEAD
// +kubebuilder:skipversion
type ServiceUpdate struct {
=======
type ServiceUpdate struct {
	AutoUpdateAfterRecommendedApplyByDate *bool `json:"autoUpdateAfterRecommendedApplyByDate,omitempty"`

>>>>>>> a47f48ee (Add CRD and example for elasticache user.)
	Engine *string `json:"engine,omitempty"`

	EngineVersion *string `json:"engineVersion,omitempty"`

	EstimatedUpdateTime *string `json:"estimatedUpdateTime,omitempty"`

	ServiceUpdateDescription *string `json:"serviceUpdateDescription,omitempty"`

	ServiceUpdateName *string `json:"serviceUpdateName,omitempty"`
}

<<<<<<< HEAD
// +kubebuilder:skipversion
type Snapshot struct {
	ARN *string `json:"arn,omitempty"`

	AutoMinorVersionUpgrade *bool `json:"autoMinorVersionUpgrade,omitempty"`

=======
type Snapshot struct {
	ARN *string `json:"arn,omitempty"`

>>>>>>> a47f48ee (Add CRD and example for elasticache user.)
	CacheClusterID *string `json:"cacheClusterID,omitempty"`

	CacheNodeType *string `json:"cacheNodeType,omitempty"`

	CacheParameterGroupName *string `json:"cacheParameterGroupName,omitempty"`

	CacheSubnetGroupName *string `json:"cacheSubnetGroupName,omitempty"`

	Engine *string `json:"engine,omitempty"`

	EngineVersion *string `json:"engineVersion,omitempty"`

	KMSKeyID *string `json:"kmsKeyID,omitempty"`

	NumCacheNodes *int64 `json:"numCacheNodes,omitempty"`

	NumNodeGroups *int64 `json:"numNodeGroups,omitempty"`

	Port *int64 `json:"port,omitempty"`

	PreferredAvailabilityZone *string `json:"preferredAvailabilityZone,omitempty"`

	PreferredMaintenanceWindow *string `json:"preferredMaintenanceWindow,omitempty"`

	PreferredOutpostARN *string `json:"preferredOutpostARN,omitempty"`

	ReplicationGroupDescription *string `json:"replicationGroupDescription,omitempty"`

	ReplicationGroupID *string `json:"replicationGroupID,omitempty"`

	SnapshotName *string `json:"snapshotName,omitempty"`

	SnapshotRetentionLimit *int64 `json:"snapshotRetentionLimit,omitempty"`

	SnapshotSource *string `json:"snapshotSource,omitempty"`

	SnapshotStatus *string `json:"snapshotStatus,omitempty"`

	SnapshotWindow *string `json:"snapshotWindow,omitempty"`

	TopicARN *string `json:"topicARN,omitempty"`

	VPCID *string `json:"vpcID,omitempty"`
}

<<<<<<< HEAD
// +kubebuilder:skipversion
=======
>>>>>>> a47f48ee (Add CRD and example for elasticache user.)
type Subnet struct {
	SubnetIdentifier *string `json:"subnetIdentifier,omitempty"`
}

<<<<<<< HEAD
// +kubebuilder:skipversion
=======
>>>>>>> a47f48ee (Add CRD and example for elasticache user.)
type SubnetOutpost struct {
	SubnetOutpostARN *string `json:"subnetOutpostARN,omitempty"`
}

<<<<<<< HEAD
// +kubebuilder:skipversion
=======
>>>>>>> a47f48ee (Add CRD and example for elasticache user.)
type Tag struct {
	Key *string `json:"key,omitempty"`

	Value *string `json:"value,omitempty"`
}

<<<<<<< HEAD
// +kubebuilder:skipversion
=======
>>>>>>> a47f48ee (Add CRD and example for elasticache user.)
type UnprocessedUpdateAction struct {
	CacheClusterID *string `json:"cacheClusterID,omitempty"`

	ErrorMessage *string `json:"errorMessage,omitempty"`

	ErrorType *string `json:"errorType,omitempty"`

	ReplicationGroupID *string `json:"replicationGroupID,omitempty"`

	ServiceUpdateName *string `json:"serviceUpdateName,omitempty"`
}

<<<<<<< HEAD
// +kubebuilder:skipversion
=======
>>>>>>> a47f48ee (Add CRD and example for elasticache user.)
type UpdateAction struct {
	CacheClusterID *string `json:"cacheClusterID,omitempty"`

	Engine *string `json:"engine,omitempty"`

	EstimatedUpdateTime *string `json:"estimatedUpdateTime,omitempty"`

	NodesUpdated *string `json:"nodesUpdated,omitempty"`

	ReplicationGroupID *string `json:"replicationGroupID,omitempty"`

	ServiceUpdateName *string `json:"serviceUpdateName,omitempty"`
}

<<<<<<< HEAD
// +kubebuilder:skipversion
type User struct {
	ARN *string `json:"arn,omitempty"`

	AccessString *string `json:"accessString,omitempty"`

	Status *string `json:"status,omitempty"`

	UserID *string `json:"userID,omitempty"`

	UserName *string `json:"userName,omitempty"`
}

// +kubebuilder:skipversion
type UserGroup struct {
	ARN *string `json:"arn,omitempty"`

	Status *string `json:"status,omitempty"`

	UserGroupID *string `json:"userGroupID,omitempty"`
=======
type UserGroup struct {
	ARN *string `json:"arn,omitempty"`

	Engine *string `json:"engine,omitempty"`

	Status *string `json:"status,omitempty"`

	UserGroupID *string `json:"userGroupID,omitempty"`
}

type UserGroupsUpdateStatus struct {
	UserGroupIDsToAdd []*string `json:"userGroupIDsToAdd,omitempty"`

	UserGroupIDsToRemove []*string `json:"userGroupIDsToRemove,omitempty"`
}

type User_SDK struct {
	ARN *string `json:"arn,omitempty"`

	AccessString *string `json:"accessString,omitempty"`
	// Indicates whether the user requires a password to authenticate.
	Authentication *Authentication `json:"authentication,omitempty"`

	Engine *string `json:"engine,omitempty"`

	Status *string `json:"status,omitempty"`

	UserGroupIDs []*string `json:"userGroupIDs,omitempty"`

	UserID *string `json:"userID,omitempty"`

	UserName *string `json:"userName,omitempty"`
>>>>>>> a47f48ee (Add CRD and example for elasticache user.)
}
