/*
Copyright 2021 The Crossplane Authors.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by ack-generate. DO NOT EDIT.

package v1alpha1

import (
	xpv1 "github.com/crossplane/crossplane-runtime/apis/common/v1"
	metav1 "k8s.io/apimachinery/pkg/apis/meta/v1"
	"k8s.io/apimachinery/pkg/runtime/schema"
)

// ServiceLinkedRoleParameters defines the desired state of ServiceLinkedRole
type ServiceLinkedRoleParameters struct {
	// The service principal for the Amazon Web Services service to which this role
	// is attached. You use a string similar to a URL but without the http:// in
	// front. For example: elasticbeanstalk.amazonaws.com.
	//
	// Service principals are unique and case-sensitive. To find the exact service
	// principal for your service-linked role, see Amazon Web Services services
	// that work with IAM (https://docs.aws.amazon.com/IAM/latest/UserGuide/reference_aws-services-that-work-with-iam.html)
	// in the IAM User Guide. Look for the services that have Yes in the Service-Linked
	// Role column. Choose the Yes link to view the service-linked role documentation
	// for that service.
	// +kubebuilder:validation:Required
	AWSServiceName *string `json:"awsServiceName"`
	// A string that you provide, which is combined with the service-provided prefix
	// to form the complete role name. If you make multiple requests for the same
	// service, then you must supply a different CustomSuffix for each request.
	// Otherwise the request fails with a duplicate role name error. For example,
	// you could add -1 or -debug to the suffix.
	//
	// Some services do not support the CustomSuffix parameter. If you provide an
	// optional suffix and the operation fails, try the operation again without
	// the suffix.
	CustomSuffix *string `json:"customSuffix,omitempty"`
	// The description of the role.
	Description                       *string `json:"description,omitempty"`
	CustomServiceLinkedRoleParameters `json:",inline"`
}

// ServiceLinkedRoleSpec defines the desired state of ServiceLinkedRole
type ServiceLinkedRoleSpec struct {
	xpv1.ResourceSpec `json:",inline"`
	ForProvider       ServiceLinkedRoleParameters `json:"forProvider"`
}

// ServiceLinkedRoleObservation defines the observed state of ServiceLinkedRole
type ServiceLinkedRoleObservation struct {
	// The Amazon Resource Name (ARN) specifying the role. For more information
	// about ARNs and how to use them in policies, see IAM identifiers (https://docs.aws.amazon.com/IAM/latest/UserGuide/Using_Identifiers.html)
	// in the IAM User Guide guide.
	ARN *string `json:"arn,omitempty"`
	// The policy that grants an entity permission to assume the role.
	AssumeRolePolicyDocument *string `json:"assumeRolePolicyDocument,omitempty"`
	// The date and time, in ISO 8601 date-time format (http://www.iso.org/iso/iso8601),
	// when the role was created.
	CreateDate *metav1.Time `json:"createDate,omitempty"`
	// The maximum session duration (in seconds) for the specified role. Anyone
	// who uses the CLI, or API to assume the role can specify the duration using
	// the optional DurationSeconds API parameter or duration-seconds CLI parameter.
	MaxSessionDuration *int64 `json:"maxSessionDuration,omitempty"`
	// The path to the role. For more information about paths, see IAM identifiers
	// (https://docs.aws.amazon.com/IAM/latest/UserGuide/Using_Identifiers.html)
	// in the IAM User Guide.
	Path *string `json:"path,omitempty"`
	// The ARN of the policy used to set the permissions boundary for the role.
	//
	// For more information about permissions boundaries, see Permissions boundaries
	// for IAM identities (https://docs.aws.amazon.com/IAM/latest/UserGuide/access_policies_boundaries.html)
	// in the IAM User Guide.
	PermissionsBoundary *AttachedPermissionsBoundary `json:"permissionsBoundary,omitempty"`
	// The stable and unique string identifying the role. For more information about
	// IDs, see IAM identifiers (https://docs.aws.amazon.com/IAM/latest/UserGuide/Using_Identifiers.html)
	// in the IAM User Guide.
	RoleID *string `json:"roleID,omitempty"`
	// Contains information about the last time that an IAM role was used. This
	// includes the date and time and the Region in which the role was last used.
	// Activity is only reported for the trailing 400 days. This period can be shorter
	// if your Region began supporting these features within the last year. The
	// role might have been used more than 400 days ago. For more information, see
	// Regions where data is tracked (https://docs.aws.amazon.com/IAM/latest/UserGuide/access_policies_access-advisor.html#access-advisor_tracking-period)
	// in the IAM user Guide.
	RoleLastUsed *RoleLastUsed `json:"roleLastUsed,omitempty"`
	// The friendly name that identifies the role.
	RoleName *string `json:"roleName,omitempty"`
	// A list of tags that are attached to the role. For more information about
	// tagging, see Tagging IAM resources (https://docs.aws.amazon.com/IAM/latest/UserGuide/id_tags.html)
	// in the IAM User Guide.
	Tags []*Tag `json:"tags,omitempty"`
}

// ServiceLinkedRoleStatus defines the observed state of ServiceLinkedRole.
type ServiceLinkedRoleStatus struct {
	xpv1.ResourceStatus `json:",inline"`
	AtProvider          ServiceLinkedRoleObservation `json:"atProvider,omitempty"`
}

// +kubebuilder:object:root=true

// ServiceLinkedRole is the Schema for the ServiceLinkedRoles API
// +kubebuilder:printcolumn:name="READY",type="string",JSONPath=".status.conditions[?(@.type=='Ready')].status"
// +kubebuilder:printcolumn:name="SYNCED",type="string",JSONPath=".status.conditions[?(@.type=='Synced')].status"
// +kubebuilder:printcolumn:name="EXTERNAL-NAME",type="string",JSONPath=".metadata.annotations.crossplane\\.io/external-name"
// +kubebuilder:printcolumn:name="AGE",type="date",JSONPath=".metadata.creationTimestamp"
// +kubebuilder:subresource:status
// +kubebuilder:storageversion
// +kubebuilder:resource:scope=Cluster,categories={crossplane,managed,aws}
type ServiceLinkedRole struct {
	metav1.TypeMeta   `json:",inline"`
	metav1.ObjectMeta `json:"metadata,omitempty"`
	Spec              ServiceLinkedRoleSpec   `json:"spec"`
	Status            ServiceLinkedRoleStatus `json:"status,omitempty"`
}

// +kubebuilder:object:root=true

// ServiceLinkedRoleList contains a list of ServiceLinkedRoles
type ServiceLinkedRoleList struct {
	metav1.TypeMeta `json:",inline"`
	metav1.ListMeta `json:"metadata,omitempty"`
	Items           []ServiceLinkedRole `json:"items"`
}

// Repository type metadata.
var (
	ServiceLinkedRoleKind             = "ServiceLinkedRole"
	ServiceLinkedRoleGroupKind        = schema.GroupKind{Group: CRDGroup, Kind: ServiceLinkedRoleKind}.String()
	ServiceLinkedRoleKindAPIVersion   = ServiceLinkedRoleKind + "." + GroupVersion.String()
	ServiceLinkedRoleGroupVersionKind = GroupVersion.WithKind(ServiceLinkedRoleKind)
)

func init() {
	SchemeBuilder.Register(&ServiceLinkedRole{}, &ServiceLinkedRoleList{})
}
