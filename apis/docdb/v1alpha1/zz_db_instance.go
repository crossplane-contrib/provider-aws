/*
Copyright 2021 The Crossplane Authors.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by ack-generate. DO NOT EDIT.

package v1alpha1

import (
	xpv1 "github.com/crossplane/crossplane-runtime/apis/common/v1"
	metav1 "k8s.io/apimachinery/pkg/apis/meta/v1"
	"k8s.io/apimachinery/pkg/runtime/schema"
)

// DBInstanceParameters defines the desired state of DBInstance
type DBInstanceParameters struct {
	// Region is which region the DBInstance will be created.
	// +kubebuilder:validation:Required
	Region string `json:"region"`
	// Indicates that minor engine upgrades are applied automatically to the instance
	// during the maintenance window.
	//
	// Default: true
	AutoMinorVersionUpgrade *bool `json:"autoMinorVersionUpgrade,omitempty"`
	// The Amazon EC2 Availability Zone that the instance is created in.
	//
	// Default: A random, system-chosen Availability Zone in the endpoint's AWS
	// Region.
	//
	// Example: us-east-1d
	AvailabilityZone *string `json:"availabilityZone,omitempty"`
	// The identifier of the cluster that the instance will belong to.
	// +kubebuilder:validation:Required
	DBClusterIdentifier *string `json:"dbClusterIdentifier"`
	// The compute and memory capacity of the instance; for example, db.r5.large.
	// +kubebuilder:validation:Required
	DBInstanceClass *string `json:"dbInstanceClass"`
	// The name of the database engine to be used for this instance.
	//
	// Valid value: docdb
	// +kubebuilder:validation:Required
	Engine *string `json:"engine"`
	// The time range each week during which system maintenance can occur, in Universal
	// Coordinated Time (UTC).
	//
	// Format: ddd:hh24:mi-ddd:hh24:mi
	//
	// The default is a 30-minute window selected at random from an 8-hour block
	// of time for each AWS Region, occurring on a random day of the week.
	//
	// Valid days: Mon, Tue, Wed, Thu, Fri, Sat, Sun
	//
	// Constraints: Minimum 30-minute window.
	PreferredMaintenanceWindow *string `json:"preferredMaintenanceWindow,omitempty"`
	// A value that specifies the order in which an Amazon DocumentDB replica is
	// promoted to the primary instance after a failure of the existing primary
	// instance.
	//
	// Default: 1
	//
	// Valid values: 0-15
	PromotionTier *int64 `json:"promotionTier,omitempty"`
	// The tags to be assigned to the instance. You can assign up to 10 tags to
	// an instance.
	Tags                       []*Tag `json:"tags,omitempty"`
	CustomDBInstanceParameters `json:",inline"`
}

// DBInstanceSpec defines the desired state of DBInstance
type DBInstanceSpec struct {
	xpv1.ResourceSpec `json:",inline"`
	ForProvider       DBInstanceParameters `json:"forProvider"`
}

// DBInstanceObservation defines the observed state of DBInstance
type DBInstanceObservation struct {
	// Specifies the number of days for which automatic snapshots are retained.
	BackupRetentionPeriod *int64 `json:"backupRetentionPeriod,omitempty"`
	// The identifier of the CA certificate for this DB instance.
	CACertificateIdentifier *string `json:"caCertificateIdentifier,omitempty"`
	// The Amazon Resource Name (ARN) for the instance.
	DBInstanceARN *string `json:"dbInstanceARN,omitempty"`
	// Contains a user-provided database identifier. This identifier is the unique
	// key that identifies an instance.
	DBInstanceIdentifier *string `json:"dbInstanceIdentifier,omitempty"`
	// Specifies the current state of this database.
	DBInstanceStatus *string `json:"dbInstanceStatus,omitempty"`
	// Specifies information on the subnet group that is associated with the instance,
	// including the name, description, and subnets in the subnet group.
	DBSubnetGroup *DBSubnetGroup_SDK `json:"dbSubnetGroup,omitempty"`
	// The AWS Region-unique, immutable identifier for the instance. This identifier
	// is found in AWS CloudTrail log entries whenever the AWS KMS key for the instance
	// is accessed.
	DBIResourceID *string `json:"dbiResourceID,omitempty"`
	// A list of log types that this instance is configured to export to Amazon
	// CloudWatch Logs.
	EnabledCloudwatchLogsExports []*string `json:"enabledCloudwatchLogsExports,omitempty"`
	// Specifies the connection endpoint.
	Endpoint *Endpoint `json:"endpoint,omitempty"`
	// Indicates the database engine version.
	EngineVersion *string `json:"engineVersion,omitempty"`
	// Provides the date and time that the instance was created.
	InstanceCreateTime *metav1.Time `json:"instanceCreateTime,omitempty"`
	// If StorageEncrypted is true, the AWS KMS key identifier for the encrypted
	// instance.
	KMSKeyID *string `json:"kmsKeyID,omitempty"`
	// Specifies the latest time to which a database can be restored with point-in-time
	// restore.
	LatestRestorableTime *metav1.Time `json:"latestRestorableTime,omitempty"`
	// Specifies that changes to the instance are pending. This element is included
	// only when changes are pending. Specific changes are identified by subelements.
	PendingModifiedValues *PendingModifiedValues `json:"pendingModifiedValues,omitempty"`
	// Specifies the daily time range during which automated backups are created
	// if automated backups are enabled, as determined by the BackupRetentionPeriod.
	PreferredBackupWindow *string `json:"preferredBackupWindow,omitempty"`
	// Not supported. Amazon DocumentDB does not currently support public endpoints.
	// The value of PubliclyAccessible is always false.
	PubliclyAccessible *bool `json:"publiclyAccessible,omitempty"`
	// The status of a read replica. If the instance is not a read replica, this
	// is blank.
	StatusInfos []*DBInstanceStatusInfo `json:"statusInfos,omitempty"`
	// Specifies whether or not the instance is encrypted.
	StorageEncrypted *bool `json:"storageEncrypted,omitempty"`
	// Provides a list of VPC security group elements that the instance belongs
	// to.
	VPCSecurityGroups []*VPCSecurityGroupMembership `json:"vpcSecurityGroups,omitempty"`
}

// DBInstanceStatus defines the observed state of DBInstance.
type DBInstanceStatus struct {
	xpv1.ResourceStatus `json:",inline"`
	AtProvider          DBInstanceObservation `json:"atProvider"`
}

// +kubebuilder:object:root=true

// DBInstance is the Schema for the DBInstances API
// +kubebuilder:printcolumn:name="READY",type="string",JSONPath=".status.conditions[?(@.type=='Ready')].status"
// +kubebuilder:printcolumn:name="SYNCED",type="string",JSONPath=".status.conditions[?(@.type=='Synced')].status"
// +kubebuilder:printcolumn:name="EXTERNAL-NAME",type="string",JSONPath=".metadata.annotations.crossplane\\.io/external-name"
// +kubebuilder:subresource:status
// +kubebuilder:resource:scope=Cluster,categories={crossplane,managed,aws}
type DBInstance struct {
	metav1.TypeMeta   `json:",inline"`
	metav1.ObjectMeta `json:"metadata,omitempty"`
	Spec              DBInstanceSpec   `json:"spec,omitempty"`
	Status            DBInstanceStatus `json:"status,omitempty"`
}

// +kubebuilder:object:root=true

// DBInstanceList contains a list of DBInstances
type DBInstanceList struct {
	metav1.TypeMeta `json:",inline"`
	metav1.ListMeta `json:"metadata,omitempty"`
	Items           []DBInstance `json:"items"`
}

// Repository type metadata.
var (
	DBInstanceKind             = "DBInstance"
	DBInstanceGroupKind        = schema.GroupKind{Group: Group, Kind: DBInstanceKind}.String()
	DBInstanceKindAPIVersion   = DBInstanceKind + "." + GroupVersion.String()
	DBInstanceGroupVersionKind = GroupVersion.WithKind(DBInstanceKind)
)

func init() {
	SchemeBuilder.Register(&DBInstance{}, &DBInstanceList{})
}
