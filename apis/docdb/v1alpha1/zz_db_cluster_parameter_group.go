/*
Copyright 2021 The Crossplane Authors.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by ack-generate. DO NOT EDIT.

package v1alpha1

import (
	xpv1 "github.com/crossplane/crossplane-runtime/apis/common/v1"
	metav1 "k8s.io/apimachinery/pkg/apis/meta/v1"
	"k8s.io/apimachinery/pkg/runtime/schema"
)

// DBClusterParameterGroupParameters defines the desired state of DBClusterParameterGroup
type DBClusterParameterGroupParameters struct {
	// Region is which region the DBClusterParameterGroup will be created.
	// +kubebuilder:validation:Required
	Region string `json:"region"`
	// The cluster parameter group family name.
	// +kubebuilder:validation:Required
	DBParameterGroupFamily *string `json:"dbParameterGroupFamily"`
	// The description for the cluster parameter group.
	// +kubebuilder:validation:Required
	Description *string `json:"description"`
	// The tags to be assigned to the cluster parameter group.
	Tags                                    []*Tag `json:"tags,omitempty"`
	CustomDBClusterParameterGroupParameters `json:",inline"`
}

// DBClusterParameterGroupSpec defines the desired state of DBClusterParameterGroup
type DBClusterParameterGroupSpec struct {
	xpv1.ResourceSpec `json:",inline"`
	ForProvider       DBClusterParameterGroupParameters `json:"forProvider"`
}

// DBClusterParameterGroupObservation defines the observed state of DBClusterParameterGroup
type DBClusterParameterGroupObservation struct {
	// The Amazon Resource Name (ARN) for the cluster parameter group.
	DBClusterParameterGroupARN *string `json:"dbClusterParameterGroupARN,omitempty"`
	// Provides the name of the cluster parameter group.
	DBClusterParameterGroupName *string `json:"dbClusterParameterGroupName,omitempty"`
}

// DBClusterParameterGroupStatus defines the observed state of DBClusterParameterGroup.
type DBClusterParameterGroupStatus struct {
	xpv1.ResourceStatus `json:",inline"`
	AtProvider          DBClusterParameterGroupObservation `json:"atProvider"`
}

// +kubebuilder:object:root=true

// DBClusterParameterGroup is the Schema for the DBClusterParameterGroups API
// +kubebuilder:printcolumn:name="READY",type="string",JSONPath=".status.conditions[?(@.type=='Ready')].status"
// +kubebuilder:printcolumn:name="SYNCED",type="string",JSONPath=".status.conditions[?(@.type=='Synced')].status"
// +kubebuilder:printcolumn:name="EXTERNAL-NAME",type="string",JSONPath=".metadata.annotations.crossplane\\.io/external-name"
// +kubebuilder:subresource:status
// +kubebuilder:resource:scope=Cluster,categories={crossplane,managed,aws}
type DBClusterParameterGroup struct {
	metav1.TypeMeta   `json:",inline"`
	metav1.ObjectMeta `json:"metadata,omitempty"`
	Spec              DBClusterParameterGroupSpec   `json:"spec,omitempty"`
	Status            DBClusterParameterGroupStatus `json:"status,omitempty"`
}

// +kubebuilder:object:root=true

// DBClusterParameterGroupList contains a list of DBClusterParameterGroups
type DBClusterParameterGroupList struct {
	metav1.TypeMeta `json:",inline"`
	metav1.ListMeta `json:"metadata,omitempty"`
	Items           []DBClusterParameterGroup `json:"items"`
}

// Repository type metadata.
var (
	DBClusterParameterGroupKind             = "DBClusterParameterGroup"
	DBClusterParameterGroupGroupKind        = schema.GroupKind{Group: Group, Kind: DBClusterParameterGroupKind}.String()
	DBClusterParameterGroupKindAPIVersion   = DBClusterParameterGroupKind + "." + GroupVersion.String()
	DBClusterParameterGroupGroupVersionKind = GroupVersion.WithKind(DBClusterParameterGroupKind)
)

func init() {
	SchemeBuilder.Register(&DBClusterParameterGroup{}, &DBClusterParameterGroupList{})
}
