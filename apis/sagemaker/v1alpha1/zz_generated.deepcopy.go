// +build !ignore_autogenerated

/*
Copyright 2020 The Crossplane Authors.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by controller-gen. DO NOT EDIT.

package v1alpha1

import (
	"github.com/crossplane/crossplane-runtime/apis/common/v1"
	runtime "k8s.io/apimachinery/pkg/runtime"
)

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Algorithm) DeepCopyInto(out *Algorithm) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Algorithm.
func (in *Algorithm) DeepCopy() *Algorithm {
	if in == nil {
		return nil
	}
	out := new(Algorithm)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *Algorithm) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AlgorithmList) DeepCopyInto(out *AlgorithmList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]Algorithm, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AlgorithmList.
func (in *AlgorithmList) DeepCopy() *AlgorithmList {
	if in == nil {
		return nil
	}
	out := new(AlgorithmList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *AlgorithmList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AlgorithmObservation) DeepCopyInto(out *AlgorithmObservation) {
	*out = *in
	if in.AlgorithmARN != nil {
		in, out := &in.AlgorithmARN, &out.AlgorithmARN
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AlgorithmObservation.
func (in *AlgorithmObservation) DeepCopy() *AlgorithmObservation {
	if in == nil {
		return nil
	}
	out := new(AlgorithmObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AlgorithmParameters) DeepCopyInto(out *AlgorithmParameters) {
	*out = *in
	if in.AlgorithmDescription != nil {
		in, out := &in.AlgorithmDescription, &out.AlgorithmDescription
		*out = new(string)
		**out = **in
	}
	if in.AlgorithmName != nil {
		in, out := &in.AlgorithmName, &out.AlgorithmName
		*out = new(string)
		**out = **in
	}
	if in.CertifyForMarketplace != nil {
		in, out := &in.CertifyForMarketplace, &out.CertifyForMarketplace
		*out = new(bool)
		**out = **in
	}
	if in.InferenceSpecification != nil {
		in, out := &in.InferenceSpecification, &out.InferenceSpecification
		*out = new(InferenceSpecification)
		(*in).DeepCopyInto(*out)
	}
	if in.TrainingSpecification != nil {
		in, out := &in.TrainingSpecification, &out.TrainingSpecification
		*out = new(TrainingSpecification)
		(*in).DeepCopyInto(*out)
	}
	if in.ValidationSpecification != nil {
		in, out := &in.ValidationSpecification, &out.ValidationSpecification
		*out = new(AlgorithmValidationSpecification)
		(*in).DeepCopyInto(*out)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AlgorithmParameters.
func (in *AlgorithmParameters) DeepCopy() *AlgorithmParameters {
	if in == nil {
		return nil
	}
	out := new(AlgorithmParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AlgorithmSpec) DeepCopyInto(out *AlgorithmSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AlgorithmSpec.
func (in *AlgorithmSpec) DeepCopy() *AlgorithmSpec {
	if in == nil {
		return nil
	}
	out := new(AlgorithmSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AlgorithmSpecification) DeepCopyInto(out *AlgorithmSpecification) {
	*out = *in
	if in.AlgorithmName != nil {
		in, out := &in.AlgorithmName, &out.AlgorithmName
		*out = new(string)
		**out = **in
	}
	if in.AlgorithmNameRef != nil {
		in, out := &in.AlgorithmNameRef, &out.AlgorithmNameRef
		*out = new(v1.Reference)
		**out = **in
	}
	if in.AlgorithmNameSelector != nil {
		in, out := &in.AlgorithmNameSelector, &out.AlgorithmNameSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.EnableSageMakerMetricsTimeSeries != nil {
		in, out := &in.EnableSageMakerMetricsTimeSeries, &out.EnableSageMakerMetricsTimeSeries
		*out = new(bool)
		**out = **in
	}
	if in.MetricDefinitions != nil {
		in, out := &in.MetricDefinitions, &out.MetricDefinitions
		*out = make([]*MetricDefinition, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(MetricDefinition)
				(*in).DeepCopyInto(*out)
			}
		}
	}
	if in.TrainingImage != nil {
		in, out := &in.TrainingImage, &out.TrainingImage
		*out = new(string)
		**out = **in
	}
	if in.TrainingInputMode != nil {
		in, out := &in.TrainingInputMode, &out.TrainingInputMode
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AlgorithmSpecification.
func (in *AlgorithmSpecification) DeepCopy() *AlgorithmSpecification {
	if in == nil {
		return nil
	}
	out := new(AlgorithmSpecification)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AlgorithmStatus) DeepCopyInto(out *AlgorithmStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AlgorithmStatus.
func (in *AlgorithmStatus) DeepCopy() *AlgorithmStatus {
	if in == nil {
		return nil
	}
	out := new(AlgorithmStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AlgorithmStatusDetails) DeepCopyInto(out *AlgorithmStatusDetails) {
	*out = *in
	if in.ImageScanStatuses != nil {
		in, out := &in.ImageScanStatuses, &out.ImageScanStatuses
		*out = make([]*AlgorithmStatusItem, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(AlgorithmStatusItem)
				(*in).DeepCopyInto(*out)
			}
		}
	}
	if in.ValidationStatuses != nil {
		in, out := &in.ValidationStatuses, &out.ValidationStatuses
		*out = make([]*AlgorithmStatusItem, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(AlgorithmStatusItem)
				(*in).DeepCopyInto(*out)
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AlgorithmStatusDetails.
func (in *AlgorithmStatusDetails) DeepCopy() *AlgorithmStatusDetails {
	if in == nil {
		return nil
	}
	out := new(AlgorithmStatusDetails)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AlgorithmStatusItem) DeepCopyInto(out *AlgorithmStatusItem) {
	*out = *in
	if in.FailureReason != nil {
		in, out := &in.FailureReason, &out.FailureReason
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Status != nil {
		in, out := &in.Status, &out.Status
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AlgorithmStatusItem.
func (in *AlgorithmStatusItem) DeepCopy() *AlgorithmStatusItem {
	if in == nil {
		return nil
	}
	out := new(AlgorithmStatusItem)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AlgorithmSummary) DeepCopyInto(out *AlgorithmSummary) {
	*out = *in
	if in.AlgorithmARN != nil {
		in, out := &in.AlgorithmARN, &out.AlgorithmARN
		*out = new(string)
		**out = **in
	}
	if in.AlgorithmDescription != nil {
		in, out := &in.AlgorithmDescription, &out.AlgorithmDescription
		*out = new(string)
		**out = **in
	}
	if in.AlgorithmName != nil {
		in, out := &in.AlgorithmName, &out.AlgorithmName
		*out = new(string)
		**out = **in
	}
	if in.AlgorithmStatus != nil {
		in, out := &in.AlgorithmStatus, &out.AlgorithmStatus
		*out = new(string)
		**out = **in
	}
	if in.CreationTime != nil {
		in, out := &in.CreationTime, &out.CreationTime
		*out = (*in).DeepCopy()
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AlgorithmSummary.
func (in *AlgorithmSummary) DeepCopy() *AlgorithmSummary {
	if in == nil {
		return nil
	}
	out := new(AlgorithmSummary)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AlgorithmValidationProfile) DeepCopyInto(out *AlgorithmValidationProfile) {
	*out = *in
	if in.ProfileName != nil {
		in, out := &in.ProfileName, &out.ProfileName
		*out = new(string)
		**out = **in
	}
	if in.TrainingJobDefinition != nil {
		in, out := &in.TrainingJobDefinition, &out.TrainingJobDefinition
		*out = new(TrainingJobDefinition)
		(*in).DeepCopyInto(*out)
	}
	if in.TransformJobDefinition != nil {
		in, out := &in.TransformJobDefinition, &out.TransformJobDefinition
		*out = new(TransformJobDefinition)
		(*in).DeepCopyInto(*out)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AlgorithmValidationProfile.
func (in *AlgorithmValidationProfile) DeepCopy() *AlgorithmValidationProfile {
	if in == nil {
		return nil
	}
	out := new(AlgorithmValidationProfile)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AlgorithmValidationSpecification) DeepCopyInto(out *AlgorithmValidationSpecification) {
	*out = *in
	if in.ValidationProfiles != nil {
		in, out := &in.ValidationProfiles, &out.ValidationProfiles
		*out = make([]*AlgorithmValidationProfile, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(AlgorithmValidationProfile)
				(*in).DeepCopyInto(*out)
			}
		}
	}
	if in.ValidationRole != nil {
		in, out := &in.ValidationRole, &out.ValidationRole
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AlgorithmValidationSpecification.
func (in *AlgorithmValidationSpecification) DeepCopy() *AlgorithmValidationSpecification {
	if in == nil {
		return nil
	}
	out := new(AlgorithmValidationSpecification)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AnnotationConsolidationConfig) DeepCopyInto(out *AnnotationConsolidationConfig) {
	*out = *in
	if in.AnnotationConsolidationLambdaARN != nil {
		in, out := &in.AnnotationConsolidationLambdaARN, &out.AnnotationConsolidationLambdaARN
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AnnotationConsolidationConfig.
func (in *AnnotationConsolidationConfig) DeepCopy() *AnnotationConsolidationConfig {
	if in == nil {
		return nil
	}
	out := new(AnnotationConsolidationConfig)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *App) DeepCopyInto(out *App) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new App.
func (in *App) DeepCopy() *App {
	if in == nil {
		return nil
	}
	out := new(App)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *App) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AppDetails) DeepCopyInto(out *AppDetails) {
	*out = *in
	if in.AppName != nil {
		in, out := &in.AppName, &out.AppName
		*out = new(string)
		**out = **in
	}
	if in.AppType != nil {
		in, out := &in.AppType, &out.AppType
		*out = new(string)
		**out = **in
	}
	if in.CreationTime != nil {
		in, out := &in.CreationTime, &out.CreationTime
		*out = (*in).DeepCopy()
	}
	if in.DomainID != nil {
		in, out := &in.DomainID, &out.DomainID
		*out = new(string)
		**out = **in
	}
	if in.Status != nil {
		in, out := &in.Status, &out.Status
		*out = new(string)
		**out = **in
	}
	if in.UserProfileName != nil {
		in, out := &in.UserProfileName, &out.UserProfileName
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AppDetails.
func (in *AppDetails) DeepCopy() *AppDetails {
	if in == nil {
		return nil
	}
	out := new(AppDetails)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AppList) DeepCopyInto(out *AppList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]App, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AppList.
func (in *AppList) DeepCopy() *AppList {
	if in == nil {
		return nil
	}
	out := new(AppList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *AppList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AppObservation) DeepCopyInto(out *AppObservation) {
	*out = *in
	if in.AppARN != nil {
		in, out := &in.AppARN, &out.AppARN
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AppObservation.
func (in *AppObservation) DeepCopy() *AppObservation {
	if in == nil {
		return nil
	}
	out := new(AppObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AppParameters) DeepCopyInto(out *AppParameters) {
	*out = *in
	if in.AppName != nil {
		in, out := &in.AppName, &out.AppName
		*out = new(string)
		**out = **in
	}
	if in.AppType != nil {
		in, out := &in.AppType, &out.AppType
		*out = new(string)
		**out = **in
	}
	if in.DomainID != nil {
		in, out := &in.DomainID, &out.DomainID
		*out = new(string)
		**out = **in
	}
	if in.DomainIDRef != nil {
		in, out := &in.DomainIDRef, &out.DomainIDRef
		*out = new(v1.Reference)
		**out = **in
	}
	if in.DomainIDSelector != nil {
		in, out := &in.DomainIDSelector, &out.DomainIDSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.ResourceSpec != nil {
		in, out := &in.ResourceSpec, &out.ResourceSpec
		*out = new(ResourceSpec)
		(*in).DeepCopyInto(*out)
	}
	if in.Tags != nil {
		in, out := &in.Tags, &out.Tags
		*out = make([]*Tag, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(Tag)
				(*in).DeepCopyInto(*out)
			}
		}
	}
	if in.UserProfileName != nil {
		in, out := &in.UserProfileName, &out.UserProfileName
		*out = new(string)
		**out = **in
	}
	if in.UserProfileNameRef != nil {
		in, out := &in.UserProfileNameRef, &out.UserProfileNameRef
		*out = new(v1.Reference)
		**out = **in
	}
	if in.UserProfileNameSelector != nil {
		in, out := &in.UserProfileNameSelector, &out.UserProfileNameSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AppParameters.
func (in *AppParameters) DeepCopy() *AppParameters {
	if in == nil {
		return nil
	}
	out := new(AppParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AppSpec) DeepCopyInto(out *AppSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AppSpec.
func (in *AppSpec) DeepCopy() *AppSpec {
	if in == nil {
		return nil
	}
	out := new(AppSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AppSpecification) DeepCopyInto(out *AppSpecification) {
	*out = *in
	if in.ContainerArguments != nil {
		in, out := &in.ContainerArguments, &out.ContainerArguments
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.ContainerEntrypoint != nil {
		in, out := &in.ContainerEntrypoint, &out.ContainerEntrypoint
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.ImageURI != nil {
		in, out := &in.ImageURI, &out.ImageURI
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AppSpecification.
func (in *AppSpecification) DeepCopy() *AppSpecification {
	if in == nil {
		return nil
	}
	out := new(AppSpecification)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AppStatus) DeepCopyInto(out *AppStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AppStatus.
func (in *AppStatus) DeepCopy() *AppStatus {
	if in == nil {
		return nil
	}
	out := new(AppStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AutoMLCandidate) DeepCopyInto(out *AutoMLCandidate) {
	*out = *in
	if in.CandidateName != nil {
		in, out := &in.CandidateName, &out.CandidateName
		*out = new(string)
		**out = **in
	}
	if in.CandidateStatus != nil {
		in, out := &in.CandidateStatus, &out.CandidateStatus
		*out = new(string)
		**out = **in
	}
	if in.CandidateSteps != nil {
		in, out := &in.CandidateSteps, &out.CandidateSteps
		*out = make([]*AutoMLCandidateStep, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(AutoMLCandidateStep)
				(*in).DeepCopyInto(*out)
			}
		}
	}
	if in.CreationTime != nil {
		in, out := &in.CreationTime, &out.CreationTime
		*out = (*in).DeepCopy()
	}
	if in.EndTime != nil {
		in, out := &in.EndTime, &out.EndTime
		*out = (*in).DeepCopy()
	}
	if in.FailureReason != nil {
		in, out := &in.FailureReason, &out.FailureReason
		*out = new(string)
		**out = **in
	}
	if in.FinalAutoMLJobObjectiveMetric != nil {
		in, out := &in.FinalAutoMLJobObjectiveMetric, &out.FinalAutoMLJobObjectiveMetric
		*out = new(FinalAutoMLJobObjectiveMetric)
		(*in).DeepCopyInto(*out)
	}
	if in.InferenceContainers != nil {
		in, out := &in.InferenceContainers, &out.InferenceContainers
		*out = make([]*AutoMLContainerDefinition, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(AutoMLContainerDefinition)
				(*in).DeepCopyInto(*out)
			}
		}
	}
	if in.LastModifiedTime != nil {
		in, out := &in.LastModifiedTime, &out.LastModifiedTime
		*out = (*in).DeepCopy()
	}
	if in.ObjectiveStatus != nil {
		in, out := &in.ObjectiveStatus, &out.ObjectiveStatus
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AutoMLCandidate.
func (in *AutoMLCandidate) DeepCopy() *AutoMLCandidate {
	if in == nil {
		return nil
	}
	out := new(AutoMLCandidate)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AutoMLCandidateStep) DeepCopyInto(out *AutoMLCandidateStep) {
	*out = *in
	if in.CandidateStepARN != nil {
		in, out := &in.CandidateStepARN, &out.CandidateStepARN
		*out = new(string)
		**out = **in
	}
	if in.CandidateStepName != nil {
		in, out := &in.CandidateStepName, &out.CandidateStepName
		*out = new(string)
		**out = **in
	}
	if in.CandidateStepType != nil {
		in, out := &in.CandidateStepType, &out.CandidateStepType
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AutoMLCandidateStep.
func (in *AutoMLCandidateStep) DeepCopy() *AutoMLCandidateStep {
	if in == nil {
		return nil
	}
	out := new(AutoMLCandidateStep)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AutoMLChannel) DeepCopyInto(out *AutoMLChannel) {
	*out = *in
	if in.CompressionType != nil {
		in, out := &in.CompressionType, &out.CompressionType
		*out = new(string)
		**out = **in
	}
	if in.DataSource != nil {
		in, out := &in.DataSource, &out.DataSource
		*out = new(AutoMLDataSource)
		(*in).DeepCopyInto(*out)
	}
	if in.TargetAttributeName != nil {
		in, out := &in.TargetAttributeName, &out.TargetAttributeName
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AutoMLChannel.
func (in *AutoMLChannel) DeepCopy() *AutoMLChannel {
	if in == nil {
		return nil
	}
	out := new(AutoMLChannel)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AutoMLContainerDefinition) DeepCopyInto(out *AutoMLContainerDefinition) {
	*out = *in
	if in.Environment != nil {
		in, out := &in.Environment, &out.Environment
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				in, out := &val, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.Image != nil {
		in, out := &in.Image, &out.Image
		*out = new(string)
		**out = **in
	}
	if in.ModelDataURL != nil {
		in, out := &in.ModelDataURL, &out.ModelDataURL
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AutoMLContainerDefinition.
func (in *AutoMLContainerDefinition) DeepCopy() *AutoMLContainerDefinition {
	if in == nil {
		return nil
	}
	out := new(AutoMLContainerDefinition)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AutoMLDataSource) DeepCopyInto(out *AutoMLDataSource) {
	*out = *in
	if in.S3DataSource != nil {
		in, out := &in.S3DataSource, &out.S3DataSource
		*out = new(AutoMLS3DataSource)
		(*in).DeepCopyInto(*out)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AutoMLDataSource.
func (in *AutoMLDataSource) DeepCopy() *AutoMLDataSource {
	if in == nil {
		return nil
	}
	out := new(AutoMLDataSource)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AutoMLJob) DeepCopyInto(out *AutoMLJob) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AutoMLJob.
func (in *AutoMLJob) DeepCopy() *AutoMLJob {
	if in == nil {
		return nil
	}
	out := new(AutoMLJob)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *AutoMLJob) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AutoMLJobArtifacts) DeepCopyInto(out *AutoMLJobArtifacts) {
	*out = *in
	if in.CandidateDefinitionNotebookLocation != nil {
		in, out := &in.CandidateDefinitionNotebookLocation, &out.CandidateDefinitionNotebookLocation
		*out = new(string)
		**out = **in
	}
	if in.DataExplorationNotebookLocation != nil {
		in, out := &in.DataExplorationNotebookLocation, &out.DataExplorationNotebookLocation
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AutoMLJobArtifacts.
func (in *AutoMLJobArtifacts) DeepCopy() *AutoMLJobArtifacts {
	if in == nil {
		return nil
	}
	out := new(AutoMLJobArtifacts)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AutoMLJobCompletionCriteria) DeepCopyInto(out *AutoMLJobCompletionCriteria) {
	*out = *in
	if in.MaxAutoMLJobRuntimeInSeconds != nil {
		in, out := &in.MaxAutoMLJobRuntimeInSeconds, &out.MaxAutoMLJobRuntimeInSeconds
		*out = new(int64)
		**out = **in
	}
	if in.MaxCandidates != nil {
		in, out := &in.MaxCandidates, &out.MaxCandidates
		*out = new(int64)
		**out = **in
	}
	if in.MaxRuntimePerTrainingJobInSeconds != nil {
		in, out := &in.MaxRuntimePerTrainingJobInSeconds, &out.MaxRuntimePerTrainingJobInSeconds
		*out = new(int64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AutoMLJobCompletionCriteria.
func (in *AutoMLJobCompletionCriteria) DeepCopy() *AutoMLJobCompletionCriteria {
	if in == nil {
		return nil
	}
	out := new(AutoMLJobCompletionCriteria)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AutoMLJobConfig) DeepCopyInto(out *AutoMLJobConfig) {
	*out = *in
	if in.CompletionCriteria != nil {
		in, out := &in.CompletionCriteria, &out.CompletionCriteria
		*out = new(AutoMLJobCompletionCriteria)
		(*in).DeepCopyInto(*out)
	}
	if in.SecurityConfig != nil {
		in, out := &in.SecurityConfig, &out.SecurityConfig
		*out = new(AutoMLSecurityConfig)
		(*in).DeepCopyInto(*out)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AutoMLJobConfig.
func (in *AutoMLJobConfig) DeepCopy() *AutoMLJobConfig {
	if in == nil {
		return nil
	}
	out := new(AutoMLJobConfig)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AutoMLJobList) DeepCopyInto(out *AutoMLJobList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]AutoMLJob, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AutoMLJobList.
func (in *AutoMLJobList) DeepCopy() *AutoMLJobList {
	if in == nil {
		return nil
	}
	out := new(AutoMLJobList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *AutoMLJobList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AutoMLJobObjective) DeepCopyInto(out *AutoMLJobObjective) {
	*out = *in
	if in.MetricName != nil {
		in, out := &in.MetricName, &out.MetricName
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AutoMLJobObjective.
func (in *AutoMLJobObjective) DeepCopy() *AutoMLJobObjective {
	if in == nil {
		return nil
	}
	out := new(AutoMLJobObjective)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AutoMLJobObservation) DeepCopyInto(out *AutoMLJobObservation) {
	*out = *in
	if in.AutoMLJobARN != nil {
		in, out := &in.AutoMLJobARN, &out.AutoMLJobARN
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AutoMLJobObservation.
func (in *AutoMLJobObservation) DeepCopy() *AutoMLJobObservation {
	if in == nil {
		return nil
	}
	out := new(AutoMLJobObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AutoMLJobParameters) DeepCopyInto(out *AutoMLJobParameters) {
	*out = *in
	if in.AutoMLJobConfig != nil {
		in, out := &in.AutoMLJobConfig, &out.AutoMLJobConfig
		*out = new(AutoMLJobConfig)
		(*in).DeepCopyInto(*out)
	}
	if in.AutoMLJobName != nil {
		in, out := &in.AutoMLJobName, &out.AutoMLJobName
		*out = new(string)
		**out = **in
	}
	if in.AutoMLJobObjective != nil {
		in, out := &in.AutoMLJobObjective, &out.AutoMLJobObjective
		*out = new(AutoMLJobObjective)
		(*in).DeepCopyInto(*out)
	}
	if in.GenerateCandidateDefinitionsOnly != nil {
		in, out := &in.GenerateCandidateDefinitionsOnly, &out.GenerateCandidateDefinitionsOnly
		*out = new(bool)
		**out = **in
	}
	if in.InputDataConfig != nil {
		in, out := &in.InputDataConfig, &out.InputDataConfig
		*out = make([]*AutoMLChannel, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(AutoMLChannel)
				(*in).DeepCopyInto(*out)
			}
		}
	}
	if in.OutputDataConfig != nil {
		in, out := &in.OutputDataConfig, &out.OutputDataConfig
		*out = new(AutoMLOutputDataConfig)
		(*in).DeepCopyInto(*out)
	}
	if in.ProblemType != nil {
		in, out := &in.ProblemType, &out.ProblemType
		*out = new(string)
		**out = **in
	}
	if in.RoleARN != nil {
		in, out := &in.RoleARN, &out.RoleARN
		*out = new(string)
		**out = **in
	}
	if in.RoleARNRef != nil {
		in, out := &in.RoleARNRef, &out.RoleARNRef
		*out = new(v1.Reference)
		**out = **in
	}
	if in.RoleARNSelector != nil {
		in, out := &in.RoleARNSelector, &out.RoleARNSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.Tags != nil {
		in, out := &in.Tags, &out.Tags
		*out = make([]*Tag, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(Tag)
				(*in).DeepCopyInto(*out)
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AutoMLJobParameters.
func (in *AutoMLJobParameters) DeepCopy() *AutoMLJobParameters {
	if in == nil {
		return nil
	}
	out := new(AutoMLJobParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AutoMLJobSpec) DeepCopyInto(out *AutoMLJobSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AutoMLJobSpec.
func (in *AutoMLJobSpec) DeepCopy() *AutoMLJobSpec {
	if in == nil {
		return nil
	}
	out := new(AutoMLJobSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AutoMLJobStatus) DeepCopyInto(out *AutoMLJobStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AutoMLJobStatus.
func (in *AutoMLJobStatus) DeepCopy() *AutoMLJobStatus {
	if in == nil {
		return nil
	}
	out := new(AutoMLJobStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AutoMLJobSummary) DeepCopyInto(out *AutoMLJobSummary) {
	*out = *in
	if in.AutoMLJobARN != nil {
		in, out := &in.AutoMLJobARN, &out.AutoMLJobARN
		*out = new(string)
		**out = **in
	}
	if in.AutoMLJobName != nil {
		in, out := &in.AutoMLJobName, &out.AutoMLJobName
		*out = new(string)
		**out = **in
	}
	if in.AutoMLJobSecondaryStatus != nil {
		in, out := &in.AutoMLJobSecondaryStatus, &out.AutoMLJobSecondaryStatus
		*out = new(string)
		**out = **in
	}
	if in.AutoMLJobStatus != nil {
		in, out := &in.AutoMLJobStatus, &out.AutoMLJobStatus
		*out = new(string)
		**out = **in
	}
	if in.CreationTime != nil {
		in, out := &in.CreationTime, &out.CreationTime
		*out = (*in).DeepCopy()
	}
	if in.EndTime != nil {
		in, out := &in.EndTime, &out.EndTime
		*out = (*in).DeepCopy()
	}
	if in.FailureReason != nil {
		in, out := &in.FailureReason, &out.FailureReason
		*out = new(string)
		**out = **in
	}
	if in.LastModifiedTime != nil {
		in, out := &in.LastModifiedTime, &out.LastModifiedTime
		*out = (*in).DeepCopy()
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AutoMLJobSummary.
func (in *AutoMLJobSummary) DeepCopy() *AutoMLJobSummary {
	if in == nil {
		return nil
	}
	out := new(AutoMLJobSummary)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AutoMLOutputDataConfig) DeepCopyInto(out *AutoMLOutputDataConfig) {
	*out = *in
	if in.KMSKeyID != nil {
		in, out := &in.KMSKeyID, &out.KMSKeyID
		*out = new(string)
		**out = **in
	}
	if in.S3OutputPath != nil {
		in, out := &in.S3OutputPath, &out.S3OutputPath
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AutoMLOutputDataConfig.
func (in *AutoMLOutputDataConfig) DeepCopy() *AutoMLOutputDataConfig {
	if in == nil {
		return nil
	}
	out := new(AutoMLOutputDataConfig)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AutoMLS3DataSource) DeepCopyInto(out *AutoMLS3DataSource) {
	*out = *in
	if in.S3DataType != nil {
		in, out := &in.S3DataType, &out.S3DataType
		*out = new(string)
		**out = **in
	}
	if in.S3URI != nil {
		in, out := &in.S3URI, &out.S3URI
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AutoMLS3DataSource.
func (in *AutoMLS3DataSource) DeepCopy() *AutoMLS3DataSource {
	if in == nil {
		return nil
	}
	out := new(AutoMLS3DataSource)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AutoMLSecurityConfig) DeepCopyInto(out *AutoMLSecurityConfig) {
	*out = *in
	if in.EnableInterContainerTrafficEncryption != nil {
		in, out := &in.EnableInterContainerTrafficEncryption, &out.EnableInterContainerTrafficEncryption
		*out = new(bool)
		**out = **in
	}
	if in.VolumeKMSKeyID != nil {
		in, out := &in.VolumeKMSKeyID, &out.VolumeKMSKeyID
		*out = new(string)
		**out = **in
	}
	if in.VPCConfig != nil {
		in, out := &in.VPCConfig, &out.VPCConfig
		*out = new(VPCConfig)
		(*in).DeepCopyInto(*out)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AutoMLSecurityConfig.
func (in *AutoMLSecurityConfig) DeepCopy() *AutoMLSecurityConfig {
	if in == nil {
		return nil
	}
	out := new(AutoMLSecurityConfig)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CaptureContentTypeHeader) DeepCopyInto(out *CaptureContentTypeHeader) {
	*out = *in
	if in.CsvContentTypes != nil {
		in, out := &in.CsvContentTypes, &out.CsvContentTypes
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.JSONContentTypes != nil {
		in, out := &in.JSONContentTypes, &out.JSONContentTypes
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CaptureContentTypeHeader.
func (in *CaptureContentTypeHeader) DeepCopy() *CaptureContentTypeHeader {
	if in == nil {
		return nil
	}
	out := new(CaptureContentTypeHeader)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CaptureOption) DeepCopyInto(out *CaptureOption) {
	*out = *in
	if in.CaptureMode != nil {
		in, out := &in.CaptureMode, &out.CaptureMode
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CaptureOption.
func (in *CaptureOption) DeepCopy() *CaptureOption {
	if in == nil {
		return nil
	}
	out := new(CaptureOption)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CategoricalParameterRange) DeepCopyInto(out *CategoricalParameterRange) {
	*out = *in
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Values != nil {
		in, out := &in.Values, &out.Values
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CategoricalParameterRange.
func (in *CategoricalParameterRange) DeepCopy() *CategoricalParameterRange {
	if in == nil {
		return nil
	}
	out := new(CategoricalParameterRange)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CategoricalParameterRangeSpecification) DeepCopyInto(out *CategoricalParameterRangeSpecification) {
	*out = *in
	if in.Values != nil {
		in, out := &in.Values, &out.Values
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CategoricalParameterRangeSpecification.
func (in *CategoricalParameterRangeSpecification) DeepCopy() *CategoricalParameterRangeSpecification {
	if in == nil {
		return nil
	}
	out := new(CategoricalParameterRangeSpecification)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Channel) DeepCopyInto(out *Channel) {
	*out = *in
	if in.ChannelName != nil {
		in, out := &in.ChannelName, &out.ChannelName
		*out = new(string)
		**out = **in
	}
	if in.CompressionType != nil {
		in, out := &in.CompressionType, &out.CompressionType
		*out = new(string)
		**out = **in
	}
	if in.ContentType != nil {
		in, out := &in.ContentType, &out.ContentType
		*out = new(string)
		**out = **in
	}
	if in.DataSource != nil {
		in, out := &in.DataSource, &out.DataSource
		*out = new(DataSource)
		(*in).DeepCopyInto(*out)
	}
	if in.InputMode != nil {
		in, out := &in.InputMode, &out.InputMode
		*out = new(string)
		**out = **in
	}
	if in.RecordWrapperType != nil {
		in, out := &in.RecordWrapperType, &out.RecordWrapperType
		*out = new(string)
		**out = **in
	}
	if in.ShuffleConfig != nil {
		in, out := &in.ShuffleConfig, &out.ShuffleConfig
		*out = new(ShuffleConfig)
		(*in).DeepCopyInto(*out)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Channel.
func (in *Channel) DeepCopy() *Channel {
	if in == nil {
		return nil
	}
	out := new(Channel)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ChannelSpecification) DeepCopyInto(out *ChannelSpecification) {
	*out = *in
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.IsRequired != nil {
		in, out := &in.IsRequired, &out.IsRequired
		*out = new(bool)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.SupportedCompressionTypes != nil {
		in, out := &in.SupportedCompressionTypes, &out.SupportedCompressionTypes
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.SupportedContentTypes != nil {
		in, out := &in.SupportedContentTypes, &out.SupportedContentTypes
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.SupportedInputModes != nil {
		in, out := &in.SupportedInputModes, &out.SupportedInputModes
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ChannelSpecification.
func (in *ChannelSpecification) DeepCopy() *ChannelSpecification {
	if in == nil {
		return nil
	}
	out := new(ChannelSpecification)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CheckpointConfig) DeepCopyInto(out *CheckpointConfig) {
	*out = *in
	if in.LocalPath != nil {
		in, out := &in.LocalPath, &out.LocalPath
		*out = new(string)
		**out = **in
	}
	if in.S3URI != nil {
		in, out := &in.S3URI, &out.S3URI
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CheckpointConfig.
func (in *CheckpointConfig) DeepCopy() *CheckpointConfig {
	if in == nil {
		return nil
	}
	out := new(CheckpointConfig)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CodeRepository) DeepCopyInto(out *CodeRepository) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CodeRepository.
func (in *CodeRepository) DeepCopy() *CodeRepository {
	if in == nil {
		return nil
	}
	out := new(CodeRepository)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *CodeRepository) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CodeRepositoryList) DeepCopyInto(out *CodeRepositoryList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]CodeRepository, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CodeRepositoryList.
func (in *CodeRepositoryList) DeepCopy() *CodeRepositoryList {
	if in == nil {
		return nil
	}
	out := new(CodeRepositoryList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *CodeRepositoryList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CodeRepositoryObservation) DeepCopyInto(out *CodeRepositoryObservation) {
	*out = *in
	if in.CodeRepositoryARN != nil {
		in, out := &in.CodeRepositoryARN, &out.CodeRepositoryARN
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CodeRepositoryObservation.
func (in *CodeRepositoryObservation) DeepCopy() *CodeRepositoryObservation {
	if in == nil {
		return nil
	}
	out := new(CodeRepositoryObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CodeRepositoryParameters) DeepCopyInto(out *CodeRepositoryParameters) {
	*out = *in
	if in.CodeRepositoryName != nil {
		in, out := &in.CodeRepositoryName, &out.CodeRepositoryName
		*out = new(string)
		**out = **in
	}
	if in.GitConfig != nil {
		in, out := &in.GitConfig, &out.GitConfig
		*out = new(GitConfig)
		(*in).DeepCopyInto(*out)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CodeRepositoryParameters.
func (in *CodeRepositoryParameters) DeepCopy() *CodeRepositoryParameters {
	if in == nil {
		return nil
	}
	out := new(CodeRepositoryParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CodeRepositorySpec) DeepCopyInto(out *CodeRepositorySpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CodeRepositorySpec.
func (in *CodeRepositorySpec) DeepCopy() *CodeRepositorySpec {
	if in == nil {
		return nil
	}
	out := new(CodeRepositorySpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CodeRepositoryStatus) DeepCopyInto(out *CodeRepositoryStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CodeRepositoryStatus.
func (in *CodeRepositoryStatus) DeepCopy() *CodeRepositoryStatus {
	if in == nil {
		return nil
	}
	out := new(CodeRepositoryStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CodeRepositorySummary) DeepCopyInto(out *CodeRepositorySummary) {
	*out = *in
	if in.CodeRepositoryARN != nil {
		in, out := &in.CodeRepositoryARN, &out.CodeRepositoryARN
		*out = new(string)
		**out = **in
	}
	if in.CodeRepositoryName != nil {
		in, out := &in.CodeRepositoryName, &out.CodeRepositoryName
		*out = new(string)
		**out = **in
	}
	if in.CreationTime != nil {
		in, out := &in.CreationTime, &out.CreationTime
		*out = (*in).DeepCopy()
	}
	if in.GitConfig != nil {
		in, out := &in.GitConfig, &out.GitConfig
		*out = new(GitConfig)
		(*in).DeepCopyInto(*out)
	}
	if in.LastModifiedTime != nil {
		in, out := &in.LastModifiedTime, &out.LastModifiedTime
		*out = (*in).DeepCopy()
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CodeRepositorySummary.
func (in *CodeRepositorySummary) DeepCopy() *CodeRepositorySummary {
	if in == nil {
		return nil
	}
	out := new(CodeRepositorySummary)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CognitoConfig) DeepCopyInto(out *CognitoConfig) {
	*out = *in
	if in.ClientID != nil {
		in, out := &in.ClientID, &out.ClientID
		*out = new(string)
		**out = **in
	}
	if in.UserPool != nil {
		in, out := &in.UserPool, &out.UserPool
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CognitoConfig.
func (in *CognitoConfig) DeepCopy() *CognitoConfig {
	if in == nil {
		return nil
	}
	out := new(CognitoConfig)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CognitoMemberDefinition) DeepCopyInto(out *CognitoMemberDefinition) {
	*out = *in
	if in.ClientID != nil {
		in, out := &in.ClientID, &out.ClientID
		*out = new(string)
		**out = **in
	}
	if in.UserGroup != nil {
		in, out := &in.UserGroup, &out.UserGroup
		*out = new(string)
		**out = **in
	}
	if in.UserPool != nil {
		in, out := &in.UserPool, &out.UserPool
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CognitoMemberDefinition.
func (in *CognitoMemberDefinition) DeepCopy() *CognitoMemberDefinition {
	if in == nil {
		return nil
	}
	out := new(CognitoMemberDefinition)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CollectionConfiguration) DeepCopyInto(out *CollectionConfiguration) {
	*out = *in
	if in.CollectionName != nil {
		in, out := &in.CollectionName, &out.CollectionName
		*out = new(string)
		**out = **in
	}
	if in.CollectionParameters != nil {
		in, out := &in.CollectionParameters, &out.CollectionParameters
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				in, out := &val, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CollectionConfiguration.
func (in *CollectionConfiguration) DeepCopy() *CollectionConfiguration {
	if in == nil {
		return nil
	}
	out := new(CollectionConfiguration)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CompilationJob) DeepCopyInto(out *CompilationJob) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CompilationJob.
func (in *CompilationJob) DeepCopy() *CompilationJob {
	if in == nil {
		return nil
	}
	out := new(CompilationJob)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *CompilationJob) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CompilationJobList) DeepCopyInto(out *CompilationJobList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]CompilationJob, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CompilationJobList.
func (in *CompilationJobList) DeepCopy() *CompilationJobList {
	if in == nil {
		return nil
	}
	out := new(CompilationJobList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *CompilationJobList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CompilationJobObservation) DeepCopyInto(out *CompilationJobObservation) {
	*out = *in
	if in.CompilationJobARN != nil {
		in, out := &in.CompilationJobARN, &out.CompilationJobARN
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CompilationJobObservation.
func (in *CompilationJobObservation) DeepCopy() *CompilationJobObservation {
	if in == nil {
		return nil
	}
	out := new(CompilationJobObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CompilationJobParameters) DeepCopyInto(out *CompilationJobParameters) {
	*out = *in
	if in.CompilationJobName != nil {
		in, out := &in.CompilationJobName, &out.CompilationJobName
		*out = new(string)
		**out = **in
	}
	if in.InputConfig != nil {
		in, out := &in.InputConfig, &out.InputConfig
		*out = new(InputConfig)
		(*in).DeepCopyInto(*out)
	}
	if in.OutputConfig != nil {
		in, out := &in.OutputConfig, &out.OutputConfig
		*out = new(OutputConfig)
		(*in).DeepCopyInto(*out)
	}
	if in.RoleARN != nil {
		in, out := &in.RoleARN, &out.RoleARN
		*out = new(string)
		**out = **in
	}
	if in.RoleARNRef != nil {
		in, out := &in.RoleARNRef, &out.RoleARNRef
		*out = new(v1.Reference)
		**out = **in
	}
	if in.RoleARNSelector != nil {
		in, out := &in.RoleARNSelector, &out.RoleARNSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.StoppingCondition != nil {
		in, out := &in.StoppingCondition, &out.StoppingCondition
		*out = new(StoppingCondition)
		(*in).DeepCopyInto(*out)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CompilationJobParameters.
func (in *CompilationJobParameters) DeepCopy() *CompilationJobParameters {
	if in == nil {
		return nil
	}
	out := new(CompilationJobParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CompilationJobSpec) DeepCopyInto(out *CompilationJobSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CompilationJobSpec.
func (in *CompilationJobSpec) DeepCopy() *CompilationJobSpec {
	if in == nil {
		return nil
	}
	out := new(CompilationJobSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CompilationJobStatus) DeepCopyInto(out *CompilationJobStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CompilationJobStatus.
func (in *CompilationJobStatus) DeepCopy() *CompilationJobStatus {
	if in == nil {
		return nil
	}
	out := new(CompilationJobStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CompilationJobSummary) DeepCopyInto(out *CompilationJobSummary) {
	*out = *in
	if in.CompilationEndTime != nil {
		in, out := &in.CompilationEndTime, &out.CompilationEndTime
		*out = (*in).DeepCopy()
	}
	if in.CompilationJobARN != nil {
		in, out := &in.CompilationJobARN, &out.CompilationJobARN
		*out = new(string)
		**out = **in
	}
	if in.CompilationJobName != nil {
		in, out := &in.CompilationJobName, &out.CompilationJobName
		*out = new(string)
		**out = **in
	}
	if in.CompilationJobStatus != nil {
		in, out := &in.CompilationJobStatus, &out.CompilationJobStatus
		*out = new(string)
		**out = **in
	}
	if in.CompilationStartTime != nil {
		in, out := &in.CompilationStartTime, &out.CompilationStartTime
		*out = (*in).DeepCopy()
	}
	if in.CompilationTargetDevice != nil {
		in, out := &in.CompilationTargetDevice, &out.CompilationTargetDevice
		*out = new(string)
		**out = **in
	}
	if in.CompilationTargetPlatformAccelerator != nil {
		in, out := &in.CompilationTargetPlatformAccelerator, &out.CompilationTargetPlatformAccelerator
		*out = new(string)
		**out = **in
	}
	if in.CompilationTargetPlatformArch != nil {
		in, out := &in.CompilationTargetPlatformArch, &out.CompilationTargetPlatformArch
		*out = new(string)
		**out = **in
	}
	if in.CompilationTargetPlatformOs != nil {
		in, out := &in.CompilationTargetPlatformOs, &out.CompilationTargetPlatformOs
		*out = new(string)
		**out = **in
	}
	if in.CreationTime != nil {
		in, out := &in.CreationTime, &out.CreationTime
		*out = (*in).DeepCopy()
	}
	if in.LastModifiedTime != nil {
		in, out := &in.LastModifiedTime, &out.LastModifiedTime
		*out = (*in).DeepCopy()
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CompilationJobSummary.
func (in *CompilationJobSummary) DeepCopy() *CompilationJobSummary {
	if in == nil {
		return nil
	}
	out := new(CompilationJobSummary)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ContainerDefinition) DeepCopyInto(out *ContainerDefinition) {
	*out = *in
	if in.ContainerHostname != nil {
		in, out := &in.ContainerHostname, &out.ContainerHostname
		*out = new(string)
		**out = **in
	}
	if in.Environment != nil {
		in, out := &in.Environment, &out.Environment
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				in, out := &val, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.Image != nil {
		in, out := &in.Image, &out.Image
		*out = new(string)
		**out = **in
	}
	if in.ImageConfig != nil {
		in, out := &in.ImageConfig, &out.ImageConfig
		*out = new(ImageConfig)
		(*in).DeepCopyInto(*out)
	}
	if in.Mode != nil {
		in, out := &in.Mode, &out.Mode
		*out = new(string)
		**out = **in
	}
	if in.ModelDataURL != nil {
		in, out := &in.ModelDataURL, &out.ModelDataURL
		*out = new(string)
		**out = **in
	}
	if in.ModelPackageName != nil {
		in, out := &in.ModelPackageName, &out.ModelPackageName
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ContainerDefinition.
func (in *ContainerDefinition) DeepCopy() *ContainerDefinition {
	if in == nil {
		return nil
	}
	out := new(ContainerDefinition)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ContinuousParameterRange) DeepCopyInto(out *ContinuousParameterRange) {
	*out = *in
	if in.MaxValue != nil {
		in, out := &in.MaxValue, &out.MaxValue
		*out = new(string)
		**out = **in
	}
	if in.MinValue != nil {
		in, out := &in.MinValue, &out.MinValue
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.ScalingType != nil {
		in, out := &in.ScalingType, &out.ScalingType
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ContinuousParameterRange.
func (in *ContinuousParameterRange) DeepCopy() *ContinuousParameterRange {
	if in == nil {
		return nil
	}
	out := new(ContinuousParameterRange)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ContinuousParameterRangeSpecification) DeepCopyInto(out *ContinuousParameterRangeSpecification) {
	*out = *in
	if in.MaxValue != nil {
		in, out := &in.MaxValue, &out.MaxValue
		*out = new(string)
		**out = **in
	}
	if in.MinValue != nil {
		in, out := &in.MinValue, &out.MinValue
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ContinuousParameterRangeSpecification.
func (in *ContinuousParameterRangeSpecification) DeepCopy() *ContinuousParameterRangeSpecification {
	if in == nil {
		return nil
	}
	out := new(ContinuousParameterRangeSpecification)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DataCaptureConfig) DeepCopyInto(out *DataCaptureConfig) {
	*out = *in
	if in.CaptureContentTypeHeader != nil {
		in, out := &in.CaptureContentTypeHeader, &out.CaptureContentTypeHeader
		*out = new(CaptureContentTypeHeader)
		(*in).DeepCopyInto(*out)
	}
	if in.CaptureOptions != nil {
		in, out := &in.CaptureOptions, &out.CaptureOptions
		*out = make([]*CaptureOption, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(CaptureOption)
				(*in).DeepCopyInto(*out)
			}
		}
	}
	if in.DestinationS3URI != nil {
		in, out := &in.DestinationS3URI, &out.DestinationS3URI
		*out = new(string)
		**out = **in
	}
	if in.EnableCapture != nil {
		in, out := &in.EnableCapture, &out.EnableCapture
		*out = new(bool)
		**out = **in
	}
	if in.InitialSamplingPercentage != nil {
		in, out := &in.InitialSamplingPercentage, &out.InitialSamplingPercentage
		*out = new(int64)
		**out = **in
	}
	if in.KMSKeyID != nil {
		in, out := &in.KMSKeyID, &out.KMSKeyID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DataCaptureConfig.
func (in *DataCaptureConfig) DeepCopy() *DataCaptureConfig {
	if in == nil {
		return nil
	}
	out := new(DataCaptureConfig)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DataCaptureConfigSummary) DeepCopyInto(out *DataCaptureConfigSummary) {
	*out = *in
	if in.CaptureStatus != nil {
		in, out := &in.CaptureStatus, &out.CaptureStatus
		*out = new(string)
		**out = **in
	}
	if in.CurrentSamplingPercentage != nil {
		in, out := &in.CurrentSamplingPercentage, &out.CurrentSamplingPercentage
		*out = new(int64)
		**out = **in
	}
	if in.DestinationS3URI != nil {
		in, out := &in.DestinationS3URI, &out.DestinationS3URI
		*out = new(string)
		**out = **in
	}
	if in.EnableCapture != nil {
		in, out := &in.EnableCapture, &out.EnableCapture
		*out = new(bool)
		**out = **in
	}
	if in.KMSKeyID != nil {
		in, out := &in.KMSKeyID, &out.KMSKeyID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DataCaptureConfigSummary.
func (in *DataCaptureConfigSummary) DeepCopy() *DataCaptureConfigSummary {
	if in == nil {
		return nil
	}
	out := new(DataCaptureConfigSummary)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DataProcessing) DeepCopyInto(out *DataProcessing) {
	*out = *in
	if in.InputFilter != nil {
		in, out := &in.InputFilter, &out.InputFilter
		*out = new(string)
		**out = **in
	}
	if in.JoinSource != nil {
		in, out := &in.JoinSource, &out.JoinSource
		*out = new(string)
		**out = **in
	}
	if in.OutputFilter != nil {
		in, out := &in.OutputFilter, &out.OutputFilter
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DataProcessing.
func (in *DataProcessing) DeepCopy() *DataProcessing {
	if in == nil {
		return nil
	}
	out := new(DataProcessing)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DataSource) DeepCopyInto(out *DataSource) {
	*out = *in
	if in.FileSystemDataSource != nil {
		in, out := &in.FileSystemDataSource, &out.FileSystemDataSource
		*out = new(FileSystemDataSource)
		(*in).DeepCopyInto(*out)
	}
	if in.S3DataSource != nil {
		in, out := &in.S3DataSource, &out.S3DataSource
		*out = new(S3DataSource)
		(*in).DeepCopyInto(*out)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DataSource.
func (in *DataSource) DeepCopy() *DataSource {
	if in == nil {
		return nil
	}
	out := new(DataSource)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DebugHookConfig) DeepCopyInto(out *DebugHookConfig) {
	*out = *in
	if in.CollectionConfigurations != nil {
		in, out := &in.CollectionConfigurations, &out.CollectionConfigurations
		*out = make([]*CollectionConfiguration, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(CollectionConfiguration)
				(*in).DeepCopyInto(*out)
			}
		}
	}
	if in.HookParameters != nil {
		in, out := &in.HookParameters, &out.HookParameters
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				in, out := &val, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.LocalPath != nil {
		in, out := &in.LocalPath, &out.LocalPath
		*out = new(string)
		**out = **in
	}
	if in.S3OutputPath != nil {
		in, out := &in.S3OutputPath, &out.S3OutputPath
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DebugHookConfig.
func (in *DebugHookConfig) DeepCopy() *DebugHookConfig {
	if in == nil {
		return nil
	}
	out := new(DebugHookConfig)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DebugRuleConfiguration) DeepCopyInto(out *DebugRuleConfiguration) {
	*out = *in
	if in.InstanceType != nil {
		in, out := &in.InstanceType, &out.InstanceType
		*out = new(string)
		**out = **in
	}
	if in.LocalPath != nil {
		in, out := &in.LocalPath, &out.LocalPath
		*out = new(string)
		**out = **in
	}
	if in.RuleConfigurationName != nil {
		in, out := &in.RuleConfigurationName, &out.RuleConfigurationName
		*out = new(string)
		**out = **in
	}
	if in.RuleEvaluatorImage != nil {
		in, out := &in.RuleEvaluatorImage, &out.RuleEvaluatorImage
		*out = new(string)
		**out = **in
	}
	if in.RuleParameters != nil {
		in, out := &in.RuleParameters, &out.RuleParameters
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				in, out := &val, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.S3OutputPath != nil {
		in, out := &in.S3OutputPath, &out.S3OutputPath
		*out = new(string)
		**out = **in
	}
	if in.VolumeSizeInGB != nil {
		in, out := &in.VolumeSizeInGB, &out.VolumeSizeInGB
		*out = new(int64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DebugRuleConfiguration.
func (in *DebugRuleConfiguration) DeepCopy() *DebugRuleConfiguration {
	if in == nil {
		return nil
	}
	out := new(DebugRuleConfiguration)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DebugRuleEvaluationStatus) DeepCopyInto(out *DebugRuleEvaluationStatus) {
	*out = *in
	if in.LastModifiedTime != nil {
		in, out := &in.LastModifiedTime, &out.LastModifiedTime
		*out = (*in).DeepCopy()
	}
	if in.RuleConfigurationName != nil {
		in, out := &in.RuleConfigurationName, &out.RuleConfigurationName
		*out = new(string)
		**out = **in
	}
	if in.RuleEvaluationJobARN != nil {
		in, out := &in.RuleEvaluationJobARN, &out.RuleEvaluationJobARN
		*out = new(string)
		**out = **in
	}
	if in.RuleEvaluationStatus != nil {
		in, out := &in.RuleEvaluationStatus, &out.RuleEvaluationStatus
		*out = new(string)
		**out = **in
	}
	if in.StatusDetails != nil {
		in, out := &in.StatusDetails, &out.StatusDetails
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DebugRuleEvaluationStatus.
func (in *DebugRuleEvaluationStatus) DeepCopy() *DebugRuleEvaluationStatus {
	if in == nil {
		return nil
	}
	out := new(DebugRuleEvaluationStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DeployedImage) DeepCopyInto(out *DeployedImage) {
	*out = *in
	if in.ResolutionTime != nil {
		in, out := &in.ResolutionTime, &out.ResolutionTime
		*out = (*in).DeepCopy()
	}
	if in.ResolvedImage != nil {
		in, out := &in.ResolvedImage, &out.ResolvedImage
		*out = new(string)
		**out = **in
	}
	if in.SpecifiedImage != nil {
		in, out := &in.SpecifiedImage, &out.SpecifiedImage
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DeployedImage.
func (in *DeployedImage) DeepCopy() *DeployedImage {
	if in == nil {
		return nil
	}
	out := new(DeployedImage)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DesiredWeightAndCapacity) DeepCopyInto(out *DesiredWeightAndCapacity) {
	*out = *in
	if in.DesiredInstanceCount != nil {
		in, out := &in.DesiredInstanceCount, &out.DesiredInstanceCount
		*out = new(int64)
		**out = **in
	}
	if in.DesiredWeight != nil {
		in, out := &in.DesiredWeight, &out.DesiredWeight
		*out = new(float64)
		**out = **in
	}
	if in.VariantName != nil {
		in, out := &in.VariantName, &out.VariantName
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DesiredWeightAndCapacity.
func (in *DesiredWeightAndCapacity) DeepCopy() *DesiredWeightAndCapacity {
	if in == nil {
		return nil
	}
	out := new(DesiredWeightAndCapacity)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Domain) DeepCopyInto(out *Domain) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Domain.
func (in *Domain) DeepCopy() *Domain {
	if in == nil {
		return nil
	}
	out := new(Domain)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *Domain) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DomainDetails) DeepCopyInto(out *DomainDetails) {
	*out = *in
	if in.CreationTime != nil {
		in, out := &in.CreationTime, &out.CreationTime
		*out = (*in).DeepCopy()
	}
	if in.DomainARN != nil {
		in, out := &in.DomainARN, &out.DomainARN
		*out = new(string)
		**out = **in
	}
	if in.DomainID != nil {
		in, out := &in.DomainID, &out.DomainID
		*out = new(string)
		**out = **in
	}
	if in.DomainName != nil {
		in, out := &in.DomainName, &out.DomainName
		*out = new(string)
		**out = **in
	}
	if in.LastModifiedTime != nil {
		in, out := &in.LastModifiedTime, &out.LastModifiedTime
		*out = (*in).DeepCopy()
	}
	if in.Status != nil {
		in, out := &in.Status, &out.Status
		*out = new(string)
		**out = **in
	}
	if in.URL != nil {
		in, out := &in.URL, &out.URL
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DomainDetails.
func (in *DomainDetails) DeepCopy() *DomainDetails {
	if in == nil {
		return nil
	}
	out := new(DomainDetails)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DomainList) DeepCopyInto(out *DomainList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]Domain, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DomainList.
func (in *DomainList) DeepCopy() *DomainList {
	if in == nil {
		return nil
	}
	out := new(DomainList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *DomainList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DomainObservation) DeepCopyInto(out *DomainObservation) {
	*out = *in
	if in.DomainARN != nil {
		in, out := &in.DomainARN, &out.DomainARN
		*out = new(string)
		**out = **in
	}
	if in.URL != nil {
		in, out := &in.URL, &out.URL
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DomainObservation.
func (in *DomainObservation) DeepCopy() *DomainObservation {
	if in == nil {
		return nil
	}
	out := new(DomainObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DomainParameters) DeepCopyInto(out *DomainParameters) {
	*out = *in
	if in.AuthMode != nil {
		in, out := &in.AuthMode, &out.AuthMode
		*out = new(string)
		**out = **in
	}
	if in.DefaultUserSettings != nil {
		in, out := &in.DefaultUserSettings, &out.DefaultUserSettings
		*out = new(UserSettings)
		(*in).DeepCopyInto(*out)
	}
	if in.DomainName != nil {
		in, out := &in.DomainName, &out.DomainName
		*out = new(string)
		**out = **in
	}
	if in.HomeEFSFileSystemKMSKeyID != nil {
		in, out := &in.HomeEFSFileSystemKMSKeyID, &out.HomeEFSFileSystemKMSKeyID
		*out = new(string)
		**out = **in
	}
	if in.SubnetIDs != nil {
		in, out := &in.SubnetIDs, &out.SubnetIDs
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.SubnetIDsRef != nil {
		in, out := &in.SubnetIDsRef, &out.SubnetIDsRef
		*out = make([]v1.Reference, len(*in))
		copy(*out, *in)
	}
	if in.SubnetIDsSelector != nil {
		in, out := &in.SubnetIDsSelector, &out.SubnetIDsSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.Tags != nil {
		in, out := &in.Tags, &out.Tags
		*out = make([]*Tag, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(Tag)
				(*in).DeepCopyInto(*out)
			}
		}
	}
	if in.VPCID != nil {
		in, out := &in.VPCID, &out.VPCID
		*out = new(string)
		**out = **in
	}
	if in.VPCIDRef != nil {
		in, out := &in.VPCIDRef, &out.VPCIDRef
		*out = new(v1.Reference)
		**out = **in
	}
	if in.VPCIDSelector != nil {
		in, out := &in.VPCIDSelector, &out.VPCIDSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DomainParameters.
func (in *DomainParameters) DeepCopy() *DomainParameters {
	if in == nil {
		return nil
	}
	out := new(DomainParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DomainSpec) DeepCopyInto(out *DomainSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DomainSpec.
func (in *DomainSpec) DeepCopy() *DomainSpec {
	if in == nil {
		return nil
	}
	out := new(DomainSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DomainStatus) DeepCopyInto(out *DomainStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DomainStatus.
func (in *DomainStatus) DeepCopy() *DomainStatus {
	if in == nil {
		return nil
	}
	out := new(DomainStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Endpoint) DeepCopyInto(out *Endpoint) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Endpoint.
func (in *Endpoint) DeepCopy() *Endpoint {
	if in == nil {
		return nil
	}
	out := new(Endpoint)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *Endpoint) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *EndpointConfig) DeepCopyInto(out *EndpointConfig) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new EndpointConfig.
func (in *EndpointConfig) DeepCopy() *EndpointConfig {
	if in == nil {
		return nil
	}
	out := new(EndpointConfig)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *EndpointConfig) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *EndpointConfigList) DeepCopyInto(out *EndpointConfigList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]EndpointConfig, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new EndpointConfigList.
func (in *EndpointConfigList) DeepCopy() *EndpointConfigList {
	if in == nil {
		return nil
	}
	out := new(EndpointConfigList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *EndpointConfigList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *EndpointConfigObservation) DeepCopyInto(out *EndpointConfigObservation) {
	*out = *in
	if in.EndpointConfigARN != nil {
		in, out := &in.EndpointConfigARN, &out.EndpointConfigARN
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new EndpointConfigObservation.
func (in *EndpointConfigObservation) DeepCopy() *EndpointConfigObservation {
	if in == nil {
		return nil
	}
	out := new(EndpointConfigObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *EndpointConfigParameters) DeepCopyInto(out *EndpointConfigParameters) {
	*out = *in
	if in.DataCaptureConfig != nil {
		in, out := &in.DataCaptureConfig, &out.DataCaptureConfig
		*out = new(DataCaptureConfig)
		(*in).DeepCopyInto(*out)
	}
	if in.EndpointConfigName != nil {
		in, out := &in.EndpointConfigName, &out.EndpointConfigName
		*out = new(string)
		**out = **in
	}
	if in.KMSKeyID != nil {
		in, out := &in.KMSKeyID, &out.KMSKeyID
		*out = new(string)
		**out = **in
	}
	if in.ProductionVariants != nil {
		in, out := &in.ProductionVariants, &out.ProductionVariants
		*out = make([]*ProductionVariant, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(ProductionVariant)
				(*in).DeepCopyInto(*out)
			}
		}
	}
	if in.Tags != nil {
		in, out := &in.Tags, &out.Tags
		*out = make([]*Tag, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(Tag)
				(*in).DeepCopyInto(*out)
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new EndpointConfigParameters.
func (in *EndpointConfigParameters) DeepCopy() *EndpointConfigParameters {
	if in == nil {
		return nil
	}
	out := new(EndpointConfigParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *EndpointConfigSpec) DeepCopyInto(out *EndpointConfigSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new EndpointConfigSpec.
func (in *EndpointConfigSpec) DeepCopy() *EndpointConfigSpec {
	if in == nil {
		return nil
	}
	out := new(EndpointConfigSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *EndpointConfigStatus) DeepCopyInto(out *EndpointConfigStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new EndpointConfigStatus.
func (in *EndpointConfigStatus) DeepCopy() *EndpointConfigStatus {
	if in == nil {
		return nil
	}
	out := new(EndpointConfigStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *EndpointConfigSummary) DeepCopyInto(out *EndpointConfigSummary) {
	*out = *in
	if in.CreationTime != nil {
		in, out := &in.CreationTime, &out.CreationTime
		*out = (*in).DeepCopy()
	}
	if in.EndpointConfigARN != nil {
		in, out := &in.EndpointConfigARN, &out.EndpointConfigARN
		*out = new(string)
		**out = **in
	}
	if in.EndpointConfigName != nil {
		in, out := &in.EndpointConfigName, &out.EndpointConfigName
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new EndpointConfigSummary.
func (in *EndpointConfigSummary) DeepCopy() *EndpointConfigSummary {
	if in == nil {
		return nil
	}
	out := new(EndpointConfigSummary)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *EndpointInput) DeepCopyInto(out *EndpointInput) {
	*out = *in
	if in.EndpointName != nil {
		in, out := &in.EndpointName, &out.EndpointName
		*out = new(string)
		**out = **in
	}
	if in.EndpointNameRef != nil {
		in, out := &in.EndpointNameRef, &out.EndpointNameRef
		*out = new(v1.Reference)
		**out = **in
	}
	if in.EndpointNameSelector != nil {
		in, out := &in.EndpointNameSelector, &out.EndpointNameSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.LocalPath != nil {
		in, out := &in.LocalPath, &out.LocalPath
		*out = new(string)
		**out = **in
	}
	if in.S3DataDistributionType != nil {
		in, out := &in.S3DataDistributionType, &out.S3DataDistributionType
		*out = new(string)
		**out = **in
	}
	if in.S3InputMode != nil {
		in, out := &in.S3InputMode, &out.S3InputMode
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new EndpointInput.
func (in *EndpointInput) DeepCopy() *EndpointInput {
	if in == nil {
		return nil
	}
	out := new(EndpointInput)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *EndpointList) DeepCopyInto(out *EndpointList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]Endpoint, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new EndpointList.
func (in *EndpointList) DeepCopy() *EndpointList {
	if in == nil {
		return nil
	}
	out := new(EndpointList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *EndpointList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *EndpointObservation) DeepCopyInto(out *EndpointObservation) {
	*out = *in
	if in.EndpointARN != nil {
		in, out := &in.EndpointARN, &out.EndpointARN
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new EndpointObservation.
func (in *EndpointObservation) DeepCopy() *EndpointObservation {
	if in == nil {
		return nil
	}
	out := new(EndpointObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *EndpointParameters) DeepCopyInto(out *EndpointParameters) {
	*out = *in
	if in.EndpointConfigName != nil {
		in, out := &in.EndpointConfigName, &out.EndpointConfigName
		*out = new(string)
		**out = **in
	}
	if in.EndpointName != nil {
		in, out := &in.EndpointName, &out.EndpointName
		*out = new(string)
		**out = **in
	}
	if in.Tags != nil {
		in, out := &in.Tags, &out.Tags
		*out = make([]*Tag, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(Tag)
				(*in).DeepCopyInto(*out)
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new EndpointParameters.
func (in *EndpointParameters) DeepCopy() *EndpointParameters {
	if in == nil {
		return nil
	}
	out := new(EndpointParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *EndpointSpec) DeepCopyInto(out *EndpointSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new EndpointSpec.
func (in *EndpointSpec) DeepCopy() *EndpointSpec {
	if in == nil {
		return nil
	}
	out := new(EndpointSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *EndpointStatus) DeepCopyInto(out *EndpointStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new EndpointStatus.
func (in *EndpointStatus) DeepCopy() *EndpointStatus {
	if in == nil {
		return nil
	}
	out := new(EndpointStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *EndpointSummary) DeepCopyInto(out *EndpointSummary) {
	*out = *in
	if in.CreationTime != nil {
		in, out := &in.CreationTime, &out.CreationTime
		*out = (*in).DeepCopy()
	}
	if in.EndpointARN != nil {
		in, out := &in.EndpointARN, &out.EndpointARN
		*out = new(string)
		**out = **in
	}
	if in.EndpointName != nil {
		in, out := &in.EndpointName, &out.EndpointName
		*out = new(string)
		**out = **in
	}
	if in.EndpointStatus != nil {
		in, out := &in.EndpointStatus, &out.EndpointStatus
		*out = new(string)
		**out = **in
	}
	if in.LastModifiedTime != nil {
		in, out := &in.LastModifiedTime, &out.LastModifiedTime
		*out = (*in).DeepCopy()
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new EndpointSummary.
func (in *EndpointSummary) DeepCopy() *EndpointSummary {
	if in == nil {
		return nil
	}
	out := new(EndpointSummary)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Experiment) DeepCopyInto(out *Experiment) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Experiment.
func (in *Experiment) DeepCopy() *Experiment {
	if in == nil {
		return nil
	}
	out := new(Experiment)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *Experiment) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ExperimentConfig) DeepCopyInto(out *ExperimentConfig) {
	*out = *in
	if in.ExperimentName != nil {
		in, out := &in.ExperimentName, &out.ExperimentName
		*out = new(string)
		**out = **in
	}
	if in.ExperimentNameRef != nil {
		in, out := &in.ExperimentNameRef, &out.ExperimentNameRef
		*out = new(v1.Reference)
		**out = **in
	}
	if in.ExperimentNameSelector != nil {
		in, out := &in.ExperimentNameSelector, &out.ExperimentNameSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.TrialComponentDisplayName != nil {
		in, out := &in.TrialComponentDisplayName, &out.TrialComponentDisplayName
		*out = new(string)
		**out = **in
	}
	if in.TrialName != nil {
		in, out := &in.TrialName, &out.TrialName
		*out = new(string)
		**out = **in
	}
	if in.TrialNameRef != nil {
		in, out := &in.TrialNameRef, &out.TrialNameRef
		*out = new(v1.Reference)
		**out = **in
	}
	if in.TrialNameSelector != nil {
		in, out := &in.TrialNameSelector, &out.TrialNameSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ExperimentConfig.
func (in *ExperimentConfig) DeepCopy() *ExperimentConfig {
	if in == nil {
		return nil
	}
	out := new(ExperimentConfig)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ExperimentList) DeepCopyInto(out *ExperimentList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]Experiment, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ExperimentList.
func (in *ExperimentList) DeepCopy() *ExperimentList {
	if in == nil {
		return nil
	}
	out := new(ExperimentList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *ExperimentList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ExperimentObservation) DeepCopyInto(out *ExperimentObservation) {
	*out = *in
	if in.ExperimentARN != nil {
		in, out := &in.ExperimentARN, &out.ExperimentARN
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ExperimentObservation.
func (in *ExperimentObservation) DeepCopy() *ExperimentObservation {
	if in == nil {
		return nil
	}
	out := new(ExperimentObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ExperimentParameters) DeepCopyInto(out *ExperimentParameters) {
	*out = *in
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.DisplayName != nil {
		in, out := &in.DisplayName, &out.DisplayName
		*out = new(string)
		**out = **in
	}
	if in.ExperimentName != nil {
		in, out := &in.ExperimentName, &out.ExperimentName
		*out = new(string)
		**out = **in
	}
	if in.Tags != nil {
		in, out := &in.Tags, &out.Tags
		*out = make([]*Tag, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(Tag)
				(*in).DeepCopyInto(*out)
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ExperimentParameters.
func (in *ExperimentParameters) DeepCopy() *ExperimentParameters {
	if in == nil {
		return nil
	}
	out := new(ExperimentParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ExperimentSource) DeepCopyInto(out *ExperimentSource) {
	*out = *in
	if in.SourceARN != nil {
		in, out := &in.SourceARN, &out.SourceARN
		*out = new(string)
		**out = **in
	}
	if in.SourceType != nil {
		in, out := &in.SourceType, &out.SourceType
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ExperimentSource.
func (in *ExperimentSource) DeepCopy() *ExperimentSource {
	if in == nil {
		return nil
	}
	out := new(ExperimentSource)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ExperimentSpec) DeepCopyInto(out *ExperimentSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ExperimentSpec.
func (in *ExperimentSpec) DeepCopy() *ExperimentSpec {
	if in == nil {
		return nil
	}
	out := new(ExperimentSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ExperimentStatus) DeepCopyInto(out *ExperimentStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ExperimentStatus.
func (in *ExperimentStatus) DeepCopy() *ExperimentStatus {
	if in == nil {
		return nil
	}
	out := new(ExperimentStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ExperimentSummary) DeepCopyInto(out *ExperimentSummary) {
	*out = *in
	if in.CreationTime != nil {
		in, out := &in.CreationTime, &out.CreationTime
		*out = (*in).DeepCopy()
	}
	if in.DisplayName != nil {
		in, out := &in.DisplayName, &out.DisplayName
		*out = new(string)
		**out = **in
	}
	if in.ExperimentARN != nil {
		in, out := &in.ExperimentARN, &out.ExperimentARN
		*out = new(string)
		**out = **in
	}
	if in.ExperimentName != nil {
		in, out := &in.ExperimentName, &out.ExperimentName
		*out = new(string)
		**out = **in
	}
	if in.ExperimentSource != nil {
		in, out := &in.ExperimentSource, &out.ExperimentSource
		*out = new(ExperimentSource)
		(*in).DeepCopyInto(*out)
	}
	if in.LastModifiedTime != nil {
		in, out := &in.LastModifiedTime, &out.LastModifiedTime
		*out = (*in).DeepCopy()
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ExperimentSummary.
func (in *ExperimentSummary) DeepCopy() *ExperimentSummary {
	if in == nil {
		return nil
	}
	out := new(ExperimentSummary)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Experiment_SDK) DeepCopyInto(out *Experiment_SDK) {
	*out = *in
	if in.CreatedBy != nil {
		in, out := &in.CreatedBy, &out.CreatedBy
		*out = new(UserContext)
		(*in).DeepCopyInto(*out)
	}
	if in.CreationTime != nil {
		in, out := &in.CreationTime, &out.CreationTime
		*out = (*in).DeepCopy()
	}
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.DisplayName != nil {
		in, out := &in.DisplayName, &out.DisplayName
		*out = new(string)
		**out = **in
	}
	if in.ExperimentARN != nil {
		in, out := &in.ExperimentARN, &out.ExperimentARN
		*out = new(string)
		**out = **in
	}
	if in.ExperimentName != nil {
		in, out := &in.ExperimentName, &out.ExperimentName
		*out = new(string)
		**out = **in
	}
	if in.LastModifiedBy != nil {
		in, out := &in.LastModifiedBy, &out.LastModifiedBy
		*out = new(UserContext)
		(*in).DeepCopyInto(*out)
	}
	if in.LastModifiedTime != nil {
		in, out := &in.LastModifiedTime, &out.LastModifiedTime
		*out = (*in).DeepCopy()
	}
	if in.Source != nil {
		in, out := &in.Source, &out.Source
		*out = new(ExperimentSource)
		(*in).DeepCopyInto(*out)
	}
	if in.Tags != nil {
		in, out := &in.Tags, &out.Tags
		*out = make([]*Tag, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(Tag)
				(*in).DeepCopyInto(*out)
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Experiment_SDK.
func (in *Experiment_SDK) DeepCopy() *Experiment_SDK {
	if in == nil {
		return nil
	}
	out := new(Experiment_SDK)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *FileSystemDataSource) DeepCopyInto(out *FileSystemDataSource) {
	*out = *in
	if in.DirectoryPath != nil {
		in, out := &in.DirectoryPath, &out.DirectoryPath
		*out = new(string)
		**out = **in
	}
	if in.FileSystemAccessMode != nil {
		in, out := &in.FileSystemAccessMode, &out.FileSystemAccessMode
		*out = new(string)
		**out = **in
	}
	if in.FileSystemID != nil {
		in, out := &in.FileSystemID, &out.FileSystemID
		*out = new(string)
		**out = **in
	}
	if in.FileSystemType != nil {
		in, out := &in.FileSystemType, &out.FileSystemType
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new FileSystemDataSource.
func (in *FileSystemDataSource) DeepCopy() *FileSystemDataSource {
	if in == nil {
		return nil
	}
	out := new(FileSystemDataSource)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *FinalAutoMLJobObjectiveMetric) DeepCopyInto(out *FinalAutoMLJobObjectiveMetric) {
	*out = *in
	if in.MetricName != nil {
		in, out := &in.MetricName, &out.MetricName
		*out = new(string)
		**out = **in
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
	if in.Value != nil {
		in, out := &in.Value, &out.Value
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new FinalAutoMLJobObjectiveMetric.
func (in *FinalAutoMLJobObjectiveMetric) DeepCopy() *FinalAutoMLJobObjectiveMetric {
	if in == nil {
		return nil
	}
	out := new(FinalAutoMLJobObjectiveMetric)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *FinalHyperParameterTuningJobObjectiveMetric) DeepCopyInto(out *FinalHyperParameterTuningJobObjectiveMetric) {
	*out = *in
	if in.MetricName != nil {
		in, out := &in.MetricName, &out.MetricName
		*out = new(string)
		**out = **in
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
	if in.Value != nil {
		in, out := &in.Value, &out.Value
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new FinalHyperParameterTuningJobObjectiveMetric.
func (in *FinalHyperParameterTuningJobObjectiveMetric) DeepCopy() *FinalHyperParameterTuningJobObjectiveMetric {
	if in == nil {
		return nil
	}
	out := new(FinalHyperParameterTuningJobObjectiveMetric)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *FlowDefinitionOutputConfig) DeepCopyInto(out *FlowDefinitionOutputConfig) {
	*out = *in
	if in.KMSKeyID != nil {
		in, out := &in.KMSKeyID, &out.KMSKeyID
		*out = new(string)
		**out = **in
	}
	if in.S3OutputPath != nil {
		in, out := &in.S3OutputPath, &out.S3OutputPath
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new FlowDefinitionOutputConfig.
func (in *FlowDefinitionOutputConfig) DeepCopy() *FlowDefinitionOutputConfig {
	if in == nil {
		return nil
	}
	out := new(FlowDefinitionOutputConfig)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *FlowDefinitionSummary) DeepCopyInto(out *FlowDefinitionSummary) {
	*out = *in
	if in.CreationTime != nil {
		in, out := &in.CreationTime, &out.CreationTime
		*out = (*in).DeepCopy()
	}
	if in.FailureReason != nil {
		in, out := &in.FailureReason, &out.FailureReason
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new FlowDefinitionSummary.
func (in *FlowDefinitionSummary) DeepCopy() *FlowDefinitionSummary {
	if in == nil {
		return nil
	}
	out := new(FlowDefinitionSummary)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *GitConfig) DeepCopyInto(out *GitConfig) {
	*out = *in
	if in.Branch != nil {
		in, out := &in.Branch, &out.Branch
		*out = new(string)
		**out = **in
	}
	if in.RepositoryURL != nil {
		in, out := &in.RepositoryURL, &out.RepositoryURL
		*out = new(string)
		**out = **in
	}
	if in.SecretARN != nil {
		in, out := &in.SecretARN, &out.SecretARN
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new GitConfig.
func (in *GitConfig) DeepCopy() *GitConfig {
	if in == nil {
		return nil
	}
	out := new(GitConfig)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *GitConfigForUpdate) DeepCopyInto(out *GitConfigForUpdate) {
	*out = *in
	if in.SecretARN != nil {
		in, out := &in.SecretARN, &out.SecretARN
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new GitConfigForUpdate.
func (in *GitConfigForUpdate) DeepCopy() *GitConfigForUpdate {
	if in == nil {
		return nil
	}
	out := new(GitConfigForUpdate)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *HumanLoopConfig) DeepCopyInto(out *HumanLoopConfig) {
	*out = *in
	if in.HumanTaskUiARN != nil {
		in, out := &in.HumanTaskUiARN, &out.HumanTaskUiARN
		*out = new(string)
		**out = **in
	}
	if in.PublicWorkforceTaskPrice != nil {
		in, out := &in.PublicWorkforceTaskPrice, &out.PublicWorkforceTaskPrice
		*out = new(PublicWorkforceTaskPrice)
		(*in).DeepCopyInto(*out)
	}
	if in.WorkteamARN != nil {
		in, out := &in.WorkteamARN, &out.WorkteamARN
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new HumanLoopConfig.
func (in *HumanLoopConfig) DeepCopy() *HumanLoopConfig {
	if in == nil {
		return nil
	}
	out := new(HumanLoopConfig)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *HumanTaskConfig) DeepCopyInto(out *HumanTaskConfig) {
	*out = *in
	if in.AnnotationConsolidationConfig != nil {
		in, out := &in.AnnotationConsolidationConfig, &out.AnnotationConsolidationConfig
		*out = new(AnnotationConsolidationConfig)
		(*in).DeepCopyInto(*out)
	}
	if in.MaxConcurrentTaskCount != nil {
		in, out := &in.MaxConcurrentTaskCount, &out.MaxConcurrentTaskCount
		*out = new(int64)
		**out = **in
	}
	if in.NumberOfHumanWorkersPerDataObject != nil {
		in, out := &in.NumberOfHumanWorkersPerDataObject, &out.NumberOfHumanWorkersPerDataObject
		*out = new(int64)
		**out = **in
	}
	if in.PreHumanTaskLambdaARN != nil {
		in, out := &in.PreHumanTaskLambdaARN, &out.PreHumanTaskLambdaARN
		*out = new(string)
		**out = **in
	}
	if in.PublicWorkforceTaskPrice != nil {
		in, out := &in.PublicWorkforceTaskPrice, &out.PublicWorkforceTaskPrice
		*out = new(PublicWorkforceTaskPrice)
		(*in).DeepCopyInto(*out)
	}
	if in.TaskAvailabilityLifetimeInSeconds != nil {
		in, out := &in.TaskAvailabilityLifetimeInSeconds, &out.TaskAvailabilityLifetimeInSeconds
		*out = new(int64)
		**out = **in
	}
	if in.TaskDescription != nil {
		in, out := &in.TaskDescription, &out.TaskDescription
		*out = new(string)
		**out = **in
	}
	if in.TaskKeywords != nil {
		in, out := &in.TaskKeywords, &out.TaskKeywords
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.TaskTimeLimitInSeconds != nil {
		in, out := &in.TaskTimeLimitInSeconds, &out.TaskTimeLimitInSeconds
		*out = new(int64)
		**out = **in
	}
	if in.TaskTitle != nil {
		in, out := &in.TaskTitle, &out.TaskTitle
		*out = new(string)
		**out = **in
	}
	if in.UiConfig != nil {
		in, out := &in.UiConfig, &out.UiConfig
		*out = new(UiConfig)
		(*in).DeepCopyInto(*out)
	}
	if in.WorkteamARN != nil {
		in, out := &in.WorkteamARN, &out.WorkteamARN
		*out = new(string)
		**out = **in
	}
	if in.WorkteamARNRef != nil {
		in, out := &in.WorkteamARNRef, &out.WorkteamARNRef
		*out = new(v1.Reference)
		**out = **in
	}
	if in.WorkteamARNSelector != nil {
		in, out := &in.WorkteamARNSelector, &out.WorkteamARNSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new HumanTaskConfig.
func (in *HumanTaskConfig) DeepCopy() *HumanTaskConfig {
	if in == nil {
		return nil
	}
	out := new(HumanTaskConfig)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *HumanTaskUi) DeepCopyInto(out *HumanTaskUi) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new HumanTaskUi.
func (in *HumanTaskUi) DeepCopy() *HumanTaskUi {
	if in == nil {
		return nil
	}
	out := new(HumanTaskUi)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *HumanTaskUi) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *HumanTaskUiList) DeepCopyInto(out *HumanTaskUiList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]HumanTaskUi, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new HumanTaskUiList.
func (in *HumanTaskUiList) DeepCopy() *HumanTaskUiList {
	if in == nil {
		return nil
	}
	out := new(HumanTaskUiList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *HumanTaskUiList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *HumanTaskUiObservation) DeepCopyInto(out *HumanTaskUiObservation) {
	*out = *in
	if in.HumanTaskUiARN != nil {
		in, out := &in.HumanTaskUiARN, &out.HumanTaskUiARN
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new HumanTaskUiObservation.
func (in *HumanTaskUiObservation) DeepCopy() *HumanTaskUiObservation {
	if in == nil {
		return nil
	}
	out := new(HumanTaskUiObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *HumanTaskUiParameters) DeepCopyInto(out *HumanTaskUiParameters) {
	*out = *in
	if in.HumanTaskUiName != nil {
		in, out := &in.HumanTaskUiName, &out.HumanTaskUiName
		*out = new(string)
		**out = **in
	}
	if in.Tags != nil {
		in, out := &in.Tags, &out.Tags
		*out = make([]*Tag, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(Tag)
				(*in).DeepCopyInto(*out)
			}
		}
	}
	if in.UiTemplate != nil {
		in, out := &in.UiTemplate, &out.UiTemplate
		*out = new(UiTemplate)
		(*in).DeepCopyInto(*out)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new HumanTaskUiParameters.
func (in *HumanTaskUiParameters) DeepCopy() *HumanTaskUiParameters {
	if in == nil {
		return nil
	}
	out := new(HumanTaskUiParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *HumanTaskUiSpec) DeepCopyInto(out *HumanTaskUiSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new HumanTaskUiSpec.
func (in *HumanTaskUiSpec) DeepCopy() *HumanTaskUiSpec {
	if in == nil {
		return nil
	}
	out := new(HumanTaskUiSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *HumanTaskUiStatus) DeepCopyInto(out *HumanTaskUiStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new HumanTaskUiStatus.
func (in *HumanTaskUiStatus) DeepCopy() *HumanTaskUiStatus {
	if in == nil {
		return nil
	}
	out := new(HumanTaskUiStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *HumanTaskUiSummary) DeepCopyInto(out *HumanTaskUiSummary) {
	*out = *in
	if in.CreationTime != nil {
		in, out := &in.CreationTime, &out.CreationTime
		*out = (*in).DeepCopy()
	}
	if in.HumanTaskUiARN != nil {
		in, out := &in.HumanTaskUiARN, &out.HumanTaskUiARN
		*out = new(string)
		**out = **in
	}
	if in.HumanTaskUiName != nil {
		in, out := &in.HumanTaskUiName, &out.HumanTaskUiName
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new HumanTaskUiSummary.
func (in *HumanTaskUiSummary) DeepCopy() *HumanTaskUiSummary {
	if in == nil {
		return nil
	}
	out := new(HumanTaskUiSummary)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *HyperParameterAlgorithmSpecification) DeepCopyInto(out *HyperParameterAlgorithmSpecification) {
	*out = *in
	if in.AlgorithmName != nil {
		in, out := &in.AlgorithmName, &out.AlgorithmName
		*out = new(string)
		**out = **in
	}
	if in.AlgorithmNameRef != nil {
		in, out := &in.AlgorithmNameRef, &out.AlgorithmNameRef
		*out = new(v1.Reference)
		**out = **in
	}
	if in.AlgorithmNameSelector != nil {
		in, out := &in.AlgorithmNameSelector, &out.AlgorithmNameSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.MetricDefinitions != nil {
		in, out := &in.MetricDefinitions, &out.MetricDefinitions
		*out = make([]*MetricDefinition, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(MetricDefinition)
				(*in).DeepCopyInto(*out)
			}
		}
	}
	if in.TrainingImage != nil {
		in, out := &in.TrainingImage, &out.TrainingImage
		*out = new(string)
		**out = **in
	}
	if in.TrainingInputMode != nil {
		in, out := &in.TrainingInputMode, &out.TrainingInputMode
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new HyperParameterAlgorithmSpecification.
func (in *HyperParameterAlgorithmSpecification) DeepCopy() *HyperParameterAlgorithmSpecification {
	if in == nil {
		return nil
	}
	out := new(HyperParameterAlgorithmSpecification)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *HyperParameterSpecification) DeepCopyInto(out *HyperParameterSpecification) {
	*out = *in
	if in.DefaultValue != nil {
		in, out := &in.DefaultValue, &out.DefaultValue
		*out = new(string)
		**out = **in
	}
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.IsRequired != nil {
		in, out := &in.IsRequired, &out.IsRequired
		*out = new(bool)
		**out = **in
	}
	if in.IsTunable != nil {
		in, out := &in.IsTunable, &out.IsTunable
		*out = new(bool)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Range != nil {
		in, out := &in.Range, &out.Range
		*out = new(ParameterRange)
		(*in).DeepCopyInto(*out)
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new HyperParameterSpecification.
func (in *HyperParameterSpecification) DeepCopy() *HyperParameterSpecification {
	if in == nil {
		return nil
	}
	out := new(HyperParameterSpecification)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *HyperParameterTrainingJobDefinition) DeepCopyInto(out *HyperParameterTrainingJobDefinition) {
	*out = *in
	if in.AlgorithmSpecification != nil {
		in, out := &in.AlgorithmSpecification, &out.AlgorithmSpecification
		*out = new(HyperParameterAlgorithmSpecification)
		(*in).DeepCopyInto(*out)
	}
	if in.CheckpointConfig != nil {
		in, out := &in.CheckpointConfig, &out.CheckpointConfig
		*out = new(CheckpointConfig)
		(*in).DeepCopyInto(*out)
	}
	if in.DefinitionName != nil {
		in, out := &in.DefinitionName, &out.DefinitionName
		*out = new(string)
		**out = **in
	}
	if in.EnableInterContainerTrafficEncryption != nil {
		in, out := &in.EnableInterContainerTrafficEncryption, &out.EnableInterContainerTrafficEncryption
		*out = new(bool)
		**out = **in
	}
	if in.EnableManagedSpotTraining != nil {
		in, out := &in.EnableManagedSpotTraining, &out.EnableManagedSpotTraining
		*out = new(bool)
		**out = **in
	}
	if in.EnableNetworkIsolation != nil {
		in, out := &in.EnableNetworkIsolation, &out.EnableNetworkIsolation
		*out = new(bool)
		**out = **in
	}
	if in.HyperParameterRanges != nil {
		in, out := &in.HyperParameterRanges, &out.HyperParameterRanges
		*out = new(ParameterRanges)
		(*in).DeepCopyInto(*out)
	}
	if in.InputDataConfig != nil {
		in, out := &in.InputDataConfig, &out.InputDataConfig
		*out = make([]*Channel, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(Channel)
				(*in).DeepCopyInto(*out)
			}
		}
	}
	if in.OutputDataConfig != nil {
		in, out := &in.OutputDataConfig, &out.OutputDataConfig
		*out = new(OutputDataConfig)
		(*in).DeepCopyInto(*out)
	}
	if in.ResourceConfig != nil {
		in, out := &in.ResourceConfig, &out.ResourceConfig
		*out = new(ResourceConfig)
		(*in).DeepCopyInto(*out)
	}
	if in.RoleARN != nil {
		in, out := &in.RoleARN, &out.RoleARN
		*out = new(string)
		**out = **in
	}
	if in.RoleARNRef != nil {
		in, out := &in.RoleARNRef, &out.RoleARNRef
		*out = new(v1.Reference)
		**out = **in
	}
	if in.RoleARNSelector != nil {
		in, out := &in.RoleARNSelector, &out.RoleARNSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.StaticHyperParameters != nil {
		in, out := &in.StaticHyperParameters, &out.StaticHyperParameters
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				in, out := &val, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.StoppingCondition != nil {
		in, out := &in.StoppingCondition, &out.StoppingCondition
		*out = new(StoppingCondition)
		(*in).DeepCopyInto(*out)
	}
	if in.TuningObjective != nil {
		in, out := &in.TuningObjective, &out.TuningObjective
		*out = new(HyperParameterTuningJobObjective)
		(*in).DeepCopyInto(*out)
	}
	if in.VPCConfig != nil {
		in, out := &in.VPCConfig, &out.VPCConfig
		*out = new(VPCConfig)
		(*in).DeepCopyInto(*out)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new HyperParameterTrainingJobDefinition.
func (in *HyperParameterTrainingJobDefinition) DeepCopy() *HyperParameterTrainingJobDefinition {
	if in == nil {
		return nil
	}
	out := new(HyperParameterTrainingJobDefinition)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *HyperParameterTrainingJobSummary) DeepCopyInto(out *HyperParameterTrainingJobSummary) {
	*out = *in
	if in.CreationTime != nil {
		in, out := &in.CreationTime, &out.CreationTime
		*out = (*in).DeepCopy()
	}
	if in.FailureReason != nil {
		in, out := &in.FailureReason, &out.FailureReason
		*out = new(string)
		**out = **in
	}
	if in.FinalHyperParameterTuningJobObjectiveMetric != nil {
		in, out := &in.FinalHyperParameterTuningJobObjectiveMetric, &out.FinalHyperParameterTuningJobObjectiveMetric
		*out = new(FinalHyperParameterTuningJobObjectiveMetric)
		(*in).DeepCopyInto(*out)
	}
	if in.ObjectiveStatus != nil {
		in, out := &in.ObjectiveStatus, &out.ObjectiveStatus
		*out = new(string)
		**out = **in
	}
	if in.TrainingEndTime != nil {
		in, out := &in.TrainingEndTime, &out.TrainingEndTime
		*out = (*in).DeepCopy()
	}
	if in.TrainingJobARN != nil {
		in, out := &in.TrainingJobARN, &out.TrainingJobARN
		*out = new(string)
		**out = **in
	}
	if in.TrainingJobDefinitionName != nil {
		in, out := &in.TrainingJobDefinitionName, &out.TrainingJobDefinitionName
		*out = new(string)
		**out = **in
	}
	if in.TrainingJobName != nil {
		in, out := &in.TrainingJobName, &out.TrainingJobName
		*out = new(string)
		**out = **in
	}
	if in.TrainingJobStatus != nil {
		in, out := &in.TrainingJobStatus, &out.TrainingJobStatus
		*out = new(string)
		**out = **in
	}
	if in.TrainingStartTime != nil {
		in, out := &in.TrainingStartTime, &out.TrainingStartTime
		*out = (*in).DeepCopy()
	}
	if in.TunedHyperParameters != nil {
		in, out := &in.TunedHyperParameters, &out.TunedHyperParameters
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				in, out := &val, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.TuningJobName != nil {
		in, out := &in.TuningJobName, &out.TuningJobName
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new HyperParameterTrainingJobSummary.
func (in *HyperParameterTrainingJobSummary) DeepCopy() *HyperParameterTrainingJobSummary {
	if in == nil {
		return nil
	}
	out := new(HyperParameterTrainingJobSummary)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *HyperParameterTuningJob) DeepCopyInto(out *HyperParameterTuningJob) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new HyperParameterTuningJob.
func (in *HyperParameterTuningJob) DeepCopy() *HyperParameterTuningJob {
	if in == nil {
		return nil
	}
	out := new(HyperParameterTuningJob)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *HyperParameterTuningJob) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *HyperParameterTuningJobConfig) DeepCopyInto(out *HyperParameterTuningJobConfig) {
	*out = *in
	if in.HyperParameterTuningJobObjective != nil {
		in, out := &in.HyperParameterTuningJobObjective, &out.HyperParameterTuningJobObjective
		*out = new(HyperParameterTuningJobObjective)
		(*in).DeepCopyInto(*out)
	}
	if in.ParameterRanges != nil {
		in, out := &in.ParameterRanges, &out.ParameterRanges
		*out = new(ParameterRanges)
		(*in).DeepCopyInto(*out)
	}
	if in.ResourceLimits != nil {
		in, out := &in.ResourceLimits, &out.ResourceLimits
		*out = new(ResourceLimits)
		(*in).DeepCopyInto(*out)
	}
	if in.Strategy != nil {
		in, out := &in.Strategy, &out.Strategy
		*out = new(string)
		**out = **in
	}
	if in.TrainingJobEarlyStoppingType != nil {
		in, out := &in.TrainingJobEarlyStoppingType, &out.TrainingJobEarlyStoppingType
		*out = new(string)
		**out = **in
	}
	if in.TuningJobCompletionCriteria != nil {
		in, out := &in.TuningJobCompletionCriteria, &out.TuningJobCompletionCriteria
		*out = new(TuningJobCompletionCriteria)
		(*in).DeepCopyInto(*out)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new HyperParameterTuningJobConfig.
func (in *HyperParameterTuningJobConfig) DeepCopy() *HyperParameterTuningJobConfig {
	if in == nil {
		return nil
	}
	out := new(HyperParameterTuningJobConfig)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *HyperParameterTuningJobList) DeepCopyInto(out *HyperParameterTuningJobList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]HyperParameterTuningJob, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new HyperParameterTuningJobList.
func (in *HyperParameterTuningJobList) DeepCopy() *HyperParameterTuningJobList {
	if in == nil {
		return nil
	}
	out := new(HyperParameterTuningJobList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *HyperParameterTuningJobList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *HyperParameterTuningJobObjective) DeepCopyInto(out *HyperParameterTuningJobObjective) {
	*out = *in
	if in.MetricName != nil {
		in, out := &in.MetricName, &out.MetricName
		*out = new(string)
		**out = **in
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new HyperParameterTuningJobObjective.
func (in *HyperParameterTuningJobObjective) DeepCopy() *HyperParameterTuningJobObjective {
	if in == nil {
		return nil
	}
	out := new(HyperParameterTuningJobObjective)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *HyperParameterTuningJobObservation) DeepCopyInto(out *HyperParameterTuningJobObservation) {
	*out = *in
	if in.HyperParameterTuningJobARN != nil {
		in, out := &in.HyperParameterTuningJobARN, &out.HyperParameterTuningJobARN
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new HyperParameterTuningJobObservation.
func (in *HyperParameterTuningJobObservation) DeepCopy() *HyperParameterTuningJobObservation {
	if in == nil {
		return nil
	}
	out := new(HyperParameterTuningJobObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *HyperParameterTuningJobParameters) DeepCopyInto(out *HyperParameterTuningJobParameters) {
	*out = *in
	if in.HyperParameterTuningJobConfig != nil {
		in, out := &in.HyperParameterTuningJobConfig, &out.HyperParameterTuningJobConfig
		*out = new(HyperParameterTuningJobConfig)
		(*in).DeepCopyInto(*out)
	}
	if in.HyperParameterTuningJobName != nil {
		in, out := &in.HyperParameterTuningJobName, &out.HyperParameterTuningJobName
		*out = new(string)
		**out = **in
	}
	if in.Tags != nil {
		in, out := &in.Tags, &out.Tags
		*out = make([]*Tag, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(Tag)
				(*in).DeepCopyInto(*out)
			}
		}
	}
	if in.TrainingJobDefinition != nil {
		in, out := &in.TrainingJobDefinition, &out.TrainingJobDefinition
		*out = new(HyperParameterTrainingJobDefinition)
		(*in).DeepCopyInto(*out)
	}
	if in.TrainingJobDefinitions != nil {
		in, out := &in.TrainingJobDefinitions, &out.TrainingJobDefinitions
		*out = make([]*HyperParameterTrainingJobDefinition, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(HyperParameterTrainingJobDefinition)
				(*in).DeepCopyInto(*out)
			}
		}
	}
	if in.WarmStartConfig != nil {
		in, out := &in.WarmStartConfig, &out.WarmStartConfig
		*out = new(HyperParameterTuningJobWarmStartConfig)
		(*in).DeepCopyInto(*out)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new HyperParameterTuningJobParameters.
func (in *HyperParameterTuningJobParameters) DeepCopy() *HyperParameterTuningJobParameters {
	if in == nil {
		return nil
	}
	out := new(HyperParameterTuningJobParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *HyperParameterTuningJobSpec) DeepCopyInto(out *HyperParameterTuningJobSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new HyperParameterTuningJobSpec.
func (in *HyperParameterTuningJobSpec) DeepCopy() *HyperParameterTuningJobSpec {
	if in == nil {
		return nil
	}
	out := new(HyperParameterTuningJobSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *HyperParameterTuningJobStatus) DeepCopyInto(out *HyperParameterTuningJobStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new HyperParameterTuningJobStatus.
func (in *HyperParameterTuningJobStatus) DeepCopy() *HyperParameterTuningJobStatus {
	if in == nil {
		return nil
	}
	out := new(HyperParameterTuningJobStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *HyperParameterTuningJobSummary) DeepCopyInto(out *HyperParameterTuningJobSummary) {
	*out = *in
	if in.CreationTime != nil {
		in, out := &in.CreationTime, &out.CreationTime
		*out = (*in).DeepCopy()
	}
	if in.HyperParameterTuningEndTime != nil {
		in, out := &in.HyperParameterTuningEndTime, &out.HyperParameterTuningEndTime
		*out = (*in).DeepCopy()
	}
	if in.HyperParameterTuningJobARN != nil {
		in, out := &in.HyperParameterTuningJobARN, &out.HyperParameterTuningJobARN
		*out = new(string)
		**out = **in
	}
	if in.HyperParameterTuningJobName != nil {
		in, out := &in.HyperParameterTuningJobName, &out.HyperParameterTuningJobName
		*out = new(string)
		**out = **in
	}
	if in.HyperParameterTuningJobStatus != nil {
		in, out := &in.HyperParameterTuningJobStatus, &out.HyperParameterTuningJobStatus
		*out = new(string)
		**out = **in
	}
	if in.LastModifiedTime != nil {
		in, out := &in.LastModifiedTime, &out.LastModifiedTime
		*out = (*in).DeepCopy()
	}
	if in.ObjectiveStatusCounters != nil {
		in, out := &in.ObjectiveStatusCounters, &out.ObjectiveStatusCounters
		*out = new(ObjectiveStatusCounters)
		(*in).DeepCopyInto(*out)
	}
	if in.ResourceLimits != nil {
		in, out := &in.ResourceLimits, &out.ResourceLimits
		*out = new(ResourceLimits)
		(*in).DeepCopyInto(*out)
	}
	if in.Strategy != nil {
		in, out := &in.Strategy, &out.Strategy
		*out = new(string)
		**out = **in
	}
	if in.TrainingJobStatusCounters != nil {
		in, out := &in.TrainingJobStatusCounters, &out.TrainingJobStatusCounters
		*out = new(TrainingJobStatusCounters)
		(*in).DeepCopyInto(*out)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new HyperParameterTuningJobSummary.
func (in *HyperParameterTuningJobSummary) DeepCopy() *HyperParameterTuningJobSummary {
	if in == nil {
		return nil
	}
	out := new(HyperParameterTuningJobSummary)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *HyperParameterTuningJobWarmStartConfig) DeepCopyInto(out *HyperParameterTuningJobWarmStartConfig) {
	*out = *in
	if in.ParentHyperParameterTuningJobs != nil {
		in, out := &in.ParentHyperParameterTuningJobs, &out.ParentHyperParameterTuningJobs
		*out = make([]*ParentHyperParameterTuningJob, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(ParentHyperParameterTuningJob)
				(*in).DeepCopyInto(*out)
			}
		}
	}
	if in.WarmStartType != nil {
		in, out := &in.WarmStartType, &out.WarmStartType
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new HyperParameterTuningJobWarmStartConfig.
func (in *HyperParameterTuningJobWarmStartConfig) DeepCopy() *HyperParameterTuningJobWarmStartConfig {
	if in == nil {
		return nil
	}
	out := new(HyperParameterTuningJobWarmStartConfig)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ImageConfig) DeepCopyInto(out *ImageConfig) {
	*out = *in
	if in.RepositoryAccessMode != nil {
		in, out := &in.RepositoryAccessMode, &out.RepositoryAccessMode
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ImageConfig.
func (in *ImageConfig) DeepCopy() *ImageConfig {
	if in == nil {
		return nil
	}
	out := new(ImageConfig)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *InferenceSpecification) DeepCopyInto(out *InferenceSpecification) {
	*out = *in
	if in.Containers != nil {
		in, out := &in.Containers, &out.Containers
		*out = make([]*ModelPackageContainerDefinition, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(ModelPackageContainerDefinition)
				(*in).DeepCopyInto(*out)
			}
		}
	}
	if in.SupportedContentTypes != nil {
		in, out := &in.SupportedContentTypes, &out.SupportedContentTypes
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.SupportedRealtimeInferenceInstanceTypes != nil {
		in, out := &in.SupportedRealtimeInferenceInstanceTypes, &out.SupportedRealtimeInferenceInstanceTypes
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.SupportedResponseMIMETypes != nil {
		in, out := &in.SupportedResponseMIMETypes, &out.SupportedResponseMIMETypes
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.SupportedTransformInstanceTypes != nil {
		in, out := &in.SupportedTransformInstanceTypes, &out.SupportedTransformInstanceTypes
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new InferenceSpecification.
func (in *InferenceSpecification) DeepCopy() *InferenceSpecification {
	if in == nil {
		return nil
	}
	out := new(InferenceSpecification)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *InputConfig) DeepCopyInto(out *InputConfig) {
	*out = *in
	if in.DataInputConfig != nil {
		in, out := &in.DataInputConfig, &out.DataInputConfig
		*out = new(string)
		**out = **in
	}
	if in.Framework != nil {
		in, out := &in.Framework, &out.Framework
		*out = new(string)
		**out = **in
	}
	if in.S3URI != nil {
		in, out := &in.S3URI, &out.S3URI
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new InputConfig.
func (in *InputConfig) DeepCopy() *InputConfig {
	if in == nil {
		return nil
	}
	out := new(InputConfig)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *IntegerParameterRange) DeepCopyInto(out *IntegerParameterRange) {
	*out = *in
	if in.MaxValue != nil {
		in, out := &in.MaxValue, &out.MaxValue
		*out = new(string)
		**out = **in
	}
	if in.MinValue != nil {
		in, out := &in.MinValue, &out.MinValue
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.ScalingType != nil {
		in, out := &in.ScalingType, &out.ScalingType
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new IntegerParameterRange.
func (in *IntegerParameterRange) DeepCopy() *IntegerParameterRange {
	if in == nil {
		return nil
	}
	out := new(IntegerParameterRange)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *IntegerParameterRangeSpecification) DeepCopyInto(out *IntegerParameterRangeSpecification) {
	*out = *in
	if in.MaxValue != nil {
		in, out := &in.MaxValue, &out.MaxValue
		*out = new(string)
		**out = **in
	}
	if in.MinValue != nil {
		in, out := &in.MinValue, &out.MinValue
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new IntegerParameterRangeSpecification.
func (in *IntegerParameterRangeSpecification) DeepCopy() *IntegerParameterRangeSpecification {
	if in == nil {
		return nil
	}
	out := new(IntegerParameterRangeSpecification)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *JupyterServerAppSettings) DeepCopyInto(out *JupyterServerAppSettings) {
	*out = *in
	if in.DefaultResourceSpec != nil {
		in, out := &in.DefaultResourceSpec, &out.DefaultResourceSpec
		*out = new(ResourceSpec)
		(*in).DeepCopyInto(*out)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new JupyterServerAppSettings.
func (in *JupyterServerAppSettings) DeepCopy() *JupyterServerAppSettings {
	if in == nil {
		return nil
	}
	out := new(JupyterServerAppSettings)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *KernelGatewayAppSettings) DeepCopyInto(out *KernelGatewayAppSettings) {
	*out = *in
	if in.DefaultResourceSpec != nil {
		in, out := &in.DefaultResourceSpec, &out.DefaultResourceSpec
		*out = new(ResourceSpec)
		(*in).DeepCopyInto(*out)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new KernelGatewayAppSettings.
func (in *KernelGatewayAppSettings) DeepCopy() *KernelGatewayAppSettings {
	if in == nil {
		return nil
	}
	out := new(KernelGatewayAppSettings)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LabelCounters) DeepCopyInto(out *LabelCounters) {
	*out = *in
	if in.FailedNonRetryableError != nil {
		in, out := &in.FailedNonRetryableError, &out.FailedNonRetryableError
		*out = new(int64)
		**out = **in
	}
	if in.HumanLabeled != nil {
		in, out := &in.HumanLabeled, &out.HumanLabeled
		*out = new(int64)
		**out = **in
	}
	if in.MachineLabeled != nil {
		in, out := &in.MachineLabeled, &out.MachineLabeled
		*out = new(int64)
		**out = **in
	}
	if in.TotalLabeled != nil {
		in, out := &in.TotalLabeled, &out.TotalLabeled
		*out = new(int64)
		**out = **in
	}
	if in.Unlabeled != nil {
		in, out := &in.Unlabeled, &out.Unlabeled
		*out = new(int64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LabelCounters.
func (in *LabelCounters) DeepCopy() *LabelCounters {
	if in == nil {
		return nil
	}
	out := new(LabelCounters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LabelCountersForWorkteam) DeepCopyInto(out *LabelCountersForWorkteam) {
	*out = *in
	if in.HumanLabeled != nil {
		in, out := &in.HumanLabeled, &out.HumanLabeled
		*out = new(int64)
		**out = **in
	}
	if in.PendingHuman != nil {
		in, out := &in.PendingHuman, &out.PendingHuman
		*out = new(int64)
		**out = **in
	}
	if in.Total != nil {
		in, out := &in.Total, &out.Total
		*out = new(int64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LabelCountersForWorkteam.
func (in *LabelCountersForWorkteam) DeepCopy() *LabelCountersForWorkteam {
	if in == nil {
		return nil
	}
	out := new(LabelCountersForWorkteam)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LabelingJob) DeepCopyInto(out *LabelingJob) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LabelingJob.
func (in *LabelingJob) DeepCopy() *LabelingJob {
	if in == nil {
		return nil
	}
	out := new(LabelingJob)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *LabelingJob) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LabelingJobAlgorithmsConfig) DeepCopyInto(out *LabelingJobAlgorithmsConfig) {
	*out = *in
	if in.InitialActiveLearningModelARN != nil {
		in, out := &in.InitialActiveLearningModelARN, &out.InitialActiveLearningModelARN
		*out = new(string)
		**out = **in
	}
	if in.LabelingJobAlgorithmSpecificationARN != nil {
		in, out := &in.LabelingJobAlgorithmSpecificationARN, &out.LabelingJobAlgorithmSpecificationARN
		*out = new(string)
		**out = **in
	}
	if in.LabelingJobResourceConfig != nil {
		in, out := &in.LabelingJobResourceConfig, &out.LabelingJobResourceConfig
		*out = new(LabelingJobResourceConfig)
		(*in).DeepCopyInto(*out)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LabelingJobAlgorithmsConfig.
func (in *LabelingJobAlgorithmsConfig) DeepCopy() *LabelingJobAlgorithmsConfig {
	if in == nil {
		return nil
	}
	out := new(LabelingJobAlgorithmsConfig)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LabelingJobDataAttributes) DeepCopyInto(out *LabelingJobDataAttributes) {
	*out = *in
	if in.ContentClassifiers != nil {
		in, out := &in.ContentClassifiers, &out.ContentClassifiers
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LabelingJobDataAttributes.
func (in *LabelingJobDataAttributes) DeepCopy() *LabelingJobDataAttributes {
	if in == nil {
		return nil
	}
	out := new(LabelingJobDataAttributes)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LabelingJobDataSource) DeepCopyInto(out *LabelingJobDataSource) {
	*out = *in
	if in.S3DataSource != nil {
		in, out := &in.S3DataSource, &out.S3DataSource
		*out = new(LabelingJobS3DataSource)
		(*in).DeepCopyInto(*out)
	}
	if in.SnsDataSource != nil {
		in, out := &in.SnsDataSource, &out.SnsDataSource
		*out = new(LabelingJobSnsDataSource)
		(*in).DeepCopyInto(*out)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LabelingJobDataSource.
func (in *LabelingJobDataSource) DeepCopy() *LabelingJobDataSource {
	if in == nil {
		return nil
	}
	out := new(LabelingJobDataSource)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LabelingJobForWorkteamSummary) DeepCopyInto(out *LabelingJobForWorkteamSummary) {
	*out = *in
	if in.CreationTime != nil {
		in, out := &in.CreationTime, &out.CreationTime
		*out = (*in).DeepCopy()
	}
	if in.JobReferenceCode != nil {
		in, out := &in.JobReferenceCode, &out.JobReferenceCode
		*out = new(string)
		**out = **in
	}
	if in.LabelingJobName != nil {
		in, out := &in.LabelingJobName, &out.LabelingJobName
		*out = new(string)
		**out = **in
	}
	if in.NumberOfHumanWorkersPerDataObject != nil {
		in, out := &in.NumberOfHumanWorkersPerDataObject, &out.NumberOfHumanWorkersPerDataObject
		*out = new(int64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LabelingJobForWorkteamSummary.
func (in *LabelingJobForWorkteamSummary) DeepCopy() *LabelingJobForWorkteamSummary {
	if in == nil {
		return nil
	}
	out := new(LabelingJobForWorkteamSummary)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LabelingJobInputConfig) DeepCopyInto(out *LabelingJobInputConfig) {
	*out = *in
	if in.DataAttributes != nil {
		in, out := &in.DataAttributes, &out.DataAttributes
		*out = new(LabelingJobDataAttributes)
		(*in).DeepCopyInto(*out)
	}
	if in.DataSource != nil {
		in, out := &in.DataSource, &out.DataSource
		*out = new(LabelingJobDataSource)
		(*in).DeepCopyInto(*out)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LabelingJobInputConfig.
func (in *LabelingJobInputConfig) DeepCopy() *LabelingJobInputConfig {
	if in == nil {
		return nil
	}
	out := new(LabelingJobInputConfig)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LabelingJobList) DeepCopyInto(out *LabelingJobList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]LabelingJob, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LabelingJobList.
func (in *LabelingJobList) DeepCopy() *LabelingJobList {
	if in == nil {
		return nil
	}
	out := new(LabelingJobList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *LabelingJobList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LabelingJobObservation) DeepCopyInto(out *LabelingJobObservation) {
	*out = *in
	if in.LabelingJobARN != nil {
		in, out := &in.LabelingJobARN, &out.LabelingJobARN
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LabelingJobObservation.
func (in *LabelingJobObservation) DeepCopy() *LabelingJobObservation {
	if in == nil {
		return nil
	}
	out := new(LabelingJobObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LabelingJobOutput) DeepCopyInto(out *LabelingJobOutput) {
	*out = *in
	if in.FinalActiveLearningModelARN != nil {
		in, out := &in.FinalActiveLearningModelARN, &out.FinalActiveLearningModelARN
		*out = new(string)
		**out = **in
	}
	if in.OutputDatasetS3URI != nil {
		in, out := &in.OutputDatasetS3URI, &out.OutputDatasetS3URI
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LabelingJobOutput.
func (in *LabelingJobOutput) DeepCopy() *LabelingJobOutput {
	if in == nil {
		return nil
	}
	out := new(LabelingJobOutput)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LabelingJobOutputConfig) DeepCopyInto(out *LabelingJobOutputConfig) {
	*out = *in
	if in.KMSKeyID != nil {
		in, out := &in.KMSKeyID, &out.KMSKeyID
		*out = new(string)
		**out = **in
	}
	if in.S3OutputPath != nil {
		in, out := &in.S3OutputPath, &out.S3OutputPath
		*out = new(string)
		**out = **in
	}
	if in.SnsTopicARN != nil {
		in, out := &in.SnsTopicARN, &out.SnsTopicARN
		*out = new(string)
		**out = **in
	}
	if in.SnsTopicARNRef != nil {
		in, out := &in.SnsTopicARNRef, &out.SnsTopicARNRef
		*out = new(v1.Reference)
		**out = **in
	}
	if in.SnsTopicARNSelector != nil {
		in, out := &in.SnsTopicARNSelector, &out.SnsTopicARNSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LabelingJobOutputConfig.
func (in *LabelingJobOutputConfig) DeepCopy() *LabelingJobOutputConfig {
	if in == nil {
		return nil
	}
	out := new(LabelingJobOutputConfig)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LabelingJobParameters) DeepCopyInto(out *LabelingJobParameters) {
	*out = *in
	if in.HumanTaskConfig != nil {
		in, out := &in.HumanTaskConfig, &out.HumanTaskConfig
		*out = new(HumanTaskConfig)
		(*in).DeepCopyInto(*out)
	}
	if in.InputConfig != nil {
		in, out := &in.InputConfig, &out.InputConfig
		*out = new(LabelingJobInputConfig)
		(*in).DeepCopyInto(*out)
	}
	if in.LabelAttributeName != nil {
		in, out := &in.LabelAttributeName, &out.LabelAttributeName
		*out = new(string)
		**out = **in
	}
	if in.LabelCategoryConfigS3URI != nil {
		in, out := &in.LabelCategoryConfigS3URI, &out.LabelCategoryConfigS3URI
		*out = new(string)
		**out = **in
	}
	if in.LabelingJobAlgorithmsConfig != nil {
		in, out := &in.LabelingJobAlgorithmsConfig, &out.LabelingJobAlgorithmsConfig
		*out = new(LabelingJobAlgorithmsConfig)
		(*in).DeepCopyInto(*out)
	}
	if in.LabelingJobName != nil {
		in, out := &in.LabelingJobName, &out.LabelingJobName
		*out = new(string)
		**out = **in
	}
	if in.OutputConfig != nil {
		in, out := &in.OutputConfig, &out.OutputConfig
		*out = new(LabelingJobOutputConfig)
		(*in).DeepCopyInto(*out)
	}
	if in.RoleARN != nil {
		in, out := &in.RoleARN, &out.RoleARN
		*out = new(string)
		**out = **in
	}
	if in.RoleARNRef != nil {
		in, out := &in.RoleARNRef, &out.RoleARNRef
		*out = new(v1.Reference)
		**out = **in
	}
	if in.RoleARNSelector != nil {
		in, out := &in.RoleARNSelector, &out.RoleARNSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.StoppingConditions != nil {
		in, out := &in.StoppingConditions, &out.StoppingConditions
		*out = new(LabelingJobStoppingConditions)
		(*in).DeepCopyInto(*out)
	}
	if in.Tags != nil {
		in, out := &in.Tags, &out.Tags
		*out = make([]*Tag, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(Tag)
				(*in).DeepCopyInto(*out)
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LabelingJobParameters.
func (in *LabelingJobParameters) DeepCopy() *LabelingJobParameters {
	if in == nil {
		return nil
	}
	out := new(LabelingJobParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LabelingJobResourceConfig) DeepCopyInto(out *LabelingJobResourceConfig) {
	*out = *in
	if in.VolumeKMSKeyID != nil {
		in, out := &in.VolumeKMSKeyID, &out.VolumeKMSKeyID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LabelingJobResourceConfig.
func (in *LabelingJobResourceConfig) DeepCopy() *LabelingJobResourceConfig {
	if in == nil {
		return nil
	}
	out := new(LabelingJobResourceConfig)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LabelingJobS3DataSource) DeepCopyInto(out *LabelingJobS3DataSource) {
	*out = *in
	if in.ManifestS3URI != nil {
		in, out := &in.ManifestS3URI, &out.ManifestS3URI
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LabelingJobS3DataSource.
func (in *LabelingJobS3DataSource) DeepCopy() *LabelingJobS3DataSource {
	if in == nil {
		return nil
	}
	out := new(LabelingJobS3DataSource)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LabelingJobSnsDataSource) DeepCopyInto(out *LabelingJobSnsDataSource) {
	*out = *in
	if in.SnsTopicARN != nil {
		in, out := &in.SnsTopicARN, &out.SnsTopicARN
		*out = new(string)
		**out = **in
	}
	if in.SnsTopicARNRef != nil {
		in, out := &in.SnsTopicARNRef, &out.SnsTopicARNRef
		*out = new(v1.Reference)
		**out = **in
	}
	if in.SnsTopicARNSelector != nil {
		in, out := &in.SnsTopicARNSelector, &out.SnsTopicARNSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LabelingJobSnsDataSource.
func (in *LabelingJobSnsDataSource) DeepCopy() *LabelingJobSnsDataSource {
	if in == nil {
		return nil
	}
	out := new(LabelingJobSnsDataSource)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LabelingJobSpec) DeepCopyInto(out *LabelingJobSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LabelingJobSpec.
func (in *LabelingJobSpec) DeepCopy() *LabelingJobSpec {
	if in == nil {
		return nil
	}
	out := new(LabelingJobSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LabelingJobStatus) DeepCopyInto(out *LabelingJobStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LabelingJobStatus.
func (in *LabelingJobStatus) DeepCopy() *LabelingJobStatus {
	if in == nil {
		return nil
	}
	out := new(LabelingJobStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LabelingJobStoppingConditions) DeepCopyInto(out *LabelingJobStoppingConditions) {
	*out = *in
	if in.MaxHumanLabeledObjectCount != nil {
		in, out := &in.MaxHumanLabeledObjectCount, &out.MaxHumanLabeledObjectCount
		*out = new(int64)
		**out = **in
	}
	if in.MaxPercentageOfInputDatasetLabeled != nil {
		in, out := &in.MaxPercentageOfInputDatasetLabeled, &out.MaxPercentageOfInputDatasetLabeled
		*out = new(int64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LabelingJobStoppingConditions.
func (in *LabelingJobStoppingConditions) DeepCopy() *LabelingJobStoppingConditions {
	if in == nil {
		return nil
	}
	out := new(LabelingJobStoppingConditions)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LabelingJobSummary) DeepCopyInto(out *LabelingJobSummary) {
	*out = *in
	if in.AnnotationConsolidationLambdaARN != nil {
		in, out := &in.AnnotationConsolidationLambdaARN, &out.AnnotationConsolidationLambdaARN
		*out = new(string)
		**out = **in
	}
	if in.CreationTime != nil {
		in, out := &in.CreationTime, &out.CreationTime
		*out = (*in).DeepCopy()
	}
	if in.FailureReason != nil {
		in, out := &in.FailureReason, &out.FailureReason
		*out = new(string)
		**out = **in
	}
	if in.InputConfig != nil {
		in, out := &in.InputConfig, &out.InputConfig
		*out = new(LabelingJobInputConfig)
		(*in).DeepCopyInto(*out)
	}
	if in.LabelCounters != nil {
		in, out := &in.LabelCounters, &out.LabelCounters
		*out = new(LabelCounters)
		(*in).DeepCopyInto(*out)
	}
	if in.LabelingJobARN != nil {
		in, out := &in.LabelingJobARN, &out.LabelingJobARN
		*out = new(string)
		**out = **in
	}
	if in.LabelingJobName != nil {
		in, out := &in.LabelingJobName, &out.LabelingJobName
		*out = new(string)
		**out = **in
	}
	if in.LabelingJobOutput != nil {
		in, out := &in.LabelingJobOutput, &out.LabelingJobOutput
		*out = new(LabelingJobOutput)
		(*in).DeepCopyInto(*out)
	}
	if in.LabelingJobStatus != nil {
		in, out := &in.LabelingJobStatus, &out.LabelingJobStatus
		*out = new(string)
		**out = **in
	}
	if in.LastModifiedTime != nil {
		in, out := &in.LastModifiedTime, &out.LastModifiedTime
		*out = (*in).DeepCopy()
	}
	if in.PreHumanTaskLambdaARN != nil {
		in, out := &in.PreHumanTaskLambdaARN, &out.PreHumanTaskLambdaARN
		*out = new(string)
		**out = **in
	}
	if in.WorkteamARN != nil {
		in, out := &in.WorkteamARN, &out.WorkteamARN
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LabelingJobSummary.
func (in *LabelingJobSummary) DeepCopy() *LabelingJobSummary {
	if in == nil {
		return nil
	}
	out := new(LabelingJobSummary)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MemberDefinition) DeepCopyInto(out *MemberDefinition) {
	*out = *in
	if in.CognitoMemberDefinition != nil {
		in, out := &in.CognitoMemberDefinition, &out.CognitoMemberDefinition
		*out = new(CognitoMemberDefinition)
		(*in).DeepCopyInto(*out)
	}
	if in.OidcMemberDefinition != nil {
		in, out := &in.OidcMemberDefinition, &out.OidcMemberDefinition
		*out = new(OidcMemberDefinition)
		(*in).DeepCopyInto(*out)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MemberDefinition.
func (in *MemberDefinition) DeepCopy() *MemberDefinition {
	if in == nil {
		return nil
	}
	out := new(MemberDefinition)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MetricData) DeepCopyInto(out *MetricData) {
	*out = *in
	if in.MetricName != nil {
		in, out := &in.MetricName, &out.MetricName
		*out = new(string)
		**out = **in
	}
	if in.Timestamp != nil {
		in, out := &in.Timestamp, &out.Timestamp
		*out = (*in).DeepCopy()
	}
	if in.Value != nil {
		in, out := &in.Value, &out.Value
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MetricData.
func (in *MetricData) DeepCopy() *MetricData {
	if in == nil {
		return nil
	}
	out := new(MetricData)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MetricDefinition) DeepCopyInto(out *MetricDefinition) {
	*out = *in
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Regex != nil {
		in, out := &in.Regex, &out.Regex
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MetricDefinition.
func (in *MetricDefinition) DeepCopy() *MetricDefinition {
	if in == nil {
		return nil
	}
	out := new(MetricDefinition)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Model) DeepCopyInto(out *Model) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Model.
func (in *Model) DeepCopy() *Model {
	if in == nil {
		return nil
	}
	out := new(Model)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *Model) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ModelArtifacts) DeepCopyInto(out *ModelArtifacts) {
	*out = *in
	if in.S3ModelArtifacts != nil {
		in, out := &in.S3ModelArtifacts, &out.S3ModelArtifacts
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ModelArtifacts.
func (in *ModelArtifacts) DeepCopy() *ModelArtifacts {
	if in == nil {
		return nil
	}
	out := new(ModelArtifacts)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ModelClientConfig) DeepCopyInto(out *ModelClientConfig) {
	*out = *in
	if in.InvocationsMaxRetries != nil {
		in, out := &in.InvocationsMaxRetries, &out.InvocationsMaxRetries
		*out = new(int64)
		**out = **in
	}
	if in.InvocationsTimeoutInSeconds != nil {
		in, out := &in.InvocationsTimeoutInSeconds, &out.InvocationsTimeoutInSeconds
		*out = new(int64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ModelClientConfig.
func (in *ModelClientConfig) DeepCopy() *ModelClientConfig {
	if in == nil {
		return nil
	}
	out := new(ModelClientConfig)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ModelList) DeepCopyInto(out *ModelList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]Model, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ModelList.
func (in *ModelList) DeepCopy() *ModelList {
	if in == nil {
		return nil
	}
	out := new(ModelList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *ModelList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ModelObservation) DeepCopyInto(out *ModelObservation) {
	*out = *in
	if in.ModelARN != nil {
		in, out := &in.ModelARN, &out.ModelARN
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ModelObservation.
func (in *ModelObservation) DeepCopy() *ModelObservation {
	if in == nil {
		return nil
	}
	out := new(ModelObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ModelPackage) DeepCopyInto(out *ModelPackage) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ModelPackage.
func (in *ModelPackage) DeepCopy() *ModelPackage {
	if in == nil {
		return nil
	}
	out := new(ModelPackage)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *ModelPackage) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ModelPackageContainerDefinition) DeepCopyInto(out *ModelPackageContainerDefinition) {
	*out = *in
	if in.ContainerHostname != nil {
		in, out := &in.ContainerHostname, &out.ContainerHostname
		*out = new(string)
		**out = **in
	}
	if in.Image != nil {
		in, out := &in.Image, &out.Image
		*out = new(string)
		**out = **in
	}
	if in.ImageDigest != nil {
		in, out := &in.ImageDigest, &out.ImageDigest
		*out = new(string)
		**out = **in
	}
	if in.ModelDataURL != nil {
		in, out := &in.ModelDataURL, &out.ModelDataURL
		*out = new(string)
		**out = **in
	}
	if in.ProductID != nil {
		in, out := &in.ProductID, &out.ProductID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ModelPackageContainerDefinition.
func (in *ModelPackageContainerDefinition) DeepCopy() *ModelPackageContainerDefinition {
	if in == nil {
		return nil
	}
	out := new(ModelPackageContainerDefinition)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ModelPackageList) DeepCopyInto(out *ModelPackageList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]ModelPackage, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ModelPackageList.
func (in *ModelPackageList) DeepCopy() *ModelPackageList {
	if in == nil {
		return nil
	}
	out := new(ModelPackageList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *ModelPackageList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ModelPackageObservation) DeepCopyInto(out *ModelPackageObservation) {
	*out = *in
	if in.ModelPackageARN != nil {
		in, out := &in.ModelPackageARN, &out.ModelPackageARN
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ModelPackageObservation.
func (in *ModelPackageObservation) DeepCopy() *ModelPackageObservation {
	if in == nil {
		return nil
	}
	out := new(ModelPackageObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ModelPackageParameters) DeepCopyInto(out *ModelPackageParameters) {
	*out = *in
	if in.CertifyForMarketplace != nil {
		in, out := &in.CertifyForMarketplace, &out.CertifyForMarketplace
		*out = new(bool)
		**out = **in
	}
	if in.InferenceSpecification != nil {
		in, out := &in.InferenceSpecification, &out.InferenceSpecification
		*out = new(InferenceSpecification)
		(*in).DeepCopyInto(*out)
	}
	if in.ModelPackageDescription != nil {
		in, out := &in.ModelPackageDescription, &out.ModelPackageDescription
		*out = new(string)
		**out = **in
	}
	if in.ModelPackageName != nil {
		in, out := &in.ModelPackageName, &out.ModelPackageName
		*out = new(string)
		**out = **in
	}
	if in.SourceAlgorithmSpecification != nil {
		in, out := &in.SourceAlgorithmSpecification, &out.SourceAlgorithmSpecification
		*out = new(SourceAlgorithmSpecification)
		(*in).DeepCopyInto(*out)
	}
	if in.ValidationSpecification != nil {
		in, out := &in.ValidationSpecification, &out.ValidationSpecification
		*out = new(ModelPackageValidationSpecification)
		(*in).DeepCopyInto(*out)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ModelPackageParameters.
func (in *ModelPackageParameters) DeepCopy() *ModelPackageParameters {
	if in == nil {
		return nil
	}
	out := new(ModelPackageParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ModelPackageSpec) DeepCopyInto(out *ModelPackageSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ModelPackageSpec.
func (in *ModelPackageSpec) DeepCopy() *ModelPackageSpec {
	if in == nil {
		return nil
	}
	out := new(ModelPackageSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ModelPackageStatus) DeepCopyInto(out *ModelPackageStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ModelPackageStatus.
func (in *ModelPackageStatus) DeepCopy() *ModelPackageStatus {
	if in == nil {
		return nil
	}
	out := new(ModelPackageStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ModelPackageStatusDetails) DeepCopyInto(out *ModelPackageStatusDetails) {
	*out = *in
	if in.ImageScanStatuses != nil {
		in, out := &in.ImageScanStatuses, &out.ImageScanStatuses
		*out = make([]*ModelPackageStatusItem, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(ModelPackageStatusItem)
				(*in).DeepCopyInto(*out)
			}
		}
	}
	if in.ValidationStatuses != nil {
		in, out := &in.ValidationStatuses, &out.ValidationStatuses
		*out = make([]*ModelPackageStatusItem, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(ModelPackageStatusItem)
				(*in).DeepCopyInto(*out)
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ModelPackageStatusDetails.
func (in *ModelPackageStatusDetails) DeepCopy() *ModelPackageStatusDetails {
	if in == nil {
		return nil
	}
	out := new(ModelPackageStatusDetails)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ModelPackageStatusItem) DeepCopyInto(out *ModelPackageStatusItem) {
	*out = *in
	if in.FailureReason != nil {
		in, out := &in.FailureReason, &out.FailureReason
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Status != nil {
		in, out := &in.Status, &out.Status
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ModelPackageStatusItem.
func (in *ModelPackageStatusItem) DeepCopy() *ModelPackageStatusItem {
	if in == nil {
		return nil
	}
	out := new(ModelPackageStatusItem)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ModelPackageSummary) DeepCopyInto(out *ModelPackageSummary) {
	*out = *in
	if in.CreationTime != nil {
		in, out := &in.CreationTime, &out.CreationTime
		*out = (*in).DeepCopy()
	}
	if in.ModelPackageARN != nil {
		in, out := &in.ModelPackageARN, &out.ModelPackageARN
		*out = new(string)
		**out = **in
	}
	if in.ModelPackageDescription != nil {
		in, out := &in.ModelPackageDescription, &out.ModelPackageDescription
		*out = new(string)
		**out = **in
	}
	if in.ModelPackageName != nil {
		in, out := &in.ModelPackageName, &out.ModelPackageName
		*out = new(string)
		**out = **in
	}
	if in.ModelPackageStatus != nil {
		in, out := &in.ModelPackageStatus, &out.ModelPackageStatus
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ModelPackageSummary.
func (in *ModelPackageSummary) DeepCopy() *ModelPackageSummary {
	if in == nil {
		return nil
	}
	out := new(ModelPackageSummary)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ModelPackageValidationProfile) DeepCopyInto(out *ModelPackageValidationProfile) {
	*out = *in
	if in.ProfileName != nil {
		in, out := &in.ProfileName, &out.ProfileName
		*out = new(string)
		**out = **in
	}
	if in.TransformJobDefinition != nil {
		in, out := &in.TransformJobDefinition, &out.TransformJobDefinition
		*out = new(TransformJobDefinition)
		(*in).DeepCopyInto(*out)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ModelPackageValidationProfile.
func (in *ModelPackageValidationProfile) DeepCopy() *ModelPackageValidationProfile {
	if in == nil {
		return nil
	}
	out := new(ModelPackageValidationProfile)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ModelPackageValidationSpecification) DeepCopyInto(out *ModelPackageValidationSpecification) {
	*out = *in
	if in.ValidationProfiles != nil {
		in, out := &in.ValidationProfiles, &out.ValidationProfiles
		*out = make([]*ModelPackageValidationProfile, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(ModelPackageValidationProfile)
				(*in).DeepCopyInto(*out)
			}
		}
	}
	if in.ValidationRole != nil {
		in, out := &in.ValidationRole, &out.ValidationRole
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ModelPackageValidationSpecification.
func (in *ModelPackageValidationSpecification) DeepCopy() *ModelPackageValidationSpecification {
	if in == nil {
		return nil
	}
	out := new(ModelPackageValidationSpecification)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ModelParameters) DeepCopyInto(out *ModelParameters) {
	*out = *in
	if in.Containers != nil {
		in, out := &in.Containers, &out.Containers
		*out = make([]*ContainerDefinition, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(ContainerDefinition)
				(*in).DeepCopyInto(*out)
			}
		}
	}
	if in.EnableNetworkIsolation != nil {
		in, out := &in.EnableNetworkIsolation, &out.EnableNetworkIsolation
		*out = new(bool)
		**out = **in
	}
	if in.ExecutionRoleARN != nil {
		in, out := &in.ExecutionRoleARN, &out.ExecutionRoleARN
		*out = new(string)
		**out = **in
	}
	if in.ExecutionRoleARNRef != nil {
		in, out := &in.ExecutionRoleARNRef, &out.ExecutionRoleARNRef
		*out = new(v1.Reference)
		**out = **in
	}
	if in.ExecutionRoleARNSelector != nil {
		in, out := &in.ExecutionRoleARNSelector, &out.ExecutionRoleARNSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.ModelName != nil {
		in, out := &in.ModelName, &out.ModelName
		*out = new(string)
		**out = **in
	}
	if in.PrimaryContainer != nil {
		in, out := &in.PrimaryContainer, &out.PrimaryContainer
		*out = new(ContainerDefinition)
		(*in).DeepCopyInto(*out)
	}
	if in.Tags != nil {
		in, out := &in.Tags, &out.Tags
		*out = make([]*Tag, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(Tag)
				(*in).DeepCopyInto(*out)
			}
		}
	}
	if in.VPCConfig != nil {
		in, out := &in.VPCConfig, &out.VPCConfig
		*out = new(VPCConfig)
		(*in).DeepCopyInto(*out)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ModelParameters.
func (in *ModelParameters) DeepCopy() *ModelParameters {
	if in == nil {
		return nil
	}
	out := new(ModelParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ModelSpec) DeepCopyInto(out *ModelSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ModelSpec.
func (in *ModelSpec) DeepCopy() *ModelSpec {
	if in == nil {
		return nil
	}
	out := new(ModelSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ModelStatus) DeepCopyInto(out *ModelStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ModelStatus.
func (in *ModelStatus) DeepCopy() *ModelStatus {
	if in == nil {
		return nil
	}
	out := new(ModelStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ModelSummary) DeepCopyInto(out *ModelSummary) {
	*out = *in
	if in.CreationTime != nil {
		in, out := &in.CreationTime, &out.CreationTime
		*out = (*in).DeepCopy()
	}
	if in.ModelARN != nil {
		in, out := &in.ModelARN, &out.ModelARN
		*out = new(string)
		**out = **in
	}
	if in.ModelName != nil {
		in, out := &in.ModelName, &out.ModelName
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ModelSummary.
func (in *ModelSummary) DeepCopy() *ModelSummary {
	if in == nil {
		return nil
	}
	out := new(ModelSummary)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MonitoringAppSpecification) DeepCopyInto(out *MonitoringAppSpecification) {
	*out = *in
	if in.ContainerArguments != nil {
		in, out := &in.ContainerArguments, &out.ContainerArguments
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.ContainerEntrypoint != nil {
		in, out := &in.ContainerEntrypoint, &out.ContainerEntrypoint
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.ImageURI != nil {
		in, out := &in.ImageURI, &out.ImageURI
		*out = new(string)
		**out = **in
	}
	if in.PostAnalyticsProcessorSourceURI != nil {
		in, out := &in.PostAnalyticsProcessorSourceURI, &out.PostAnalyticsProcessorSourceURI
		*out = new(string)
		**out = **in
	}
	if in.RecordPreprocessorSourceURI != nil {
		in, out := &in.RecordPreprocessorSourceURI, &out.RecordPreprocessorSourceURI
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MonitoringAppSpecification.
func (in *MonitoringAppSpecification) DeepCopy() *MonitoringAppSpecification {
	if in == nil {
		return nil
	}
	out := new(MonitoringAppSpecification)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MonitoringBaselineConfig) DeepCopyInto(out *MonitoringBaselineConfig) {
	*out = *in
	if in.ConstraintsResource != nil {
		in, out := &in.ConstraintsResource, &out.ConstraintsResource
		*out = new(MonitoringConstraintsResource)
		(*in).DeepCopyInto(*out)
	}
	if in.StatisticsResource != nil {
		in, out := &in.StatisticsResource, &out.StatisticsResource
		*out = new(MonitoringStatisticsResource)
		(*in).DeepCopyInto(*out)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MonitoringBaselineConfig.
func (in *MonitoringBaselineConfig) DeepCopy() *MonitoringBaselineConfig {
	if in == nil {
		return nil
	}
	out := new(MonitoringBaselineConfig)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MonitoringClusterConfig) DeepCopyInto(out *MonitoringClusterConfig) {
	*out = *in
	if in.InstanceCount != nil {
		in, out := &in.InstanceCount, &out.InstanceCount
		*out = new(int64)
		**out = **in
	}
	if in.InstanceType != nil {
		in, out := &in.InstanceType, &out.InstanceType
		*out = new(string)
		**out = **in
	}
	if in.VolumeKMSKeyID != nil {
		in, out := &in.VolumeKMSKeyID, &out.VolumeKMSKeyID
		*out = new(string)
		**out = **in
	}
	if in.VolumeSizeInGB != nil {
		in, out := &in.VolumeSizeInGB, &out.VolumeSizeInGB
		*out = new(int64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MonitoringClusterConfig.
func (in *MonitoringClusterConfig) DeepCopy() *MonitoringClusterConfig {
	if in == nil {
		return nil
	}
	out := new(MonitoringClusterConfig)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MonitoringConstraintsResource) DeepCopyInto(out *MonitoringConstraintsResource) {
	*out = *in
	if in.S3URI != nil {
		in, out := &in.S3URI, &out.S3URI
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MonitoringConstraintsResource.
func (in *MonitoringConstraintsResource) DeepCopy() *MonitoringConstraintsResource {
	if in == nil {
		return nil
	}
	out := new(MonitoringConstraintsResource)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MonitoringExecutionSummary) DeepCopyInto(out *MonitoringExecutionSummary) {
	*out = *in
	if in.CreationTime != nil {
		in, out := &in.CreationTime, &out.CreationTime
		*out = (*in).DeepCopy()
	}
	if in.EndpointName != nil {
		in, out := &in.EndpointName, &out.EndpointName
		*out = new(string)
		**out = **in
	}
	if in.FailureReason != nil {
		in, out := &in.FailureReason, &out.FailureReason
		*out = new(string)
		**out = **in
	}
	if in.LastModifiedTime != nil {
		in, out := &in.LastModifiedTime, &out.LastModifiedTime
		*out = (*in).DeepCopy()
	}
	if in.MonitoringExecutionStatus != nil {
		in, out := &in.MonitoringExecutionStatus, &out.MonitoringExecutionStatus
		*out = new(string)
		**out = **in
	}
	if in.MonitoringScheduleName != nil {
		in, out := &in.MonitoringScheduleName, &out.MonitoringScheduleName
		*out = new(string)
		**out = **in
	}
	if in.ProcessingJobARN != nil {
		in, out := &in.ProcessingJobARN, &out.ProcessingJobARN
		*out = new(string)
		**out = **in
	}
	if in.ScheduledTime != nil {
		in, out := &in.ScheduledTime, &out.ScheduledTime
		*out = (*in).DeepCopy()
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MonitoringExecutionSummary.
func (in *MonitoringExecutionSummary) DeepCopy() *MonitoringExecutionSummary {
	if in == nil {
		return nil
	}
	out := new(MonitoringExecutionSummary)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MonitoringInput) DeepCopyInto(out *MonitoringInput) {
	*out = *in
	if in.EndpointInput != nil {
		in, out := &in.EndpointInput, &out.EndpointInput
		*out = new(EndpointInput)
		(*in).DeepCopyInto(*out)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MonitoringInput.
func (in *MonitoringInput) DeepCopy() *MonitoringInput {
	if in == nil {
		return nil
	}
	out := new(MonitoringInput)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MonitoringJobDefinition) DeepCopyInto(out *MonitoringJobDefinition) {
	*out = *in
	if in.BaselineConfig != nil {
		in, out := &in.BaselineConfig, &out.BaselineConfig
		*out = new(MonitoringBaselineConfig)
		(*in).DeepCopyInto(*out)
	}
	if in.Environment != nil {
		in, out := &in.Environment, &out.Environment
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				in, out := &val, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.MonitoringAppSpecification != nil {
		in, out := &in.MonitoringAppSpecification, &out.MonitoringAppSpecification
		*out = new(MonitoringAppSpecification)
		(*in).DeepCopyInto(*out)
	}
	if in.MonitoringInputs != nil {
		in, out := &in.MonitoringInputs, &out.MonitoringInputs
		*out = make([]*MonitoringInput, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(MonitoringInput)
				(*in).DeepCopyInto(*out)
			}
		}
	}
	if in.MonitoringOutputConfig != nil {
		in, out := &in.MonitoringOutputConfig, &out.MonitoringOutputConfig
		*out = new(MonitoringOutputConfig)
		(*in).DeepCopyInto(*out)
	}
	if in.MonitoringResources != nil {
		in, out := &in.MonitoringResources, &out.MonitoringResources
		*out = new(MonitoringResources)
		(*in).DeepCopyInto(*out)
	}
	if in.NetworkConfig != nil {
		in, out := &in.NetworkConfig, &out.NetworkConfig
		*out = new(NetworkConfig)
		(*in).DeepCopyInto(*out)
	}
	if in.RoleARN != nil {
		in, out := &in.RoleARN, &out.RoleARN
		*out = new(string)
		**out = **in
	}
	if in.RoleARNRef != nil {
		in, out := &in.RoleARNRef, &out.RoleARNRef
		*out = new(v1.Reference)
		**out = **in
	}
	if in.RoleARNSelector != nil {
		in, out := &in.RoleARNSelector, &out.RoleARNSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.StoppingCondition != nil {
		in, out := &in.StoppingCondition, &out.StoppingCondition
		*out = new(MonitoringStoppingCondition)
		(*in).DeepCopyInto(*out)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MonitoringJobDefinition.
func (in *MonitoringJobDefinition) DeepCopy() *MonitoringJobDefinition {
	if in == nil {
		return nil
	}
	out := new(MonitoringJobDefinition)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MonitoringOutput) DeepCopyInto(out *MonitoringOutput) {
	*out = *in
	if in.S3Output != nil {
		in, out := &in.S3Output, &out.S3Output
		*out = new(MonitoringS3Output)
		(*in).DeepCopyInto(*out)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MonitoringOutput.
func (in *MonitoringOutput) DeepCopy() *MonitoringOutput {
	if in == nil {
		return nil
	}
	out := new(MonitoringOutput)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MonitoringOutputConfig) DeepCopyInto(out *MonitoringOutputConfig) {
	*out = *in
	if in.KMSKeyID != nil {
		in, out := &in.KMSKeyID, &out.KMSKeyID
		*out = new(string)
		**out = **in
	}
	if in.MonitoringOutputs != nil {
		in, out := &in.MonitoringOutputs, &out.MonitoringOutputs
		*out = make([]*MonitoringOutput, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(MonitoringOutput)
				(*in).DeepCopyInto(*out)
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MonitoringOutputConfig.
func (in *MonitoringOutputConfig) DeepCopy() *MonitoringOutputConfig {
	if in == nil {
		return nil
	}
	out := new(MonitoringOutputConfig)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MonitoringResources) DeepCopyInto(out *MonitoringResources) {
	*out = *in
	if in.ClusterConfig != nil {
		in, out := &in.ClusterConfig, &out.ClusterConfig
		*out = new(MonitoringClusterConfig)
		(*in).DeepCopyInto(*out)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MonitoringResources.
func (in *MonitoringResources) DeepCopy() *MonitoringResources {
	if in == nil {
		return nil
	}
	out := new(MonitoringResources)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MonitoringS3Output) DeepCopyInto(out *MonitoringS3Output) {
	*out = *in
	if in.LocalPath != nil {
		in, out := &in.LocalPath, &out.LocalPath
		*out = new(string)
		**out = **in
	}
	if in.S3UploadMode != nil {
		in, out := &in.S3UploadMode, &out.S3UploadMode
		*out = new(string)
		**out = **in
	}
	if in.S3URI != nil {
		in, out := &in.S3URI, &out.S3URI
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MonitoringS3Output.
func (in *MonitoringS3Output) DeepCopy() *MonitoringS3Output {
	if in == nil {
		return nil
	}
	out := new(MonitoringS3Output)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MonitoringSchedule) DeepCopyInto(out *MonitoringSchedule) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MonitoringSchedule.
func (in *MonitoringSchedule) DeepCopy() *MonitoringSchedule {
	if in == nil {
		return nil
	}
	out := new(MonitoringSchedule)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *MonitoringSchedule) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MonitoringScheduleConfig) DeepCopyInto(out *MonitoringScheduleConfig) {
	*out = *in
	if in.MonitoringJobDefinition != nil {
		in, out := &in.MonitoringJobDefinition, &out.MonitoringJobDefinition
		*out = new(MonitoringJobDefinition)
		(*in).DeepCopyInto(*out)
	}
	if in.ScheduleConfig != nil {
		in, out := &in.ScheduleConfig, &out.ScheduleConfig
		*out = new(ScheduleConfig)
		(*in).DeepCopyInto(*out)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MonitoringScheduleConfig.
func (in *MonitoringScheduleConfig) DeepCopy() *MonitoringScheduleConfig {
	if in == nil {
		return nil
	}
	out := new(MonitoringScheduleConfig)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MonitoringScheduleList) DeepCopyInto(out *MonitoringScheduleList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]MonitoringSchedule, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MonitoringScheduleList.
func (in *MonitoringScheduleList) DeepCopy() *MonitoringScheduleList {
	if in == nil {
		return nil
	}
	out := new(MonitoringScheduleList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *MonitoringScheduleList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MonitoringScheduleObservation) DeepCopyInto(out *MonitoringScheduleObservation) {
	*out = *in
	if in.MonitoringScheduleARN != nil {
		in, out := &in.MonitoringScheduleARN, &out.MonitoringScheduleARN
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MonitoringScheduleObservation.
func (in *MonitoringScheduleObservation) DeepCopy() *MonitoringScheduleObservation {
	if in == nil {
		return nil
	}
	out := new(MonitoringScheduleObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MonitoringScheduleParameters) DeepCopyInto(out *MonitoringScheduleParameters) {
	*out = *in
	if in.MonitoringScheduleConfig != nil {
		in, out := &in.MonitoringScheduleConfig, &out.MonitoringScheduleConfig
		*out = new(MonitoringScheduleConfig)
		(*in).DeepCopyInto(*out)
	}
	if in.MonitoringScheduleName != nil {
		in, out := &in.MonitoringScheduleName, &out.MonitoringScheduleName
		*out = new(string)
		**out = **in
	}
	if in.Tags != nil {
		in, out := &in.Tags, &out.Tags
		*out = make([]*Tag, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(Tag)
				(*in).DeepCopyInto(*out)
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MonitoringScheduleParameters.
func (in *MonitoringScheduleParameters) DeepCopy() *MonitoringScheduleParameters {
	if in == nil {
		return nil
	}
	out := new(MonitoringScheduleParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MonitoringScheduleSpec) DeepCopyInto(out *MonitoringScheduleSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MonitoringScheduleSpec.
func (in *MonitoringScheduleSpec) DeepCopy() *MonitoringScheduleSpec {
	if in == nil {
		return nil
	}
	out := new(MonitoringScheduleSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MonitoringScheduleStatus) DeepCopyInto(out *MonitoringScheduleStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MonitoringScheduleStatus.
func (in *MonitoringScheduleStatus) DeepCopy() *MonitoringScheduleStatus {
	if in == nil {
		return nil
	}
	out := new(MonitoringScheduleStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MonitoringScheduleSummary) DeepCopyInto(out *MonitoringScheduleSummary) {
	*out = *in
	if in.CreationTime != nil {
		in, out := &in.CreationTime, &out.CreationTime
		*out = (*in).DeepCopy()
	}
	if in.EndpointName != nil {
		in, out := &in.EndpointName, &out.EndpointName
		*out = new(string)
		**out = **in
	}
	if in.LastModifiedTime != nil {
		in, out := &in.LastModifiedTime, &out.LastModifiedTime
		*out = (*in).DeepCopy()
	}
	if in.MonitoringScheduleARN != nil {
		in, out := &in.MonitoringScheduleARN, &out.MonitoringScheduleARN
		*out = new(string)
		**out = **in
	}
	if in.MonitoringScheduleName != nil {
		in, out := &in.MonitoringScheduleName, &out.MonitoringScheduleName
		*out = new(string)
		**out = **in
	}
	if in.MonitoringScheduleStatus != nil {
		in, out := &in.MonitoringScheduleStatus, &out.MonitoringScheduleStatus
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MonitoringScheduleSummary.
func (in *MonitoringScheduleSummary) DeepCopy() *MonitoringScheduleSummary {
	if in == nil {
		return nil
	}
	out := new(MonitoringScheduleSummary)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MonitoringStatisticsResource) DeepCopyInto(out *MonitoringStatisticsResource) {
	*out = *in
	if in.S3URI != nil {
		in, out := &in.S3URI, &out.S3URI
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MonitoringStatisticsResource.
func (in *MonitoringStatisticsResource) DeepCopy() *MonitoringStatisticsResource {
	if in == nil {
		return nil
	}
	out := new(MonitoringStatisticsResource)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MonitoringStoppingCondition) DeepCopyInto(out *MonitoringStoppingCondition) {
	*out = *in
	if in.MaxRuntimeInSeconds != nil {
		in, out := &in.MaxRuntimeInSeconds, &out.MaxRuntimeInSeconds
		*out = new(int64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MonitoringStoppingCondition.
func (in *MonitoringStoppingCondition) DeepCopy() *MonitoringStoppingCondition {
	if in == nil {
		return nil
	}
	out := new(MonitoringStoppingCondition)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NetworkConfig) DeepCopyInto(out *NetworkConfig) {
	*out = *in
	if in.EnableInterContainerTrafficEncryption != nil {
		in, out := &in.EnableInterContainerTrafficEncryption, &out.EnableInterContainerTrafficEncryption
		*out = new(bool)
		**out = **in
	}
	if in.EnableNetworkIsolation != nil {
		in, out := &in.EnableNetworkIsolation, &out.EnableNetworkIsolation
		*out = new(bool)
		**out = **in
	}
	if in.VPCConfig != nil {
		in, out := &in.VPCConfig, &out.VPCConfig
		*out = new(VPCConfig)
		(*in).DeepCopyInto(*out)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NetworkConfig.
func (in *NetworkConfig) DeepCopy() *NetworkConfig {
	if in == nil {
		return nil
	}
	out := new(NetworkConfig)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NotebookInstance) DeepCopyInto(out *NotebookInstance) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NotebookInstance.
func (in *NotebookInstance) DeepCopy() *NotebookInstance {
	if in == nil {
		return nil
	}
	out := new(NotebookInstance)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *NotebookInstance) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NotebookInstanceLifecycleConfig) DeepCopyInto(out *NotebookInstanceLifecycleConfig) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NotebookInstanceLifecycleConfig.
func (in *NotebookInstanceLifecycleConfig) DeepCopy() *NotebookInstanceLifecycleConfig {
	if in == nil {
		return nil
	}
	out := new(NotebookInstanceLifecycleConfig)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *NotebookInstanceLifecycleConfig) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NotebookInstanceLifecycleConfigList) DeepCopyInto(out *NotebookInstanceLifecycleConfigList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]NotebookInstanceLifecycleConfig, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NotebookInstanceLifecycleConfigList.
func (in *NotebookInstanceLifecycleConfigList) DeepCopy() *NotebookInstanceLifecycleConfigList {
	if in == nil {
		return nil
	}
	out := new(NotebookInstanceLifecycleConfigList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *NotebookInstanceLifecycleConfigList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NotebookInstanceLifecycleConfigObservation) DeepCopyInto(out *NotebookInstanceLifecycleConfigObservation) {
	*out = *in
	if in.NotebookInstanceLifecycleConfigARN != nil {
		in, out := &in.NotebookInstanceLifecycleConfigARN, &out.NotebookInstanceLifecycleConfigARN
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NotebookInstanceLifecycleConfigObservation.
func (in *NotebookInstanceLifecycleConfigObservation) DeepCopy() *NotebookInstanceLifecycleConfigObservation {
	if in == nil {
		return nil
	}
	out := new(NotebookInstanceLifecycleConfigObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NotebookInstanceLifecycleConfigParameters) DeepCopyInto(out *NotebookInstanceLifecycleConfigParameters) {
	*out = *in
	if in.NotebookInstanceLifecycleConfigName != nil {
		in, out := &in.NotebookInstanceLifecycleConfigName, &out.NotebookInstanceLifecycleConfigName
		*out = new(string)
		**out = **in
	}
	if in.OnCreate != nil {
		in, out := &in.OnCreate, &out.OnCreate
		*out = make([]*NotebookInstanceLifecycleHook, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(NotebookInstanceLifecycleHook)
				(*in).DeepCopyInto(*out)
			}
		}
	}
	if in.OnStart != nil {
		in, out := &in.OnStart, &out.OnStart
		*out = make([]*NotebookInstanceLifecycleHook, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(NotebookInstanceLifecycleHook)
				(*in).DeepCopyInto(*out)
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NotebookInstanceLifecycleConfigParameters.
func (in *NotebookInstanceLifecycleConfigParameters) DeepCopy() *NotebookInstanceLifecycleConfigParameters {
	if in == nil {
		return nil
	}
	out := new(NotebookInstanceLifecycleConfigParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NotebookInstanceLifecycleConfigSpec) DeepCopyInto(out *NotebookInstanceLifecycleConfigSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NotebookInstanceLifecycleConfigSpec.
func (in *NotebookInstanceLifecycleConfigSpec) DeepCopy() *NotebookInstanceLifecycleConfigSpec {
	if in == nil {
		return nil
	}
	out := new(NotebookInstanceLifecycleConfigSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NotebookInstanceLifecycleConfigStatus) DeepCopyInto(out *NotebookInstanceLifecycleConfigStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NotebookInstanceLifecycleConfigStatus.
func (in *NotebookInstanceLifecycleConfigStatus) DeepCopy() *NotebookInstanceLifecycleConfigStatus {
	if in == nil {
		return nil
	}
	out := new(NotebookInstanceLifecycleConfigStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NotebookInstanceLifecycleConfigSummary) DeepCopyInto(out *NotebookInstanceLifecycleConfigSummary) {
	*out = *in
	if in.CreationTime != nil {
		in, out := &in.CreationTime, &out.CreationTime
		*out = (*in).DeepCopy()
	}
	if in.LastModifiedTime != nil {
		in, out := &in.LastModifiedTime, &out.LastModifiedTime
		*out = (*in).DeepCopy()
	}
	if in.NotebookInstanceLifecycleConfigARN != nil {
		in, out := &in.NotebookInstanceLifecycleConfigARN, &out.NotebookInstanceLifecycleConfigARN
		*out = new(string)
		**out = **in
	}
	if in.NotebookInstanceLifecycleConfigName != nil {
		in, out := &in.NotebookInstanceLifecycleConfigName, &out.NotebookInstanceLifecycleConfigName
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NotebookInstanceLifecycleConfigSummary.
func (in *NotebookInstanceLifecycleConfigSummary) DeepCopy() *NotebookInstanceLifecycleConfigSummary {
	if in == nil {
		return nil
	}
	out := new(NotebookInstanceLifecycleConfigSummary)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NotebookInstanceLifecycleHook) DeepCopyInto(out *NotebookInstanceLifecycleHook) {
	*out = *in
	if in.Content != nil {
		in, out := &in.Content, &out.Content
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NotebookInstanceLifecycleHook.
func (in *NotebookInstanceLifecycleHook) DeepCopy() *NotebookInstanceLifecycleHook {
	if in == nil {
		return nil
	}
	out := new(NotebookInstanceLifecycleHook)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NotebookInstanceList) DeepCopyInto(out *NotebookInstanceList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]NotebookInstance, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NotebookInstanceList.
func (in *NotebookInstanceList) DeepCopy() *NotebookInstanceList {
	if in == nil {
		return nil
	}
	out := new(NotebookInstanceList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *NotebookInstanceList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NotebookInstanceObservation) DeepCopyInto(out *NotebookInstanceObservation) {
	*out = *in
	if in.NotebookInstanceARN != nil {
		in, out := &in.NotebookInstanceARN, &out.NotebookInstanceARN
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NotebookInstanceObservation.
func (in *NotebookInstanceObservation) DeepCopy() *NotebookInstanceObservation {
	if in == nil {
		return nil
	}
	out := new(NotebookInstanceObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NotebookInstanceParameters) DeepCopyInto(out *NotebookInstanceParameters) {
	*out = *in
	if in.AcceleratorTypes != nil {
		in, out := &in.AcceleratorTypes, &out.AcceleratorTypes
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.AdditionalCodeRepositories != nil {
		in, out := &in.AdditionalCodeRepositories, &out.AdditionalCodeRepositories
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.DefaultCodeRepository != nil {
		in, out := &in.DefaultCodeRepository, &out.DefaultCodeRepository
		*out = new(string)
		**out = **in
	}
	if in.DirectInternetAccess != nil {
		in, out := &in.DirectInternetAccess, &out.DirectInternetAccess
		*out = new(string)
		**out = **in
	}
	if in.InstanceType != nil {
		in, out := &in.InstanceType, &out.InstanceType
		*out = new(string)
		**out = **in
	}
	if in.KMSKeyID != nil {
		in, out := &in.KMSKeyID, &out.KMSKeyID
		*out = new(string)
		**out = **in
	}
	if in.LifecycleConfigName != nil {
		in, out := &in.LifecycleConfigName, &out.LifecycleConfigName
		*out = new(string)
		**out = **in
	}
	if in.LifecycleConfigNameRef != nil {
		in, out := &in.LifecycleConfigNameRef, &out.LifecycleConfigNameRef
		*out = new(v1.Reference)
		**out = **in
	}
	if in.LifecycleConfigNameSelector != nil {
		in, out := &in.LifecycleConfigNameSelector, &out.LifecycleConfigNameSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.NotebookInstanceName != nil {
		in, out := &in.NotebookInstanceName, &out.NotebookInstanceName
		*out = new(string)
		**out = **in
	}
	if in.RoleARN != nil {
		in, out := &in.RoleARN, &out.RoleARN
		*out = new(string)
		**out = **in
	}
	if in.RoleARNRef != nil {
		in, out := &in.RoleARNRef, &out.RoleARNRef
		*out = new(v1.Reference)
		**out = **in
	}
	if in.RoleARNSelector != nil {
		in, out := &in.RoleARNSelector, &out.RoleARNSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.RootAccess != nil {
		in, out := &in.RootAccess, &out.RootAccess
		*out = new(string)
		**out = **in
	}
	if in.SecurityGroupIDs != nil {
		in, out := &in.SecurityGroupIDs, &out.SecurityGroupIDs
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.SecurityGroupIDsRef != nil {
		in, out := &in.SecurityGroupIDsRef, &out.SecurityGroupIDsRef
		*out = make([]v1.Reference, len(*in))
		copy(*out, *in)
	}
	if in.SecurityGroupIDsSelector != nil {
		in, out := &in.SecurityGroupIDsSelector, &out.SecurityGroupIDsSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.SubnetID != nil {
		in, out := &in.SubnetID, &out.SubnetID
		*out = new(string)
		**out = **in
	}
	if in.SubnetIDRef != nil {
		in, out := &in.SubnetIDRef, &out.SubnetIDRef
		*out = new(v1.Reference)
		**out = **in
	}
	if in.SubnetIDSelector != nil {
		in, out := &in.SubnetIDSelector, &out.SubnetIDSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.Tags != nil {
		in, out := &in.Tags, &out.Tags
		*out = make([]*Tag, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(Tag)
				(*in).DeepCopyInto(*out)
			}
		}
	}
	if in.VolumeSizeInGB != nil {
		in, out := &in.VolumeSizeInGB, &out.VolumeSizeInGB
		*out = new(int64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NotebookInstanceParameters.
func (in *NotebookInstanceParameters) DeepCopy() *NotebookInstanceParameters {
	if in == nil {
		return nil
	}
	out := new(NotebookInstanceParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NotebookInstanceSpec) DeepCopyInto(out *NotebookInstanceSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NotebookInstanceSpec.
func (in *NotebookInstanceSpec) DeepCopy() *NotebookInstanceSpec {
	if in == nil {
		return nil
	}
	out := new(NotebookInstanceSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NotebookInstanceStatus) DeepCopyInto(out *NotebookInstanceStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NotebookInstanceStatus.
func (in *NotebookInstanceStatus) DeepCopy() *NotebookInstanceStatus {
	if in == nil {
		return nil
	}
	out := new(NotebookInstanceStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NotebookInstanceSummary) DeepCopyInto(out *NotebookInstanceSummary) {
	*out = *in
	if in.AdditionalCodeRepositories != nil {
		in, out := &in.AdditionalCodeRepositories, &out.AdditionalCodeRepositories
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.CreationTime != nil {
		in, out := &in.CreationTime, &out.CreationTime
		*out = (*in).DeepCopy()
	}
	if in.DefaultCodeRepository != nil {
		in, out := &in.DefaultCodeRepository, &out.DefaultCodeRepository
		*out = new(string)
		**out = **in
	}
	if in.InstanceType != nil {
		in, out := &in.InstanceType, &out.InstanceType
		*out = new(string)
		**out = **in
	}
	if in.LastModifiedTime != nil {
		in, out := &in.LastModifiedTime, &out.LastModifiedTime
		*out = (*in).DeepCopy()
	}
	if in.NotebookInstanceARN != nil {
		in, out := &in.NotebookInstanceARN, &out.NotebookInstanceARN
		*out = new(string)
		**out = **in
	}
	if in.NotebookInstanceLifecycleConfigName != nil {
		in, out := &in.NotebookInstanceLifecycleConfigName, &out.NotebookInstanceLifecycleConfigName
		*out = new(string)
		**out = **in
	}
	if in.NotebookInstanceName != nil {
		in, out := &in.NotebookInstanceName, &out.NotebookInstanceName
		*out = new(string)
		**out = **in
	}
	if in.NotebookInstanceStatus != nil {
		in, out := &in.NotebookInstanceStatus, &out.NotebookInstanceStatus
		*out = new(string)
		**out = **in
	}
	if in.URL != nil {
		in, out := &in.URL, &out.URL
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NotebookInstanceSummary.
func (in *NotebookInstanceSummary) DeepCopy() *NotebookInstanceSummary {
	if in == nil {
		return nil
	}
	out := new(NotebookInstanceSummary)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NotificationConfiguration) DeepCopyInto(out *NotificationConfiguration) {
	*out = *in
	if in.NotificationTopicARN != nil {
		in, out := &in.NotificationTopicARN, &out.NotificationTopicARN
		*out = new(string)
		**out = **in
	}
	if in.NotificationTopicARNRef != nil {
		in, out := &in.NotificationTopicARNRef, &out.NotificationTopicARNRef
		*out = new(v1.Reference)
		**out = **in
	}
	if in.NotificationTopicARNSelector != nil {
		in, out := &in.NotificationTopicARNSelector, &out.NotificationTopicARNSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NotificationConfiguration.
func (in *NotificationConfiguration) DeepCopy() *NotificationConfiguration {
	if in == nil {
		return nil
	}
	out := new(NotificationConfiguration)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ObjectiveStatusCounters) DeepCopyInto(out *ObjectiveStatusCounters) {
	*out = *in
	if in.Failed != nil {
		in, out := &in.Failed, &out.Failed
		*out = new(int64)
		**out = **in
	}
	if in.Pending != nil {
		in, out := &in.Pending, &out.Pending
		*out = new(int64)
		**out = **in
	}
	if in.Succeeded != nil {
		in, out := &in.Succeeded, &out.Succeeded
		*out = new(int64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ObjectiveStatusCounters.
func (in *ObjectiveStatusCounters) DeepCopy() *ObjectiveStatusCounters {
	if in == nil {
		return nil
	}
	out := new(ObjectiveStatusCounters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *OidcConfig) DeepCopyInto(out *OidcConfig) {
	*out = *in
	if in.AuthorizationEndpoint != nil {
		in, out := &in.AuthorizationEndpoint, &out.AuthorizationEndpoint
		*out = new(string)
		**out = **in
	}
	if in.ClientID != nil {
		in, out := &in.ClientID, &out.ClientID
		*out = new(string)
		**out = **in
	}
	if in.ClientSecret != nil {
		in, out := &in.ClientSecret, &out.ClientSecret
		*out = new(string)
		**out = **in
	}
	if in.Issuer != nil {
		in, out := &in.Issuer, &out.Issuer
		*out = new(string)
		**out = **in
	}
	if in.JwksURI != nil {
		in, out := &in.JwksURI, &out.JwksURI
		*out = new(string)
		**out = **in
	}
	if in.LogoutEndpoint != nil {
		in, out := &in.LogoutEndpoint, &out.LogoutEndpoint
		*out = new(string)
		**out = **in
	}
	if in.TokenEndpoint != nil {
		in, out := &in.TokenEndpoint, &out.TokenEndpoint
		*out = new(string)
		**out = **in
	}
	if in.UserInfoEndpoint != nil {
		in, out := &in.UserInfoEndpoint, &out.UserInfoEndpoint
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new OidcConfig.
func (in *OidcConfig) DeepCopy() *OidcConfig {
	if in == nil {
		return nil
	}
	out := new(OidcConfig)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *OidcConfigForResponse) DeepCopyInto(out *OidcConfigForResponse) {
	*out = *in
	if in.AuthorizationEndpoint != nil {
		in, out := &in.AuthorizationEndpoint, &out.AuthorizationEndpoint
		*out = new(string)
		**out = **in
	}
	if in.ClientID != nil {
		in, out := &in.ClientID, &out.ClientID
		*out = new(string)
		**out = **in
	}
	if in.Issuer != nil {
		in, out := &in.Issuer, &out.Issuer
		*out = new(string)
		**out = **in
	}
	if in.JwksURI != nil {
		in, out := &in.JwksURI, &out.JwksURI
		*out = new(string)
		**out = **in
	}
	if in.LogoutEndpoint != nil {
		in, out := &in.LogoutEndpoint, &out.LogoutEndpoint
		*out = new(string)
		**out = **in
	}
	if in.TokenEndpoint != nil {
		in, out := &in.TokenEndpoint, &out.TokenEndpoint
		*out = new(string)
		**out = **in
	}
	if in.UserInfoEndpoint != nil {
		in, out := &in.UserInfoEndpoint, &out.UserInfoEndpoint
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new OidcConfigForResponse.
func (in *OidcConfigForResponse) DeepCopy() *OidcConfigForResponse {
	if in == nil {
		return nil
	}
	out := new(OidcConfigForResponse)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *OidcMemberDefinition) DeepCopyInto(out *OidcMemberDefinition) {
	*out = *in
	if in.Groups != nil {
		in, out := &in.Groups, &out.Groups
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new OidcMemberDefinition.
func (in *OidcMemberDefinition) DeepCopy() *OidcMemberDefinition {
	if in == nil {
		return nil
	}
	out := new(OidcMemberDefinition)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *OutputConfig) DeepCopyInto(out *OutputConfig) {
	*out = *in
	if in.CompilerOptions != nil {
		in, out := &in.CompilerOptions, &out.CompilerOptions
		*out = new(string)
		**out = **in
	}
	if in.S3OutputLocation != nil {
		in, out := &in.S3OutputLocation, &out.S3OutputLocation
		*out = new(string)
		**out = **in
	}
	if in.TargetDevice != nil {
		in, out := &in.TargetDevice, &out.TargetDevice
		*out = new(string)
		**out = **in
	}
	if in.TargetPlatform != nil {
		in, out := &in.TargetPlatform, &out.TargetPlatform
		*out = new(TargetPlatform)
		(*in).DeepCopyInto(*out)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new OutputConfig.
func (in *OutputConfig) DeepCopy() *OutputConfig {
	if in == nil {
		return nil
	}
	out := new(OutputConfig)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *OutputDataConfig) DeepCopyInto(out *OutputDataConfig) {
	*out = *in
	if in.KMSKeyID != nil {
		in, out := &in.KMSKeyID, &out.KMSKeyID
		*out = new(string)
		**out = **in
	}
	if in.S3OutputPath != nil {
		in, out := &in.S3OutputPath, &out.S3OutputPath
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new OutputDataConfig.
func (in *OutputDataConfig) DeepCopy() *OutputDataConfig {
	if in == nil {
		return nil
	}
	out := new(OutputDataConfig)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ParameterRange) DeepCopyInto(out *ParameterRange) {
	*out = *in
	if in.CategoricalParameterRangeSpecification != nil {
		in, out := &in.CategoricalParameterRangeSpecification, &out.CategoricalParameterRangeSpecification
		*out = new(CategoricalParameterRangeSpecification)
		(*in).DeepCopyInto(*out)
	}
	if in.ContinuousParameterRangeSpecification != nil {
		in, out := &in.ContinuousParameterRangeSpecification, &out.ContinuousParameterRangeSpecification
		*out = new(ContinuousParameterRangeSpecification)
		(*in).DeepCopyInto(*out)
	}
	if in.IntegerParameterRangeSpecification != nil {
		in, out := &in.IntegerParameterRangeSpecification, &out.IntegerParameterRangeSpecification
		*out = new(IntegerParameterRangeSpecification)
		(*in).DeepCopyInto(*out)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ParameterRange.
func (in *ParameterRange) DeepCopy() *ParameterRange {
	if in == nil {
		return nil
	}
	out := new(ParameterRange)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ParameterRanges) DeepCopyInto(out *ParameterRanges) {
	*out = *in
	if in.CategoricalParameterRanges != nil {
		in, out := &in.CategoricalParameterRanges, &out.CategoricalParameterRanges
		*out = make([]*CategoricalParameterRange, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(CategoricalParameterRange)
				(*in).DeepCopyInto(*out)
			}
		}
	}
	if in.ContinuousParameterRanges != nil {
		in, out := &in.ContinuousParameterRanges, &out.ContinuousParameterRanges
		*out = make([]*ContinuousParameterRange, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(ContinuousParameterRange)
				(*in).DeepCopyInto(*out)
			}
		}
	}
	if in.IntegerParameterRanges != nil {
		in, out := &in.IntegerParameterRanges, &out.IntegerParameterRanges
		*out = make([]*IntegerParameterRange, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(IntegerParameterRange)
				(*in).DeepCopyInto(*out)
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ParameterRanges.
func (in *ParameterRanges) DeepCopy() *ParameterRanges {
	if in == nil {
		return nil
	}
	out := new(ParameterRanges)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Parent) DeepCopyInto(out *Parent) {
	*out = *in
	if in.ExperimentName != nil {
		in, out := &in.ExperimentName, &out.ExperimentName
		*out = new(string)
		**out = **in
	}
	if in.TrialName != nil {
		in, out := &in.TrialName, &out.TrialName
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Parent.
func (in *Parent) DeepCopy() *Parent {
	if in == nil {
		return nil
	}
	out := new(Parent)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ParentHyperParameterTuningJob) DeepCopyInto(out *ParentHyperParameterTuningJob) {
	*out = *in
	if in.HyperParameterTuningJobName != nil {
		in, out := &in.HyperParameterTuningJobName, &out.HyperParameterTuningJobName
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ParentHyperParameterTuningJob.
func (in *ParentHyperParameterTuningJob) DeepCopy() *ParentHyperParameterTuningJob {
	if in == nil {
		return nil
	}
	out := new(ParentHyperParameterTuningJob)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PresignedDomainURL) DeepCopyInto(out *PresignedDomainURL) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PresignedDomainURL.
func (in *PresignedDomainURL) DeepCopy() *PresignedDomainURL {
	if in == nil {
		return nil
	}
	out := new(PresignedDomainURL)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *PresignedDomainURL) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PresignedDomainURLList) DeepCopyInto(out *PresignedDomainURLList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]PresignedDomainURL, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PresignedDomainURLList.
func (in *PresignedDomainURLList) DeepCopy() *PresignedDomainURLList {
	if in == nil {
		return nil
	}
	out := new(PresignedDomainURLList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *PresignedDomainURLList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PresignedDomainURLObservation) DeepCopyInto(out *PresignedDomainURLObservation) {
	*out = *in
	if in.AuthorizedURL != nil {
		in, out := &in.AuthorizedURL, &out.AuthorizedURL
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PresignedDomainURLObservation.
func (in *PresignedDomainURLObservation) DeepCopy() *PresignedDomainURLObservation {
	if in == nil {
		return nil
	}
	out := new(PresignedDomainURLObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PresignedDomainURLParameters) DeepCopyInto(out *PresignedDomainURLParameters) {
	*out = *in
	if in.DomainID != nil {
		in, out := &in.DomainID, &out.DomainID
		*out = new(string)
		**out = **in
	}
	if in.DomainIDRef != nil {
		in, out := &in.DomainIDRef, &out.DomainIDRef
		*out = new(v1.Reference)
		**out = **in
	}
	if in.DomainIDSelector != nil {
		in, out := &in.DomainIDSelector, &out.DomainIDSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.SessionExpirationDurationInSeconds != nil {
		in, out := &in.SessionExpirationDurationInSeconds, &out.SessionExpirationDurationInSeconds
		*out = new(int64)
		**out = **in
	}
	if in.UserProfileName != nil {
		in, out := &in.UserProfileName, &out.UserProfileName
		*out = new(string)
		**out = **in
	}
	if in.UserProfileNameRef != nil {
		in, out := &in.UserProfileNameRef, &out.UserProfileNameRef
		*out = new(v1.Reference)
		**out = **in
	}
	if in.UserProfileNameSelector != nil {
		in, out := &in.UserProfileNameSelector, &out.UserProfileNameSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PresignedDomainURLParameters.
func (in *PresignedDomainURLParameters) DeepCopy() *PresignedDomainURLParameters {
	if in == nil {
		return nil
	}
	out := new(PresignedDomainURLParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PresignedDomainURLSpec) DeepCopyInto(out *PresignedDomainURLSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PresignedDomainURLSpec.
func (in *PresignedDomainURLSpec) DeepCopy() *PresignedDomainURLSpec {
	if in == nil {
		return nil
	}
	out := new(PresignedDomainURLSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PresignedDomainURLStatus) DeepCopyInto(out *PresignedDomainURLStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PresignedDomainURLStatus.
func (in *PresignedDomainURLStatus) DeepCopy() *PresignedDomainURLStatus {
	if in == nil {
		return nil
	}
	out := new(PresignedDomainURLStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PresignedNotebookInstanceURL) DeepCopyInto(out *PresignedNotebookInstanceURL) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PresignedNotebookInstanceURL.
func (in *PresignedNotebookInstanceURL) DeepCopy() *PresignedNotebookInstanceURL {
	if in == nil {
		return nil
	}
	out := new(PresignedNotebookInstanceURL)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *PresignedNotebookInstanceURL) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PresignedNotebookInstanceURLList) DeepCopyInto(out *PresignedNotebookInstanceURLList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]PresignedNotebookInstanceURL, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PresignedNotebookInstanceURLList.
func (in *PresignedNotebookInstanceURLList) DeepCopy() *PresignedNotebookInstanceURLList {
	if in == nil {
		return nil
	}
	out := new(PresignedNotebookInstanceURLList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *PresignedNotebookInstanceURLList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PresignedNotebookInstanceURLObservation) DeepCopyInto(out *PresignedNotebookInstanceURLObservation) {
	*out = *in
	if in.AuthorizedURL != nil {
		in, out := &in.AuthorizedURL, &out.AuthorizedURL
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PresignedNotebookInstanceURLObservation.
func (in *PresignedNotebookInstanceURLObservation) DeepCopy() *PresignedNotebookInstanceURLObservation {
	if in == nil {
		return nil
	}
	out := new(PresignedNotebookInstanceURLObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PresignedNotebookInstanceURLParameters) DeepCopyInto(out *PresignedNotebookInstanceURLParameters) {
	*out = *in
	if in.NotebookInstanceName != nil {
		in, out := &in.NotebookInstanceName, &out.NotebookInstanceName
		*out = new(string)
		**out = **in
	}
	if in.NotebookInstanceNameRef != nil {
		in, out := &in.NotebookInstanceNameRef, &out.NotebookInstanceNameRef
		*out = new(v1.Reference)
		**out = **in
	}
	if in.NotebookInstanceNameSelector != nil {
		in, out := &in.NotebookInstanceNameSelector, &out.NotebookInstanceNameSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.SessionExpirationDurationInSeconds != nil {
		in, out := &in.SessionExpirationDurationInSeconds, &out.SessionExpirationDurationInSeconds
		*out = new(int64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PresignedNotebookInstanceURLParameters.
func (in *PresignedNotebookInstanceURLParameters) DeepCopy() *PresignedNotebookInstanceURLParameters {
	if in == nil {
		return nil
	}
	out := new(PresignedNotebookInstanceURLParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PresignedNotebookInstanceURLSpec) DeepCopyInto(out *PresignedNotebookInstanceURLSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PresignedNotebookInstanceURLSpec.
func (in *PresignedNotebookInstanceURLSpec) DeepCopy() *PresignedNotebookInstanceURLSpec {
	if in == nil {
		return nil
	}
	out := new(PresignedNotebookInstanceURLSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PresignedNotebookInstanceURLStatus) DeepCopyInto(out *PresignedNotebookInstanceURLStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PresignedNotebookInstanceURLStatus.
func (in *PresignedNotebookInstanceURLStatus) DeepCopy() *PresignedNotebookInstanceURLStatus {
	if in == nil {
		return nil
	}
	out := new(PresignedNotebookInstanceURLStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ProcessingClusterConfig) DeepCopyInto(out *ProcessingClusterConfig) {
	*out = *in
	if in.InstanceCount != nil {
		in, out := &in.InstanceCount, &out.InstanceCount
		*out = new(int64)
		**out = **in
	}
	if in.InstanceType != nil {
		in, out := &in.InstanceType, &out.InstanceType
		*out = new(string)
		**out = **in
	}
	if in.VolumeKMSKeyID != nil {
		in, out := &in.VolumeKMSKeyID, &out.VolumeKMSKeyID
		*out = new(string)
		**out = **in
	}
	if in.VolumeSizeInGB != nil {
		in, out := &in.VolumeSizeInGB, &out.VolumeSizeInGB
		*out = new(int64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ProcessingClusterConfig.
func (in *ProcessingClusterConfig) DeepCopy() *ProcessingClusterConfig {
	if in == nil {
		return nil
	}
	out := new(ProcessingClusterConfig)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ProcessingInput) DeepCopyInto(out *ProcessingInput) {
	*out = *in
	if in.InputName != nil {
		in, out := &in.InputName, &out.InputName
		*out = new(string)
		**out = **in
	}
	if in.S3Input != nil {
		in, out := &in.S3Input, &out.S3Input
		*out = new(ProcessingS3Input)
		(*in).DeepCopyInto(*out)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ProcessingInput.
func (in *ProcessingInput) DeepCopy() *ProcessingInput {
	if in == nil {
		return nil
	}
	out := new(ProcessingInput)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ProcessingJob) DeepCopyInto(out *ProcessingJob) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ProcessingJob.
func (in *ProcessingJob) DeepCopy() *ProcessingJob {
	if in == nil {
		return nil
	}
	out := new(ProcessingJob)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *ProcessingJob) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ProcessingJobList) DeepCopyInto(out *ProcessingJobList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]ProcessingJob, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ProcessingJobList.
func (in *ProcessingJobList) DeepCopy() *ProcessingJobList {
	if in == nil {
		return nil
	}
	out := new(ProcessingJobList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *ProcessingJobList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ProcessingJobObservation) DeepCopyInto(out *ProcessingJobObservation) {
	*out = *in
	if in.ProcessingJobARN != nil {
		in, out := &in.ProcessingJobARN, &out.ProcessingJobARN
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ProcessingJobObservation.
func (in *ProcessingJobObservation) DeepCopy() *ProcessingJobObservation {
	if in == nil {
		return nil
	}
	out := new(ProcessingJobObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ProcessingJobParameters) DeepCopyInto(out *ProcessingJobParameters) {
	*out = *in
	if in.AppSpecification != nil {
		in, out := &in.AppSpecification, &out.AppSpecification
		*out = new(AppSpecification)
		(*in).DeepCopyInto(*out)
	}
	if in.Environment != nil {
		in, out := &in.Environment, &out.Environment
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				in, out := &val, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.ExperimentConfig != nil {
		in, out := &in.ExperimentConfig, &out.ExperimentConfig
		*out = new(ExperimentConfig)
		(*in).DeepCopyInto(*out)
	}
	if in.NetworkConfig != nil {
		in, out := &in.NetworkConfig, &out.NetworkConfig
		*out = new(NetworkConfig)
		(*in).DeepCopyInto(*out)
	}
	if in.ProcessingInputs != nil {
		in, out := &in.ProcessingInputs, &out.ProcessingInputs
		*out = make([]*ProcessingInput, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(ProcessingInput)
				(*in).DeepCopyInto(*out)
			}
		}
	}
	if in.ProcessingJobName != nil {
		in, out := &in.ProcessingJobName, &out.ProcessingJobName
		*out = new(string)
		**out = **in
	}
	if in.ProcessingOutputConfig != nil {
		in, out := &in.ProcessingOutputConfig, &out.ProcessingOutputConfig
		*out = new(ProcessingOutputConfig)
		(*in).DeepCopyInto(*out)
	}
	if in.ProcessingResources != nil {
		in, out := &in.ProcessingResources, &out.ProcessingResources
		*out = new(ProcessingResources)
		(*in).DeepCopyInto(*out)
	}
	if in.RoleARN != nil {
		in, out := &in.RoleARN, &out.RoleARN
		*out = new(string)
		**out = **in
	}
	if in.RoleARNRef != nil {
		in, out := &in.RoleARNRef, &out.RoleARNRef
		*out = new(v1.Reference)
		**out = **in
	}
	if in.RoleARNSelector != nil {
		in, out := &in.RoleARNSelector, &out.RoleARNSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.StoppingCondition != nil {
		in, out := &in.StoppingCondition, &out.StoppingCondition
		*out = new(ProcessingStoppingCondition)
		(*in).DeepCopyInto(*out)
	}
	if in.Tags != nil {
		in, out := &in.Tags, &out.Tags
		*out = make([]*Tag, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(Tag)
				(*in).DeepCopyInto(*out)
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ProcessingJobParameters.
func (in *ProcessingJobParameters) DeepCopy() *ProcessingJobParameters {
	if in == nil {
		return nil
	}
	out := new(ProcessingJobParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ProcessingJobSpec) DeepCopyInto(out *ProcessingJobSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ProcessingJobSpec.
func (in *ProcessingJobSpec) DeepCopy() *ProcessingJobSpec {
	if in == nil {
		return nil
	}
	out := new(ProcessingJobSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ProcessingJobStatus) DeepCopyInto(out *ProcessingJobStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ProcessingJobStatus.
func (in *ProcessingJobStatus) DeepCopy() *ProcessingJobStatus {
	if in == nil {
		return nil
	}
	out := new(ProcessingJobStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ProcessingJobSummary) DeepCopyInto(out *ProcessingJobSummary) {
	*out = *in
	if in.CreationTime != nil {
		in, out := &in.CreationTime, &out.CreationTime
		*out = (*in).DeepCopy()
	}
	if in.ExitMessage != nil {
		in, out := &in.ExitMessage, &out.ExitMessage
		*out = new(string)
		**out = **in
	}
	if in.FailureReason != nil {
		in, out := &in.FailureReason, &out.FailureReason
		*out = new(string)
		**out = **in
	}
	if in.LastModifiedTime != nil {
		in, out := &in.LastModifiedTime, &out.LastModifiedTime
		*out = (*in).DeepCopy()
	}
	if in.ProcessingEndTime != nil {
		in, out := &in.ProcessingEndTime, &out.ProcessingEndTime
		*out = (*in).DeepCopy()
	}
	if in.ProcessingJobARN != nil {
		in, out := &in.ProcessingJobARN, &out.ProcessingJobARN
		*out = new(string)
		**out = **in
	}
	if in.ProcessingJobName != nil {
		in, out := &in.ProcessingJobName, &out.ProcessingJobName
		*out = new(string)
		**out = **in
	}
	if in.ProcessingJobStatus != nil {
		in, out := &in.ProcessingJobStatus, &out.ProcessingJobStatus
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ProcessingJobSummary.
func (in *ProcessingJobSummary) DeepCopy() *ProcessingJobSummary {
	if in == nil {
		return nil
	}
	out := new(ProcessingJobSummary)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ProcessingJob_SDK) DeepCopyInto(out *ProcessingJob_SDK) {
	*out = *in
	if in.AppSpecification != nil {
		in, out := &in.AppSpecification, &out.AppSpecification
		*out = new(AppSpecification)
		(*in).DeepCopyInto(*out)
	}
	if in.AutoMLJobARN != nil {
		in, out := &in.AutoMLJobARN, &out.AutoMLJobARN
		*out = new(string)
		**out = **in
	}
	if in.CreationTime != nil {
		in, out := &in.CreationTime, &out.CreationTime
		*out = (*in).DeepCopy()
	}
	if in.Environment != nil {
		in, out := &in.Environment, &out.Environment
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				in, out := &val, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.ExitMessage != nil {
		in, out := &in.ExitMessage, &out.ExitMessage
		*out = new(string)
		**out = **in
	}
	if in.ExperimentConfig != nil {
		in, out := &in.ExperimentConfig, &out.ExperimentConfig
		*out = new(ExperimentConfig)
		(*in).DeepCopyInto(*out)
	}
	if in.FailureReason != nil {
		in, out := &in.FailureReason, &out.FailureReason
		*out = new(string)
		**out = **in
	}
	if in.LastModifiedTime != nil {
		in, out := &in.LastModifiedTime, &out.LastModifiedTime
		*out = (*in).DeepCopy()
	}
	if in.MonitoringScheduleARN != nil {
		in, out := &in.MonitoringScheduleARN, &out.MonitoringScheduleARN
		*out = new(string)
		**out = **in
	}
	if in.NetworkConfig != nil {
		in, out := &in.NetworkConfig, &out.NetworkConfig
		*out = new(NetworkConfig)
		(*in).DeepCopyInto(*out)
	}
	if in.ProcessingEndTime != nil {
		in, out := &in.ProcessingEndTime, &out.ProcessingEndTime
		*out = (*in).DeepCopy()
	}
	if in.ProcessingInputs != nil {
		in, out := &in.ProcessingInputs, &out.ProcessingInputs
		*out = make([]*ProcessingInput, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(ProcessingInput)
				(*in).DeepCopyInto(*out)
			}
		}
	}
	if in.ProcessingJobARN != nil {
		in, out := &in.ProcessingJobARN, &out.ProcessingJobARN
		*out = new(string)
		**out = **in
	}
	if in.ProcessingJobName != nil {
		in, out := &in.ProcessingJobName, &out.ProcessingJobName
		*out = new(string)
		**out = **in
	}
	if in.ProcessingJobStatus != nil {
		in, out := &in.ProcessingJobStatus, &out.ProcessingJobStatus
		*out = new(string)
		**out = **in
	}
	if in.ProcessingOutputConfig != nil {
		in, out := &in.ProcessingOutputConfig, &out.ProcessingOutputConfig
		*out = new(ProcessingOutputConfig)
		(*in).DeepCopyInto(*out)
	}
	if in.ProcessingResources != nil {
		in, out := &in.ProcessingResources, &out.ProcessingResources
		*out = new(ProcessingResources)
		(*in).DeepCopyInto(*out)
	}
	if in.ProcessingStartTime != nil {
		in, out := &in.ProcessingStartTime, &out.ProcessingStartTime
		*out = (*in).DeepCopy()
	}
	if in.RoleARN != nil {
		in, out := &in.RoleARN, &out.RoleARN
		*out = new(string)
		**out = **in
	}
	if in.StoppingCondition != nil {
		in, out := &in.StoppingCondition, &out.StoppingCondition
		*out = new(ProcessingStoppingCondition)
		(*in).DeepCopyInto(*out)
	}
	if in.Tags != nil {
		in, out := &in.Tags, &out.Tags
		*out = make([]*Tag, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(Tag)
				(*in).DeepCopyInto(*out)
			}
		}
	}
	if in.TrainingJobARN != nil {
		in, out := &in.TrainingJobARN, &out.TrainingJobARN
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ProcessingJob_SDK.
func (in *ProcessingJob_SDK) DeepCopy() *ProcessingJob_SDK {
	if in == nil {
		return nil
	}
	out := new(ProcessingJob_SDK)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ProcessingOutput) DeepCopyInto(out *ProcessingOutput) {
	*out = *in
	if in.OutputName != nil {
		in, out := &in.OutputName, &out.OutputName
		*out = new(string)
		**out = **in
	}
	if in.S3Output != nil {
		in, out := &in.S3Output, &out.S3Output
		*out = new(ProcessingS3Output)
		(*in).DeepCopyInto(*out)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ProcessingOutput.
func (in *ProcessingOutput) DeepCopy() *ProcessingOutput {
	if in == nil {
		return nil
	}
	out := new(ProcessingOutput)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ProcessingOutputConfig) DeepCopyInto(out *ProcessingOutputConfig) {
	*out = *in
	if in.KMSKeyID != nil {
		in, out := &in.KMSKeyID, &out.KMSKeyID
		*out = new(string)
		**out = **in
	}
	if in.Outputs != nil {
		in, out := &in.Outputs, &out.Outputs
		*out = make([]*ProcessingOutput, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(ProcessingOutput)
				(*in).DeepCopyInto(*out)
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ProcessingOutputConfig.
func (in *ProcessingOutputConfig) DeepCopy() *ProcessingOutputConfig {
	if in == nil {
		return nil
	}
	out := new(ProcessingOutputConfig)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ProcessingResources) DeepCopyInto(out *ProcessingResources) {
	*out = *in
	if in.ClusterConfig != nil {
		in, out := &in.ClusterConfig, &out.ClusterConfig
		*out = new(ProcessingClusterConfig)
		(*in).DeepCopyInto(*out)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ProcessingResources.
func (in *ProcessingResources) DeepCopy() *ProcessingResources {
	if in == nil {
		return nil
	}
	out := new(ProcessingResources)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ProcessingS3Input) DeepCopyInto(out *ProcessingS3Input) {
	*out = *in
	if in.LocalPath != nil {
		in, out := &in.LocalPath, &out.LocalPath
		*out = new(string)
		**out = **in
	}
	if in.S3CompressionType != nil {
		in, out := &in.S3CompressionType, &out.S3CompressionType
		*out = new(string)
		**out = **in
	}
	if in.S3DataDistributionType != nil {
		in, out := &in.S3DataDistributionType, &out.S3DataDistributionType
		*out = new(string)
		**out = **in
	}
	if in.S3DataType != nil {
		in, out := &in.S3DataType, &out.S3DataType
		*out = new(string)
		**out = **in
	}
	if in.S3InputMode != nil {
		in, out := &in.S3InputMode, &out.S3InputMode
		*out = new(string)
		**out = **in
	}
	if in.S3URI != nil {
		in, out := &in.S3URI, &out.S3URI
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ProcessingS3Input.
func (in *ProcessingS3Input) DeepCopy() *ProcessingS3Input {
	if in == nil {
		return nil
	}
	out := new(ProcessingS3Input)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ProcessingS3Output) DeepCopyInto(out *ProcessingS3Output) {
	*out = *in
	if in.LocalPath != nil {
		in, out := &in.LocalPath, &out.LocalPath
		*out = new(string)
		**out = **in
	}
	if in.S3UploadMode != nil {
		in, out := &in.S3UploadMode, &out.S3UploadMode
		*out = new(string)
		**out = **in
	}
	if in.S3URI != nil {
		in, out := &in.S3URI, &out.S3URI
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ProcessingS3Output.
func (in *ProcessingS3Output) DeepCopy() *ProcessingS3Output {
	if in == nil {
		return nil
	}
	out := new(ProcessingS3Output)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ProcessingStoppingCondition) DeepCopyInto(out *ProcessingStoppingCondition) {
	*out = *in
	if in.MaxRuntimeInSeconds != nil {
		in, out := &in.MaxRuntimeInSeconds, &out.MaxRuntimeInSeconds
		*out = new(int64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ProcessingStoppingCondition.
func (in *ProcessingStoppingCondition) DeepCopy() *ProcessingStoppingCondition {
	if in == nil {
		return nil
	}
	out := new(ProcessingStoppingCondition)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ProductionVariant) DeepCopyInto(out *ProductionVariant) {
	*out = *in
	if in.AcceleratorType != nil {
		in, out := &in.AcceleratorType, &out.AcceleratorType
		*out = new(string)
		**out = **in
	}
	if in.InitialInstanceCount != nil {
		in, out := &in.InitialInstanceCount, &out.InitialInstanceCount
		*out = new(int64)
		**out = **in
	}
	if in.InitialVariantWeight != nil {
		in, out := &in.InitialVariantWeight, &out.InitialVariantWeight
		*out = new(float64)
		**out = **in
	}
	if in.InstanceType != nil {
		in, out := &in.InstanceType, &out.InstanceType
		*out = new(string)
		**out = **in
	}
	if in.ModelName != nil {
		in, out := &in.ModelName, &out.ModelName
		*out = new(string)
		**out = **in
	}
	if in.VariantName != nil {
		in, out := &in.VariantName, &out.VariantName
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ProductionVariant.
func (in *ProductionVariant) DeepCopy() *ProductionVariant {
	if in == nil {
		return nil
	}
	out := new(ProductionVariant)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ProductionVariantSummary) DeepCopyInto(out *ProductionVariantSummary) {
	*out = *in
	if in.CurrentInstanceCount != nil {
		in, out := &in.CurrentInstanceCount, &out.CurrentInstanceCount
		*out = new(int64)
		**out = **in
	}
	if in.CurrentWeight != nil {
		in, out := &in.CurrentWeight, &out.CurrentWeight
		*out = new(float64)
		**out = **in
	}
	if in.DeployedImages != nil {
		in, out := &in.DeployedImages, &out.DeployedImages
		*out = make([]*DeployedImage, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(DeployedImage)
				(*in).DeepCopyInto(*out)
			}
		}
	}
	if in.DesiredInstanceCount != nil {
		in, out := &in.DesiredInstanceCount, &out.DesiredInstanceCount
		*out = new(int64)
		**out = **in
	}
	if in.DesiredWeight != nil {
		in, out := &in.DesiredWeight, &out.DesiredWeight
		*out = new(float64)
		**out = **in
	}
	if in.VariantName != nil {
		in, out := &in.VariantName, &out.VariantName
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ProductionVariantSummary.
func (in *ProductionVariantSummary) DeepCopy() *ProductionVariantSummary {
	if in == nil {
		return nil
	}
	out := new(ProductionVariantSummary)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PublicWorkforceTaskPrice) DeepCopyInto(out *PublicWorkforceTaskPrice) {
	*out = *in
	if in.AmountInUsd != nil {
		in, out := &in.AmountInUsd, &out.AmountInUsd
		*out = new(USD)
		(*in).DeepCopyInto(*out)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PublicWorkforceTaskPrice.
func (in *PublicWorkforceTaskPrice) DeepCopy() *PublicWorkforceTaskPrice {
	if in == nil {
		return nil
	}
	out := new(PublicWorkforceTaskPrice)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RenderingError) DeepCopyInto(out *RenderingError) {
	*out = *in
	if in.Code != nil {
		in, out := &in.Code, &out.Code
		*out = new(string)
		**out = **in
	}
	if in.Message != nil {
		in, out := &in.Message, &out.Message
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RenderingError.
func (in *RenderingError) DeepCopy() *RenderingError {
	if in == nil {
		return nil
	}
	out := new(RenderingError)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ResolvedAttributes) DeepCopyInto(out *ResolvedAttributes) {
	*out = *in
	if in.AutoMLJobObjective != nil {
		in, out := &in.AutoMLJobObjective, &out.AutoMLJobObjective
		*out = new(AutoMLJobObjective)
		(*in).DeepCopyInto(*out)
	}
	if in.CompletionCriteria != nil {
		in, out := &in.CompletionCriteria, &out.CompletionCriteria
		*out = new(AutoMLJobCompletionCriteria)
		(*in).DeepCopyInto(*out)
	}
	if in.ProblemType != nil {
		in, out := &in.ProblemType, &out.ProblemType
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ResolvedAttributes.
func (in *ResolvedAttributes) DeepCopy() *ResolvedAttributes {
	if in == nil {
		return nil
	}
	out := new(ResolvedAttributes)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ResourceConfig) DeepCopyInto(out *ResourceConfig) {
	*out = *in
	if in.InstanceCount != nil {
		in, out := &in.InstanceCount, &out.InstanceCount
		*out = new(int64)
		**out = **in
	}
	if in.InstanceType != nil {
		in, out := &in.InstanceType, &out.InstanceType
		*out = new(string)
		**out = **in
	}
	if in.VolumeKMSKeyID != nil {
		in, out := &in.VolumeKMSKeyID, &out.VolumeKMSKeyID
		*out = new(string)
		**out = **in
	}
	if in.VolumeSizeInGB != nil {
		in, out := &in.VolumeSizeInGB, &out.VolumeSizeInGB
		*out = new(int64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ResourceConfig.
func (in *ResourceConfig) DeepCopy() *ResourceConfig {
	if in == nil {
		return nil
	}
	out := new(ResourceConfig)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ResourceLimits) DeepCopyInto(out *ResourceLimits) {
	*out = *in
	if in.MaxNumberOfTrainingJobs != nil {
		in, out := &in.MaxNumberOfTrainingJobs, &out.MaxNumberOfTrainingJobs
		*out = new(int64)
		**out = **in
	}
	if in.MaxParallelTrainingJobs != nil {
		in, out := &in.MaxParallelTrainingJobs, &out.MaxParallelTrainingJobs
		*out = new(int64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ResourceLimits.
func (in *ResourceLimits) DeepCopy() *ResourceLimits {
	if in == nil {
		return nil
	}
	out := new(ResourceLimits)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ResourceSpec) DeepCopyInto(out *ResourceSpec) {
	*out = *in
	if in.InstanceType != nil {
		in, out := &in.InstanceType, &out.InstanceType
		*out = new(string)
		**out = **in
	}
	if in.SageMakerImageARN != nil {
		in, out := &in.SageMakerImageARN, &out.SageMakerImageARN
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ResourceSpec.
func (in *ResourceSpec) DeepCopy() *ResourceSpec {
	if in == nil {
		return nil
	}
	out := new(ResourceSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RetentionPolicy) DeepCopyInto(out *RetentionPolicy) {
	*out = *in
	if in.HomeEFSFileSystem != nil {
		in, out := &in.HomeEFSFileSystem, &out.HomeEFSFileSystem
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RetentionPolicy.
func (in *RetentionPolicy) DeepCopy() *RetentionPolicy {
	if in == nil {
		return nil
	}
	out := new(RetentionPolicy)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *S3DataSource) DeepCopyInto(out *S3DataSource) {
	*out = *in
	if in.AttributeNames != nil {
		in, out := &in.AttributeNames, &out.AttributeNames
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.S3DataDistributionType != nil {
		in, out := &in.S3DataDistributionType, &out.S3DataDistributionType
		*out = new(string)
		**out = **in
	}
	if in.S3DataType != nil {
		in, out := &in.S3DataType, &out.S3DataType
		*out = new(string)
		**out = **in
	}
	if in.S3URI != nil {
		in, out := &in.S3URI, &out.S3URI
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new S3DataSource.
func (in *S3DataSource) DeepCopy() *S3DataSource {
	if in == nil {
		return nil
	}
	out := new(S3DataSource)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ScheduleConfig) DeepCopyInto(out *ScheduleConfig) {
	*out = *in
	if in.ScheduleExpression != nil {
		in, out := &in.ScheduleExpression, &out.ScheduleExpression
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ScheduleConfig.
func (in *ScheduleConfig) DeepCopy() *ScheduleConfig {
	if in == nil {
		return nil
	}
	out := new(ScheduleConfig)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SecondaryStatusTransition) DeepCopyInto(out *SecondaryStatusTransition) {
	*out = *in
	if in.EndTime != nil {
		in, out := &in.EndTime, &out.EndTime
		*out = (*in).DeepCopy()
	}
	if in.StartTime != nil {
		in, out := &in.StartTime, &out.StartTime
		*out = (*in).DeepCopy()
	}
	if in.Status != nil {
		in, out := &in.Status, &out.Status
		*out = new(string)
		**out = **in
	}
	if in.StatusMessage != nil {
		in, out := &in.StatusMessage, &out.StatusMessage
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SecondaryStatusTransition.
func (in *SecondaryStatusTransition) DeepCopy() *SecondaryStatusTransition {
	if in == nil {
		return nil
	}
	out := new(SecondaryStatusTransition)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SharingSettings) DeepCopyInto(out *SharingSettings) {
	*out = *in
	if in.NotebookOutputOption != nil {
		in, out := &in.NotebookOutputOption, &out.NotebookOutputOption
		*out = new(string)
		**out = **in
	}
	if in.S3KMSKeyID != nil {
		in, out := &in.S3KMSKeyID, &out.S3KMSKeyID
		*out = new(string)
		**out = **in
	}
	if in.S3OutputPath != nil {
		in, out := &in.S3OutputPath, &out.S3OutputPath
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SharingSettings.
func (in *SharingSettings) DeepCopy() *SharingSettings {
	if in == nil {
		return nil
	}
	out := new(SharingSettings)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ShuffleConfig) DeepCopyInto(out *ShuffleConfig) {
	*out = *in
	if in.Seed != nil {
		in, out := &in.Seed, &out.Seed
		*out = new(int64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ShuffleConfig.
func (in *ShuffleConfig) DeepCopy() *ShuffleConfig {
	if in == nil {
		return nil
	}
	out := new(ShuffleConfig)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SourceAlgorithm) DeepCopyInto(out *SourceAlgorithm) {
	*out = *in
	if in.AlgorithmName != nil {
		in, out := &in.AlgorithmName, &out.AlgorithmName
		*out = new(string)
		**out = **in
	}
	if in.AlgorithmNameRef != nil {
		in, out := &in.AlgorithmNameRef, &out.AlgorithmNameRef
		*out = new(v1.Reference)
		**out = **in
	}
	if in.AlgorithmNameSelector != nil {
		in, out := &in.AlgorithmNameSelector, &out.AlgorithmNameSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.ModelDataURL != nil {
		in, out := &in.ModelDataURL, &out.ModelDataURL
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SourceAlgorithm.
func (in *SourceAlgorithm) DeepCopy() *SourceAlgorithm {
	if in == nil {
		return nil
	}
	out := new(SourceAlgorithm)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SourceAlgorithmSpecification) DeepCopyInto(out *SourceAlgorithmSpecification) {
	*out = *in
	if in.SourceAlgorithms != nil {
		in, out := &in.SourceAlgorithms, &out.SourceAlgorithms
		*out = make([]*SourceAlgorithm, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(SourceAlgorithm)
				(*in).DeepCopyInto(*out)
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SourceAlgorithmSpecification.
func (in *SourceAlgorithmSpecification) DeepCopy() *SourceAlgorithmSpecification {
	if in == nil {
		return nil
	}
	out := new(SourceAlgorithmSpecification)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SourceIPConfig) DeepCopyInto(out *SourceIPConfig) {
	*out = *in
	if in.CIDRs != nil {
		in, out := &in.CIDRs, &out.CIDRs
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SourceIPConfig.
func (in *SourceIPConfig) DeepCopy() *SourceIPConfig {
	if in == nil {
		return nil
	}
	out := new(SourceIPConfig)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *StoppingCondition) DeepCopyInto(out *StoppingCondition) {
	*out = *in
	if in.MaxRuntimeInSeconds != nil {
		in, out := &in.MaxRuntimeInSeconds, &out.MaxRuntimeInSeconds
		*out = new(int64)
		**out = **in
	}
	if in.MaxWaitTimeInSeconds != nil {
		in, out := &in.MaxWaitTimeInSeconds, &out.MaxWaitTimeInSeconds
		*out = new(int64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new StoppingCondition.
func (in *StoppingCondition) DeepCopy() *StoppingCondition {
	if in == nil {
		return nil
	}
	out := new(StoppingCondition)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SubscribedWorkteam) DeepCopyInto(out *SubscribedWorkteam) {
	*out = *in
	if in.ListingID != nil {
		in, out := &in.ListingID, &out.ListingID
		*out = new(string)
		**out = **in
	}
	if in.MarketplaceDescription != nil {
		in, out := &in.MarketplaceDescription, &out.MarketplaceDescription
		*out = new(string)
		**out = **in
	}
	if in.MarketplaceTitle != nil {
		in, out := &in.MarketplaceTitle, &out.MarketplaceTitle
		*out = new(string)
		**out = **in
	}
	if in.SellerName != nil {
		in, out := &in.SellerName, &out.SellerName
		*out = new(string)
		**out = **in
	}
	if in.WorkteamARN != nil {
		in, out := &in.WorkteamARN, &out.WorkteamARN
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SubscribedWorkteam.
func (in *SubscribedWorkteam) DeepCopy() *SubscribedWorkteam {
	if in == nil {
		return nil
	}
	out := new(SubscribedWorkteam)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Tag) DeepCopyInto(out *Tag) {
	*out = *in
	if in.Key != nil {
		in, out := &in.Key, &out.Key
		*out = new(string)
		**out = **in
	}
	if in.Value != nil {
		in, out := &in.Value, &out.Value
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Tag.
func (in *Tag) DeepCopy() *Tag {
	if in == nil {
		return nil
	}
	out := new(Tag)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TargetPlatform) DeepCopyInto(out *TargetPlatform) {
	*out = *in
	if in.Accelerator != nil {
		in, out := &in.Accelerator, &out.Accelerator
		*out = new(string)
		**out = **in
	}
	if in.Arch != nil {
		in, out := &in.Arch, &out.Arch
		*out = new(string)
		**out = **in
	}
	if in.Os != nil {
		in, out := &in.Os, &out.Os
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TargetPlatform.
func (in *TargetPlatform) DeepCopy() *TargetPlatform {
	if in == nil {
		return nil
	}
	out := new(TargetPlatform)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TensorBoardAppSettings) DeepCopyInto(out *TensorBoardAppSettings) {
	*out = *in
	if in.DefaultResourceSpec != nil {
		in, out := &in.DefaultResourceSpec, &out.DefaultResourceSpec
		*out = new(ResourceSpec)
		(*in).DeepCopyInto(*out)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TensorBoardAppSettings.
func (in *TensorBoardAppSettings) DeepCopy() *TensorBoardAppSettings {
	if in == nil {
		return nil
	}
	out := new(TensorBoardAppSettings)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TensorBoardOutputConfig) DeepCopyInto(out *TensorBoardOutputConfig) {
	*out = *in
	if in.LocalPath != nil {
		in, out := &in.LocalPath, &out.LocalPath
		*out = new(string)
		**out = **in
	}
	if in.S3OutputPath != nil {
		in, out := &in.S3OutputPath, &out.S3OutputPath
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TensorBoardOutputConfig.
func (in *TensorBoardOutputConfig) DeepCopy() *TensorBoardOutputConfig {
	if in == nil {
		return nil
	}
	out := new(TensorBoardOutputConfig)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TrainingJob) DeepCopyInto(out *TrainingJob) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TrainingJob.
func (in *TrainingJob) DeepCopy() *TrainingJob {
	if in == nil {
		return nil
	}
	out := new(TrainingJob)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *TrainingJob) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TrainingJobDefinition) DeepCopyInto(out *TrainingJobDefinition) {
	*out = *in
	if in.HyperParameters != nil {
		in, out := &in.HyperParameters, &out.HyperParameters
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				in, out := &val, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.InputDataConfig != nil {
		in, out := &in.InputDataConfig, &out.InputDataConfig
		*out = make([]*Channel, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(Channel)
				(*in).DeepCopyInto(*out)
			}
		}
	}
	if in.OutputDataConfig != nil {
		in, out := &in.OutputDataConfig, &out.OutputDataConfig
		*out = new(OutputDataConfig)
		(*in).DeepCopyInto(*out)
	}
	if in.ResourceConfig != nil {
		in, out := &in.ResourceConfig, &out.ResourceConfig
		*out = new(ResourceConfig)
		(*in).DeepCopyInto(*out)
	}
	if in.StoppingCondition != nil {
		in, out := &in.StoppingCondition, &out.StoppingCondition
		*out = new(StoppingCondition)
		(*in).DeepCopyInto(*out)
	}
	if in.TrainingInputMode != nil {
		in, out := &in.TrainingInputMode, &out.TrainingInputMode
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TrainingJobDefinition.
func (in *TrainingJobDefinition) DeepCopy() *TrainingJobDefinition {
	if in == nil {
		return nil
	}
	out := new(TrainingJobDefinition)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TrainingJobList) DeepCopyInto(out *TrainingJobList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]TrainingJob, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TrainingJobList.
func (in *TrainingJobList) DeepCopy() *TrainingJobList {
	if in == nil {
		return nil
	}
	out := new(TrainingJobList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *TrainingJobList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TrainingJobObservation) DeepCopyInto(out *TrainingJobObservation) {
	*out = *in
	if in.TrainingJobARN != nil {
		in, out := &in.TrainingJobARN, &out.TrainingJobARN
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TrainingJobObservation.
func (in *TrainingJobObservation) DeepCopy() *TrainingJobObservation {
	if in == nil {
		return nil
	}
	out := new(TrainingJobObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TrainingJobParameters) DeepCopyInto(out *TrainingJobParameters) {
	*out = *in
	if in.AlgorithmSpecification != nil {
		in, out := &in.AlgorithmSpecification, &out.AlgorithmSpecification
		*out = new(AlgorithmSpecification)
		(*in).DeepCopyInto(*out)
	}
	if in.CheckpointConfig != nil {
		in, out := &in.CheckpointConfig, &out.CheckpointConfig
		*out = new(CheckpointConfig)
		(*in).DeepCopyInto(*out)
	}
	if in.DebugHookConfig != nil {
		in, out := &in.DebugHookConfig, &out.DebugHookConfig
		*out = new(DebugHookConfig)
		(*in).DeepCopyInto(*out)
	}
	if in.DebugRuleConfigurations != nil {
		in, out := &in.DebugRuleConfigurations, &out.DebugRuleConfigurations
		*out = make([]*DebugRuleConfiguration, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(DebugRuleConfiguration)
				(*in).DeepCopyInto(*out)
			}
		}
	}
	if in.EnableInterContainerTrafficEncryption != nil {
		in, out := &in.EnableInterContainerTrafficEncryption, &out.EnableInterContainerTrafficEncryption
		*out = new(bool)
		**out = **in
	}
	if in.EnableManagedSpotTraining != nil {
		in, out := &in.EnableManagedSpotTraining, &out.EnableManagedSpotTraining
		*out = new(bool)
		**out = **in
	}
	if in.EnableNetworkIsolation != nil {
		in, out := &in.EnableNetworkIsolation, &out.EnableNetworkIsolation
		*out = new(bool)
		**out = **in
	}
	if in.ExperimentConfig != nil {
		in, out := &in.ExperimentConfig, &out.ExperimentConfig
		*out = new(ExperimentConfig)
		(*in).DeepCopyInto(*out)
	}
	if in.HyperParameters != nil {
		in, out := &in.HyperParameters, &out.HyperParameters
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				in, out := &val, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.InputDataConfig != nil {
		in, out := &in.InputDataConfig, &out.InputDataConfig
		*out = make([]*Channel, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(Channel)
				(*in).DeepCopyInto(*out)
			}
		}
	}
	if in.OutputDataConfig != nil {
		in, out := &in.OutputDataConfig, &out.OutputDataConfig
		*out = new(OutputDataConfig)
		(*in).DeepCopyInto(*out)
	}
	if in.ResourceConfig != nil {
		in, out := &in.ResourceConfig, &out.ResourceConfig
		*out = new(ResourceConfig)
		(*in).DeepCopyInto(*out)
	}
	if in.RoleARN != nil {
		in, out := &in.RoleARN, &out.RoleARN
		*out = new(string)
		**out = **in
	}
	if in.RoleARNRef != nil {
		in, out := &in.RoleARNRef, &out.RoleARNRef
		*out = new(v1.Reference)
		**out = **in
	}
	if in.RoleARNSelector != nil {
		in, out := &in.RoleARNSelector, &out.RoleARNSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.StoppingCondition != nil {
		in, out := &in.StoppingCondition, &out.StoppingCondition
		*out = new(StoppingCondition)
		(*in).DeepCopyInto(*out)
	}
	if in.Tags != nil {
		in, out := &in.Tags, &out.Tags
		*out = make([]*Tag, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(Tag)
				(*in).DeepCopyInto(*out)
			}
		}
	}
	if in.TensorBoardOutputConfig != nil {
		in, out := &in.TensorBoardOutputConfig, &out.TensorBoardOutputConfig
		*out = new(TensorBoardOutputConfig)
		(*in).DeepCopyInto(*out)
	}
	if in.TrainingJobName != nil {
		in, out := &in.TrainingJobName, &out.TrainingJobName
		*out = new(string)
		**out = **in
	}
	if in.VPCConfig != nil {
		in, out := &in.VPCConfig, &out.VPCConfig
		*out = new(VPCConfig)
		(*in).DeepCopyInto(*out)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TrainingJobParameters.
func (in *TrainingJobParameters) DeepCopy() *TrainingJobParameters {
	if in == nil {
		return nil
	}
	out := new(TrainingJobParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TrainingJobSpec) DeepCopyInto(out *TrainingJobSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TrainingJobSpec.
func (in *TrainingJobSpec) DeepCopy() *TrainingJobSpec {
	if in == nil {
		return nil
	}
	out := new(TrainingJobSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TrainingJobStatus) DeepCopyInto(out *TrainingJobStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TrainingJobStatus.
func (in *TrainingJobStatus) DeepCopy() *TrainingJobStatus {
	if in == nil {
		return nil
	}
	out := new(TrainingJobStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TrainingJobStatusCounters) DeepCopyInto(out *TrainingJobStatusCounters) {
	*out = *in
	if in.Completed != nil {
		in, out := &in.Completed, &out.Completed
		*out = new(int64)
		**out = **in
	}
	if in.InProgress != nil {
		in, out := &in.InProgress, &out.InProgress
		*out = new(int64)
		**out = **in
	}
	if in.NonRetryableError != nil {
		in, out := &in.NonRetryableError, &out.NonRetryableError
		*out = new(int64)
		**out = **in
	}
	if in.RetryableError != nil {
		in, out := &in.RetryableError, &out.RetryableError
		*out = new(int64)
		**out = **in
	}
	if in.Stopped != nil {
		in, out := &in.Stopped, &out.Stopped
		*out = new(int64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TrainingJobStatusCounters.
func (in *TrainingJobStatusCounters) DeepCopy() *TrainingJobStatusCounters {
	if in == nil {
		return nil
	}
	out := new(TrainingJobStatusCounters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TrainingJobSummary) DeepCopyInto(out *TrainingJobSummary) {
	*out = *in
	if in.CreationTime != nil {
		in, out := &in.CreationTime, &out.CreationTime
		*out = (*in).DeepCopy()
	}
	if in.LastModifiedTime != nil {
		in, out := &in.LastModifiedTime, &out.LastModifiedTime
		*out = (*in).DeepCopy()
	}
	if in.TrainingEndTime != nil {
		in, out := &in.TrainingEndTime, &out.TrainingEndTime
		*out = (*in).DeepCopy()
	}
	if in.TrainingJobARN != nil {
		in, out := &in.TrainingJobARN, &out.TrainingJobARN
		*out = new(string)
		**out = **in
	}
	if in.TrainingJobName != nil {
		in, out := &in.TrainingJobName, &out.TrainingJobName
		*out = new(string)
		**out = **in
	}
	if in.TrainingJobStatus != nil {
		in, out := &in.TrainingJobStatus, &out.TrainingJobStatus
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TrainingJobSummary.
func (in *TrainingJobSummary) DeepCopy() *TrainingJobSummary {
	if in == nil {
		return nil
	}
	out := new(TrainingJobSummary)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TrainingJob_SDK) DeepCopyInto(out *TrainingJob_SDK) {
	*out = *in
	if in.AlgorithmSpecification != nil {
		in, out := &in.AlgorithmSpecification, &out.AlgorithmSpecification
		*out = new(AlgorithmSpecification)
		(*in).DeepCopyInto(*out)
	}
	if in.AutoMLJobARN != nil {
		in, out := &in.AutoMLJobARN, &out.AutoMLJobARN
		*out = new(string)
		**out = **in
	}
	if in.BillableTimeInSeconds != nil {
		in, out := &in.BillableTimeInSeconds, &out.BillableTimeInSeconds
		*out = new(int64)
		**out = **in
	}
	if in.CheckpointConfig != nil {
		in, out := &in.CheckpointConfig, &out.CheckpointConfig
		*out = new(CheckpointConfig)
		(*in).DeepCopyInto(*out)
	}
	if in.CreationTime != nil {
		in, out := &in.CreationTime, &out.CreationTime
		*out = (*in).DeepCopy()
	}
	if in.DebugHookConfig != nil {
		in, out := &in.DebugHookConfig, &out.DebugHookConfig
		*out = new(DebugHookConfig)
		(*in).DeepCopyInto(*out)
	}
	if in.DebugRuleConfigurations != nil {
		in, out := &in.DebugRuleConfigurations, &out.DebugRuleConfigurations
		*out = make([]*DebugRuleConfiguration, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(DebugRuleConfiguration)
				(*in).DeepCopyInto(*out)
			}
		}
	}
	if in.DebugRuleEvaluationStatuses != nil {
		in, out := &in.DebugRuleEvaluationStatuses, &out.DebugRuleEvaluationStatuses
		*out = make([]*DebugRuleEvaluationStatus, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(DebugRuleEvaluationStatus)
				(*in).DeepCopyInto(*out)
			}
		}
	}
	if in.EnableInterContainerTrafficEncryption != nil {
		in, out := &in.EnableInterContainerTrafficEncryption, &out.EnableInterContainerTrafficEncryption
		*out = new(bool)
		**out = **in
	}
	if in.EnableManagedSpotTraining != nil {
		in, out := &in.EnableManagedSpotTraining, &out.EnableManagedSpotTraining
		*out = new(bool)
		**out = **in
	}
	if in.EnableNetworkIsolation != nil {
		in, out := &in.EnableNetworkIsolation, &out.EnableNetworkIsolation
		*out = new(bool)
		**out = **in
	}
	if in.ExperimentConfig != nil {
		in, out := &in.ExperimentConfig, &out.ExperimentConfig
		*out = new(ExperimentConfig)
		(*in).DeepCopyInto(*out)
	}
	if in.FailureReason != nil {
		in, out := &in.FailureReason, &out.FailureReason
		*out = new(string)
		**out = **in
	}
	if in.FinalMetricDataList != nil {
		in, out := &in.FinalMetricDataList, &out.FinalMetricDataList
		*out = make([]*MetricData, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(MetricData)
				(*in).DeepCopyInto(*out)
			}
		}
	}
	if in.HyperParameters != nil {
		in, out := &in.HyperParameters, &out.HyperParameters
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				in, out := &val, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.InputDataConfig != nil {
		in, out := &in.InputDataConfig, &out.InputDataConfig
		*out = make([]*Channel, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(Channel)
				(*in).DeepCopyInto(*out)
			}
		}
	}
	if in.LabelingJobARN != nil {
		in, out := &in.LabelingJobARN, &out.LabelingJobARN
		*out = new(string)
		**out = **in
	}
	if in.LastModifiedTime != nil {
		in, out := &in.LastModifiedTime, &out.LastModifiedTime
		*out = (*in).DeepCopy()
	}
	if in.ModelArtifacts != nil {
		in, out := &in.ModelArtifacts, &out.ModelArtifacts
		*out = new(ModelArtifacts)
		(*in).DeepCopyInto(*out)
	}
	if in.OutputDataConfig != nil {
		in, out := &in.OutputDataConfig, &out.OutputDataConfig
		*out = new(OutputDataConfig)
		(*in).DeepCopyInto(*out)
	}
	if in.ResourceConfig != nil {
		in, out := &in.ResourceConfig, &out.ResourceConfig
		*out = new(ResourceConfig)
		(*in).DeepCopyInto(*out)
	}
	if in.RoleARN != nil {
		in, out := &in.RoleARN, &out.RoleARN
		*out = new(string)
		**out = **in
	}
	if in.SecondaryStatus != nil {
		in, out := &in.SecondaryStatus, &out.SecondaryStatus
		*out = new(string)
		**out = **in
	}
	if in.SecondaryStatusTransitions != nil {
		in, out := &in.SecondaryStatusTransitions, &out.SecondaryStatusTransitions
		*out = make([]*SecondaryStatusTransition, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(SecondaryStatusTransition)
				(*in).DeepCopyInto(*out)
			}
		}
	}
	if in.StoppingCondition != nil {
		in, out := &in.StoppingCondition, &out.StoppingCondition
		*out = new(StoppingCondition)
		(*in).DeepCopyInto(*out)
	}
	if in.Tags != nil {
		in, out := &in.Tags, &out.Tags
		*out = make([]*Tag, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(Tag)
				(*in).DeepCopyInto(*out)
			}
		}
	}
	if in.TensorBoardOutputConfig != nil {
		in, out := &in.TensorBoardOutputConfig, &out.TensorBoardOutputConfig
		*out = new(TensorBoardOutputConfig)
		(*in).DeepCopyInto(*out)
	}
	if in.TrainingEndTime != nil {
		in, out := &in.TrainingEndTime, &out.TrainingEndTime
		*out = (*in).DeepCopy()
	}
	if in.TrainingJobARN != nil {
		in, out := &in.TrainingJobARN, &out.TrainingJobARN
		*out = new(string)
		**out = **in
	}
	if in.TrainingJobName != nil {
		in, out := &in.TrainingJobName, &out.TrainingJobName
		*out = new(string)
		**out = **in
	}
	if in.TrainingJobStatus != nil {
		in, out := &in.TrainingJobStatus, &out.TrainingJobStatus
		*out = new(string)
		**out = **in
	}
	if in.TrainingStartTime != nil {
		in, out := &in.TrainingStartTime, &out.TrainingStartTime
		*out = (*in).DeepCopy()
	}
	if in.TrainingTimeInSeconds != nil {
		in, out := &in.TrainingTimeInSeconds, &out.TrainingTimeInSeconds
		*out = new(int64)
		**out = **in
	}
	if in.TuningJobARN != nil {
		in, out := &in.TuningJobARN, &out.TuningJobARN
		*out = new(string)
		**out = **in
	}
	if in.VPCConfig != nil {
		in, out := &in.VPCConfig, &out.VPCConfig
		*out = new(VPCConfig)
		(*in).DeepCopyInto(*out)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TrainingJob_SDK.
func (in *TrainingJob_SDK) DeepCopy() *TrainingJob_SDK {
	if in == nil {
		return nil
	}
	out := new(TrainingJob_SDK)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TrainingSpecification) DeepCopyInto(out *TrainingSpecification) {
	*out = *in
	if in.MetricDefinitions != nil {
		in, out := &in.MetricDefinitions, &out.MetricDefinitions
		*out = make([]*MetricDefinition, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(MetricDefinition)
				(*in).DeepCopyInto(*out)
			}
		}
	}
	if in.SupportedHyperParameters != nil {
		in, out := &in.SupportedHyperParameters, &out.SupportedHyperParameters
		*out = make([]*HyperParameterSpecification, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(HyperParameterSpecification)
				(*in).DeepCopyInto(*out)
			}
		}
	}
	if in.SupportedTrainingInstanceTypes != nil {
		in, out := &in.SupportedTrainingInstanceTypes, &out.SupportedTrainingInstanceTypes
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.SupportedTuningJobObjectiveMetrics != nil {
		in, out := &in.SupportedTuningJobObjectiveMetrics, &out.SupportedTuningJobObjectiveMetrics
		*out = make([]*HyperParameterTuningJobObjective, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(HyperParameterTuningJobObjective)
				(*in).DeepCopyInto(*out)
			}
		}
	}
	if in.SupportsDistributedTraining != nil {
		in, out := &in.SupportsDistributedTraining, &out.SupportsDistributedTraining
		*out = new(bool)
		**out = **in
	}
	if in.TrainingChannels != nil {
		in, out := &in.TrainingChannels, &out.TrainingChannels
		*out = make([]*ChannelSpecification, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(ChannelSpecification)
				(*in).DeepCopyInto(*out)
			}
		}
	}
	if in.TrainingImage != nil {
		in, out := &in.TrainingImage, &out.TrainingImage
		*out = new(string)
		**out = **in
	}
	if in.TrainingImageDigest != nil {
		in, out := &in.TrainingImageDigest, &out.TrainingImageDigest
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TrainingSpecification.
func (in *TrainingSpecification) DeepCopy() *TrainingSpecification {
	if in == nil {
		return nil
	}
	out := new(TrainingSpecification)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TransformDataSource) DeepCopyInto(out *TransformDataSource) {
	*out = *in
	if in.S3DataSource != nil {
		in, out := &in.S3DataSource, &out.S3DataSource
		*out = new(TransformS3DataSource)
		(*in).DeepCopyInto(*out)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TransformDataSource.
func (in *TransformDataSource) DeepCopy() *TransformDataSource {
	if in == nil {
		return nil
	}
	out := new(TransformDataSource)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TransformInput) DeepCopyInto(out *TransformInput) {
	*out = *in
	if in.CompressionType != nil {
		in, out := &in.CompressionType, &out.CompressionType
		*out = new(string)
		**out = **in
	}
	if in.ContentType != nil {
		in, out := &in.ContentType, &out.ContentType
		*out = new(string)
		**out = **in
	}
	if in.DataSource != nil {
		in, out := &in.DataSource, &out.DataSource
		*out = new(TransformDataSource)
		(*in).DeepCopyInto(*out)
	}
	if in.SplitType != nil {
		in, out := &in.SplitType, &out.SplitType
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TransformInput.
func (in *TransformInput) DeepCopy() *TransformInput {
	if in == nil {
		return nil
	}
	out := new(TransformInput)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TransformJob) DeepCopyInto(out *TransformJob) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TransformJob.
func (in *TransformJob) DeepCopy() *TransformJob {
	if in == nil {
		return nil
	}
	out := new(TransformJob)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *TransformJob) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TransformJobDefinition) DeepCopyInto(out *TransformJobDefinition) {
	*out = *in
	if in.BatchStrategy != nil {
		in, out := &in.BatchStrategy, &out.BatchStrategy
		*out = new(string)
		**out = **in
	}
	if in.Environment != nil {
		in, out := &in.Environment, &out.Environment
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				in, out := &val, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.MaxConcurrentTransforms != nil {
		in, out := &in.MaxConcurrentTransforms, &out.MaxConcurrentTransforms
		*out = new(int64)
		**out = **in
	}
	if in.MaxPayloadInMB != nil {
		in, out := &in.MaxPayloadInMB, &out.MaxPayloadInMB
		*out = new(int64)
		**out = **in
	}
	if in.TransformInput != nil {
		in, out := &in.TransformInput, &out.TransformInput
		*out = new(TransformInput)
		(*in).DeepCopyInto(*out)
	}
	if in.TransformOutput != nil {
		in, out := &in.TransformOutput, &out.TransformOutput
		*out = new(TransformOutput)
		(*in).DeepCopyInto(*out)
	}
	if in.TransformResources != nil {
		in, out := &in.TransformResources, &out.TransformResources
		*out = new(TransformResources)
		(*in).DeepCopyInto(*out)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TransformJobDefinition.
func (in *TransformJobDefinition) DeepCopy() *TransformJobDefinition {
	if in == nil {
		return nil
	}
	out := new(TransformJobDefinition)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TransformJobList) DeepCopyInto(out *TransformJobList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]TransformJob, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TransformJobList.
func (in *TransformJobList) DeepCopy() *TransformJobList {
	if in == nil {
		return nil
	}
	out := new(TransformJobList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *TransformJobList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TransformJobObservation) DeepCopyInto(out *TransformJobObservation) {
	*out = *in
	if in.TransformJobARN != nil {
		in, out := &in.TransformJobARN, &out.TransformJobARN
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TransformJobObservation.
func (in *TransformJobObservation) DeepCopy() *TransformJobObservation {
	if in == nil {
		return nil
	}
	out := new(TransformJobObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TransformJobParameters) DeepCopyInto(out *TransformJobParameters) {
	*out = *in
	if in.BatchStrategy != nil {
		in, out := &in.BatchStrategy, &out.BatchStrategy
		*out = new(string)
		**out = **in
	}
	if in.DataProcessing != nil {
		in, out := &in.DataProcessing, &out.DataProcessing
		*out = new(DataProcessing)
		(*in).DeepCopyInto(*out)
	}
	if in.Environment != nil {
		in, out := &in.Environment, &out.Environment
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				in, out := &val, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.ExperimentConfig != nil {
		in, out := &in.ExperimentConfig, &out.ExperimentConfig
		*out = new(ExperimentConfig)
		(*in).DeepCopyInto(*out)
	}
	if in.MaxConcurrentTransforms != nil {
		in, out := &in.MaxConcurrentTransforms, &out.MaxConcurrentTransforms
		*out = new(int64)
		**out = **in
	}
	if in.MaxPayloadInMB != nil {
		in, out := &in.MaxPayloadInMB, &out.MaxPayloadInMB
		*out = new(int64)
		**out = **in
	}
	if in.ModelClientConfig != nil {
		in, out := &in.ModelClientConfig, &out.ModelClientConfig
		*out = new(ModelClientConfig)
		(*in).DeepCopyInto(*out)
	}
	if in.ModelName != nil {
		in, out := &in.ModelName, &out.ModelName
		*out = new(string)
		**out = **in
	}
	if in.ModelNameRef != nil {
		in, out := &in.ModelNameRef, &out.ModelNameRef
		*out = new(v1.Reference)
		**out = **in
	}
	if in.ModelNameSelector != nil {
		in, out := &in.ModelNameSelector, &out.ModelNameSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.Tags != nil {
		in, out := &in.Tags, &out.Tags
		*out = make([]*Tag, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(Tag)
				(*in).DeepCopyInto(*out)
			}
		}
	}
	if in.TransformInput != nil {
		in, out := &in.TransformInput, &out.TransformInput
		*out = new(TransformInput)
		(*in).DeepCopyInto(*out)
	}
	if in.TransformJobName != nil {
		in, out := &in.TransformJobName, &out.TransformJobName
		*out = new(string)
		**out = **in
	}
	if in.TransformOutput != nil {
		in, out := &in.TransformOutput, &out.TransformOutput
		*out = new(TransformOutput)
		(*in).DeepCopyInto(*out)
	}
	if in.TransformResources != nil {
		in, out := &in.TransformResources, &out.TransformResources
		*out = new(TransformResources)
		(*in).DeepCopyInto(*out)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TransformJobParameters.
func (in *TransformJobParameters) DeepCopy() *TransformJobParameters {
	if in == nil {
		return nil
	}
	out := new(TransformJobParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TransformJobSpec) DeepCopyInto(out *TransformJobSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TransformJobSpec.
func (in *TransformJobSpec) DeepCopy() *TransformJobSpec {
	if in == nil {
		return nil
	}
	out := new(TransformJobSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TransformJobStatus) DeepCopyInto(out *TransformJobStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TransformJobStatus.
func (in *TransformJobStatus) DeepCopy() *TransformJobStatus {
	if in == nil {
		return nil
	}
	out := new(TransformJobStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TransformJobSummary) DeepCopyInto(out *TransformJobSummary) {
	*out = *in
	if in.CreationTime != nil {
		in, out := &in.CreationTime, &out.CreationTime
		*out = (*in).DeepCopy()
	}
	if in.FailureReason != nil {
		in, out := &in.FailureReason, &out.FailureReason
		*out = new(string)
		**out = **in
	}
	if in.LastModifiedTime != nil {
		in, out := &in.LastModifiedTime, &out.LastModifiedTime
		*out = (*in).DeepCopy()
	}
	if in.TransformEndTime != nil {
		in, out := &in.TransformEndTime, &out.TransformEndTime
		*out = (*in).DeepCopy()
	}
	if in.TransformJobARN != nil {
		in, out := &in.TransformJobARN, &out.TransformJobARN
		*out = new(string)
		**out = **in
	}
	if in.TransformJobName != nil {
		in, out := &in.TransformJobName, &out.TransformJobName
		*out = new(string)
		**out = **in
	}
	if in.TransformJobStatus != nil {
		in, out := &in.TransformJobStatus, &out.TransformJobStatus
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TransformJobSummary.
func (in *TransformJobSummary) DeepCopy() *TransformJobSummary {
	if in == nil {
		return nil
	}
	out := new(TransformJobSummary)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TransformJob_SDK) DeepCopyInto(out *TransformJob_SDK) {
	*out = *in
	if in.AutoMLJobARN != nil {
		in, out := &in.AutoMLJobARN, &out.AutoMLJobARN
		*out = new(string)
		**out = **in
	}
	if in.BatchStrategy != nil {
		in, out := &in.BatchStrategy, &out.BatchStrategy
		*out = new(string)
		**out = **in
	}
	if in.CreationTime != nil {
		in, out := &in.CreationTime, &out.CreationTime
		*out = (*in).DeepCopy()
	}
	if in.DataProcessing != nil {
		in, out := &in.DataProcessing, &out.DataProcessing
		*out = new(DataProcessing)
		(*in).DeepCopyInto(*out)
	}
	if in.Environment != nil {
		in, out := &in.Environment, &out.Environment
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				in, out := &val, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.ExperimentConfig != nil {
		in, out := &in.ExperimentConfig, &out.ExperimentConfig
		*out = new(ExperimentConfig)
		(*in).DeepCopyInto(*out)
	}
	if in.FailureReason != nil {
		in, out := &in.FailureReason, &out.FailureReason
		*out = new(string)
		**out = **in
	}
	if in.LabelingJobARN != nil {
		in, out := &in.LabelingJobARN, &out.LabelingJobARN
		*out = new(string)
		**out = **in
	}
	if in.MaxConcurrentTransforms != nil {
		in, out := &in.MaxConcurrentTransforms, &out.MaxConcurrentTransforms
		*out = new(int64)
		**out = **in
	}
	if in.MaxPayloadInMB != nil {
		in, out := &in.MaxPayloadInMB, &out.MaxPayloadInMB
		*out = new(int64)
		**out = **in
	}
	if in.ModelClientConfig != nil {
		in, out := &in.ModelClientConfig, &out.ModelClientConfig
		*out = new(ModelClientConfig)
		(*in).DeepCopyInto(*out)
	}
	if in.ModelName != nil {
		in, out := &in.ModelName, &out.ModelName
		*out = new(string)
		**out = **in
	}
	if in.Tags != nil {
		in, out := &in.Tags, &out.Tags
		*out = make([]*Tag, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(Tag)
				(*in).DeepCopyInto(*out)
			}
		}
	}
	if in.TransformEndTime != nil {
		in, out := &in.TransformEndTime, &out.TransformEndTime
		*out = (*in).DeepCopy()
	}
	if in.TransformInput != nil {
		in, out := &in.TransformInput, &out.TransformInput
		*out = new(TransformInput)
		(*in).DeepCopyInto(*out)
	}
	if in.TransformJobARN != nil {
		in, out := &in.TransformJobARN, &out.TransformJobARN
		*out = new(string)
		**out = **in
	}
	if in.TransformJobName != nil {
		in, out := &in.TransformJobName, &out.TransformJobName
		*out = new(string)
		**out = **in
	}
	if in.TransformJobStatus != nil {
		in, out := &in.TransformJobStatus, &out.TransformJobStatus
		*out = new(string)
		**out = **in
	}
	if in.TransformOutput != nil {
		in, out := &in.TransformOutput, &out.TransformOutput
		*out = new(TransformOutput)
		(*in).DeepCopyInto(*out)
	}
	if in.TransformResources != nil {
		in, out := &in.TransformResources, &out.TransformResources
		*out = new(TransformResources)
		(*in).DeepCopyInto(*out)
	}
	if in.TransformStartTime != nil {
		in, out := &in.TransformStartTime, &out.TransformStartTime
		*out = (*in).DeepCopy()
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TransformJob_SDK.
func (in *TransformJob_SDK) DeepCopy() *TransformJob_SDK {
	if in == nil {
		return nil
	}
	out := new(TransformJob_SDK)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TransformOutput) DeepCopyInto(out *TransformOutput) {
	*out = *in
	if in.Accept != nil {
		in, out := &in.Accept, &out.Accept
		*out = new(string)
		**out = **in
	}
	if in.AssembleWith != nil {
		in, out := &in.AssembleWith, &out.AssembleWith
		*out = new(string)
		**out = **in
	}
	if in.KMSKeyID != nil {
		in, out := &in.KMSKeyID, &out.KMSKeyID
		*out = new(string)
		**out = **in
	}
	if in.S3OutputPath != nil {
		in, out := &in.S3OutputPath, &out.S3OutputPath
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TransformOutput.
func (in *TransformOutput) DeepCopy() *TransformOutput {
	if in == nil {
		return nil
	}
	out := new(TransformOutput)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TransformResources) DeepCopyInto(out *TransformResources) {
	*out = *in
	if in.InstanceCount != nil {
		in, out := &in.InstanceCount, &out.InstanceCount
		*out = new(int64)
		**out = **in
	}
	if in.InstanceType != nil {
		in, out := &in.InstanceType, &out.InstanceType
		*out = new(string)
		**out = **in
	}
	if in.VolumeKMSKeyID != nil {
		in, out := &in.VolumeKMSKeyID, &out.VolumeKMSKeyID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TransformResources.
func (in *TransformResources) DeepCopy() *TransformResources {
	if in == nil {
		return nil
	}
	out := new(TransformResources)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TransformS3DataSource) DeepCopyInto(out *TransformS3DataSource) {
	*out = *in
	if in.S3DataType != nil {
		in, out := &in.S3DataType, &out.S3DataType
		*out = new(string)
		**out = **in
	}
	if in.S3URI != nil {
		in, out := &in.S3URI, &out.S3URI
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TransformS3DataSource.
func (in *TransformS3DataSource) DeepCopy() *TransformS3DataSource {
	if in == nil {
		return nil
	}
	out := new(TransformS3DataSource)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Trial) DeepCopyInto(out *Trial) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Trial.
func (in *Trial) DeepCopy() *Trial {
	if in == nil {
		return nil
	}
	out := new(Trial)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *Trial) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TrialComponent) DeepCopyInto(out *TrialComponent) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TrialComponent.
func (in *TrialComponent) DeepCopy() *TrialComponent {
	if in == nil {
		return nil
	}
	out := new(TrialComponent)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *TrialComponent) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TrialComponentArtifact) DeepCopyInto(out *TrialComponentArtifact) {
	*out = *in
	if in.MediaType != nil {
		in, out := &in.MediaType, &out.MediaType
		*out = new(string)
		**out = **in
	}
	if in.Value != nil {
		in, out := &in.Value, &out.Value
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TrialComponentArtifact.
func (in *TrialComponentArtifact) DeepCopy() *TrialComponentArtifact {
	if in == nil {
		return nil
	}
	out := new(TrialComponentArtifact)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TrialComponentList) DeepCopyInto(out *TrialComponentList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]TrialComponent, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TrialComponentList.
func (in *TrialComponentList) DeepCopy() *TrialComponentList {
	if in == nil {
		return nil
	}
	out := new(TrialComponentList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *TrialComponentList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TrialComponentMetricSummary) DeepCopyInto(out *TrialComponentMetricSummary) {
	*out = *in
	if in.Avg != nil {
		in, out := &in.Avg, &out.Avg
		*out = new(float64)
		**out = **in
	}
	if in.Count != nil {
		in, out := &in.Count, &out.Count
		*out = new(int64)
		**out = **in
	}
	if in.Last != nil {
		in, out := &in.Last, &out.Last
		*out = new(float64)
		**out = **in
	}
	if in.Max != nil {
		in, out := &in.Max, &out.Max
		*out = new(float64)
		**out = **in
	}
	if in.MetricName != nil {
		in, out := &in.MetricName, &out.MetricName
		*out = new(string)
		**out = **in
	}
	if in.Min != nil {
		in, out := &in.Min, &out.Min
		*out = new(float64)
		**out = **in
	}
	if in.SourceARN != nil {
		in, out := &in.SourceARN, &out.SourceARN
		*out = new(string)
		**out = **in
	}
	if in.StdDev != nil {
		in, out := &in.StdDev, &out.StdDev
		*out = new(float64)
		**out = **in
	}
	if in.TimeStamp != nil {
		in, out := &in.TimeStamp, &out.TimeStamp
		*out = (*in).DeepCopy()
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TrialComponentMetricSummary.
func (in *TrialComponentMetricSummary) DeepCopy() *TrialComponentMetricSummary {
	if in == nil {
		return nil
	}
	out := new(TrialComponentMetricSummary)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TrialComponentObservation) DeepCopyInto(out *TrialComponentObservation) {
	*out = *in
	if in.TrialComponentARN != nil {
		in, out := &in.TrialComponentARN, &out.TrialComponentARN
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TrialComponentObservation.
func (in *TrialComponentObservation) DeepCopy() *TrialComponentObservation {
	if in == nil {
		return nil
	}
	out := new(TrialComponentObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TrialComponentParameterValue) DeepCopyInto(out *TrialComponentParameterValue) {
	*out = *in
	if in.NumberValue != nil {
		in, out := &in.NumberValue, &out.NumberValue
		*out = new(float64)
		**out = **in
	}
	if in.StringValue != nil {
		in, out := &in.StringValue, &out.StringValue
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TrialComponentParameterValue.
func (in *TrialComponentParameterValue) DeepCopy() *TrialComponentParameterValue {
	if in == nil {
		return nil
	}
	out := new(TrialComponentParameterValue)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TrialComponentParameters) DeepCopyInto(out *TrialComponentParameters) {
	*out = *in
	if in.DisplayName != nil {
		in, out := &in.DisplayName, &out.DisplayName
		*out = new(string)
		**out = **in
	}
	if in.EndTime != nil {
		in, out := &in.EndTime, &out.EndTime
		*out = (*in).DeepCopy()
	}
	if in.InputArtifacts != nil {
		in, out := &in.InputArtifacts, &out.InputArtifacts
		*out = make(map[string]*TrialComponentArtifact, len(*in))
		for key, val := range *in {
			var outVal *TrialComponentArtifact
			if val == nil {
				(*out)[key] = nil
			} else {
				in, out := &val, &outVal
				*out = new(TrialComponentArtifact)
				(*in).DeepCopyInto(*out)
			}
			(*out)[key] = outVal
		}
	}
	if in.OutputArtifacts != nil {
		in, out := &in.OutputArtifacts, &out.OutputArtifacts
		*out = make(map[string]*TrialComponentArtifact, len(*in))
		for key, val := range *in {
			var outVal *TrialComponentArtifact
			if val == nil {
				(*out)[key] = nil
			} else {
				in, out := &val, &outVal
				*out = new(TrialComponentArtifact)
				(*in).DeepCopyInto(*out)
			}
			(*out)[key] = outVal
		}
	}
	if in.Parameters != nil {
		in, out := &in.Parameters, &out.Parameters
		*out = make(map[string]*TrialComponentParameterValue, len(*in))
		for key, val := range *in {
			var outVal *TrialComponentParameterValue
			if val == nil {
				(*out)[key] = nil
			} else {
				in, out := &val, &outVal
				*out = new(TrialComponentParameterValue)
				(*in).DeepCopyInto(*out)
			}
			(*out)[key] = outVal
		}
	}
	if in.StartTime != nil {
		in, out := &in.StartTime, &out.StartTime
		*out = (*in).DeepCopy()
	}
	if in.Status != nil {
		in, out := &in.Status, &out.Status
		*out = new(TrialComponentStatus_SDK)
		(*in).DeepCopyInto(*out)
	}
	if in.Tags != nil {
		in, out := &in.Tags, &out.Tags
		*out = make([]*Tag, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(Tag)
				(*in).DeepCopyInto(*out)
			}
		}
	}
	if in.TrialComponentName != nil {
		in, out := &in.TrialComponentName, &out.TrialComponentName
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TrialComponentParameters.
func (in *TrialComponentParameters) DeepCopy() *TrialComponentParameters {
	if in == nil {
		return nil
	}
	out := new(TrialComponentParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TrialComponentSimpleSummary) DeepCopyInto(out *TrialComponentSimpleSummary) {
	*out = *in
	if in.CreatedBy != nil {
		in, out := &in.CreatedBy, &out.CreatedBy
		*out = new(UserContext)
		(*in).DeepCopyInto(*out)
	}
	if in.CreationTime != nil {
		in, out := &in.CreationTime, &out.CreationTime
		*out = (*in).DeepCopy()
	}
	if in.TrialComponentARN != nil {
		in, out := &in.TrialComponentARN, &out.TrialComponentARN
		*out = new(string)
		**out = **in
	}
	if in.TrialComponentName != nil {
		in, out := &in.TrialComponentName, &out.TrialComponentName
		*out = new(string)
		**out = **in
	}
	if in.TrialComponentSource != nil {
		in, out := &in.TrialComponentSource, &out.TrialComponentSource
		*out = new(TrialComponentSource)
		(*in).DeepCopyInto(*out)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TrialComponentSimpleSummary.
func (in *TrialComponentSimpleSummary) DeepCopy() *TrialComponentSimpleSummary {
	if in == nil {
		return nil
	}
	out := new(TrialComponentSimpleSummary)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TrialComponentSource) DeepCopyInto(out *TrialComponentSource) {
	*out = *in
	if in.SourceARN != nil {
		in, out := &in.SourceARN, &out.SourceARN
		*out = new(string)
		**out = **in
	}
	if in.SourceType != nil {
		in, out := &in.SourceType, &out.SourceType
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TrialComponentSource.
func (in *TrialComponentSource) DeepCopy() *TrialComponentSource {
	if in == nil {
		return nil
	}
	out := new(TrialComponentSource)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TrialComponentSourceDetail) DeepCopyInto(out *TrialComponentSourceDetail) {
	*out = *in
	if in.SourceARN != nil {
		in, out := &in.SourceARN, &out.SourceARN
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TrialComponentSourceDetail.
func (in *TrialComponentSourceDetail) DeepCopy() *TrialComponentSourceDetail {
	if in == nil {
		return nil
	}
	out := new(TrialComponentSourceDetail)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TrialComponentSpec) DeepCopyInto(out *TrialComponentSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TrialComponentSpec.
func (in *TrialComponentSpec) DeepCopy() *TrialComponentSpec {
	if in == nil {
		return nil
	}
	out := new(TrialComponentSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TrialComponentStatus) DeepCopyInto(out *TrialComponentStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TrialComponentStatus.
func (in *TrialComponentStatus) DeepCopy() *TrialComponentStatus {
	if in == nil {
		return nil
	}
	out := new(TrialComponentStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TrialComponentStatus_SDK) DeepCopyInto(out *TrialComponentStatus_SDK) {
	*out = *in
	if in.Message != nil {
		in, out := &in.Message, &out.Message
		*out = new(string)
		**out = **in
	}
	if in.PrimaryStatus != nil {
		in, out := &in.PrimaryStatus, &out.PrimaryStatus
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TrialComponentStatus_SDK.
func (in *TrialComponentStatus_SDK) DeepCopy() *TrialComponentStatus_SDK {
	if in == nil {
		return nil
	}
	out := new(TrialComponentStatus_SDK)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TrialComponentSummary) DeepCopyInto(out *TrialComponentSummary) {
	*out = *in
	if in.CreatedBy != nil {
		in, out := &in.CreatedBy, &out.CreatedBy
		*out = new(UserContext)
		(*in).DeepCopyInto(*out)
	}
	if in.CreationTime != nil {
		in, out := &in.CreationTime, &out.CreationTime
		*out = (*in).DeepCopy()
	}
	if in.DisplayName != nil {
		in, out := &in.DisplayName, &out.DisplayName
		*out = new(string)
		**out = **in
	}
	if in.EndTime != nil {
		in, out := &in.EndTime, &out.EndTime
		*out = (*in).DeepCopy()
	}
	if in.LastModifiedBy != nil {
		in, out := &in.LastModifiedBy, &out.LastModifiedBy
		*out = new(UserContext)
		(*in).DeepCopyInto(*out)
	}
	if in.LastModifiedTime != nil {
		in, out := &in.LastModifiedTime, &out.LastModifiedTime
		*out = (*in).DeepCopy()
	}
	if in.StartTime != nil {
		in, out := &in.StartTime, &out.StartTime
		*out = (*in).DeepCopy()
	}
	if in.Status != nil {
		in, out := &in.Status, &out.Status
		*out = new(TrialComponentStatus_SDK)
		(*in).DeepCopyInto(*out)
	}
	if in.TrialComponentARN != nil {
		in, out := &in.TrialComponentARN, &out.TrialComponentARN
		*out = new(string)
		**out = **in
	}
	if in.TrialComponentName != nil {
		in, out := &in.TrialComponentName, &out.TrialComponentName
		*out = new(string)
		**out = **in
	}
	if in.TrialComponentSource != nil {
		in, out := &in.TrialComponentSource, &out.TrialComponentSource
		*out = new(TrialComponentSource)
		(*in).DeepCopyInto(*out)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TrialComponentSummary.
func (in *TrialComponentSummary) DeepCopy() *TrialComponentSummary {
	if in == nil {
		return nil
	}
	out := new(TrialComponentSummary)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TrialComponent_SDK) DeepCopyInto(out *TrialComponent_SDK) {
	*out = *in
	if in.CreatedBy != nil {
		in, out := &in.CreatedBy, &out.CreatedBy
		*out = new(UserContext)
		(*in).DeepCopyInto(*out)
	}
	if in.CreationTime != nil {
		in, out := &in.CreationTime, &out.CreationTime
		*out = (*in).DeepCopy()
	}
	if in.DisplayName != nil {
		in, out := &in.DisplayName, &out.DisplayName
		*out = new(string)
		**out = **in
	}
	if in.EndTime != nil {
		in, out := &in.EndTime, &out.EndTime
		*out = (*in).DeepCopy()
	}
	if in.InputArtifacts != nil {
		in, out := &in.InputArtifacts, &out.InputArtifacts
		*out = make([]map[string]*TrialComponentArtifact, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = make(map[string]*TrialComponentArtifact, len(*in))
				for key, val := range *in {
					var outVal *TrialComponentArtifact
					if val == nil {
						(*out)[key] = nil
					} else {
						in, out := &val, &outVal
						*out = new(TrialComponentArtifact)
						(*in).DeepCopyInto(*out)
					}
					(*out)[key] = outVal
				}
			}
		}
	}
	if in.LastModifiedBy != nil {
		in, out := &in.LastModifiedBy, &out.LastModifiedBy
		*out = new(UserContext)
		(*in).DeepCopyInto(*out)
	}
	if in.LastModifiedTime != nil {
		in, out := &in.LastModifiedTime, &out.LastModifiedTime
		*out = (*in).DeepCopy()
	}
	if in.Metrics != nil {
		in, out := &in.Metrics, &out.Metrics
		*out = make([]*TrialComponentMetricSummary, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(TrialComponentMetricSummary)
				(*in).DeepCopyInto(*out)
			}
		}
	}
	if in.OutputArtifacts != nil {
		in, out := &in.OutputArtifacts, &out.OutputArtifacts
		*out = make([]map[string]*TrialComponentArtifact, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = make(map[string]*TrialComponentArtifact, len(*in))
				for key, val := range *in {
					var outVal *TrialComponentArtifact
					if val == nil {
						(*out)[key] = nil
					} else {
						in, out := &val, &outVal
						*out = new(TrialComponentArtifact)
						(*in).DeepCopyInto(*out)
					}
					(*out)[key] = outVal
				}
			}
		}
	}
	if in.Parameters != nil {
		in, out := &in.Parameters, &out.Parameters
		*out = make([]map[string]*TrialComponentParameterValue, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = make(map[string]*TrialComponentParameterValue, len(*in))
				for key, val := range *in {
					var outVal *TrialComponentParameterValue
					if val == nil {
						(*out)[key] = nil
					} else {
						in, out := &val, &outVal
						*out = new(TrialComponentParameterValue)
						(*in).DeepCopyInto(*out)
					}
					(*out)[key] = outVal
				}
			}
		}
	}
	if in.Source != nil {
		in, out := &in.Source, &out.Source
		*out = new(TrialComponentSource)
		(*in).DeepCopyInto(*out)
	}
	if in.StartTime != nil {
		in, out := &in.StartTime, &out.StartTime
		*out = (*in).DeepCopy()
	}
	if in.Status != nil {
		in, out := &in.Status, &out.Status
		*out = new(TrialComponentStatus_SDK)
		(*in).DeepCopyInto(*out)
	}
	if in.Tags != nil {
		in, out := &in.Tags, &out.Tags
		*out = make([]*Tag, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(Tag)
				(*in).DeepCopyInto(*out)
			}
		}
	}
	if in.TrialComponentARN != nil {
		in, out := &in.TrialComponentARN, &out.TrialComponentARN
		*out = new(string)
		**out = **in
	}
	if in.TrialComponentName != nil {
		in, out := &in.TrialComponentName, &out.TrialComponentName
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TrialComponent_SDK.
func (in *TrialComponent_SDK) DeepCopy() *TrialComponent_SDK {
	if in == nil {
		return nil
	}
	out := new(TrialComponent_SDK)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TrialList) DeepCopyInto(out *TrialList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]Trial, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TrialList.
func (in *TrialList) DeepCopy() *TrialList {
	if in == nil {
		return nil
	}
	out := new(TrialList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *TrialList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TrialObservation) DeepCopyInto(out *TrialObservation) {
	*out = *in
	if in.TrialARN != nil {
		in, out := &in.TrialARN, &out.TrialARN
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TrialObservation.
func (in *TrialObservation) DeepCopy() *TrialObservation {
	if in == nil {
		return nil
	}
	out := new(TrialObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TrialParameters) DeepCopyInto(out *TrialParameters) {
	*out = *in
	if in.DisplayName != nil {
		in, out := &in.DisplayName, &out.DisplayName
		*out = new(string)
		**out = **in
	}
	if in.ExperimentName != nil {
		in, out := &in.ExperimentName, &out.ExperimentName
		*out = new(string)
		**out = **in
	}
	if in.ExperimentNameRef != nil {
		in, out := &in.ExperimentNameRef, &out.ExperimentNameRef
		*out = new(v1.Reference)
		**out = **in
	}
	if in.ExperimentNameSelector != nil {
		in, out := &in.ExperimentNameSelector, &out.ExperimentNameSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.Tags != nil {
		in, out := &in.Tags, &out.Tags
		*out = make([]*Tag, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(Tag)
				(*in).DeepCopyInto(*out)
			}
		}
	}
	if in.TrialName != nil {
		in, out := &in.TrialName, &out.TrialName
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TrialParameters.
func (in *TrialParameters) DeepCopy() *TrialParameters {
	if in == nil {
		return nil
	}
	out := new(TrialParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TrialSource) DeepCopyInto(out *TrialSource) {
	*out = *in
	if in.SourceARN != nil {
		in, out := &in.SourceARN, &out.SourceARN
		*out = new(string)
		**out = **in
	}
	if in.SourceType != nil {
		in, out := &in.SourceType, &out.SourceType
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TrialSource.
func (in *TrialSource) DeepCopy() *TrialSource {
	if in == nil {
		return nil
	}
	out := new(TrialSource)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TrialSpec) DeepCopyInto(out *TrialSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TrialSpec.
func (in *TrialSpec) DeepCopy() *TrialSpec {
	if in == nil {
		return nil
	}
	out := new(TrialSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TrialStatus) DeepCopyInto(out *TrialStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TrialStatus.
func (in *TrialStatus) DeepCopy() *TrialStatus {
	if in == nil {
		return nil
	}
	out := new(TrialStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TrialSummary) DeepCopyInto(out *TrialSummary) {
	*out = *in
	if in.CreationTime != nil {
		in, out := &in.CreationTime, &out.CreationTime
		*out = (*in).DeepCopy()
	}
	if in.DisplayName != nil {
		in, out := &in.DisplayName, &out.DisplayName
		*out = new(string)
		**out = **in
	}
	if in.LastModifiedTime != nil {
		in, out := &in.LastModifiedTime, &out.LastModifiedTime
		*out = (*in).DeepCopy()
	}
	if in.TrialARN != nil {
		in, out := &in.TrialARN, &out.TrialARN
		*out = new(string)
		**out = **in
	}
	if in.TrialName != nil {
		in, out := &in.TrialName, &out.TrialName
		*out = new(string)
		**out = **in
	}
	if in.TrialSource != nil {
		in, out := &in.TrialSource, &out.TrialSource
		*out = new(TrialSource)
		(*in).DeepCopyInto(*out)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TrialSummary.
func (in *TrialSummary) DeepCopy() *TrialSummary {
	if in == nil {
		return nil
	}
	out := new(TrialSummary)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Trial_SDK) DeepCopyInto(out *Trial_SDK) {
	*out = *in
	if in.CreatedBy != nil {
		in, out := &in.CreatedBy, &out.CreatedBy
		*out = new(UserContext)
		(*in).DeepCopyInto(*out)
	}
	if in.CreationTime != nil {
		in, out := &in.CreationTime, &out.CreationTime
		*out = (*in).DeepCopy()
	}
	if in.DisplayName != nil {
		in, out := &in.DisplayName, &out.DisplayName
		*out = new(string)
		**out = **in
	}
	if in.ExperimentName != nil {
		in, out := &in.ExperimentName, &out.ExperimentName
		*out = new(string)
		**out = **in
	}
	if in.LastModifiedBy != nil {
		in, out := &in.LastModifiedBy, &out.LastModifiedBy
		*out = new(UserContext)
		(*in).DeepCopyInto(*out)
	}
	if in.LastModifiedTime != nil {
		in, out := &in.LastModifiedTime, &out.LastModifiedTime
		*out = (*in).DeepCopy()
	}
	if in.Source != nil {
		in, out := &in.Source, &out.Source
		*out = new(TrialSource)
		(*in).DeepCopyInto(*out)
	}
	if in.Tags != nil {
		in, out := &in.Tags, &out.Tags
		*out = make([]*Tag, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(Tag)
				(*in).DeepCopyInto(*out)
			}
		}
	}
	if in.TrialARN != nil {
		in, out := &in.TrialARN, &out.TrialARN
		*out = new(string)
		**out = **in
	}
	if in.TrialName != nil {
		in, out := &in.TrialName, &out.TrialName
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Trial_SDK.
func (in *Trial_SDK) DeepCopy() *Trial_SDK {
	if in == nil {
		return nil
	}
	out := new(Trial_SDK)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TuningJobCompletionCriteria) DeepCopyInto(out *TuningJobCompletionCriteria) {
	*out = *in
	if in.TargetObjectiveMetricValue != nil {
		in, out := &in.TargetObjectiveMetricValue, &out.TargetObjectiveMetricValue
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TuningJobCompletionCriteria.
func (in *TuningJobCompletionCriteria) DeepCopy() *TuningJobCompletionCriteria {
	if in == nil {
		return nil
	}
	out := new(TuningJobCompletionCriteria)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *USD) DeepCopyInto(out *USD) {
	*out = *in
	if in.Cents != nil {
		in, out := &in.Cents, &out.Cents
		*out = new(int64)
		**out = **in
	}
	if in.Dollars != nil {
		in, out := &in.Dollars, &out.Dollars
		*out = new(int64)
		**out = **in
	}
	if in.TenthFractionsOfACent != nil {
		in, out := &in.TenthFractionsOfACent, &out.TenthFractionsOfACent
		*out = new(int64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new USD.
func (in *USD) DeepCopy() *USD {
	if in == nil {
		return nil
	}
	out := new(USD)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *UiConfig) DeepCopyInto(out *UiConfig) {
	*out = *in
	if in.HumanTaskUiARN != nil {
		in, out := &in.HumanTaskUiARN, &out.HumanTaskUiARN
		*out = new(string)
		**out = **in
	}
	if in.HumanTaskUiARNRef != nil {
		in, out := &in.HumanTaskUiARNRef, &out.HumanTaskUiARNRef
		*out = new(v1.Reference)
		**out = **in
	}
	if in.HumanTaskUiARNSelector != nil {
		in, out := &in.HumanTaskUiARNSelector, &out.HumanTaskUiARNSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.UiTemplateS3URI != nil {
		in, out := &in.UiTemplateS3URI, &out.UiTemplateS3URI
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new UiConfig.
func (in *UiConfig) DeepCopy() *UiConfig {
	if in == nil {
		return nil
	}
	out := new(UiConfig)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *UiTemplate) DeepCopyInto(out *UiTemplate) {
	*out = *in
	if in.Content != nil {
		in, out := &in.Content, &out.Content
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new UiTemplate.
func (in *UiTemplate) DeepCopy() *UiTemplate {
	if in == nil {
		return nil
	}
	out := new(UiTemplate)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *UiTemplateInfo) DeepCopyInto(out *UiTemplateInfo) {
	*out = *in
	if in.ContentSha256 != nil {
		in, out := &in.ContentSha256, &out.ContentSha256
		*out = new(string)
		**out = **in
	}
	if in.URL != nil {
		in, out := &in.URL, &out.URL
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new UiTemplateInfo.
func (in *UiTemplateInfo) DeepCopy() *UiTemplateInfo {
	if in == nil {
		return nil
	}
	out := new(UiTemplateInfo)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *UserContext) DeepCopyInto(out *UserContext) {
	*out = *in
	if in.DomainID != nil {
		in, out := &in.DomainID, &out.DomainID
		*out = new(string)
		**out = **in
	}
	if in.UserProfileARN != nil {
		in, out := &in.UserProfileARN, &out.UserProfileARN
		*out = new(string)
		**out = **in
	}
	if in.UserProfileName != nil {
		in, out := &in.UserProfileName, &out.UserProfileName
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new UserContext.
func (in *UserContext) DeepCopy() *UserContext {
	if in == nil {
		return nil
	}
	out := new(UserContext)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *UserProfile) DeepCopyInto(out *UserProfile) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new UserProfile.
func (in *UserProfile) DeepCopy() *UserProfile {
	if in == nil {
		return nil
	}
	out := new(UserProfile)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *UserProfile) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *UserProfileDetails) DeepCopyInto(out *UserProfileDetails) {
	*out = *in
	if in.CreationTime != nil {
		in, out := &in.CreationTime, &out.CreationTime
		*out = (*in).DeepCopy()
	}
	if in.DomainID != nil {
		in, out := &in.DomainID, &out.DomainID
		*out = new(string)
		**out = **in
	}
	if in.LastModifiedTime != nil {
		in, out := &in.LastModifiedTime, &out.LastModifiedTime
		*out = (*in).DeepCopy()
	}
	if in.Status != nil {
		in, out := &in.Status, &out.Status
		*out = new(string)
		**out = **in
	}
	if in.UserProfileName != nil {
		in, out := &in.UserProfileName, &out.UserProfileName
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new UserProfileDetails.
func (in *UserProfileDetails) DeepCopy() *UserProfileDetails {
	if in == nil {
		return nil
	}
	out := new(UserProfileDetails)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *UserProfileList) DeepCopyInto(out *UserProfileList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]UserProfile, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new UserProfileList.
func (in *UserProfileList) DeepCopy() *UserProfileList {
	if in == nil {
		return nil
	}
	out := new(UserProfileList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *UserProfileList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *UserProfileObservation) DeepCopyInto(out *UserProfileObservation) {
	*out = *in
	if in.UserProfileARN != nil {
		in, out := &in.UserProfileARN, &out.UserProfileARN
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new UserProfileObservation.
func (in *UserProfileObservation) DeepCopy() *UserProfileObservation {
	if in == nil {
		return nil
	}
	out := new(UserProfileObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *UserProfileParameters) DeepCopyInto(out *UserProfileParameters) {
	*out = *in
	if in.DomainID != nil {
		in, out := &in.DomainID, &out.DomainID
		*out = new(string)
		**out = **in
	}
	if in.DomainIDRef != nil {
		in, out := &in.DomainIDRef, &out.DomainIDRef
		*out = new(v1.Reference)
		**out = **in
	}
	if in.DomainIDSelector != nil {
		in, out := &in.DomainIDSelector, &out.DomainIDSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.SingleSignOnUserIdentifier != nil {
		in, out := &in.SingleSignOnUserIdentifier, &out.SingleSignOnUserIdentifier
		*out = new(string)
		**out = **in
	}
	if in.SingleSignOnUserValue != nil {
		in, out := &in.SingleSignOnUserValue, &out.SingleSignOnUserValue
		*out = new(string)
		**out = **in
	}
	if in.Tags != nil {
		in, out := &in.Tags, &out.Tags
		*out = make([]*Tag, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(Tag)
				(*in).DeepCopyInto(*out)
			}
		}
	}
	if in.UserProfileName != nil {
		in, out := &in.UserProfileName, &out.UserProfileName
		*out = new(string)
		**out = **in
	}
	if in.UserSettings != nil {
		in, out := &in.UserSettings, &out.UserSettings
		*out = new(UserSettings)
		(*in).DeepCopyInto(*out)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new UserProfileParameters.
func (in *UserProfileParameters) DeepCopy() *UserProfileParameters {
	if in == nil {
		return nil
	}
	out := new(UserProfileParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *UserProfileSpec) DeepCopyInto(out *UserProfileSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new UserProfileSpec.
func (in *UserProfileSpec) DeepCopy() *UserProfileSpec {
	if in == nil {
		return nil
	}
	out := new(UserProfileSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *UserProfileStatus) DeepCopyInto(out *UserProfileStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new UserProfileStatus.
func (in *UserProfileStatus) DeepCopy() *UserProfileStatus {
	if in == nil {
		return nil
	}
	out := new(UserProfileStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *UserSettings) DeepCopyInto(out *UserSettings) {
	*out = *in
	if in.ExecutionRole != nil {
		in, out := &in.ExecutionRole, &out.ExecutionRole
		*out = new(string)
		**out = **in
	}
	if in.ExecutionRoleRef != nil {
		in, out := &in.ExecutionRoleRef, &out.ExecutionRoleRef
		*out = new(v1.Reference)
		**out = **in
	}
	if in.ExecutionRoleSelector != nil {
		in, out := &in.ExecutionRoleSelector, &out.ExecutionRoleSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.JupyterServerAppSettings != nil {
		in, out := &in.JupyterServerAppSettings, &out.JupyterServerAppSettings
		*out = new(JupyterServerAppSettings)
		(*in).DeepCopyInto(*out)
	}
	if in.KernelGatewayAppSettings != nil {
		in, out := &in.KernelGatewayAppSettings, &out.KernelGatewayAppSettings
		*out = new(KernelGatewayAppSettings)
		(*in).DeepCopyInto(*out)
	}
	if in.SecurityGroups != nil {
		in, out := &in.SecurityGroups, &out.SecurityGroups
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.SecurityGroupsRef != nil {
		in, out := &in.SecurityGroupsRef, &out.SecurityGroupsRef
		*out = make([]v1.Reference, len(*in))
		copy(*out, *in)
	}
	if in.SecurityGroupsSelector != nil {
		in, out := &in.SecurityGroupsSelector, &out.SecurityGroupsSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.SharingSettings != nil {
		in, out := &in.SharingSettings, &out.SharingSettings
		*out = new(SharingSettings)
		(*in).DeepCopyInto(*out)
	}
	if in.TensorBoardAppSettings != nil {
		in, out := &in.TensorBoardAppSettings, &out.TensorBoardAppSettings
		*out = new(TensorBoardAppSettings)
		(*in).DeepCopyInto(*out)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new UserSettings.
func (in *UserSettings) DeepCopy() *UserSettings {
	if in == nil {
		return nil
	}
	out := new(UserSettings)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VPCConfig) DeepCopyInto(out *VPCConfig) {
	*out = *in
	if in.SecurityGroupIDs != nil {
		in, out := &in.SecurityGroupIDs, &out.SecurityGroupIDs
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.SecurityGroupIDsRef != nil {
		in, out := &in.SecurityGroupIDsRef, &out.SecurityGroupIDsRef
		*out = make([]v1.Reference, len(*in))
		copy(*out, *in)
	}
	if in.SecurityGroupIDsSelector != nil {
		in, out := &in.SecurityGroupIDsSelector, &out.SecurityGroupIDsSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.Subnets != nil {
		in, out := &in.Subnets, &out.Subnets
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.SubnetsRef != nil {
		in, out := &in.SubnetsRef, &out.SubnetsRef
		*out = make([]v1.Reference, len(*in))
		copy(*out, *in)
	}
	if in.SubnetsSelector != nil {
		in, out := &in.SubnetsSelector, &out.SubnetsSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VPCConfig.
func (in *VPCConfig) DeepCopy() *VPCConfig {
	if in == nil {
		return nil
	}
	out := new(VPCConfig)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VariantProperty) DeepCopyInto(out *VariantProperty) {
	*out = *in
	if in.VariantPropertyType != nil {
		in, out := &in.VariantPropertyType, &out.VariantPropertyType
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VariantProperty.
func (in *VariantProperty) DeepCopy() *VariantProperty {
	if in == nil {
		return nil
	}
	out := new(VariantProperty)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Workforce) DeepCopyInto(out *Workforce) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Workforce.
func (in *Workforce) DeepCopy() *Workforce {
	if in == nil {
		return nil
	}
	out := new(Workforce)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *Workforce) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *WorkforceList) DeepCopyInto(out *WorkforceList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]Workforce, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new WorkforceList.
func (in *WorkforceList) DeepCopy() *WorkforceList {
	if in == nil {
		return nil
	}
	out := new(WorkforceList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *WorkforceList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *WorkforceObservation) DeepCopyInto(out *WorkforceObservation) {
	*out = *in
	if in.WorkforceARN != nil {
		in, out := &in.WorkforceARN, &out.WorkforceARN
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new WorkforceObservation.
func (in *WorkforceObservation) DeepCopy() *WorkforceObservation {
	if in == nil {
		return nil
	}
	out := new(WorkforceObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *WorkforceParameters) DeepCopyInto(out *WorkforceParameters) {
	*out = *in
	if in.CognitoConfig != nil {
		in, out := &in.CognitoConfig, &out.CognitoConfig
		*out = new(CognitoConfig)
		(*in).DeepCopyInto(*out)
	}
	if in.OidcConfig != nil {
		in, out := &in.OidcConfig, &out.OidcConfig
		*out = new(OidcConfig)
		(*in).DeepCopyInto(*out)
	}
	if in.SourceIPConfig != nil {
		in, out := &in.SourceIPConfig, &out.SourceIPConfig
		*out = new(SourceIPConfig)
		(*in).DeepCopyInto(*out)
	}
	if in.Tags != nil {
		in, out := &in.Tags, &out.Tags
		*out = make([]*Tag, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(Tag)
				(*in).DeepCopyInto(*out)
			}
		}
	}
	if in.WorkforceName != nil {
		in, out := &in.WorkforceName, &out.WorkforceName
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new WorkforceParameters.
func (in *WorkforceParameters) DeepCopy() *WorkforceParameters {
	if in == nil {
		return nil
	}
	out := new(WorkforceParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *WorkforceSpec) DeepCopyInto(out *WorkforceSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new WorkforceSpec.
func (in *WorkforceSpec) DeepCopy() *WorkforceSpec {
	if in == nil {
		return nil
	}
	out := new(WorkforceSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *WorkforceStatus) DeepCopyInto(out *WorkforceStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new WorkforceStatus.
func (in *WorkforceStatus) DeepCopy() *WorkforceStatus {
	if in == nil {
		return nil
	}
	out := new(WorkforceStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Workforce_SDK) DeepCopyInto(out *Workforce_SDK) {
	*out = *in
	if in.CognitoConfig != nil {
		in, out := &in.CognitoConfig, &out.CognitoConfig
		*out = new(CognitoConfig)
		(*in).DeepCopyInto(*out)
	}
	if in.CreateDate != nil {
		in, out := &in.CreateDate, &out.CreateDate
		*out = (*in).DeepCopy()
	}
	if in.LastUpdatedDate != nil {
		in, out := &in.LastUpdatedDate, &out.LastUpdatedDate
		*out = (*in).DeepCopy()
	}
	if in.OidcConfig != nil {
		in, out := &in.OidcConfig, &out.OidcConfig
		*out = new(OidcConfigForResponse)
		(*in).DeepCopyInto(*out)
	}
	if in.SourceIPConfig != nil {
		in, out := &in.SourceIPConfig, &out.SourceIPConfig
		*out = new(SourceIPConfig)
		(*in).DeepCopyInto(*out)
	}
	if in.SubDomain != nil {
		in, out := &in.SubDomain, &out.SubDomain
		*out = new(string)
		**out = **in
	}
	if in.WorkforceARN != nil {
		in, out := &in.WorkforceARN, &out.WorkforceARN
		*out = new(string)
		**out = **in
	}
	if in.WorkforceName != nil {
		in, out := &in.WorkforceName, &out.WorkforceName
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Workforce_SDK.
func (in *Workforce_SDK) DeepCopy() *Workforce_SDK {
	if in == nil {
		return nil
	}
	out := new(Workforce_SDK)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Workteam) DeepCopyInto(out *Workteam) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Workteam.
func (in *Workteam) DeepCopy() *Workteam {
	if in == nil {
		return nil
	}
	out := new(Workteam)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *Workteam) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *WorkteamList) DeepCopyInto(out *WorkteamList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]Workteam, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new WorkteamList.
func (in *WorkteamList) DeepCopy() *WorkteamList {
	if in == nil {
		return nil
	}
	out := new(WorkteamList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *WorkteamList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *WorkteamObservation) DeepCopyInto(out *WorkteamObservation) {
	*out = *in
	if in.WorkteamARN != nil {
		in, out := &in.WorkteamARN, &out.WorkteamARN
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new WorkteamObservation.
func (in *WorkteamObservation) DeepCopy() *WorkteamObservation {
	if in == nil {
		return nil
	}
	out := new(WorkteamObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *WorkteamParameters) DeepCopyInto(out *WorkteamParameters) {
	*out = *in
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.MemberDefinitions != nil {
		in, out := &in.MemberDefinitions, &out.MemberDefinitions
		*out = make([]*MemberDefinition, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(MemberDefinition)
				(*in).DeepCopyInto(*out)
			}
		}
	}
	if in.NotificationConfiguration != nil {
		in, out := &in.NotificationConfiguration, &out.NotificationConfiguration
		*out = new(NotificationConfiguration)
		(*in).DeepCopyInto(*out)
	}
	if in.Tags != nil {
		in, out := &in.Tags, &out.Tags
		*out = make([]*Tag, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(Tag)
				(*in).DeepCopyInto(*out)
			}
		}
	}
	if in.WorkforceName != nil {
		in, out := &in.WorkforceName, &out.WorkforceName
		*out = new(string)
		**out = **in
	}
	if in.WorkforceNameRef != nil {
		in, out := &in.WorkforceNameRef, &out.WorkforceNameRef
		*out = new(v1.Reference)
		**out = **in
	}
	if in.WorkforceNameSelector != nil {
		in, out := &in.WorkforceNameSelector, &out.WorkforceNameSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.WorkteamName != nil {
		in, out := &in.WorkteamName, &out.WorkteamName
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new WorkteamParameters.
func (in *WorkteamParameters) DeepCopy() *WorkteamParameters {
	if in == nil {
		return nil
	}
	out := new(WorkteamParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *WorkteamSpec) DeepCopyInto(out *WorkteamSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new WorkteamSpec.
func (in *WorkteamSpec) DeepCopy() *WorkteamSpec {
	if in == nil {
		return nil
	}
	out := new(WorkteamSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *WorkteamStatus) DeepCopyInto(out *WorkteamStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new WorkteamStatus.
func (in *WorkteamStatus) DeepCopy() *WorkteamStatus {
	if in == nil {
		return nil
	}
	out := new(WorkteamStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Workteam_SDK) DeepCopyInto(out *Workteam_SDK) {
	*out = *in
	if in.CreateDate != nil {
		in, out := &in.CreateDate, &out.CreateDate
		*out = (*in).DeepCopy()
	}
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.LastUpdatedDate != nil {
		in, out := &in.LastUpdatedDate, &out.LastUpdatedDate
		*out = (*in).DeepCopy()
	}
	if in.MemberDefinitions != nil {
		in, out := &in.MemberDefinitions, &out.MemberDefinitions
		*out = make([]*MemberDefinition, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(MemberDefinition)
				(*in).DeepCopyInto(*out)
			}
		}
	}
	if in.NotificationConfiguration != nil {
		in, out := &in.NotificationConfiguration, &out.NotificationConfiguration
		*out = new(NotificationConfiguration)
		(*in).DeepCopyInto(*out)
	}
	if in.ProductListingIDs != nil {
		in, out := &in.ProductListingIDs, &out.ProductListingIDs
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.SubDomain != nil {
		in, out := &in.SubDomain, &out.SubDomain
		*out = new(string)
		**out = **in
	}
	if in.WorkforceARN != nil {
		in, out := &in.WorkforceARN, &out.WorkforceARN
		*out = new(string)
		**out = **in
	}
	if in.WorkteamARN != nil {
		in, out := &in.WorkteamARN, &out.WorkteamARN
		*out = new(string)
		**out = **in
	}
	if in.WorkteamName != nil {
		in, out := &in.WorkteamName, &out.WorkteamName
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Workteam_SDK.
func (in *Workteam_SDK) DeepCopy() *Workteam_SDK {
	if in == nil {
		return nil
	}
	out := new(Workteam_SDK)
	in.DeepCopyInto(out)
	return out
}
