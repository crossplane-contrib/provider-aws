// +build !ignore_autogenerated

/*
Copyright 2020 The Crossplane Authors.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by controller-gen. DO NOT EDIT.

package v1alpha1

import (
	runtime "k8s.io/apimachinery/pkg/runtime"
)

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Action) DeepCopyInto(out *Action) {
	*out = *in
	if in.Arguments != nil {
		in, out := &in.Arguments, &out.Arguments
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				in, out := &val, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.CrawlerName != nil {
		in, out := &in.CrawlerName, &out.CrawlerName
		*out = new(string)
		**out = **in
	}
	if in.JobName != nil {
		in, out := &in.JobName, &out.JobName
		*out = new(string)
		**out = **in
	}
	if in.NotificationProperty != nil {
		in, out := &in.NotificationProperty, &out.NotificationProperty
		*out = new(NotificationProperty)
		(*in).DeepCopyInto(*out)
	}
	if in.SecurityConfiguration != nil {
		in, out := &in.SecurityConfiguration, &out.SecurityConfiguration
		*out = new(string)
		**out = **in
	}
	if in.Timeout != nil {
		in, out := &in.Timeout, &out.Timeout
		*out = new(int64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Action.
func (in *Action) DeepCopy() *Action {
	if in == nil {
		return nil
	}
	out := new(Action)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *BatchStopJobRunError) DeepCopyInto(out *BatchStopJobRunError) {
	*out = *in
	if in.JobName != nil {
		in, out := &in.JobName, &out.JobName
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new BatchStopJobRunError.
func (in *BatchStopJobRunError) DeepCopy() *BatchStopJobRunError {
	if in == nil {
		return nil
	}
	out := new(BatchStopJobRunError)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *BatchStopJobRunSuccessfulSubmission) DeepCopyInto(out *BatchStopJobRunSuccessfulSubmission) {
	*out = *in
	if in.JobName != nil {
		in, out := &in.JobName, &out.JobName
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new BatchStopJobRunSuccessfulSubmission.
func (in *BatchStopJobRunSuccessfulSubmission) DeepCopy() *BatchStopJobRunSuccessfulSubmission {
	if in == nil {
		return nil
	}
	out := new(BatchStopJobRunSuccessfulSubmission)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CatalogEntry) DeepCopyInto(out *CatalogEntry) {
	*out = *in
	if in.DatabaseName != nil {
		in, out := &in.DatabaseName, &out.DatabaseName
		*out = new(string)
		**out = **in
	}
	if in.TableName != nil {
		in, out := &in.TableName, &out.TableName
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CatalogEntry.
func (in *CatalogEntry) DeepCopy() *CatalogEntry {
	if in == nil {
		return nil
	}
	out := new(CatalogEntry)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CatalogImportStatus) DeepCopyInto(out *CatalogImportStatus) {
	*out = *in
	if in.ImportCompleted != nil {
		in, out := &in.ImportCompleted, &out.ImportCompleted
		*out = new(bool)
		**out = **in
	}
	if in.ImportTime != nil {
		in, out := &in.ImportTime, &out.ImportTime
		*out = (*in).DeepCopy()
	}
	if in.ImportedBy != nil {
		in, out := &in.ImportedBy, &out.ImportedBy
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CatalogImportStatus.
func (in *CatalogImportStatus) DeepCopy() *CatalogImportStatus {
	if in == nil {
		return nil
	}
	out := new(CatalogImportStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CatalogTarget) DeepCopyInto(out *CatalogTarget) {
	*out = *in
	if in.DatabaseName != nil {
		in, out := &in.DatabaseName, &out.DatabaseName
		*out = new(string)
		**out = **in
	}
	if in.Tables != nil {
		in, out := &in.Tables, &out.Tables
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CatalogTarget.
func (in *CatalogTarget) DeepCopy() *CatalogTarget {
	if in == nil {
		return nil
	}
	out := new(CatalogTarget)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Classifier) DeepCopyInto(out *Classifier) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Classifier.
func (in *Classifier) DeepCopy() *Classifier {
	if in == nil {
		return nil
	}
	out := new(Classifier)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *Classifier) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ClassifierList) DeepCopyInto(out *ClassifierList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]Classifier, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ClassifierList.
func (in *ClassifierList) DeepCopy() *ClassifierList {
	if in == nil {
		return nil
	}
	out := new(ClassifierList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *ClassifierList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ClassifierObservation) DeepCopyInto(out *ClassifierObservation) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ClassifierObservation.
func (in *ClassifierObservation) DeepCopy() *ClassifierObservation {
	if in == nil {
		return nil
	}
	out := new(ClassifierObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ClassifierParameters) DeepCopyInto(out *ClassifierParameters) {
	*out = *in
	if in.CsvClassifier != nil {
		in, out := &in.CsvClassifier, &out.CsvClassifier
		*out = new(CreateCsvClassifierRequest)
		(*in).DeepCopyInto(*out)
	}
	if in.GrokClassifier != nil {
		in, out := &in.GrokClassifier, &out.GrokClassifier
		*out = new(CreateGrokClassifierRequest)
		(*in).DeepCopyInto(*out)
	}
	if in.JSONClassifier != nil {
		in, out := &in.JSONClassifier, &out.JSONClassifier
		*out = new(CreateJSONClassifierRequest)
		(*in).DeepCopyInto(*out)
	}
	if in.XMLClassifier != nil {
		in, out := &in.XMLClassifier, &out.XMLClassifier
		*out = new(CreateXMLClassifierRequest)
		(*in).DeepCopyInto(*out)
	}
	out.CustomClassifierParameters = in.CustomClassifierParameters
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ClassifierParameters.
func (in *ClassifierParameters) DeepCopy() *ClassifierParameters {
	if in == nil {
		return nil
	}
	out := new(ClassifierParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ClassifierSpec) DeepCopyInto(out *ClassifierSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ClassifierSpec.
func (in *ClassifierSpec) DeepCopy() *ClassifierSpec {
	if in == nil {
		return nil
	}
	out := new(ClassifierSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ClassifierStatus) DeepCopyInto(out *ClassifierStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	out.AtProvider = in.AtProvider
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ClassifierStatus.
func (in *ClassifierStatus) DeepCopy() *ClassifierStatus {
	if in == nil {
		return nil
	}
	out := new(ClassifierStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Classifier_SDK) DeepCopyInto(out *Classifier_SDK) {
	*out = *in
	if in.CsvClassifier != nil {
		in, out := &in.CsvClassifier, &out.CsvClassifier
		*out = new(CsvClassifier)
		(*in).DeepCopyInto(*out)
	}
	if in.GrokClassifier != nil {
		in, out := &in.GrokClassifier, &out.GrokClassifier
		*out = new(GrokClassifier)
		(*in).DeepCopyInto(*out)
	}
	if in.JSONClassifier != nil {
		in, out := &in.JSONClassifier, &out.JSONClassifier
		*out = new(JSONClassifier)
		(*in).DeepCopyInto(*out)
	}
	if in.XMLClassifier != nil {
		in, out := &in.XMLClassifier, &out.XMLClassifier
		*out = new(XMLClassifier)
		(*in).DeepCopyInto(*out)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Classifier_SDK.
func (in *Classifier_SDK) DeepCopy() *Classifier_SDK {
	if in == nil {
		return nil
	}
	out := new(Classifier_SDK)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CloudWatchEncryption) DeepCopyInto(out *CloudWatchEncryption) {
	*out = *in
	if in.CloudWatchEncryptionMode != nil {
		in, out := &in.CloudWatchEncryptionMode, &out.CloudWatchEncryptionMode
		*out = new(string)
		**out = **in
	}
	if in.KMSKeyARN != nil {
		in, out := &in.KMSKeyARN, &out.KMSKeyARN
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CloudWatchEncryption.
func (in *CloudWatchEncryption) DeepCopy() *CloudWatchEncryption {
	if in == nil {
		return nil
	}
	out := new(CloudWatchEncryption)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CodeGenNodeArg) DeepCopyInto(out *CodeGenNodeArg) {
	*out = *in
	if in.Param != nil {
		in, out := &in.Param, &out.Param
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CodeGenNodeArg.
func (in *CodeGenNodeArg) DeepCopy() *CodeGenNodeArg {
	if in == nil {
		return nil
	}
	out := new(CodeGenNodeArg)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Column) DeepCopyInto(out *Column) {
	*out = *in
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Parameters != nil {
		in, out := &in.Parameters, &out.Parameters
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				in, out := &val, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Column.
func (in *Column) DeepCopy() *Column {
	if in == nil {
		return nil
	}
	out := new(Column)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ColumnError) DeepCopyInto(out *ColumnError) {
	*out = *in
	if in.ColumnName != nil {
		in, out := &in.ColumnName, &out.ColumnName
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ColumnError.
func (in *ColumnError) DeepCopy() *ColumnError {
	if in == nil {
		return nil
	}
	out := new(ColumnError)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ColumnImportance) DeepCopyInto(out *ColumnImportance) {
	*out = *in
	if in.ColumnName != nil {
		in, out := &in.ColumnName, &out.ColumnName
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ColumnImportance.
func (in *ColumnImportance) DeepCopy() *ColumnImportance {
	if in == nil {
		return nil
	}
	out := new(ColumnImportance)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ColumnStatistics) DeepCopyInto(out *ColumnStatistics) {
	*out = *in
	if in.AnalyzedTime != nil {
		in, out := &in.AnalyzedTime, &out.AnalyzedTime
		*out = (*in).DeepCopy()
	}
	if in.ColumnName != nil {
		in, out := &in.ColumnName, &out.ColumnName
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ColumnStatistics.
func (in *ColumnStatistics) DeepCopy() *ColumnStatistics {
	if in == nil {
		return nil
	}
	out := new(ColumnStatistics)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Condition) DeepCopyInto(out *Condition) {
	*out = *in
	if in.CrawlerName != nil {
		in, out := &in.CrawlerName, &out.CrawlerName
		*out = new(string)
		**out = **in
	}
	if in.JobName != nil {
		in, out := &in.JobName, &out.JobName
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Condition.
func (in *Condition) DeepCopy() *Condition {
	if in == nil {
		return nil
	}
	out := new(Condition)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Connection) DeepCopyInto(out *Connection) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Connection.
func (in *Connection) DeepCopy() *Connection {
	if in == nil {
		return nil
	}
	out := new(Connection)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *Connection) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ConnectionInput) DeepCopyInto(out *ConnectionInput) {
	*out = *in
	if in.ConnectionProperties != nil {
		in, out := &in.ConnectionProperties, &out.ConnectionProperties
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				in, out := &val, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.ConnectionType != nil {
		in, out := &in.ConnectionType, &out.ConnectionType
		*out = new(string)
		**out = **in
	}
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.MatchCriteria != nil {
		in, out := &in.MatchCriteria, &out.MatchCriteria
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.PhysicalConnectionRequirements != nil {
		in, out := &in.PhysicalConnectionRequirements, &out.PhysicalConnectionRequirements
		*out = new(PhysicalConnectionRequirements)
		(*in).DeepCopyInto(*out)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ConnectionInput.
func (in *ConnectionInput) DeepCopy() *ConnectionInput {
	if in == nil {
		return nil
	}
	out := new(ConnectionInput)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ConnectionList) DeepCopyInto(out *ConnectionList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]Connection, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ConnectionList.
func (in *ConnectionList) DeepCopy() *ConnectionList {
	if in == nil {
		return nil
	}
	out := new(ConnectionList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *ConnectionList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ConnectionObservation) DeepCopyInto(out *ConnectionObservation) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ConnectionObservation.
func (in *ConnectionObservation) DeepCopy() *ConnectionObservation {
	if in == nil {
		return nil
	}
	out := new(ConnectionObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ConnectionParameters) DeepCopyInto(out *ConnectionParameters) {
	*out = *in
	if in.CatalogID != nil {
		in, out := &in.CatalogID, &out.CatalogID
		*out = new(string)
		**out = **in
	}
	if in.ConnectionInput != nil {
		in, out := &in.ConnectionInput, &out.ConnectionInput
		*out = new(ConnectionInput)
		(*in).DeepCopyInto(*out)
	}
	out.CustomConnectionParameters = in.CustomConnectionParameters
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ConnectionParameters.
func (in *ConnectionParameters) DeepCopy() *ConnectionParameters {
	if in == nil {
		return nil
	}
	out := new(ConnectionParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ConnectionPasswordEncryption) DeepCopyInto(out *ConnectionPasswordEncryption) {
	*out = *in
	if in.AWSKMSKeyID != nil {
		in, out := &in.AWSKMSKeyID, &out.AWSKMSKeyID
		*out = new(string)
		**out = **in
	}
	if in.ReturnConnectionPasswordEncrypted != nil {
		in, out := &in.ReturnConnectionPasswordEncrypted, &out.ReturnConnectionPasswordEncrypted
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ConnectionPasswordEncryption.
func (in *ConnectionPasswordEncryption) DeepCopy() *ConnectionPasswordEncryption {
	if in == nil {
		return nil
	}
	out := new(ConnectionPasswordEncryption)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ConnectionSpec) DeepCopyInto(out *ConnectionSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ConnectionSpec.
func (in *ConnectionSpec) DeepCopy() *ConnectionSpec {
	if in == nil {
		return nil
	}
	out := new(ConnectionSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ConnectionStatus) DeepCopyInto(out *ConnectionStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	out.AtProvider = in.AtProvider
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ConnectionStatus.
func (in *ConnectionStatus) DeepCopy() *ConnectionStatus {
	if in == nil {
		return nil
	}
	out := new(ConnectionStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Connection_SDK) DeepCopyInto(out *Connection_SDK) {
	*out = *in
	if in.ConnectionProperties != nil {
		in, out := &in.ConnectionProperties, &out.ConnectionProperties
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				in, out := &val, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.ConnectionType != nil {
		in, out := &in.ConnectionType, &out.ConnectionType
		*out = new(string)
		**out = **in
	}
	if in.CreationTime != nil {
		in, out := &in.CreationTime, &out.CreationTime
		*out = (*in).DeepCopy()
	}
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.LastUpdatedBy != nil {
		in, out := &in.LastUpdatedBy, &out.LastUpdatedBy
		*out = new(string)
		**out = **in
	}
	if in.LastUpdatedTime != nil {
		in, out := &in.LastUpdatedTime, &out.LastUpdatedTime
		*out = (*in).DeepCopy()
	}
	if in.MatchCriteria != nil {
		in, out := &in.MatchCriteria, &out.MatchCriteria
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.PhysicalConnectionRequirements != nil {
		in, out := &in.PhysicalConnectionRequirements, &out.PhysicalConnectionRequirements
		*out = new(PhysicalConnectionRequirements)
		(*in).DeepCopyInto(*out)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Connection_SDK.
func (in *Connection_SDK) DeepCopy() *Connection_SDK {
	if in == nil {
		return nil
	}
	out := new(Connection_SDK)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ConnectionsList) DeepCopyInto(out *ConnectionsList) {
	*out = *in
	if in.Connections != nil {
		in, out := &in.Connections, &out.Connections
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ConnectionsList.
func (in *ConnectionsList) DeepCopy() *ConnectionsList {
	if in == nil {
		return nil
	}
	out := new(ConnectionsList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Crawl) DeepCopyInto(out *Crawl) {
	*out = *in
	if in.CompletedOn != nil {
		in, out := &in.CompletedOn, &out.CompletedOn
		*out = (*in).DeepCopy()
	}
	if in.ErrorMessage != nil {
		in, out := &in.ErrorMessage, &out.ErrorMessage
		*out = new(string)
		**out = **in
	}
	if in.LogGroup != nil {
		in, out := &in.LogGroup, &out.LogGroup
		*out = new(string)
		**out = **in
	}
	if in.LogStream != nil {
		in, out := &in.LogStream, &out.LogStream
		*out = new(string)
		**out = **in
	}
	if in.StartedOn != nil {
		in, out := &in.StartedOn, &out.StartedOn
		*out = (*in).DeepCopy()
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Crawl.
func (in *Crawl) DeepCopy() *Crawl {
	if in == nil {
		return nil
	}
	out := new(Crawl)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Crawler) DeepCopyInto(out *Crawler) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Crawler.
func (in *Crawler) DeepCopy() *Crawler {
	if in == nil {
		return nil
	}
	out := new(Crawler)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *Crawler) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CrawlerList) DeepCopyInto(out *CrawlerList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]Crawler, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CrawlerList.
func (in *CrawlerList) DeepCopy() *CrawlerList {
	if in == nil {
		return nil
	}
	out := new(CrawlerList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *CrawlerList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CrawlerMetrics) DeepCopyInto(out *CrawlerMetrics) {
	*out = *in
	if in.CrawlerName != nil {
		in, out := &in.CrawlerName, &out.CrawlerName
		*out = new(string)
		**out = **in
	}
	if in.StillEstimating != nil {
		in, out := &in.StillEstimating, &out.StillEstimating
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CrawlerMetrics.
func (in *CrawlerMetrics) DeepCopy() *CrawlerMetrics {
	if in == nil {
		return nil
	}
	out := new(CrawlerMetrics)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CrawlerObservation) DeepCopyInto(out *CrawlerObservation) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CrawlerObservation.
func (in *CrawlerObservation) DeepCopy() *CrawlerObservation {
	if in == nil {
		return nil
	}
	out := new(CrawlerObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CrawlerParameters) DeepCopyInto(out *CrawlerParameters) {
	*out = *in
	if in.Classifiers != nil {
		in, out := &in.Classifiers, &out.Classifiers
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Configuration != nil {
		in, out := &in.Configuration, &out.Configuration
		*out = new(string)
		**out = **in
	}
	if in.CrawlerSecurityConfiguration != nil {
		in, out := &in.CrawlerSecurityConfiguration, &out.CrawlerSecurityConfiguration
		*out = new(string)
		**out = **in
	}
	if in.DatabaseName != nil {
		in, out := &in.DatabaseName, &out.DatabaseName
		*out = new(string)
		**out = **in
	}
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.LineageConfiguration != nil {
		in, out := &in.LineageConfiguration, &out.LineageConfiguration
		*out = new(LineageConfiguration)
		(*in).DeepCopyInto(*out)
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.RecrawlPolicy != nil {
		in, out := &in.RecrawlPolicy, &out.RecrawlPolicy
		*out = new(RecrawlPolicy)
		(*in).DeepCopyInto(*out)
	}
	if in.Role != nil {
		in, out := &in.Role, &out.Role
		*out = new(string)
		**out = **in
	}
	if in.Schedule != nil {
		in, out := &in.Schedule, &out.Schedule
		*out = new(string)
		**out = **in
	}
	if in.SchemaChangePolicy != nil {
		in, out := &in.SchemaChangePolicy, &out.SchemaChangePolicy
		*out = new(SchemaChangePolicy)
		(*in).DeepCopyInto(*out)
	}
	if in.TablePrefix != nil {
		in, out := &in.TablePrefix, &out.TablePrefix
		*out = new(string)
		**out = **in
	}
	if in.Tags != nil {
		in, out := &in.Tags, &out.Tags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				in, out := &val, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.Targets != nil {
		in, out := &in.Targets, &out.Targets
		*out = new(CrawlerTargets)
		(*in).DeepCopyInto(*out)
	}
	out.CustomCrawlerParameters = in.CustomCrawlerParameters
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CrawlerParameters.
func (in *CrawlerParameters) DeepCopy() *CrawlerParameters {
	if in == nil {
		return nil
	}
	out := new(CrawlerParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CrawlerSpec) DeepCopyInto(out *CrawlerSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CrawlerSpec.
func (in *CrawlerSpec) DeepCopy() *CrawlerSpec {
	if in == nil {
		return nil
	}
	out := new(CrawlerSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CrawlerStatus) DeepCopyInto(out *CrawlerStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	out.AtProvider = in.AtProvider
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CrawlerStatus.
func (in *CrawlerStatus) DeepCopy() *CrawlerStatus {
	if in == nil {
		return nil
	}
	out := new(CrawlerStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CrawlerTargets) DeepCopyInto(out *CrawlerTargets) {
	*out = *in
	if in.CatalogTargets != nil {
		in, out := &in.CatalogTargets, &out.CatalogTargets
		*out = make([]*CatalogTarget, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(CatalogTarget)
				(*in).DeepCopyInto(*out)
			}
		}
	}
	if in.DynamoDBTargets != nil {
		in, out := &in.DynamoDBTargets, &out.DynamoDBTargets
		*out = make([]*DynamoDBTarget, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(DynamoDBTarget)
				(*in).DeepCopyInto(*out)
			}
		}
	}
	if in.JdbcTargets != nil {
		in, out := &in.JdbcTargets, &out.JdbcTargets
		*out = make([]*JdbcTarget, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(JdbcTarget)
				(*in).DeepCopyInto(*out)
			}
		}
	}
	if in.MongoDBTargets != nil {
		in, out := &in.MongoDBTargets, &out.MongoDBTargets
		*out = make([]*MongoDBTarget, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(MongoDBTarget)
				(*in).DeepCopyInto(*out)
			}
		}
	}
	if in.S3Targets != nil {
		in, out := &in.S3Targets, &out.S3Targets
		*out = make([]*S3Target, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(S3Target)
				(*in).DeepCopyInto(*out)
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CrawlerTargets.
func (in *CrawlerTargets) DeepCopy() *CrawlerTargets {
	if in == nil {
		return nil
	}
	out := new(CrawlerTargets)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Crawler_SDK) DeepCopyInto(out *Crawler_SDK) {
	*out = *in
	if in.Classifiers != nil {
		in, out := &in.Classifiers, &out.Classifiers
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Configuration != nil {
		in, out := &in.Configuration, &out.Configuration
		*out = new(string)
		**out = **in
	}
	if in.CrawlElapsedTime != nil {
		in, out := &in.CrawlElapsedTime, &out.CrawlElapsedTime
		*out = new(int64)
		**out = **in
	}
	if in.CrawlerSecurityConfiguration != nil {
		in, out := &in.CrawlerSecurityConfiguration, &out.CrawlerSecurityConfiguration
		*out = new(string)
		**out = **in
	}
	if in.CreationTime != nil {
		in, out := &in.CreationTime, &out.CreationTime
		*out = (*in).DeepCopy()
	}
	if in.DatabaseName != nil {
		in, out := &in.DatabaseName, &out.DatabaseName
		*out = new(string)
		**out = **in
	}
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.LastCrawl != nil {
		in, out := &in.LastCrawl, &out.LastCrawl
		*out = new(LastCrawlInfo)
		(*in).DeepCopyInto(*out)
	}
	if in.LastUpdated != nil {
		in, out := &in.LastUpdated, &out.LastUpdated
		*out = (*in).DeepCopy()
	}
	if in.LineageConfiguration != nil {
		in, out := &in.LineageConfiguration, &out.LineageConfiguration
		*out = new(LineageConfiguration)
		(*in).DeepCopyInto(*out)
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.RecrawlPolicy != nil {
		in, out := &in.RecrawlPolicy, &out.RecrawlPolicy
		*out = new(RecrawlPolicy)
		(*in).DeepCopyInto(*out)
	}
	if in.Role != nil {
		in, out := &in.Role, &out.Role
		*out = new(string)
		**out = **in
	}
	if in.Schedule != nil {
		in, out := &in.Schedule, &out.Schedule
		*out = new(Schedule)
		(*in).DeepCopyInto(*out)
	}
	if in.SchemaChangePolicy != nil {
		in, out := &in.SchemaChangePolicy, &out.SchemaChangePolicy
		*out = new(SchemaChangePolicy)
		(*in).DeepCopyInto(*out)
	}
	if in.State != nil {
		in, out := &in.State, &out.State
		*out = new(string)
		**out = **in
	}
	if in.TablePrefix != nil {
		in, out := &in.TablePrefix, &out.TablePrefix
		*out = new(string)
		**out = **in
	}
	if in.Targets != nil {
		in, out := &in.Targets, &out.Targets
		*out = new(CrawlerTargets)
		(*in).DeepCopyInto(*out)
	}
	if in.Version != nil {
		in, out := &in.Version, &out.Version
		*out = new(int64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Crawler_SDK.
func (in *Crawler_SDK) DeepCopy() *Crawler_SDK {
	if in == nil {
		return nil
	}
	out := new(Crawler_SDK)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CreateCsvClassifierRequest) DeepCopyInto(out *CreateCsvClassifierRequest) {
	*out = *in
	if in.AllowSingleColumn != nil {
		in, out := &in.AllowSingleColumn, &out.AllowSingleColumn
		*out = new(bool)
		**out = **in
	}
	if in.ContainsHeader != nil {
		in, out := &in.ContainsHeader, &out.ContainsHeader
		*out = new(string)
		**out = **in
	}
	if in.Delimiter != nil {
		in, out := &in.Delimiter, &out.Delimiter
		*out = new(string)
		**out = **in
	}
	if in.DisableValueTrimming != nil {
		in, out := &in.DisableValueTrimming, &out.DisableValueTrimming
		*out = new(bool)
		**out = **in
	}
	if in.Header != nil {
		in, out := &in.Header, &out.Header
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.QuoteSymbol != nil {
		in, out := &in.QuoteSymbol, &out.QuoteSymbol
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CreateCsvClassifierRequest.
func (in *CreateCsvClassifierRequest) DeepCopy() *CreateCsvClassifierRequest {
	if in == nil {
		return nil
	}
	out := new(CreateCsvClassifierRequest)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CreateGrokClassifierRequest) DeepCopyInto(out *CreateGrokClassifierRequest) {
	*out = *in
	if in.Classification != nil {
		in, out := &in.Classification, &out.Classification
		*out = new(string)
		**out = **in
	}
	if in.CustomPatterns != nil {
		in, out := &in.CustomPatterns, &out.CustomPatterns
		*out = new(string)
		**out = **in
	}
	if in.GrokPattern != nil {
		in, out := &in.GrokPattern, &out.GrokPattern
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CreateGrokClassifierRequest.
func (in *CreateGrokClassifierRequest) DeepCopy() *CreateGrokClassifierRequest {
	if in == nil {
		return nil
	}
	out := new(CreateGrokClassifierRequest)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CreateJSONClassifierRequest) DeepCopyInto(out *CreateJSONClassifierRequest) {
	*out = *in
	if in.JSONPath != nil {
		in, out := &in.JSONPath, &out.JSONPath
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CreateJSONClassifierRequest.
func (in *CreateJSONClassifierRequest) DeepCopy() *CreateJSONClassifierRequest {
	if in == nil {
		return nil
	}
	out := new(CreateJSONClassifierRequest)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CreateXMLClassifierRequest) DeepCopyInto(out *CreateXMLClassifierRequest) {
	*out = *in
	if in.Classification != nil {
		in, out := &in.Classification, &out.Classification
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.RowTag != nil {
		in, out := &in.RowTag, &out.RowTag
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CreateXMLClassifierRequest.
func (in *CreateXMLClassifierRequest) DeepCopy() *CreateXMLClassifierRequest {
	if in == nil {
		return nil
	}
	out := new(CreateXMLClassifierRequest)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CsvClassifier) DeepCopyInto(out *CsvClassifier) {
	*out = *in
	if in.AllowSingleColumn != nil {
		in, out := &in.AllowSingleColumn, &out.AllowSingleColumn
		*out = new(bool)
		**out = **in
	}
	if in.ContainsHeader != nil {
		in, out := &in.ContainsHeader, &out.ContainsHeader
		*out = new(string)
		**out = **in
	}
	if in.CreationTime != nil {
		in, out := &in.CreationTime, &out.CreationTime
		*out = (*in).DeepCopy()
	}
	if in.Delimiter != nil {
		in, out := &in.Delimiter, &out.Delimiter
		*out = new(string)
		**out = **in
	}
	if in.DisableValueTrimming != nil {
		in, out := &in.DisableValueTrimming, &out.DisableValueTrimming
		*out = new(bool)
		**out = **in
	}
	if in.Header != nil {
		in, out := &in.Header, &out.Header
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.LastUpdated != nil {
		in, out := &in.LastUpdated, &out.LastUpdated
		*out = (*in).DeepCopy()
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.QuoteSymbol != nil {
		in, out := &in.QuoteSymbol, &out.QuoteSymbol
		*out = new(string)
		**out = **in
	}
	if in.Version != nil {
		in, out := &in.Version, &out.Version
		*out = new(int64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CsvClassifier.
func (in *CsvClassifier) DeepCopy() *CsvClassifier {
	if in == nil {
		return nil
	}
	out := new(CsvClassifier)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CustomClassifierParameters) DeepCopyInto(out *CustomClassifierParameters) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CustomClassifierParameters.
func (in *CustomClassifierParameters) DeepCopy() *CustomClassifierParameters {
	if in == nil {
		return nil
	}
	out := new(CustomClassifierParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CustomConnectionParameters) DeepCopyInto(out *CustomConnectionParameters) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CustomConnectionParameters.
func (in *CustomConnectionParameters) DeepCopy() *CustomConnectionParameters {
	if in == nil {
		return nil
	}
	out := new(CustomConnectionParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CustomCrawlerParameters) DeepCopyInto(out *CustomCrawlerParameters) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CustomCrawlerParameters.
func (in *CustomCrawlerParameters) DeepCopy() *CustomCrawlerParameters {
	if in == nil {
		return nil
	}
	out := new(CustomCrawlerParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CustomDatabaseParameters) DeepCopyInto(out *CustomDatabaseParameters) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CustomDatabaseParameters.
func (in *CustomDatabaseParameters) DeepCopy() *CustomDatabaseParameters {
	if in == nil {
		return nil
	}
	out := new(CustomDatabaseParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CustomJobParameters) DeepCopyInto(out *CustomJobParameters) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CustomJobParameters.
func (in *CustomJobParameters) DeepCopy() *CustomJobParameters {
	if in == nil {
		return nil
	}
	out := new(CustomJobParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CustomSecurityConfigurationParameters) DeepCopyInto(out *CustomSecurityConfigurationParameters) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CustomSecurityConfigurationParameters.
func (in *CustomSecurityConfigurationParameters) DeepCopy() *CustomSecurityConfigurationParameters {
	if in == nil {
		return nil
	}
	out := new(CustomSecurityConfigurationParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DataLakePrincipal) DeepCopyInto(out *DataLakePrincipal) {
	*out = *in
	if in.DataLakePrincipalIdentifier != nil {
		in, out := &in.DataLakePrincipalIdentifier, &out.DataLakePrincipalIdentifier
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DataLakePrincipal.
func (in *DataLakePrincipal) DeepCopy() *DataLakePrincipal {
	if in == nil {
		return nil
	}
	out := new(DataLakePrincipal)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Database) DeepCopyInto(out *Database) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Database.
func (in *Database) DeepCopy() *Database {
	if in == nil {
		return nil
	}
	out := new(Database)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *Database) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DatabaseIdentifier) DeepCopyInto(out *DatabaseIdentifier) {
	*out = *in
	if in.CatalogID != nil {
		in, out := &in.CatalogID, &out.CatalogID
		*out = new(string)
		**out = **in
	}
	if in.DatabaseName != nil {
		in, out := &in.DatabaseName, &out.DatabaseName
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DatabaseIdentifier.
func (in *DatabaseIdentifier) DeepCopy() *DatabaseIdentifier {
	if in == nil {
		return nil
	}
	out := new(DatabaseIdentifier)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DatabaseInput) DeepCopyInto(out *DatabaseInput) {
	*out = *in
	if in.CreateTableDefaultPermissions != nil {
		in, out := &in.CreateTableDefaultPermissions, &out.CreateTableDefaultPermissions
		*out = make([]*PrincipalPermissions, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(PrincipalPermissions)
				(*in).DeepCopyInto(*out)
			}
		}
	}
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.LocationURI != nil {
		in, out := &in.LocationURI, &out.LocationURI
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Parameters != nil {
		in, out := &in.Parameters, &out.Parameters
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				in, out := &val, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.TargetDatabase != nil {
		in, out := &in.TargetDatabase, &out.TargetDatabase
		*out = new(DatabaseIdentifier)
		(*in).DeepCopyInto(*out)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DatabaseInput.
func (in *DatabaseInput) DeepCopy() *DatabaseInput {
	if in == nil {
		return nil
	}
	out := new(DatabaseInput)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DatabaseList) DeepCopyInto(out *DatabaseList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]Database, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DatabaseList.
func (in *DatabaseList) DeepCopy() *DatabaseList {
	if in == nil {
		return nil
	}
	out := new(DatabaseList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *DatabaseList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DatabaseObservation) DeepCopyInto(out *DatabaseObservation) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DatabaseObservation.
func (in *DatabaseObservation) DeepCopy() *DatabaseObservation {
	if in == nil {
		return nil
	}
	out := new(DatabaseObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DatabaseParameters) DeepCopyInto(out *DatabaseParameters) {
	*out = *in
	if in.CatalogID != nil {
		in, out := &in.CatalogID, &out.CatalogID
		*out = new(string)
		**out = **in
	}
	if in.DatabaseInput != nil {
		in, out := &in.DatabaseInput, &out.DatabaseInput
		*out = new(DatabaseInput)
		(*in).DeepCopyInto(*out)
	}
	out.CustomDatabaseParameters = in.CustomDatabaseParameters
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DatabaseParameters.
func (in *DatabaseParameters) DeepCopy() *DatabaseParameters {
	if in == nil {
		return nil
	}
	out := new(DatabaseParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DatabaseSpec) DeepCopyInto(out *DatabaseSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DatabaseSpec.
func (in *DatabaseSpec) DeepCopy() *DatabaseSpec {
	if in == nil {
		return nil
	}
	out := new(DatabaseSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DatabaseStatus) DeepCopyInto(out *DatabaseStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	out.AtProvider = in.AtProvider
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DatabaseStatus.
func (in *DatabaseStatus) DeepCopy() *DatabaseStatus {
	if in == nil {
		return nil
	}
	out := new(DatabaseStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Database_SDK) DeepCopyInto(out *Database_SDK) {
	*out = *in
	if in.CatalogID != nil {
		in, out := &in.CatalogID, &out.CatalogID
		*out = new(string)
		**out = **in
	}
	if in.CreateTableDefaultPermissions != nil {
		in, out := &in.CreateTableDefaultPermissions, &out.CreateTableDefaultPermissions
		*out = make([]*PrincipalPermissions, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(PrincipalPermissions)
				(*in).DeepCopyInto(*out)
			}
		}
	}
	if in.CreateTime != nil {
		in, out := &in.CreateTime, &out.CreateTime
		*out = (*in).DeepCopy()
	}
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.LocationURI != nil {
		in, out := &in.LocationURI, &out.LocationURI
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Parameters != nil {
		in, out := &in.Parameters, &out.Parameters
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				in, out := &val, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.TargetDatabase != nil {
		in, out := &in.TargetDatabase, &out.TargetDatabase
		*out = new(DatabaseIdentifier)
		(*in).DeepCopyInto(*out)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Database_SDK.
func (in *Database_SDK) DeepCopy() *Database_SDK {
	if in == nil {
		return nil
	}
	out := new(Database_SDK)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DateColumnStatisticsData) DeepCopyInto(out *DateColumnStatisticsData) {
	*out = *in
	if in.MaximumValue != nil {
		in, out := &in.MaximumValue, &out.MaximumValue
		*out = (*in).DeepCopy()
	}
	if in.MinimumValue != nil {
		in, out := &in.MinimumValue, &out.MinimumValue
		*out = (*in).DeepCopy()
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DateColumnStatisticsData.
func (in *DateColumnStatisticsData) DeepCopy() *DateColumnStatisticsData {
	if in == nil {
		return nil
	}
	out := new(DateColumnStatisticsData)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DevEndpoint) DeepCopyInto(out *DevEndpoint) {
	*out = *in
	if in.AvailabilityZone != nil {
		in, out := &in.AvailabilityZone, &out.AvailabilityZone
		*out = new(string)
		**out = **in
	}
	if in.CreatedTimestamp != nil {
		in, out := &in.CreatedTimestamp, &out.CreatedTimestamp
		*out = (*in).DeepCopy()
	}
	if in.EndpointName != nil {
		in, out := &in.EndpointName, &out.EndpointName
		*out = new(string)
		**out = **in
	}
	if in.ExtraJarsS3Path != nil {
		in, out := &in.ExtraJarsS3Path, &out.ExtraJarsS3Path
		*out = new(string)
		**out = **in
	}
	if in.ExtraPythonLibsS3Path != nil {
		in, out := &in.ExtraPythonLibsS3Path, &out.ExtraPythonLibsS3Path
		*out = new(string)
		**out = **in
	}
	if in.FailureReason != nil {
		in, out := &in.FailureReason, &out.FailureReason
		*out = new(string)
		**out = **in
	}
	if in.GlueVersion != nil {
		in, out := &in.GlueVersion, &out.GlueVersion
		*out = new(string)
		**out = **in
	}
	if in.LastModifiedTimestamp != nil {
		in, out := &in.LastModifiedTimestamp, &out.LastModifiedTimestamp
		*out = (*in).DeepCopy()
	}
	if in.LastUpdateStatus != nil {
		in, out := &in.LastUpdateStatus, &out.LastUpdateStatus
		*out = new(string)
		**out = **in
	}
	if in.NumberOfNodes != nil {
		in, out := &in.NumberOfNodes, &out.NumberOfNodes
		*out = new(int64)
		**out = **in
	}
	if in.NumberOfWorkers != nil {
		in, out := &in.NumberOfWorkers, &out.NumberOfWorkers
		*out = new(int64)
		**out = **in
	}
	if in.PrivateAddress != nil {
		in, out := &in.PrivateAddress, &out.PrivateAddress
		*out = new(string)
		**out = **in
	}
	if in.PublicAddress != nil {
		in, out := &in.PublicAddress, &out.PublicAddress
		*out = new(string)
		**out = **in
	}
	if in.PublicKey != nil {
		in, out := &in.PublicKey, &out.PublicKey
		*out = new(string)
		**out = **in
	}
	if in.SecurityConfiguration != nil {
		in, out := &in.SecurityConfiguration, &out.SecurityConfiguration
		*out = new(string)
		**out = **in
	}
	if in.Status != nil {
		in, out := &in.Status, &out.Status
		*out = new(string)
		**out = **in
	}
	if in.SubnetID != nil {
		in, out := &in.SubnetID, &out.SubnetID
		*out = new(string)
		**out = **in
	}
	if in.VPCID != nil {
		in, out := &in.VPCID, &out.VPCID
		*out = new(string)
		**out = **in
	}
	if in.WorkerType != nil {
		in, out := &in.WorkerType, &out.WorkerType
		*out = new(string)
		**out = **in
	}
	if in.YarnEndpointAddress != nil {
		in, out := &in.YarnEndpointAddress, &out.YarnEndpointAddress
		*out = new(string)
		**out = **in
	}
	if in.ZeppelinRemoteSparkInterpreterPort != nil {
		in, out := &in.ZeppelinRemoteSparkInterpreterPort, &out.ZeppelinRemoteSparkInterpreterPort
		*out = new(int64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DevEndpoint.
func (in *DevEndpoint) DeepCopy() *DevEndpoint {
	if in == nil {
		return nil
	}
	out := new(DevEndpoint)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DevEndpointCustomLibraries) DeepCopyInto(out *DevEndpointCustomLibraries) {
	*out = *in
	if in.ExtraJarsS3Path != nil {
		in, out := &in.ExtraJarsS3Path, &out.ExtraJarsS3Path
		*out = new(string)
		**out = **in
	}
	if in.ExtraPythonLibsS3Path != nil {
		in, out := &in.ExtraPythonLibsS3Path, &out.ExtraPythonLibsS3Path
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DevEndpointCustomLibraries.
func (in *DevEndpointCustomLibraries) DeepCopy() *DevEndpointCustomLibraries {
	if in == nil {
		return nil
	}
	out := new(DevEndpointCustomLibraries)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DynamoDBTarget) DeepCopyInto(out *DynamoDBTarget) {
	*out = *in
	if in.Path != nil {
		in, out := &in.Path, &out.Path
		*out = new(string)
		**out = **in
	}
	if in.ScanAll != nil {
		in, out := &in.ScanAll, &out.ScanAll
		*out = new(bool)
		**out = **in
	}
	if in.ScanRate != nil {
		in, out := &in.ScanRate, &out.ScanRate
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DynamoDBTarget.
func (in *DynamoDBTarget) DeepCopy() *DynamoDBTarget {
	if in == nil {
		return nil
	}
	out := new(DynamoDBTarget)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Edge) DeepCopyInto(out *Edge) {
	*out = *in
	if in.DestinationID != nil {
		in, out := &in.DestinationID, &out.DestinationID
		*out = new(string)
		**out = **in
	}
	if in.SourceID != nil {
		in, out := &in.SourceID, &out.SourceID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Edge.
func (in *Edge) DeepCopy() *Edge {
	if in == nil {
		return nil
	}
	out := new(Edge)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *EncryptionAtRest) DeepCopyInto(out *EncryptionAtRest) {
	*out = *in
	if in.SSEAWSKMSKeyID != nil {
		in, out := &in.SSEAWSKMSKeyID, &out.SSEAWSKMSKeyID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new EncryptionAtRest.
func (in *EncryptionAtRest) DeepCopy() *EncryptionAtRest {
	if in == nil {
		return nil
	}
	out := new(EncryptionAtRest)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *EncryptionConfiguration) DeepCopyInto(out *EncryptionConfiguration) {
	*out = *in
	if in.CloudWatchEncryption != nil {
		in, out := &in.CloudWatchEncryption, &out.CloudWatchEncryption
		*out = new(CloudWatchEncryption)
		(*in).DeepCopyInto(*out)
	}
	if in.JobBookmarksEncryption != nil {
		in, out := &in.JobBookmarksEncryption, &out.JobBookmarksEncryption
		*out = new(JobBookmarksEncryption)
		(*in).DeepCopyInto(*out)
	}
	if in.S3Encryption != nil {
		in, out := &in.S3Encryption, &out.S3Encryption
		*out = make([]*S3Encryption, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(S3Encryption)
				(*in).DeepCopyInto(*out)
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new EncryptionConfiguration.
func (in *EncryptionConfiguration) DeepCopy() *EncryptionConfiguration {
	if in == nil {
		return nil
	}
	out := new(EncryptionConfiguration)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ErrorDetail) DeepCopyInto(out *ErrorDetail) {
	*out = *in
	if in.ErrorCode != nil {
		in, out := &in.ErrorCode, &out.ErrorCode
		*out = new(string)
		**out = **in
	}
	if in.ErrorMessage != nil {
		in, out := &in.ErrorMessage, &out.ErrorMessage
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ErrorDetail.
func (in *ErrorDetail) DeepCopy() *ErrorDetail {
	if in == nil {
		return nil
	}
	out := new(ErrorDetail)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ExecutionProperty) DeepCopyInto(out *ExecutionProperty) {
	*out = *in
	if in.MaxConcurrentRuns != nil {
		in, out := &in.MaxConcurrentRuns, &out.MaxConcurrentRuns
		*out = new(int64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ExecutionProperty.
func (in *ExecutionProperty) DeepCopy() *ExecutionProperty {
	if in == nil {
		return nil
	}
	out := new(ExecutionProperty)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ExportLabelsTaskRunProperties) DeepCopyInto(out *ExportLabelsTaskRunProperties) {
	*out = *in
	if in.OutputS3Path != nil {
		in, out := &in.OutputS3Path, &out.OutputS3Path
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ExportLabelsTaskRunProperties.
func (in *ExportLabelsTaskRunProperties) DeepCopy() *ExportLabelsTaskRunProperties {
	if in == nil {
		return nil
	}
	out := new(ExportLabelsTaskRunProperties)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *FindMatchesParameters) DeepCopyInto(out *FindMatchesParameters) {
	*out = *in
	if in.EnforceProvidedLabels != nil {
		in, out := &in.EnforceProvidedLabels, &out.EnforceProvidedLabels
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new FindMatchesParameters.
func (in *FindMatchesParameters) DeepCopy() *FindMatchesParameters {
	if in == nil {
		return nil
	}
	out := new(FindMatchesParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *FindMatchesTaskRunProperties) DeepCopyInto(out *FindMatchesTaskRunProperties) {
	*out = *in
	if in.JobName != nil {
		in, out := &in.JobName, &out.JobName
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new FindMatchesTaskRunProperties.
func (in *FindMatchesTaskRunProperties) DeepCopy() *FindMatchesTaskRunProperties {
	if in == nil {
		return nil
	}
	out := new(FindMatchesTaskRunProperties)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *GetConnectionsFilter) DeepCopyInto(out *GetConnectionsFilter) {
	*out = *in
	if in.ConnectionType != nil {
		in, out := &in.ConnectionType, &out.ConnectionType
		*out = new(string)
		**out = **in
	}
	if in.MatchCriteria != nil {
		in, out := &in.MatchCriteria, &out.MatchCriteria
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new GetConnectionsFilter.
func (in *GetConnectionsFilter) DeepCopy() *GetConnectionsFilter {
	if in == nil {
		return nil
	}
	out := new(GetConnectionsFilter)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *GluePolicy) DeepCopyInto(out *GluePolicy) {
	*out = *in
	if in.CreateTime != nil {
		in, out := &in.CreateTime, &out.CreateTime
		*out = (*in).DeepCopy()
	}
	if in.UpdateTime != nil {
		in, out := &in.UpdateTime, &out.UpdateTime
		*out = (*in).DeepCopy()
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new GluePolicy.
func (in *GluePolicy) DeepCopy() *GluePolicy {
	if in == nil {
		return nil
	}
	out := new(GluePolicy)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *GrokClassifier) DeepCopyInto(out *GrokClassifier) {
	*out = *in
	if in.Classification != nil {
		in, out := &in.Classification, &out.Classification
		*out = new(string)
		**out = **in
	}
	if in.CreationTime != nil {
		in, out := &in.CreationTime, &out.CreationTime
		*out = (*in).DeepCopy()
	}
	if in.CustomPatterns != nil {
		in, out := &in.CustomPatterns, &out.CustomPatterns
		*out = new(string)
		**out = **in
	}
	if in.GrokPattern != nil {
		in, out := &in.GrokPattern, &out.GrokPattern
		*out = new(string)
		**out = **in
	}
	if in.LastUpdated != nil {
		in, out := &in.LastUpdated, &out.LastUpdated
		*out = (*in).DeepCopy()
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Version != nil {
		in, out := &in.Version, &out.Version
		*out = new(int64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new GrokClassifier.
func (in *GrokClassifier) DeepCopy() *GrokClassifier {
	if in == nil {
		return nil
	}
	out := new(GrokClassifier)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ImportLabelsTaskRunProperties) DeepCopyInto(out *ImportLabelsTaskRunProperties) {
	*out = *in
	if in.InputS3Path != nil {
		in, out := &in.InputS3Path, &out.InputS3Path
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ImportLabelsTaskRunProperties.
func (in *ImportLabelsTaskRunProperties) DeepCopy() *ImportLabelsTaskRunProperties {
	if in == nil {
		return nil
	}
	out := new(ImportLabelsTaskRunProperties)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *JSONClassifier) DeepCopyInto(out *JSONClassifier) {
	*out = *in
	if in.CreationTime != nil {
		in, out := &in.CreationTime, &out.CreationTime
		*out = (*in).DeepCopy()
	}
	if in.JSONPath != nil {
		in, out := &in.JSONPath, &out.JSONPath
		*out = new(string)
		**out = **in
	}
	if in.LastUpdated != nil {
		in, out := &in.LastUpdated, &out.LastUpdated
		*out = (*in).DeepCopy()
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Version != nil {
		in, out := &in.Version, &out.Version
		*out = new(int64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new JSONClassifier.
func (in *JSONClassifier) DeepCopy() *JSONClassifier {
	if in == nil {
		return nil
	}
	out := new(JSONClassifier)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *JdbcTarget) DeepCopyInto(out *JdbcTarget) {
	*out = *in
	if in.ConnectionName != nil {
		in, out := &in.ConnectionName, &out.ConnectionName
		*out = new(string)
		**out = **in
	}
	if in.Exclusions != nil {
		in, out := &in.Exclusions, &out.Exclusions
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Path != nil {
		in, out := &in.Path, &out.Path
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new JdbcTarget.
func (in *JdbcTarget) DeepCopy() *JdbcTarget {
	if in == nil {
		return nil
	}
	out := new(JdbcTarget)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Job) DeepCopyInto(out *Job) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Job.
func (in *Job) DeepCopy() *Job {
	if in == nil {
		return nil
	}
	out := new(Job)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *Job) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *JobBookmarkEntry) DeepCopyInto(out *JobBookmarkEntry) {
	*out = *in
	if in.Attempt != nil {
		in, out := &in.Attempt, &out.Attempt
		*out = new(int64)
		**out = **in
	}
	if in.Run != nil {
		in, out := &in.Run, &out.Run
		*out = new(int64)
		**out = **in
	}
	if in.Version != nil {
		in, out := &in.Version, &out.Version
		*out = new(int64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new JobBookmarkEntry.
func (in *JobBookmarkEntry) DeepCopy() *JobBookmarkEntry {
	if in == nil {
		return nil
	}
	out := new(JobBookmarkEntry)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *JobBookmarksEncryption) DeepCopyInto(out *JobBookmarksEncryption) {
	*out = *in
	if in.JobBookmarksEncryptionMode != nil {
		in, out := &in.JobBookmarksEncryptionMode, &out.JobBookmarksEncryptionMode
		*out = new(string)
		**out = **in
	}
	if in.KMSKeyARN != nil {
		in, out := &in.KMSKeyARN, &out.KMSKeyARN
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new JobBookmarksEncryption.
func (in *JobBookmarksEncryption) DeepCopy() *JobBookmarksEncryption {
	if in == nil {
		return nil
	}
	out := new(JobBookmarksEncryption)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *JobCommand) DeepCopyInto(out *JobCommand) {
	*out = *in
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.PythonVersion != nil {
		in, out := &in.PythonVersion, &out.PythonVersion
		*out = new(string)
		**out = **in
	}
	if in.ScriptLocation != nil {
		in, out := &in.ScriptLocation, &out.ScriptLocation
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new JobCommand.
func (in *JobCommand) DeepCopy() *JobCommand {
	if in == nil {
		return nil
	}
	out := new(JobCommand)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *JobList) DeepCopyInto(out *JobList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]Job, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new JobList.
func (in *JobList) DeepCopy() *JobList {
	if in == nil {
		return nil
	}
	out := new(JobList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *JobList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *JobObservation) DeepCopyInto(out *JobObservation) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new JobObservation.
func (in *JobObservation) DeepCopy() *JobObservation {
	if in == nil {
		return nil
	}
	out := new(JobObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *JobParameters) DeepCopyInto(out *JobParameters) {
	*out = *in
	if in.AllocatedCapacity != nil {
		in, out := &in.AllocatedCapacity, &out.AllocatedCapacity
		*out = new(int64)
		**out = **in
	}
	if in.Command != nil {
		in, out := &in.Command, &out.Command
		*out = new(JobCommand)
		(*in).DeepCopyInto(*out)
	}
	if in.Connections != nil {
		in, out := &in.Connections, &out.Connections
		*out = new(ConnectionsList)
		(*in).DeepCopyInto(*out)
	}
	if in.DefaultArguments != nil {
		in, out := &in.DefaultArguments, &out.DefaultArguments
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				in, out := &val, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.ExecutionProperty != nil {
		in, out := &in.ExecutionProperty, &out.ExecutionProperty
		*out = new(ExecutionProperty)
		(*in).DeepCopyInto(*out)
	}
	if in.GlueVersion != nil {
		in, out := &in.GlueVersion, &out.GlueVersion
		*out = new(string)
		**out = **in
	}
	if in.LogURI != nil {
		in, out := &in.LogURI, &out.LogURI
		*out = new(string)
		**out = **in
	}
	if in.MaxCapacity != nil {
		in, out := &in.MaxCapacity, &out.MaxCapacity
		*out = new(float64)
		**out = **in
	}
	if in.MaxRetries != nil {
		in, out := &in.MaxRetries, &out.MaxRetries
		*out = new(int64)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.NonOverridableArguments != nil {
		in, out := &in.NonOverridableArguments, &out.NonOverridableArguments
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				in, out := &val, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.NotificationProperty != nil {
		in, out := &in.NotificationProperty, &out.NotificationProperty
		*out = new(NotificationProperty)
		(*in).DeepCopyInto(*out)
	}
	if in.NumberOfWorkers != nil {
		in, out := &in.NumberOfWorkers, &out.NumberOfWorkers
		*out = new(int64)
		**out = **in
	}
	if in.Role != nil {
		in, out := &in.Role, &out.Role
		*out = new(string)
		**out = **in
	}
	if in.SecurityConfiguration != nil {
		in, out := &in.SecurityConfiguration, &out.SecurityConfiguration
		*out = new(string)
		**out = **in
	}
	if in.Tags != nil {
		in, out := &in.Tags, &out.Tags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				in, out := &val, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.Timeout != nil {
		in, out := &in.Timeout, &out.Timeout
		*out = new(int64)
		**out = **in
	}
	if in.WorkerType != nil {
		in, out := &in.WorkerType, &out.WorkerType
		*out = new(string)
		**out = **in
	}
	out.CustomJobParameters = in.CustomJobParameters
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new JobParameters.
func (in *JobParameters) DeepCopy() *JobParameters {
	if in == nil {
		return nil
	}
	out := new(JobParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *JobRun) DeepCopyInto(out *JobRun) {
	*out = *in
	if in.AllocatedCapacity != nil {
		in, out := &in.AllocatedCapacity, &out.AllocatedCapacity
		*out = new(int64)
		**out = **in
	}
	if in.Arguments != nil {
		in, out := &in.Arguments, &out.Arguments
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				in, out := &val, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.CompletedOn != nil {
		in, out := &in.CompletedOn, &out.CompletedOn
		*out = (*in).DeepCopy()
	}
	if in.GlueVersion != nil {
		in, out := &in.GlueVersion, &out.GlueVersion
		*out = new(string)
		**out = **in
	}
	if in.JobName != nil {
		in, out := &in.JobName, &out.JobName
		*out = new(string)
		**out = **in
	}
	if in.LastModifiedOn != nil {
		in, out := &in.LastModifiedOn, &out.LastModifiedOn
		*out = (*in).DeepCopy()
	}
	if in.LogGroupName != nil {
		in, out := &in.LogGroupName, &out.LogGroupName
		*out = new(string)
		**out = **in
	}
	if in.MaxCapacity != nil {
		in, out := &in.MaxCapacity, &out.MaxCapacity
		*out = new(float64)
		**out = **in
	}
	if in.NotificationProperty != nil {
		in, out := &in.NotificationProperty, &out.NotificationProperty
		*out = new(NotificationProperty)
		(*in).DeepCopyInto(*out)
	}
	if in.NumberOfWorkers != nil {
		in, out := &in.NumberOfWorkers, &out.NumberOfWorkers
		*out = new(int64)
		**out = **in
	}
	if in.SecurityConfiguration != nil {
		in, out := &in.SecurityConfiguration, &out.SecurityConfiguration
		*out = new(string)
		**out = **in
	}
	if in.StartedOn != nil {
		in, out := &in.StartedOn, &out.StartedOn
		*out = (*in).DeepCopy()
	}
	if in.Timeout != nil {
		in, out := &in.Timeout, &out.Timeout
		*out = new(int64)
		**out = **in
	}
	if in.TriggerName != nil {
		in, out := &in.TriggerName, &out.TriggerName
		*out = new(string)
		**out = **in
	}
	if in.WorkerType != nil {
		in, out := &in.WorkerType, &out.WorkerType
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new JobRun.
func (in *JobRun) DeepCopy() *JobRun {
	if in == nil {
		return nil
	}
	out := new(JobRun)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *JobSpec) DeepCopyInto(out *JobSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new JobSpec.
func (in *JobSpec) DeepCopy() *JobSpec {
	if in == nil {
		return nil
	}
	out := new(JobSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *JobStatus) DeepCopyInto(out *JobStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	out.AtProvider = in.AtProvider
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new JobStatus.
func (in *JobStatus) DeepCopy() *JobStatus {
	if in == nil {
		return nil
	}
	out := new(JobStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *JobUpdate) DeepCopyInto(out *JobUpdate) {
	*out = *in
	if in.AllocatedCapacity != nil {
		in, out := &in.AllocatedCapacity, &out.AllocatedCapacity
		*out = new(int64)
		**out = **in
	}
	if in.Command != nil {
		in, out := &in.Command, &out.Command
		*out = new(JobCommand)
		(*in).DeepCopyInto(*out)
	}
	if in.Connections != nil {
		in, out := &in.Connections, &out.Connections
		*out = new(ConnectionsList)
		(*in).DeepCopyInto(*out)
	}
	if in.DefaultArguments != nil {
		in, out := &in.DefaultArguments, &out.DefaultArguments
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				in, out := &val, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.ExecutionProperty != nil {
		in, out := &in.ExecutionProperty, &out.ExecutionProperty
		*out = new(ExecutionProperty)
		(*in).DeepCopyInto(*out)
	}
	if in.GlueVersion != nil {
		in, out := &in.GlueVersion, &out.GlueVersion
		*out = new(string)
		**out = **in
	}
	if in.LogURI != nil {
		in, out := &in.LogURI, &out.LogURI
		*out = new(string)
		**out = **in
	}
	if in.MaxCapacity != nil {
		in, out := &in.MaxCapacity, &out.MaxCapacity
		*out = new(float64)
		**out = **in
	}
	if in.MaxRetries != nil {
		in, out := &in.MaxRetries, &out.MaxRetries
		*out = new(int64)
		**out = **in
	}
	if in.NonOverridableArguments != nil {
		in, out := &in.NonOverridableArguments, &out.NonOverridableArguments
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				in, out := &val, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.NotificationProperty != nil {
		in, out := &in.NotificationProperty, &out.NotificationProperty
		*out = new(NotificationProperty)
		(*in).DeepCopyInto(*out)
	}
	if in.NumberOfWorkers != nil {
		in, out := &in.NumberOfWorkers, &out.NumberOfWorkers
		*out = new(int64)
		**out = **in
	}
	if in.Role != nil {
		in, out := &in.Role, &out.Role
		*out = new(string)
		**out = **in
	}
	if in.SecurityConfiguration != nil {
		in, out := &in.SecurityConfiguration, &out.SecurityConfiguration
		*out = new(string)
		**out = **in
	}
	if in.Timeout != nil {
		in, out := &in.Timeout, &out.Timeout
		*out = new(int64)
		**out = **in
	}
	if in.WorkerType != nil {
		in, out := &in.WorkerType, &out.WorkerType
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new JobUpdate.
func (in *JobUpdate) DeepCopy() *JobUpdate {
	if in == nil {
		return nil
	}
	out := new(JobUpdate)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Job_SDK) DeepCopyInto(out *Job_SDK) {
	*out = *in
	if in.AllocatedCapacity != nil {
		in, out := &in.AllocatedCapacity, &out.AllocatedCapacity
		*out = new(int64)
		**out = **in
	}
	if in.Command != nil {
		in, out := &in.Command, &out.Command
		*out = new(JobCommand)
		(*in).DeepCopyInto(*out)
	}
	if in.Connections != nil {
		in, out := &in.Connections, &out.Connections
		*out = new(ConnectionsList)
		(*in).DeepCopyInto(*out)
	}
	if in.CreatedOn != nil {
		in, out := &in.CreatedOn, &out.CreatedOn
		*out = (*in).DeepCopy()
	}
	if in.DefaultArguments != nil {
		in, out := &in.DefaultArguments, &out.DefaultArguments
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				in, out := &val, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.ExecutionProperty != nil {
		in, out := &in.ExecutionProperty, &out.ExecutionProperty
		*out = new(ExecutionProperty)
		(*in).DeepCopyInto(*out)
	}
	if in.GlueVersion != nil {
		in, out := &in.GlueVersion, &out.GlueVersion
		*out = new(string)
		**out = **in
	}
	if in.LastModifiedOn != nil {
		in, out := &in.LastModifiedOn, &out.LastModifiedOn
		*out = (*in).DeepCopy()
	}
	if in.LogURI != nil {
		in, out := &in.LogURI, &out.LogURI
		*out = new(string)
		**out = **in
	}
	if in.MaxCapacity != nil {
		in, out := &in.MaxCapacity, &out.MaxCapacity
		*out = new(float64)
		**out = **in
	}
	if in.MaxRetries != nil {
		in, out := &in.MaxRetries, &out.MaxRetries
		*out = new(int64)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.NonOverridableArguments != nil {
		in, out := &in.NonOverridableArguments, &out.NonOverridableArguments
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				in, out := &val, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.NotificationProperty != nil {
		in, out := &in.NotificationProperty, &out.NotificationProperty
		*out = new(NotificationProperty)
		(*in).DeepCopyInto(*out)
	}
	if in.NumberOfWorkers != nil {
		in, out := &in.NumberOfWorkers, &out.NumberOfWorkers
		*out = new(int64)
		**out = **in
	}
	if in.Role != nil {
		in, out := &in.Role, &out.Role
		*out = new(string)
		**out = **in
	}
	if in.SecurityConfiguration != nil {
		in, out := &in.SecurityConfiguration, &out.SecurityConfiguration
		*out = new(string)
		**out = **in
	}
	if in.Timeout != nil {
		in, out := &in.Timeout, &out.Timeout
		*out = new(int64)
		**out = **in
	}
	if in.WorkerType != nil {
		in, out := &in.WorkerType, &out.WorkerType
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Job_SDK.
func (in *Job_SDK) DeepCopy() *Job_SDK {
	if in == nil {
		return nil
	}
	out := new(Job_SDK)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *KeySchemaElement) DeepCopyInto(out *KeySchemaElement) {
	*out = *in
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new KeySchemaElement.
func (in *KeySchemaElement) DeepCopy() *KeySchemaElement {
	if in == nil {
		return nil
	}
	out := new(KeySchemaElement)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LabelingSetGenerationTaskRunProperties) DeepCopyInto(out *LabelingSetGenerationTaskRunProperties) {
	*out = *in
	if in.OutputS3Path != nil {
		in, out := &in.OutputS3Path, &out.OutputS3Path
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LabelingSetGenerationTaskRunProperties.
func (in *LabelingSetGenerationTaskRunProperties) DeepCopy() *LabelingSetGenerationTaskRunProperties {
	if in == nil {
		return nil
	}
	out := new(LabelingSetGenerationTaskRunProperties)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LastCrawlInfo) DeepCopyInto(out *LastCrawlInfo) {
	*out = *in
	if in.ErrorMessage != nil {
		in, out := &in.ErrorMessage, &out.ErrorMessage
		*out = new(string)
		**out = **in
	}
	if in.LogGroup != nil {
		in, out := &in.LogGroup, &out.LogGroup
		*out = new(string)
		**out = **in
	}
	if in.LogStream != nil {
		in, out := &in.LogStream, &out.LogStream
		*out = new(string)
		**out = **in
	}
	if in.MessagePrefix != nil {
		in, out := &in.MessagePrefix, &out.MessagePrefix
		*out = new(string)
		**out = **in
	}
	if in.StartTime != nil {
		in, out := &in.StartTime, &out.StartTime
		*out = (*in).DeepCopy()
	}
	if in.Status != nil {
		in, out := &in.Status, &out.Status
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LastCrawlInfo.
func (in *LastCrawlInfo) DeepCopy() *LastCrawlInfo {
	if in == nil {
		return nil
	}
	out := new(LastCrawlInfo)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LineageConfiguration) DeepCopyInto(out *LineageConfiguration) {
	*out = *in
	if in.CrawlerLineageSettings != nil {
		in, out := &in.CrawlerLineageSettings, &out.CrawlerLineageSettings
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LineageConfiguration.
func (in *LineageConfiguration) DeepCopy() *LineageConfiguration {
	if in == nil {
		return nil
	}
	out := new(LineageConfiguration)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MLTransform) DeepCopyInto(out *MLTransform) {
	*out = *in
	if in.CreatedOn != nil {
		in, out := &in.CreatedOn, &out.CreatedOn
		*out = (*in).DeepCopy()
	}
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.GlueVersion != nil {
		in, out := &in.GlueVersion, &out.GlueVersion
		*out = new(string)
		**out = **in
	}
	if in.LastModifiedOn != nil {
		in, out := &in.LastModifiedOn, &out.LastModifiedOn
		*out = (*in).DeepCopy()
	}
	if in.MaxCapacity != nil {
		in, out := &in.MaxCapacity, &out.MaxCapacity
		*out = new(float64)
		**out = **in
	}
	if in.MaxRetries != nil {
		in, out := &in.MaxRetries, &out.MaxRetries
		*out = new(int64)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.NumberOfWorkers != nil {
		in, out := &in.NumberOfWorkers, &out.NumberOfWorkers
		*out = new(int64)
		**out = **in
	}
	if in.Role != nil {
		in, out := &in.Role, &out.Role
		*out = new(string)
		**out = **in
	}
	if in.Timeout != nil {
		in, out := &in.Timeout, &out.Timeout
		*out = new(int64)
		**out = **in
	}
	if in.WorkerType != nil {
		in, out := &in.WorkerType, &out.WorkerType
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MLTransform.
func (in *MLTransform) DeepCopy() *MLTransform {
	if in == nil {
		return nil
	}
	out := new(MLTransform)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MLUserDataEncryption) DeepCopyInto(out *MLUserDataEncryption) {
	*out = *in
	if in.KMSKeyID != nil {
		in, out := &in.KMSKeyID, &out.KMSKeyID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MLUserDataEncryption.
func (in *MLUserDataEncryption) DeepCopy() *MLUserDataEncryption {
	if in == nil {
		return nil
	}
	out := new(MLUserDataEncryption)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MongoDBTarget) DeepCopyInto(out *MongoDBTarget) {
	*out = *in
	if in.ConnectionName != nil {
		in, out := &in.ConnectionName, &out.ConnectionName
		*out = new(string)
		**out = **in
	}
	if in.Path != nil {
		in, out := &in.Path, &out.Path
		*out = new(string)
		**out = **in
	}
	if in.ScanAll != nil {
		in, out := &in.ScanAll, &out.ScanAll
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MongoDBTarget.
func (in *MongoDBTarget) DeepCopy() *MongoDBTarget {
	if in == nil {
		return nil
	}
	out := new(MongoDBTarget)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Node) DeepCopyInto(out *Node) {
	*out = *in
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.UniqueID != nil {
		in, out := &in.UniqueID, &out.UniqueID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Node.
func (in *Node) DeepCopy() *Node {
	if in == nil {
		return nil
	}
	out := new(Node)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NotificationProperty) DeepCopyInto(out *NotificationProperty) {
	*out = *in
	if in.NotifyDelayAfter != nil {
		in, out := &in.NotifyDelayAfter, &out.NotifyDelayAfter
		*out = new(int64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NotificationProperty.
func (in *NotificationProperty) DeepCopy() *NotificationProperty {
	if in == nil {
		return nil
	}
	out := new(NotificationProperty)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Order) DeepCopyInto(out *Order) {
	*out = *in
	if in.Column != nil {
		in, out := &in.Column, &out.Column
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Order.
func (in *Order) DeepCopy() *Order {
	if in == nil {
		return nil
	}
	out := new(Order)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Partition) DeepCopyInto(out *Partition) {
	*out = *in
	if in.CatalogID != nil {
		in, out := &in.CatalogID, &out.CatalogID
		*out = new(string)
		**out = **in
	}
	if in.CreationTime != nil {
		in, out := &in.CreationTime, &out.CreationTime
		*out = (*in).DeepCopy()
	}
	if in.DatabaseName != nil {
		in, out := &in.DatabaseName, &out.DatabaseName
		*out = new(string)
		**out = **in
	}
	if in.LastAccessTime != nil {
		in, out := &in.LastAccessTime, &out.LastAccessTime
		*out = (*in).DeepCopy()
	}
	if in.LastAnalyzedTime != nil {
		in, out := &in.LastAnalyzedTime, &out.LastAnalyzedTime
		*out = (*in).DeepCopy()
	}
	if in.Parameters != nil {
		in, out := &in.Parameters, &out.Parameters
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				in, out := &val, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.TableName != nil {
		in, out := &in.TableName, &out.TableName
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Partition.
func (in *Partition) DeepCopy() *Partition {
	if in == nil {
		return nil
	}
	out := new(Partition)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PartitionIndex) DeepCopyInto(out *PartitionIndex) {
	*out = *in
	if in.IndexName != nil {
		in, out := &in.IndexName, &out.IndexName
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PartitionIndex.
func (in *PartitionIndex) DeepCopy() *PartitionIndex {
	if in == nil {
		return nil
	}
	out := new(PartitionIndex)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PartitionIndexDescriptor) DeepCopyInto(out *PartitionIndexDescriptor) {
	*out = *in
	if in.IndexName != nil {
		in, out := &in.IndexName, &out.IndexName
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PartitionIndexDescriptor.
func (in *PartitionIndexDescriptor) DeepCopy() *PartitionIndexDescriptor {
	if in == nil {
		return nil
	}
	out := new(PartitionIndexDescriptor)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PartitionInput) DeepCopyInto(out *PartitionInput) {
	*out = *in
	if in.LastAccessTime != nil {
		in, out := &in.LastAccessTime, &out.LastAccessTime
		*out = (*in).DeepCopy()
	}
	if in.LastAnalyzedTime != nil {
		in, out := &in.LastAnalyzedTime, &out.LastAnalyzedTime
		*out = (*in).DeepCopy()
	}
	if in.Parameters != nil {
		in, out := &in.Parameters, &out.Parameters
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				in, out := &val, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PartitionInput.
func (in *PartitionInput) DeepCopy() *PartitionInput {
	if in == nil {
		return nil
	}
	out := new(PartitionInput)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PhysicalConnectionRequirements) DeepCopyInto(out *PhysicalConnectionRequirements) {
	*out = *in
	if in.AvailabilityZone != nil {
		in, out := &in.AvailabilityZone, &out.AvailabilityZone
		*out = new(string)
		**out = **in
	}
	if in.SecurityGroupIDList != nil {
		in, out := &in.SecurityGroupIDList, &out.SecurityGroupIDList
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.SubnetID != nil {
		in, out := &in.SubnetID, &out.SubnetID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PhysicalConnectionRequirements.
func (in *PhysicalConnectionRequirements) DeepCopy() *PhysicalConnectionRequirements {
	if in == nil {
		return nil
	}
	out := new(PhysicalConnectionRequirements)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Predecessor) DeepCopyInto(out *Predecessor) {
	*out = *in
	if in.JobName != nil {
		in, out := &in.JobName, &out.JobName
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Predecessor.
func (in *Predecessor) DeepCopy() *Predecessor {
	if in == nil {
		return nil
	}
	out := new(Predecessor)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PrincipalPermissions) DeepCopyInto(out *PrincipalPermissions) {
	*out = *in
	if in.Permissions != nil {
		in, out := &in.Permissions, &out.Permissions
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Principal != nil {
		in, out := &in.Principal, &out.Principal
		*out = new(DataLakePrincipal)
		(*in).DeepCopyInto(*out)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PrincipalPermissions.
func (in *PrincipalPermissions) DeepCopy() *PrincipalPermissions {
	if in == nil {
		return nil
	}
	out := new(PrincipalPermissions)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PropertyPredicate) DeepCopyInto(out *PropertyPredicate) {
	*out = *in
	if in.Key != nil {
		in, out := &in.Key, &out.Key
		*out = new(string)
		**out = **in
	}
	if in.Value != nil {
		in, out := &in.Value, &out.Value
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PropertyPredicate.
func (in *PropertyPredicate) DeepCopy() *PropertyPredicate {
	if in == nil {
		return nil
	}
	out := new(PropertyPredicate)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RecrawlPolicy) DeepCopyInto(out *RecrawlPolicy) {
	*out = *in
	if in.RecrawlBehavior != nil {
		in, out := &in.RecrawlBehavior, &out.RecrawlBehavior
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RecrawlPolicy.
func (in *RecrawlPolicy) DeepCopy() *RecrawlPolicy {
	if in == nil {
		return nil
	}
	out := new(RecrawlPolicy)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RegistryListItem) DeepCopyInto(out *RegistryListItem) {
	*out = *in
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RegistryListItem.
func (in *RegistryListItem) DeepCopy() *RegistryListItem {
	if in == nil {
		return nil
	}
	out := new(RegistryListItem)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ResourceURI) DeepCopyInto(out *ResourceURI) {
	*out = *in
	if in.URI != nil {
		in, out := &in.URI, &out.URI
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ResourceURI.
func (in *ResourceURI) DeepCopy() *ResourceURI {
	if in == nil {
		return nil
	}
	out := new(ResourceURI)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *S3Encryption) DeepCopyInto(out *S3Encryption) {
	*out = *in
	if in.KMSKeyARN != nil {
		in, out := &in.KMSKeyARN, &out.KMSKeyARN
		*out = new(string)
		**out = **in
	}
	if in.S3EncryptionMode != nil {
		in, out := &in.S3EncryptionMode, &out.S3EncryptionMode
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new S3Encryption.
func (in *S3Encryption) DeepCopy() *S3Encryption {
	if in == nil {
		return nil
	}
	out := new(S3Encryption)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *S3Target) DeepCopyInto(out *S3Target) {
	*out = *in
	if in.ConnectionName != nil {
		in, out := &in.ConnectionName, &out.ConnectionName
		*out = new(string)
		**out = **in
	}
	if in.Exclusions != nil {
		in, out := &in.Exclusions, &out.Exclusions
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Path != nil {
		in, out := &in.Path, &out.Path
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new S3Target.
func (in *S3Target) DeepCopy() *S3Target {
	if in == nil {
		return nil
	}
	out := new(S3Target)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Schedule) DeepCopyInto(out *Schedule) {
	*out = *in
	if in.ScheduleExpression != nil {
		in, out := &in.ScheduleExpression, &out.ScheduleExpression
		*out = new(string)
		**out = **in
	}
	if in.State != nil {
		in, out := &in.State, &out.State
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Schedule.
func (in *Schedule) DeepCopy() *Schedule {
	if in == nil {
		return nil
	}
	out := new(Schedule)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SchemaChangePolicy) DeepCopyInto(out *SchemaChangePolicy) {
	*out = *in
	if in.DeleteBehavior != nil {
		in, out := &in.DeleteBehavior, &out.DeleteBehavior
		*out = new(string)
		**out = **in
	}
	if in.UpdateBehavior != nil {
		in, out := &in.UpdateBehavior, &out.UpdateBehavior
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SchemaChangePolicy.
func (in *SchemaChangePolicy) DeepCopy() *SchemaChangePolicy {
	if in == nil {
		return nil
	}
	out := new(SchemaChangePolicy)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SchemaListItem) DeepCopyInto(out *SchemaListItem) {
	*out = *in
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SchemaListItem.
func (in *SchemaListItem) DeepCopy() *SchemaListItem {
	if in == nil {
		return nil
	}
	out := new(SchemaListItem)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SecurityConfiguration) DeepCopyInto(out *SecurityConfiguration) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SecurityConfiguration.
func (in *SecurityConfiguration) DeepCopy() *SecurityConfiguration {
	if in == nil {
		return nil
	}
	out := new(SecurityConfiguration)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *SecurityConfiguration) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SecurityConfigurationList) DeepCopyInto(out *SecurityConfigurationList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]SecurityConfiguration, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SecurityConfigurationList.
func (in *SecurityConfigurationList) DeepCopy() *SecurityConfigurationList {
	if in == nil {
		return nil
	}
	out := new(SecurityConfigurationList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *SecurityConfigurationList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SecurityConfigurationObservation) DeepCopyInto(out *SecurityConfigurationObservation) {
	*out = *in
	if in.CreatedTimestamp != nil {
		in, out := &in.CreatedTimestamp, &out.CreatedTimestamp
		*out = (*in).DeepCopy()
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SecurityConfigurationObservation.
func (in *SecurityConfigurationObservation) DeepCopy() *SecurityConfigurationObservation {
	if in == nil {
		return nil
	}
	out := new(SecurityConfigurationObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SecurityConfigurationParameters) DeepCopyInto(out *SecurityConfigurationParameters) {
	*out = *in
	if in.EncryptionConfiguration != nil {
		in, out := &in.EncryptionConfiguration, &out.EncryptionConfiguration
		*out = new(EncryptionConfiguration)
		(*in).DeepCopyInto(*out)
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	out.CustomSecurityConfigurationParameters = in.CustomSecurityConfigurationParameters
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SecurityConfigurationParameters.
func (in *SecurityConfigurationParameters) DeepCopy() *SecurityConfigurationParameters {
	if in == nil {
		return nil
	}
	out := new(SecurityConfigurationParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SecurityConfigurationSpec) DeepCopyInto(out *SecurityConfigurationSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SecurityConfigurationSpec.
func (in *SecurityConfigurationSpec) DeepCopy() *SecurityConfigurationSpec {
	if in == nil {
		return nil
	}
	out := new(SecurityConfigurationSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SecurityConfigurationStatus) DeepCopyInto(out *SecurityConfigurationStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SecurityConfigurationStatus.
func (in *SecurityConfigurationStatus) DeepCopy() *SecurityConfigurationStatus {
	if in == nil {
		return nil
	}
	out := new(SecurityConfigurationStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SecurityConfiguration_SDK) DeepCopyInto(out *SecurityConfiguration_SDK) {
	*out = *in
	if in.CreatedTimeStamp != nil {
		in, out := &in.CreatedTimeStamp, &out.CreatedTimeStamp
		*out = (*in).DeepCopy()
	}
	if in.EncryptionConfiguration != nil {
		in, out := &in.EncryptionConfiguration, &out.EncryptionConfiguration
		*out = new(EncryptionConfiguration)
		(*in).DeepCopyInto(*out)
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SecurityConfiguration_SDK.
func (in *SecurityConfiguration_SDK) DeepCopy() *SecurityConfiguration_SDK {
	if in == nil {
		return nil
	}
	out := new(SecurityConfiguration_SDK)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SerDeInfo) DeepCopyInto(out *SerDeInfo) {
	*out = *in
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Parameters != nil {
		in, out := &in.Parameters, &out.Parameters
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				in, out := &val, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.SerializationLibrary != nil {
		in, out := &in.SerializationLibrary, &out.SerializationLibrary
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SerDeInfo.
func (in *SerDeInfo) DeepCopy() *SerDeInfo {
	if in == nil {
		return nil
	}
	out := new(SerDeInfo)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SortCriterion) DeepCopyInto(out *SortCriterion) {
	*out = *in
	if in.FieldName != nil {
		in, out := &in.FieldName, &out.FieldName
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SortCriterion.
func (in *SortCriterion) DeepCopy() *SortCriterion {
	if in == nil {
		return nil
	}
	out := new(SortCriterion)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *StorageDescriptor) DeepCopyInto(out *StorageDescriptor) {
	*out = *in
	if in.Compressed != nil {
		in, out := &in.Compressed, &out.Compressed
		*out = new(bool)
		**out = **in
	}
	if in.Parameters != nil {
		in, out := &in.Parameters, &out.Parameters
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				in, out := &val, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.StoredAsSubDirectories != nil {
		in, out := &in.StoredAsSubDirectories, &out.StoredAsSubDirectories
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new StorageDescriptor.
func (in *StorageDescriptor) DeepCopy() *StorageDescriptor {
	if in == nil {
		return nil
	}
	out := new(StorageDescriptor)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Table) DeepCopyInto(out *Table) {
	*out = *in
	if in.CatalogID != nil {
		in, out := &in.CatalogID, &out.CatalogID
		*out = new(string)
		**out = **in
	}
	if in.ConnectionName != nil {
		in, out := &in.ConnectionName, &out.ConnectionName
		*out = new(string)
		**out = **in
	}
	if in.DatabaseName != nil {
		in, out := &in.DatabaseName, &out.DatabaseName
		*out = new(string)
		**out = **in
	}
	if in.TableName != nil {
		in, out := &in.TableName, &out.TableName
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Table.
func (in *Table) DeepCopy() *Table {
	if in == nil {
		return nil
	}
	out := new(Table)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TableData) DeepCopyInto(out *TableData) {
	*out = *in
	if in.CatalogID != nil {
		in, out := &in.CatalogID, &out.CatalogID
		*out = new(string)
		**out = **in
	}
	if in.CreateTime != nil {
		in, out := &in.CreateTime, &out.CreateTime
		*out = (*in).DeepCopy()
	}
	if in.CreatedBy != nil {
		in, out := &in.CreatedBy, &out.CreatedBy
		*out = new(string)
		**out = **in
	}
	if in.DatabaseName != nil {
		in, out := &in.DatabaseName, &out.DatabaseName
		*out = new(string)
		**out = **in
	}
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.IsRegisteredWithLakeFormation != nil {
		in, out := &in.IsRegisteredWithLakeFormation, &out.IsRegisteredWithLakeFormation
		*out = new(bool)
		**out = **in
	}
	if in.LastAccessTime != nil {
		in, out := &in.LastAccessTime, &out.LastAccessTime
		*out = (*in).DeepCopy()
	}
	if in.LastAnalyzedTime != nil {
		in, out := &in.LastAnalyzedTime, &out.LastAnalyzedTime
		*out = (*in).DeepCopy()
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Owner != nil {
		in, out := &in.Owner, &out.Owner
		*out = new(string)
		**out = **in
	}
	if in.Parameters != nil {
		in, out := &in.Parameters, &out.Parameters
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				in, out := &val, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.UpdateTime != nil {
		in, out := &in.UpdateTime, &out.UpdateTime
		*out = (*in).DeepCopy()
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TableData.
func (in *TableData) DeepCopy() *TableData {
	if in == nil {
		return nil
	}
	out := new(TableData)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TableError) DeepCopyInto(out *TableError) {
	*out = *in
	if in.TableName != nil {
		in, out := &in.TableName, &out.TableName
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TableError.
func (in *TableError) DeepCopy() *TableError {
	if in == nil {
		return nil
	}
	out := new(TableError)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TableIdentifier) DeepCopyInto(out *TableIdentifier) {
	*out = *in
	if in.CatalogID != nil {
		in, out := &in.CatalogID, &out.CatalogID
		*out = new(string)
		**out = **in
	}
	if in.DatabaseName != nil {
		in, out := &in.DatabaseName, &out.DatabaseName
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TableIdentifier.
func (in *TableIdentifier) DeepCopy() *TableIdentifier {
	if in == nil {
		return nil
	}
	out := new(TableIdentifier)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TableInput) DeepCopyInto(out *TableInput) {
	*out = *in
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.LastAccessTime != nil {
		in, out := &in.LastAccessTime, &out.LastAccessTime
		*out = (*in).DeepCopy()
	}
	if in.LastAnalyzedTime != nil {
		in, out := &in.LastAnalyzedTime, &out.LastAnalyzedTime
		*out = (*in).DeepCopy()
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Owner != nil {
		in, out := &in.Owner, &out.Owner
		*out = new(string)
		**out = **in
	}
	if in.Parameters != nil {
		in, out := &in.Parameters, &out.Parameters
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				in, out := &val, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TableInput.
func (in *TableInput) DeepCopy() *TableInput {
	if in == nil {
		return nil
	}
	out := new(TableInput)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TableVersionError) DeepCopyInto(out *TableVersionError) {
	*out = *in
	if in.TableName != nil {
		in, out := &in.TableName, &out.TableName
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TableVersionError.
func (in *TableVersionError) DeepCopy() *TableVersionError {
	if in == nil {
		return nil
	}
	out := new(TableVersionError)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TaskRun) DeepCopyInto(out *TaskRun) {
	*out = *in
	if in.CompletedOn != nil {
		in, out := &in.CompletedOn, &out.CompletedOn
		*out = (*in).DeepCopy()
	}
	if in.ErrorString != nil {
		in, out := &in.ErrorString, &out.ErrorString
		*out = new(string)
		**out = **in
	}
	if in.LastModifiedOn != nil {
		in, out := &in.LastModifiedOn, &out.LastModifiedOn
		*out = (*in).DeepCopy()
	}
	if in.LogGroupName != nil {
		in, out := &in.LogGroupName, &out.LogGroupName
		*out = new(string)
		**out = **in
	}
	if in.StartedOn != nil {
		in, out := &in.StartedOn, &out.StartedOn
		*out = (*in).DeepCopy()
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TaskRun.
func (in *TaskRun) DeepCopy() *TaskRun {
	if in == nil {
		return nil
	}
	out := new(TaskRun)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TaskRunFilterCriteria) DeepCopyInto(out *TaskRunFilterCriteria) {
	*out = *in
	if in.StartedAfter != nil {
		in, out := &in.StartedAfter, &out.StartedAfter
		*out = (*in).DeepCopy()
	}
	if in.StartedBefore != nil {
		in, out := &in.StartedBefore, &out.StartedBefore
		*out = (*in).DeepCopy()
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TaskRunFilterCriteria.
func (in *TaskRunFilterCriteria) DeepCopy() *TaskRunFilterCriteria {
	if in == nil {
		return nil
	}
	out := new(TaskRunFilterCriteria)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TransformEncryption) DeepCopyInto(out *TransformEncryption) {
	*out = *in
	if in.TaskRunSecurityConfigurationName != nil {
		in, out := &in.TaskRunSecurityConfigurationName, &out.TaskRunSecurityConfigurationName
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TransformEncryption.
func (in *TransformEncryption) DeepCopy() *TransformEncryption {
	if in == nil {
		return nil
	}
	out := new(TransformEncryption)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TransformFilterCriteria) DeepCopyInto(out *TransformFilterCriteria) {
	*out = *in
	if in.CreatedAfter != nil {
		in, out := &in.CreatedAfter, &out.CreatedAfter
		*out = (*in).DeepCopy()
	}
	if in.CreatedBefore != nil {
		in, out := &in.CreatedBefore, &out.CreatedBefore
		*out = (*in).DeepCopy()
	}
	if in.GlueVersion != nil {
		in, out := &in.GlueVersion, &out.GlueVersion
		*out = new(string)
		**out = **in
	}
	if in.LastModifiedAfter != nil {
		in, out := &in.LastModifiedAfter, &out.LastModifiedAfter
		*out = (*in).DeepCopy()
	}
	if in.LastModifiedBefore != nil {
		in, out := &in.LastModifiedBefore, &out.LastModifiedBefore
		*out = (*in).DeepCopy()
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TransformFilterCriteria.
func (in *TransformFilterCriteria) DeepCopy() *TransformFilterCriteria {
	if in == nil {
		return nil
	}
	out := new(TransformFilterCriteria)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Trigger) DeepCopyInto(out *Trigger) {
	*out = *in
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Schedule != nil {
		in, out := &in.Schedule, &out.Schedule
		*out = new(string)
		**out = **in
	}
	if in.WorkflowName != nil {
		in, out := &in.WorkflowName, &out.WorkflowName
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Trigger.
func (in *Trigger) DeepCopy() *Trigger {
	if in == nil {
		return nil
	}
	out := new(Trigger)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TriggerUpdate) DeepCopyInto(out *TriggerUpdate) {
	*out = *in
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Schedule != nil {
		in, out := &in.Schedule, &out.Schedule
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TriggerUpdate.
func (in *TriggerUpdate) DeepCopy() *TriggerUpdate {
	if in == nil {
		return nil
	}
	out := new(TriggerUpdate)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *UpdateCsvClassifierRequest) DeepCopyInto(out *UpdateCsvClassifierRequest) {
	*out = *in
	if in.AllowSingleColumn != nil {
		in, out := &in.AllowSingleColumn, &out.AllowSingleColumn
		*out = new(bool)
		**out = **in
	}
	if in.ContainsHeader != nil {
		in, out := &in.ContainsHeader, &out.ContainsHeader
		*out = new(string)
		**out = **in
	}
	if in.Delimiter != nil {
		in, out := &in.Delimiter, &out.Delimiter
		*out = new(string)
		**out = **in
	}
	if in.DisableValueTrimming != nil {
		in, out := &in.DisableValueTrimming, &out.DisableValueTrimming
		*out = new(bool)
		**out = **in
	}
	if in.Header != nil {
		in, out := &in.Header, &out.Header
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.QuoteSymbol != nil {
		in, out := &in.QuoteSymbol, &out.QuoteSymbol
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new UpdateCsvClassifierRequest.
func (in *UpdateCsvClassifierRequest) DeepCopy() *UpdateCsvClassifierRequest {
	if in == nil {
		return nil
	}
	out := new(UpdateCsvClassifierRequest)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *UpdateGrokClassifierRequest) DeepCopyInto(out *UpdateGrokClassifierRequest) {
	*out = *in
	if in.Classification != nil {
		in, out := &in.Classification, &out.Classification
		*out = new(string)
		**out = **in
	}
	if in.CustomPatterns != nil {
		in, out := &in.CustomPatterns, &out.CustomPatterns
		*out = new(string)
		**out = **in
	}
	if in.GrokPattern != nil {
		in, out := &in.GrokPattern, &out.GrokPattern
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new UpdateGrokClassifierRequest.
func (in *UpdateGrokClassifierRequest) DeepCopy() *UpdateGrokClassifierRequest {
	if in == nil {
		return nil
	}
	out := new(UpdateGrokClassifierRequest)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *UpdateJSONClassifierRequest) DeepCopyInto(out *UpdateJSONClassifierRequest) {
	*out = *in
	if in.JSONPath != nil {
		in, out := &in.JSONPath, &out.JSONPath
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new UpdateJSONClassifierRequest.
func (in *UpdateJSONClassifierRequest) DeepCopy() *UpdateJSONClassifierRequest {
	if in == nil {
		return nil
	}
	out := new(UpdateJSONClassifierRequest)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *UpdateXMLClassifierRequest) DeepCopyInto(out *UpdateXMLClassifierRequest) {
	*out = *in
	if in.Classification != nil {
		in, out := &in.Classification, &out.Classification
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.RowTag != nil {
		in, out := &in.RowTag, &out.RowTag
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new UpdateXMLClassifierRequest.
func (in *UpdateXMLClassifierRequest) DeepCopy() *UpdateXMLClassifierRequest {
	if in == nil {
		return nil
	}
	out := new(UpdateXMLClassifierRequest)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *UserDefinedFunction) DeepCopyInto(out *UserDefinedFunction) {
	*out = *in
	if in.CatalogID != nil {
		in, out := &in.CatalogID, &out.CatalogID
		*out = new(string)
		**out = **in
	}
	if in.ClassName != nil {
		in, out := &in.ClassName, &out.ClassName
		*out = new(string)
		**out = **in
	}
	if in.CreateTime != nil {
		in, out := &in.CreateTime, &out.CreateTime
		*out = (*in).DeepCopy()
	}
	if in.DatabaseName != nil {
		in, out := &in.DatabaseName, &out.DatabaseName
		*out = new(string)
		**out = **in
	}
	if in.FunctionName != nil {
		in, out := &in.FunctionName, &out.FunctionName
		*out = new(string)
		**out = **in
	}
	if in.OwnerName != nil {
		in, out := &in.OwnerName, &out.OwnerName
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new UserDefinedFunction.
func (in *UserDefinedFunction) DeepCopy() *UserDefinedFunction {
	if in == nil {
		return nil
	}
	out := new(UserDefinedFunction)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *UserDefinedFunctionInput) DeepCopyInto(out *UserDefinedFunctionInput) {
	*out = *in
	if in.ClassName != nil {
		in, out := &in.ClassName, &out.ClassName
		*out = new(string)
		**out = **in
	}
	if in.FunctionName != nil {
		in, out := &in.FunctionName, &out.FunctionName
		*out = new(string)
		**out = **in
	}
	if in.OwnerName != nil {
		in, out := &in.OwnerName, &out.OwnerName
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new UserDefinedFunctionInput.
func (in *UserDefinedFunctionInput) DeepCopy() *UserDefinedFunctionInput {
	if in == nil {
		return nil
	}
	out := new(UserDefinedFunctionInput)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Workflow) DeepCopyInto(out *Workflow) {
	*out = *in
	if in.CreatedOn != nil {
		in, out := &in.CreatedOn, &out.CreatedOn
		*out = (*in).DeepCopy()
	}
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.LastModifiedOn != nil {
		in, out := &in.LastModifiedOn, &out.LastModifiedOn
		*out = (*in).DeepCopy()
	}
	if in.MaxConcurrentRuns != nil {
		in, out := &in.MaxConcurrentRuns, &out.MaxConcurrentRuns
		*out = new(int64)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Workflow.
func (in *Workflow) DeepCopy() *Workflow {
	if in == nil {
		return nil
	}
	out := new(Workflow)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *WorkflowRun) DeepCopyInto(out *WorkflowRun) {
	*out = *in
	if in.CompletedOn != nil {
		in, out := &in.CompletedOn, &out.CompletedOn
		*out = (*in).DeepCopy()
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.StartedOn != nil {
		in, out := &in.StartedOn, &out.StartedOn
		*out = (*in).DeepCopy()
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new WorkflowRun.
func (in *WorkflowRun) DeepCopy() *WorkflowRun {
	if in == nil {
		return nil
	}
	out := new(WorkflowRun)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *WorkflowRunStatistics) DeepCopyInto(out *WorkflowRunStatistics) {
	*out = *in
	if in.FailedActions != nil {
		in, out := &in.FailedActions, &out.FailedActions
		*out = new(int64)
		**out = **in
	}
	if in.RunningActions != nil {
		in, out := &in.RunningActions, &out.RunningActions
		*out = new(int64)
		**out = **in
	}
	if in.StoppedActions != nil {
		in, out := &in.StoppedActions, &out.StoppedActions
		*out = new(int64)
		**out = **in
	}
	if in.SucceededActions != nil {
		in, out := &in.SucceededActions, &out.SucceededActions
		*out = new(int64)
		**out = **in
	}
	if in.TimeoutActions != nil {
		in, out := &in.TimeoutActions, &out.TimeoutActions
		*out = new(int64)
		**out = **in
	}
	if in.TotalActions != nil {
		in, out := &in.TotalActions, &out.TotalActions
		*out = new(int64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new WorkflowRunStatistics.
func (in *WorkflowRunStatistics) DeepCopy() *WorkflowRunStatistics {
	if in == nil {
		return nil
	}
	out := new(WorkflowRunStatistics)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *XMLClassifier) DeepCopyInto(out *XMLClassifier) {
	*out = *in
	if in.Classification != nil {
		in, out := &in.Classification, &out.Classification
		*out = new(string)
		**out = **in
	}
	if in.CreationTime != nil {
		in, out := &in.CreationTime, &out.CreationTime
		*out = (*in).DeepCopy()
	}
	if in.LastUpdated != nil {
		in, out := &in.LastUpdated, &out.LastUpdated
		*out = (*in).DeepCopy()
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.RowTag != nil {
		in, out := &in.RowTag, &out.RowTag
		*out = new(string)
		**out = **in
	}
	if in.Version != nil {
		in, out := &in.Version, &out.Version
		*out = new(int64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new XMLClassifier.
func (in *XMLClassifier) DeepCopy() *XMLClassifier {
	if in == nil {
		return nil
	}
	out := new(XMLClassifier)
	in.DeepCopyInto(out)
	return out
}
