/*
Copyright 2021 The Crossplane Authors.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by ack-generate. DO NOT EDIT.

package v1alpha1

import (
	metav1 "k8s.io/apimachinery/pkg/apis/meta/v1"
)

type Action struct {
	Arguments map[string]*string `json:"arguments,omitempty"`

	CrawlerName *string `json:"crawlerName,omitempty"`

	JobName *string `json:"jobName,omitempty"`
	// Specifies configuration properties of a notification.
	NotificationProperty *NotificationProperty `json:"notificationProperty,omitempty"`

	SecurityConfiguration *string `json:"securityConfiguration,omitempty"`

	Timeout *int64 `json:"timeout,omitempty"`
}

type BatchStopJobRunError struct {
	JobName *string `json:"jobName,omitempty"`
}

type BatchStopJobRunSuccessfulSubmission struct {
	JobName *string `json:"jobName,omitempty"`
}

type CatalogEntry struct {
	DatabaseName *string `json:"databaseName,omitempty"`

	TableName *string `json:"tableName,omitempty"`
}

type CatalogImportStatus struct {
	ImportedBy *string `json:"importedBy,omitempty"`
}

type CatalogTarget struct {
	DatabaseName *string `json:"databaseName,omitempty"`
}

type Column struct {
	Name *string `json:"name,omitempty"`
}

type ColumnError struct {
	ColumnName *string `json:"columnName,omitempty"`
}

type ColumnImportance struct {
	ColumnName *string `json:"columnName,omitempty"`
}

type ColumnStatistics struct {
	ColumnName *string `json:"columnName,omitempty"`
}

type Condition struct {
	CrawlerName *string `json:"crawlerName,omitempty"`

	JobName *string `json:"jobName,omitempty"`
}

type Connection struct {
	Description *string `json:"description,omitempty"`

	LastUpdatedBy *string `json:"lastUpdatedBy,omitempty"`

	Name *string `json:"name,omitempty"`
}

type ConnectionInput struct {
	Description *string `json:"description,omitempty"`

	Name *string `json:"name,omitempty"`
}

type ConnectionPasswordEncryption struct {
	AWSKMSKeyID *string `json:"awsKMSKeyID,omitempty"`
}

type ConnectionsList struct {
	Connections []*string `json:"connections,omitempty"`
}

type Crawl struct {
	CompletedOn *metav1.Time `json:"completedOn,omitempty"`

	ErrorMessage *string `json:"errorMessage,omitempty"`

	StartedOn *metav1.Time `json:"startedOn,omitempty"`
}

type Crawler struct {
	Description *string `json:"description,omitempty"`

	Name *string `json:"name,omitempty"`
}

type CrawlerMetrics struct {
	CrawlerName *string `json:"crawlerName,omitempty"`
}

type CreateCsvClassifierRequest struct {
	Name *string `json:"name,omitempty"`
}

type CreateGrokClassifierRequest struct {
	Name *string `json:"name,omitempty"`
}

type CreateJSONClassifierRequest struct {
	Name *string `json:"name,omitempty"`
}

type CreateXMLClassifierRequest struct {
	Name *string `json:"name,omitempty"`
}

type CsvClassifier struct {
	Name *string `json:"name,omitempty"`
}

type Database struct {
	Description *string `json:"description,omitempty"`

	Name *string `json:"name,omitempty"`
}

type DatabaseIdentifier struct {
	DatabaseName *string `json:"databaseName,omitempty"`
}

type DatabaseInput struct {
	Description *string `json:"description,omitempty"`

	Name *string `json:"name,omitempty"`
}

type DevEndpoint struct {
	AvailabilityZone *string `json:"availabilityZone,omitempty"`

	CreatedTimestamp *metav1.Time `json:"createdTimestamp,omitempty"`

	EndpointName *string `json:"endpointName,omitempty"`

	ExtraJarsS3Path *string `json:"extraJarsS3Path,omitempty"`

	ExtraPythonLibsS3Path *string `json:"extraPythonLibsS3Path,omitempty"`

	FailureReason *string `json:"failureReason,omitempty"`

	GlueVersion *string `json:"glueVersion,omitempty"`

	LastModifiedTimestamp *metav1.Time `json:"lastModifiedTimestamp,omitempty"`

	LastUpdateStatus *string `json:"lastUpdateStatus,omitempty"`

	NumberOfNodes *int64 `json:"numberOfNodes,omitempty"`

	NumberOfWorkers *int64 `json:"numberOfWorkers,omitempty"`

	PrivateAddress *string `json:"privateAddress,omitempty"`

	PublicAddress *string `json:"publicAddress,omitempty"`

	PublicKey *string `json:"publicKey,omitempty"`

	SecurityConfiguration *string `json:"securityConfiguration,omitempty"`

	Status *string `json:"status,omitempty"`

	SubnetID *string `json:"subnetID,omitempty"`

	VPCID *string `json:"vpcID,omitempty"`

	WorkerType *string `json:"workerType,omitempty"`

	YarnEndpointAddress *string `json:"yarnEndpointAddress,omitempty"`

	ZeppelinRemoteSparkInterpreterPort *int64 `json:"zeppelinRemoteSparkInterpreterPort,omitempty"`
}

type DevEndpointCustomLibraries struct {
	ExtraJarsS3Path *string `json:"extraJarsS3Path,omitempty"`

	ExtraPythonLibsS3Path *string `json:"extraPythonLibsS3Path,omitempty"`
}

type DynamoDBTarget struct {
	ScanRate *float64 `json:"scanRate,omitempty"`
}

type Edge struct {
	DestinationID *string `json:"destinationID,omitempty"`

	SourceID *string `json:"sourceID,omitempty"`
}

type EncryptionAtRest struct {
	SSEAWSKMSKeyID *string `json:"sseAWSKMSKeyID,omitempty"`
}

type ErrorDetail struct {
	ErrorCode *string `json:"errorCode,omitempty"`

	ErrorMessage *string `json:"errorMessage,omitempty"`
}

type ExecutionProperty struct {
	MaxConcurrentRuns *int64 `json:"maxConcurrentRuns,omitempty"`
}

type ExportLabelsTaskRunProperties struct {
	OutputS3Path *string `json:"outputS3Path,omitempty"`
}

type FindMatchesTaskRunProperties struct {
	JobName *string `json:"jobName,omitempty"`
}

type GrokClassifier struct {
	Name *string `json:"name,omitempty"`
}

type ImportLabelsTaskRunProperties struct {
	InputS3Path *string `json:"inputS3Path,omitempty"`
}

type JSONClassifier struct {
	Name *string `json:"name,omitempty"`
}

type JobBookmarkEntry struct {
	Attempt *int64 `json:"attempt,omitempty"`

	Run *int64 `json:"run,omitempty"`

	Version *int64 `json:"version,omitempty"`
}

type JobCommand struct {
	Name *string `json:"name,omitempty"`

	PythonVersion *string `json:"pythonVersion,omitempty"`

	ScriptLocation *string `json:"scriptLocation,omitempty"`
}

type JobRun struct {
	AllocatedCapacity *int64 `json:"allocatedCapacity,omitempty"`

	Arguments map[string]*string `json:"arguments,omitempty"`

	CompletedOn *metav1.Time `json:"completedOn,omitempty"`

	GlueVersion *string `json:"glueVersion,omitempty"`

	JobName *string `json:"jobName,omitempty"`

	LastModifiedOn *metav1.Time `json:"lastModifiedOn,omitempty"`

	LogGroupName *string `json:"logGroupName,omitempty"`

	MaxCapacity *float64 `json:"maxCapacity,omitempty"`
	// Specifies configuration properties of a notification.
	NotificationProperty *NotificationProperty `json:"notificationProperty,omitempty"`

	NumberOfWorkers *int64 `json:"numberOfWorkers,omitempty"`

	SecurityConfiguration *string `json:"securityConfiguration,omitempty"`

	StartedOn *metav1.Time `json:"startedOn,omitempty"`

	Timeout *int64 `json:"timeout,omitempty"`

	TriggerName *string `json:"triggerName,omitempty"`

	WorkerType *string `json:"workerType,omitempty"`
}

type JobUpdate struct {
	AllocatedCapacity *int64 `json:"allocatedCapacity,omitempty"`
	// Specifies code executed when a job is run.
	Command *JobCommand `json:"command,omitempty"`
	// Specifies the connections used by a job.
	Connections *ConnectionsList `json:"connections,omitempty"`

	DefaultArguments map[string]*string `json:"defaultArguments,omitempty"`

	Description *string `json:"description,omitempty"`
	// An execution property of a job.
	ExecutionProperty *ExecutionProperty `json:"executionProperty,omitempty"`

	GlueVersion *string `json:"glueVersion,omitempty"`

	LogURI *string `json:"logURI,omitempty"`

	MaxCapacity *float64 `json:"maxCapacity,omitempty"`

	MaxRetries *int64 `json:"maxRetries,omitempty"`

	NonOverridableArguments map[string]*string `json:"nonOverridableArguments,omitempty"`
	// Specifies configuration properties of a notification.
	NotificationProperty *NotificationProperty `json:"notificationProperty,omitempty"`

	NumberOfWorkers *int64 `json:"numberOfWorkers,omitempty"`

	Role *string `json:"role,omitempty"`

	SecurityConfiguration *string `json:"securityConfiguration,omitempty"`

	Timeout *int64 `json:"timeout,omitempty"`

	WorkerType *string `json:"workerType,omitempty"`
}

type Job_SDK struct {
	AllocatedCapacity *int64 `json:"allocatedCapacity,omitempty"`
	// Specifies code executed when a job is run.
	Command *JobCommand `json:"command,omitempty"`
	// Specifies the connections used by a job.
	Connections *ConnectionsList `json:"connections,omitempty"`

	CreatedOn *metav1.Time `json:"createdOn,omitempty"`

	DefaultArguments map[string]*string `json:"defaultArguments,omitempty"`

	Description *string `json:"description,omitempty"`
	// An execution property of a job.
	ExecutionProperty *ExecutionProperty `json:"executionProperty,omitempty"`

	GlueVersion *string `json:"glueVersion,omitempty"`

	LastModifiedOn *metav1.Time `json:"lastModifiedOn,omitempty"`

	LogURI *string `json:"logURI,omitempty"`

	MaxCapacity *float64 `json:"maxCapacity,omitempty"`

	MaxRetries *int64 `json:"maxRetries,omitempty"`

	Name *string `json:"name,omitempty"`

	NonOverridableArguments map[string]*string `json:"nonOverridableArguments,omitempty"`
	// Specifies configuration properties of a notification.
	NotificationProperty *NotificationProperty `json:"notificationProperty,omitempty"`

	NumberOfWorkers *int64 `json:"numberOfWorkers,omitempty"`

	Role *string `json:"role,omitempty"`

	SecurityConfiguration *string `json:"securityConfiguration,omitempty"`

	Timeout *int64 `json:"timeout,omitempty"`

	WorkerType *string `json:"workerType,omitempty"`
}

type KeySchemaElement struct {
	Name *string `json:"name,omitempty"`
}

type LabelingSetGenerationTaskRunProperties struct {
	OutputS3Path *string `json:"outputS3Path,omitempty"`
}

type LastCrawlInfo struct {
	ErrorMessage *string `json:"errorMessage,omitempty"`
}

type MLTransform struct {
	Description *string `json:"description,omitempty"`

	GlueVersion *string `json:"glueVersion,omitempty"`

	MaxCapacity *float64 `json:"maxCapacity,omitempty"`

	MaxRetries *int64 `json:"maxRetries,omitempty"`

	Name *string `json:"name,omitempty"`

	NumberOfWorkers *int64 `json:"numberOfWorkers,omitempty"`

	Role *string `json:"role,omitempty"`

	Timeout *int64 `json:"timeout,omitempty"`

	WorkerType *string `json:"workerType,omitempty"`
}

type MLUserDataEncryption struct {
	KMSKeyID *string `json:"kmsKeyID,omitempty"`
}

type Node struct {
	Name *string `json:"name,omitempty"`

	UniqueID *string `json:"uniqueID,omitempty"`
}

type NotificationProperty struct {
	NotifyDelayAfter *int64 `json:"notifyDelayAfter,omitempty"`
}

type Order struct {
	Column *string `json:"column,omitempty"`
}

type Partition struct {
	DatabaseName *string `json:"databaseName,omitempty"`

	TableName *string `json:"tableName,omitempty"`
}

type PartitionIndex struct {
	IndexName *string `json:"indexName,omitempty"`
}

type PartitionIndexDescriptor struct {
	IndexName *string `json:"indexName,omitempty"`
}

type PhysicalConnectionRequirements struct {
	AvailabilityZone *string `json:"availabilityZone,omitempty"`

	SubnetID *string `json:"subnetID,omitempty"`
}

type Predecessor struct {
	JobName *string `json:"jobName,omitempty"`
}

type RegistryListItem struct {
	Description *string `json:"description,omitempty"`
}

type SchemaListItem struct {
	Description *string `json:"description,omitempty"`
}

type SecurityConfiguration struct {
	CreatedTimeStamp *metav1.Time `json:"createdTimeStamp,omitempty"`

	Name *string `json:"name,omitempty"`
}

type SerDeInfo struct {
	Name *string `json:"name,omitempty"`

	SerializationLibrary *string `json:"serializationLibrary,omitempty"`
}

type Table struct {
	CatalogID *string `json:"catalogID,omitempty"`

	ConnectionName *string `json:"connectionName,omitempty"`

	DatabaseName *string `json:"databaseName,omitempty"`

	TableName *string `json:"tableName,omitempty"`
}

type TableData struct {
	CreatedBy *string `json:"createdBy,omitempty"`

	DatabaseName *string `json:"databaseName,omitempty"`

	Description *string `json:"description,omitempty"`

	Name *string `json:"name,omitempty"`

	Owner *string `json:"owner,omitempty"`
}

type TableError struct {
	TableName *string `json:"tableName,omitempty"`
}

type TableIdentifier struct {
	DatabaseName *string `json:"databaseName,omitempty"`

	Name *string `json:"name,omitempty"`
}

type TableInput struct {
	Description *string `json:"description,omitempty"`

	Name *string `json:"name,omitempty"`

	Owner *string `json:"owner,omitempty"`
}

type TableVersionError struct {
	TableName *string `json:"tableName,omitempty"`
}

type TaskRun struct {
	ErrorString *string `json:"errorString,omitempty"`

	LogGroupName *string `json:"logGroupName,omitempty"`
}

type TransformEncryption struct {
	TaskRunSecurityConfigurationName *string `json:"taskRunSecurityConfigurationName,omitempty"`
}

type TransformFilterCriteria struct {
	GlueVersion *string `json:"glueVersion,omitempty"`

	Name *string `json:"name,omitempty"`
}

type Trigger struct {
	Description *string `json:"description,omitempty"`

	Name *string `json:"name,omitempty"`

	Schedule *string `json:"schedule,omitempty"`

	WorkflowName *string `json:"workflowName,omitempty"`
}

type TriggerUpdate struct {
	Description *string `json:"description,omitempty"`

	Name *string `json:"name,omitempty"`

	Schedule *string `json:"schedule,omitempty"`
}

type UpdateCsvClassifierRequest struct {
	Name *string `json:"name,omitempty"`
}

type UpdateGrokClassifierRequest struct {
	Name *string `json:"name,omitempty"`
}

type UpdateJSONClassifierRequest struct {
	Name *string `json:"name,omitempty"`
}

type UpdateXMLClassifierRequest struct {
	Name *string `json:"name,omitempty"`
}

type UserDefinedFunction struct {
	ClassName *string `json:"className,omitempty"`

	DatabaseName *string `json:"databaseName,omitempty"`

	FunctionName *string `json:"functionName,omitempty"`

	OwnerName *string `json:"ownerName,omitempty"`
}

type UserDefinedFunctionInput struct {
	ClassName *string `json:"className,omitempty"`

	FunctionName *string `json:"functionName,omitempty"`

	OwnerName *string `json:"ownerName,omitempty"`
}

type Workflow struct {
	CreatedOn *metav1.Time `json:"createdOn,omitempty"`

	Description *string `json:"description,omitempty"`

	LastModifiedOn *metav1.Time `json:"lastModifiedOn,omitempty"`

	MaxConcurrentRuns *int64 `json:"maxConcurrentRuns,omitempty"`

	Name *string `json:"name,omitempty"`
}

type WorkflowRun struct {
	CompletedOn *metav1.Time `json:"completedOn,omitempty"`

	Name *string `json:"name,omitempty"`

	StartedOn *metav1.Time `json:"startedOn,omitempty"`
}

type WorkflowRunStatistics struct {
	FailedActions *int64 `json:"failedActions,omitempty"`

	RunningActions *int64 `json:"runningActions,omitempty"`

	StoppedActions *int64 `json:"stoppedActions,omitempty"`

	SucceededActions *int64 `json:"succeededActions,omitempty"`

	TimeoutActions *int64 `json:"timeoutActions,omitempty"`

	TotalActions *int64 `json:"totalActions,omitempty"`
}

type XMLClassifier struct {
	Name *string `json:"name,omitempty"`
}
