// +build !ignore_autogenerated

/*
Copyright 2020 The Crossplane Authors.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by controller-gen. DO NOT EDIT.

package v1alpha1

import (
	"github.com/crossplane/crossplane-runtime/apis/common/v1"
	runtime "k8s.io/apimachinery/pkg/runtime"
)

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AccountQuota) DeepCopyInto(out *AccountQuota) {
	*out = *in
	if in.AccountQuotaName != nil {
		in, out := &in.AccountQuotaName, &out.AccountQuotaName
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AccountQuota.
func (in *AccountQuota) DeepCopy() *AccountQuota {
	if in == nil {
		return nil
	}
	out := new(AccountQuota)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AvailabilityZone) DeepCopyInto(out *AvailabilityZone) {
	*out = *in
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AvailabilityZone.
func (in *AvailabilityZone) DeepCopy() *AvailabilityZone {
	if in == nil {
		return nil
	}
	out := new(AvailabilityZone)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AvailableProcessorFeature) DeepCopyInto(out *AvailableProcessorFeature) {
	*out = *in
	if in.AllowedValues != nil {
		in, out := &in.AllowedValues, &out.AllowedValues
		*out = new(string)
		**out = **in
	}
	if in.DefaultValue != nil {
		in, out := &in.DefaultValue, &out.DefaultValue
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AvailableProcessorFeature.
func (in *AvailableProcessorFeature) DeepCopy() *AvailableProcessorFeature {
	if in == nil {
		return nil
	}
	out := new(AvailableProcessorFeature)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Certificate) DeepCopyInto(out *Certificate) {
	*out = *in
	if in.CertificateARN != nil {
		in, out := &in.CertificateARN, &out.CertificateARN
		*out = new(string)
		**out = **in
	}
	if in.CertificateIdentifier != nil {
		in, out := &in.CertificateIdentifier, &out.CertificateIdentifier
		*out = new(string)
		**out = **in
	}
	if in.CertificateType != nil {
		in, out := &in.CertificateType, &out.CertificateType
		*out = new(string)
		**out = **in
	}
	if in.CustomerOverride != nil {
		in, out := &in.CustomerOverride, &out.CustomerOverride
		*out = new(bool)
		**out = **in
	}
	if in.CustomerOverrideValidTill != nil {
		in, out := &in.CustomerOverrideValidTill, &out.CustomerOverrideValidTill
		*out = (*in).DeepCopy()
	}
	if in.Thumbprint != nil {
		in, out := &in.Thumbprint, &out.Thumbprint
		*out = new(string)
		**out = **in
	}
	if in.ValidFrom != nil {
		in, out := &in.ValidFrom, &out.ValidFrom
		*out = (*in).DeepCopy()
	}
	if in.ValidTill != nil {
		in, out := &in.ValidTill, &out.ValidTill
		*out = (*in).DeepCopy()
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Certificate.
func (in *Certificate) DeepCopy() *Certificate {
	if in == nil {
		return nil
	}
	out := new(Certificate)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CharacterSet) DeepCopyInto(out *CharacterSet) {
	*out = *in
	if in.CharacterSetDescription != nil {
		in, out := &in.CharacterSetDescription, &out.CharacterSetDescription
		*out = new(string)
		**out = **in
	}
	if in.CharacterSetName != nil {
		in, out := &in.CharacterSetName, &out.CharacterSetName
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CharacterSet.
func (in *CharacterSet) DeepCopy() *CharacterSet {
	if in == nil {
		return nil
	}
	out := new(CharacterSet)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CloudwatchLogsExportConfiguration) DeepCopyInto(out *CloudwatchLogsExportConfiguration) {
	*out = *in
	if in.DisableLogTypes != nil {
		in, out := &in.DisableLogTypes, &out.DisableLogTypes
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.EnableLogTypes != nil {
		in, out := &in.EnableLogTypes, &out.EnableLogTypes
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CloudwatchLogsExportConfiguration.
func (in *CloudwatchLogsExportConfiguration) DeepCopy() *CloudwatchLogsExportConfiguration {
	if in == nil {
		return nil
	}
	out := new(CloudwatchLogsExportConfiguration)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ClusterPendingModifiedValues) DeepCopyInto(out *ClusterPendingModifiedValues) {
	*out = *in
	if in.DBClusterIdentifier != nil {
		in, out := &in.DBClusterIdentifier, &out.DBClusterIdentifier
		*out = new(string)
		**out = **in
	}
	if in.EngineVersion != nil {
		in, out := &in.EngineVersion, &out.EngineVersion
		*out = new(string)
		**out = **in
	}
	if in.IAMDatabaseAuthenticationEnabled != nil {
		in, out := &in.IAMDatabaseAuthenticationEnabled, &out.IAMDatabaseAuthenticationEnabled
		*out = new(bool)
		**out = **in
	}
	if in.MasterUserPassword != nil {
		in, out := &in.MasterUserPassword, &out.MasterUserPassword
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ClusterPendingModifiedValues.
func (in *ClusterPendingModifiedValues) DeepCopy() *ClusterPendingModifiedValues {
	if in == nil {
		return nil
	}
	out := new(ClusterPendingModifiedValues)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ConnectionPoolConfiguration) DeepCopyInto(out *ConnectionPoolConfiguration) {
	*out = *in
	if in.ConnectionBorrowTimeout != nil {
		in, out := &in.ConnectionBorrowTimeout, &out.ConnectionBorrowTimeout
		*out = new(int64)
		**out = **in
	}
	if in.InitQuery != nil {
		in, out := &in.InitQuery, &out.InitQuery
		*out = new(string)
		**out = **in
	}
	if in.MaxConnectionsPercent != nil {
		in, out := &in.MaxConnectionsPercent, &out.MaxConnectionsPercent
		*out = new(int64)
		**out = **in
	}
	if in.MaxIdleConnectionsPercent != nil {
		in, out := &in.MaxIdleConnectionsPercent, &out.MaxIdleConnectionsPercent
		*out = new(int64)
		**out = **in
	}
	if in.SessionPinningFilters != nil {
		in, out := &in.SessionPinningFilters, &out.SessionPinningFilters
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ConnectionPoolConfiguration.
func (in *ConnectionPoolConfiguration) DeepCopy() *ConnectionPoolConfiguration {
	if in == nil {
		return nil
	}
	out := new(ConnectionPoolConfiguration)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ConnectionPoolConfigurationInfo) DeepCopyInto(out *ConnectionPoolConfigurationInfo) {
	*out = *in
	if in.InitQuery != nil {
		in, out := &in.InitQuery, &out.InitQuery
		*out = new(string)
		**out = **in
	}
	if in.SessionPinningFilters != nil {
		in, out := &in.SessionPinningFilters, &out.SessionPinningFilters
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ConnectionPoolConfigurationInfo.
func (in *ConnectionPoolConfigurationInfo) DeepCopy() *ConnectionPoolConfigurationInfo {
	if in == nil {
		return nil
	}
	out := new(ConnectionPoolConfigurationInfo)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CustomAvailabilityZone) DeepCopyInto(out *CustomAvailabilityZone) {
	*out = *in
	if in.CustomAvailabilityZoneID != nil {
		in, out := &in.CustomAvailabilityZoneID, &out.CustomAvailabilityZoneID
		*out = new(string)
		**out = **in
	}
	if in.CustomAvailabilityZoneName != nil {
		in, out := &in.CustomAvailabilityZoneName, &out.CustomAvailabilityZoneName
		*out = new(string)
		**out = **in
	}
	if in.CustomAvailabilityZoneStatus != nil {
		in, out := &in.CustomAvailabilityZoneStatus, &out.CustomAvailabilityZoneStatus
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CustomAvailabilityZone.
func (in *CustomAvailabilityZone) DeepCopy() *CustomAvailabilityZone {
	if in == nil {
		return nil
	}
	out := new(CustomAvailabilityZone)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CustomDBClusterParameters) DeepCopyInto(out *CustomDBClusterParameters) {
	*out = *in
	if in.DomainIAMRoleNameRef != nil {
		in, out := &in.DomainIAMRoleNameRef, &out.DomainIAMRoleNameRef
		*out = new(v1.Reference)
		**out = **in
	}
	if in.DomainIAMRoleNameSelector != nil {
		in, out := &in.DomainIAMRoleNameSelector, &out.DomainIAMRoleNameSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.KMSKeyIDRef != nil {
		in, out := &in.KMSKeyIDRef, &out.KMSKeyIDRef
		*out = new(v1.Reference)
		**out = **in
	}
	if in.KMSKeyIDSelector != nil {
		in, out := &in.KMSKeyIDSelector, &out.KMSKeyIDSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	out.MasterUserPasswordSecretRef = in.MasterUserPasswordSecretRef
	if in.VPCSecurityGroupIDs != nil {
		in, out := &in.VPCSecurityGroupIDs, &out.VPCSecurityGroupIDs
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
	if in.VPCSecurityGroupIDRefs != nil {
		in, out := &in.VPCSecurityGroupIDRefs, &out.VPCSecurityGroupIDRefs
		*out = make([]v1.Reference, len(*in))
		copy(*out, *in)
	}
	if in.VPCSecurityGroupIDSelector != nil {
		in, out := &in.VPCSecurityGroupIDSelector, &out.VPCSecurityGroupIDSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.DBSubnetGroupNameRef != nil {
		in, out := &in.DBSubnetGroupNameRef, &out.DBSubnetGroupNameRef
		*out = new(v1.Reference)
		**out = **in
	}
	if in.DBSubnetGroupNameSelector != nil {
		in, out := &in.DBSubnetGroupNameSelector, &out.DBSubnetGroupNameSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CustomDBClusterParameters.
func (in *CustomDBClusterParameters) DeepCopy() *CustomDBClusterParameters {
	if in == nil {
		return nil
	}
	out := new(CustomDBClusterParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CustomDBParameterGroupParameters) DeepCopyInto(out *CustomDBParameterGroupParameters) {
	*out = *in
	if in.Parameters != nil {
		in, out := &in.Parameters, &out.Parameters
		*out = make([]Parameter, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CustomDBParameterGroupParameters.
func (in *CustomDBParameterGroupParameters) DeepCopy() *CustomDBParameterGroupParameters {
	if in == nil {
		return nil
	}
	out := new(CustomDBParameterGroupParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DBCluster) DeepCopyInto(out *DBCluster) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DBCluster.
func (in *DBCluster) DeepCopy() *DBCluster {
	if in == nil {
		return nil
	}
	out := new(DBCluster)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *DBCluster) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DBClusterEndpoint) DeepCopyInto(out *DBClusterEndpoint) {
	*out = *in
	if in.CustomEndpointType != nil {
		in, out := &in.CustomEndpointType, &out.CustomEndpointType
		*out = new(string)
		**out = **in
	}
	if in.DBClusterEndpointARN != nil {
		in, out := &in.DBClusterEndpointARN, &out.DBClusterEndpointARN
		*out = new(string)
		**out = **in
	}
	if in.DBClusterEndpointIdentifier != nil {
		in, out := &in.DBClusterEndpointIdentifier, &out.DBClusterEndpointIdentifier
		*out = new(string)
		**out = **in
	}
	if in.DBClusterEndpointResourceIdentifier != nil {
		in, out := &in.DBClusterEndpointResourceIdentifier, &out.DBClusterEndpointResourceIdentifier
		*out = new(string)
		**out = **in
	}
	if in.DBClusterIdentifier != nil {
		in, out := &in.DBClusterIdentifier, &out.DBClusterIdentifier
		*out = new(string)
		**out = **in
	}
	if in.Endpoint != nil {
		in, out := &in.Endpoint, &out.Endpoint
		*out = new(string)
		**out = **in
	}
	if in.EndpointType != nil {
		in, out := &in.EndpointType, &out.EndpointType
		*out = new(string)
		**out = **in
	}
	if in.ExcludedMembers != nil {
		in, out := &in.ExcludedMembers, &out.ExcludedMembers
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.StaticMembers != nil {
		in, out := &in.StaticMembers, &out.StaticMembers
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Status != nil {
		in, out := &in.Status, &out.Status
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DBClusterEndpoint.
func (in *DBClusterEndpoint) DeepCopy() *DBClusterEndpoint {
	if in == nil {
		return nil
	}
	out := new(DBClusterEndpoint)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DBClusterList) DeepCopyInto(out *DBClusterList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]DBCluster, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DBClusterList.
func (in *DBClusterList) DeepCopy() *DBClusterList {
	if in == nil {
		return nil
	}
	out := new(DBClusterList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *DBClusterList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DBClusterMember) DeepCopyInto(out *DBClusterMember) {
	*out = *in
	if in.DBClusterParameterGroupStatus != nil {
		in, out := &in.DBClusterParameterGroupStatus, &out.DBClusterParameterGroupStatus
		*out = new(string)
		**out = **in
	}
	if in.DBInstanceIdentifier != nil {
		in, out := &in.DBInstanceIdentifier, &out.DBInstanceIdentifier
		*out = new(string)
		**out = **in
	}
	if in.IsClusterWriter != nil {
		in, out := &in.IsClusterWriter, &out.IsClusterWriter
		*out = new(bool)
		**out = **in
	}
	if in.PromotionTier != nil {
		in, out := &in.PromotionTier, &out.PromotionTier
		*out = new(int64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DBClusterMember.
func (in *DBClusterMember) DeepCopy() *DBClusterMember {
	if in == nil {
		return nil
	}
	out := new(DBClusterMember)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DBClusterObservation) DeepCopyInto(out *DBClusterObservation) {
	*out = *in
	if in.ActivityStreamKinesisStreamName != nil {
		in, out := &in.ActivityStreamKinesisStreamName, &out.ActivityStreamKinesisStreamName
		*out = new(string)
		**out = **in
	}
	if in.ActivityStreamKMSKeyID != nil {
		in, out := &in.ActivityStreamKMSKeyID, &out.ActivityStreamKMSKeyID
		*out = new(string)
		**out = **in
	}
	if in.ActivityStreamMode != nil {
		in, out := &in.ActivityStreamMode, &out.ActivityStreamMode
		*out = new(string)
		**out = **in
	}
	if in.ActivityStreamStatus != nil {
		in, out := &in.ActivityStreamStatus, &out.ActivityStreamStatus
		*out = new(string)
		**out = **in
	}
	if in.AllocatedStorage != nil {
		in, out := &in.AllocatedStorage, &out.AllocatedStorage
		*out = new(int64)
		**out = **in
	}
	if in.AssociatedRoles != nil {
		in, out := &in.AssociatedRoles, &out.AssociatedRoles
		*out = make([]*DBClusterRole, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(DBClusterRole)
				(*in).DeepCopyInto(*out)
			}
		}
	}
	if in.BacktrackConsumedChangeRecords != nil {
		in, out := &in.BacktrackConsumedChangeRecords, &out.BacktrackConsumedChangeRecords
		*out = new(int64)
		**out = **in
	}
	if in.Capacity != nil {
		in, out := &in.Capacity, &out.Capacity
		*out = new(int64)
		**out = **in
	}
	if in.CloneGroupID != nil {
		in, out := &in.CloneGroupID, &out.CloneGroupID
		*out = new(string)
		**out = **in
	}
	if in.ClusterCreateTime != nil {
		in, out := &in.ClusterCreateTime, &out.ClusterCreateTime
		*out = (*in).DeepCopy()
	}
	if in.CrossAccountClone != nil {
		in, out := &in.CrossAccountClone, &out.CrossAccountClone
		*out = new(bool)
		**out = **in
	}
	if in.CustomEndpoints != nil {
		in, out := &in.CustomEndpoints, &out.CustomEndpoints
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.DBClusterARN != nil {
		in, out := &in.DBClusterARN, &out.DBClusterARN
		*out = new(string)
		**out = **in
	}
	if in.DBClusterIdentifier != nil {
		in, out := &in.DBClusterIdentifier, &out.DBClusterIdentifier
		*out = new(string)
		**out = **in
	}
	if in.DBClusterMembers != nil {
		in, out := &in.DBClusterMembers, &out.DBClusterMembers
		*out = make([]*DBClusterMember, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(DBClusterMember)
				(*in).DeepCopyInto(*out)
			}
		}
	}
	if in.DBClusterOptionGroupMemberships != nil {
		in, out := &in.DBClusterOptionGroupMemberships, &out.DBClusterOptionGroupMemberships
		*out = make([]*DBClusterOptionGroupStatus, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(DBClusterOptionGroupStatus)
				(*in).DeepCopyInto(*out)
			}
		}
	}
	if in.DBClusterParameterGroup != nil {
		in, out := &in.DBClusterParameterGroup, &out.DBClusterParameterGroup
		*out = new(string)
		**out = **in
	}
	if in.DBSubnetGroup != nil {
		in, out := &in.DBSubnetGroup, &out.DBSubnetGroup
		*out = new(string)
		**out = **in
	}
	if in.DBClusterResourceID != nil {
		in, out := &in.DBClusterResourceID, &out.DBClusterResourceID
		*out = new(string)
		**out = **in
	}
	if in.DomainMemberships != nil {
		in, out := &in.DomainMemberships, &out.DomainMemberships
		*out = make([]*DomainMembership, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(DomainMembership)
				(*in).DeepCopyInto(*out)
			}
		}
	}
	if in.EarliestBacktrackTime != nil {
		in, out := &in.EarliestBacktrackTime, &out.EarliestBacktrackTime
		*out = (*in).DeepCopy()
	}
	if in.EarliestRestorableTime != nil {
		in, out := &in.EarliestRestorableTime, &out.EarliestRestorableTime
		*out = (*in).DeepCopy()
	}
	if in.EnabledCloudwatchLogsExports != nil {
		in, out := &in.EnabledCloudwatchLogsExports, &out.EnabledCloudwatchLogsExports
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Endpoint != nil {
		in, out := &in.Endpoint, &out.Endpoint
		*out = new(string)
		**out = **in
	}
	if in.GlobalWriteForwardingRequested != nil {
		in, out := &in.GlobalWriteForwardingRequested, &out.GlobalWriteForwardingRequested
		*out = new(bool)
		**out = **in
	}
	if in.GlobalWriteForwardingStatus != nil {
		in, out := &in.GlobalWriteForwardingStatus, &out.GlobalWriteForwardingStatus
		*out = new(string)
		**out = **in
	}
	if in.HostedZoneID != nil {
		in, out := &in.HostedZoneID, &out.HostedZoneID
		*out = new(string)
		**out = **in
	}
	if in.HTTPEndpointEnabled != nil {
		in, out := &in.HTTPEndpointEnabled, &out.HTTPEndpointEnabled
		*out = new(bool)
		**out = **in
	}
	if in.IAMDatabaseAuthenticationEnabled != nil {
		in, out := &in.IAMDatabaseAuthenticationEnabled, &out.IAMDatabaseAuthenticationEnabled
		*out = new(bool)
		**out = **in
	}
	if in.LatestRestorableTime != nil {
		in, out := &in.LatestRestorableTime, &out.LatestRestorableTime
		*out = (*in).DeepCopy()
	}
	if in.MultiAZ != nil {
		in, out := &in.MultiAZ, &out.MultiAZ
		*out = new(bool)
		**out = **in
	}
	if in.PercentProgress != nil {
		in, out := &in.PercentProgress, &out.PercentProgress
		*out = new(string)
		**out = **in
	}
	if in.ReadReplicaIdentifiers != nil {
		in, out := &in.ReadReplicaIdentifiers, &out.ReadReplicaIdentifiers
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.ReaderEndpoint != nil {
		in, out := &in.ReaderEndpoint, &out.ReaderEndpoint
		*out = new(string)
		**out = **in
	}
	if in.ScalingConfigurationInfo != nil {
		in, out := &in.ScalingConfigurationInfo, &out.ScalingConfigurationInfo
		*out = new(ScalingConfigurationInfo)
		(*in).DeepCopyInto(*out)
	}
	if in.Status != nil {
		in, out := &in.Status, &out.Status
		*out = new(string)
		**out = **in
	}
	if in.TagList != nil {
		in, out := &in.TagList, &out.TagList
		*out = make([]*Tag, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(Tag)
				(*in).DeepCopyInto(*out)
			}
		}
	}
	if in.VPCSecurityGroups != nil {
		in, out := &in.VPCSecurityGroups, &out.VPCSecurityGroups
		*out = make([]*VPCSecurityGroupMembership, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(VPCSecurityGroupMembership)
				(*in).DeepCopyInto(*out)
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DBClusterObservation.
func (in *DBClusterObservation) DeepCopy() *DBClusterObservation {
	if in == nil {
		return nil
	}
	out := new(DBClusterObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DBClusterOptionGroupStatus) DeepCopyInto(out *DBClusterOptionGroupStatus) {
	*out = *in
	if in.DBClusterOptionGroupName != nil {
		in, out := &in.DBClusterOptionGroupName, &out.DBClusterOptionGroupName
		*out = new(string)
		**out = **in
	}
	if in.Status != nil {
		in, out := &in.Status, &out.Status
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DBClusterOptionGroupStatus.
func (in *DBClusterOptionGroupStatus) DeepCopy() *DBClusterOptionGroupStatus {
	if in == nil {
		return nil
	}
	out := new(DBClusterOptionGroupStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DBClusterParameterGroup) DeepCopyInto(out *DBClusterParameterGroup) {
	*out = *in
	if in.DBClusterParameterGroupARN != nil {
		in, out := &in.DBClusterParameterGroupARN, &out.DBClusterParameterGroupARN
		*out = new(string)
		**out = **in
	}
	if in.DBClusterParameterGroupName != nil {
		in, out := &in.DBClusterParameterGroupName, &out.DBClusterParameterGroupName
		*out = new(string)
		**out = **in
	}
	if in.DBParameterGroupFamily != nil {
		in, out := &in.DBParameterGroupFamily, &out.DBParameterGroupFamily
		*out = new(string)
		**out = **in
	}
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DBClusterParameterGroup.
func (in *DBClusterParameterGroup) DeepCopy() *DBClusterParameterGroup {
	if in == nil {
		return nil
	}
	out := new(DBClusterParameterGroup)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DBClusterParameters) DeepCopyInto(out *DBClusterParameters) {
	*out = *in
	if in.AvailabilityZones != nil {
		in, out := &in.AvailabilityZones, &out.AvailabilityZones
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.BacktrackWindow != nil {
		in, out := &in.BacktrackWindow, &out.BacktrackWindow
		*out = new(int64)
		**out = **in
	}
	if in.BackupRetentionPeriod != nil {
		in, out := &in.BackupRetentionPeriod, &out.BackupRetentionPeriod
		*out = new(int64)
		**out = **in
	}
	if in.CharacterSetName != nil {
		in, out := &in.CharacterSetName, &out.CharacterSetName
		*out = new(string)
		**out = **in
	}
	if in.CopyTagsToSnapshot != nil {
		in, out := &in.CopyTagsToSnapshot, &out.CopyTagsToSnapshot
		*out = new(bool)
		**out = **in
	}
	if in.DBClusterParameterGroupName != nil {
		in, out := &in.DBClusterParameterGroupName, &out.DBClusterParameterGroupName
		*out = new(string)
		**out = **in
	}
	if in.DBSubnetGroupName != nil {
		in, out := &in.DBSubnetGroupName, &out.DBSubnetGroupName
		*out = new(string)
		**out = **in
	}
	if in.DatabaseName != nil {
		in, out := &in.DatabaseName, &out.DatabaseName
		*out = new(string)
		**out = **in
	}
	if in.DeletionProtection != nil {
		in, out := &in.DeletionProtection, &out.DeletionProtection
		*out = new(bool)
		**out = **in
	}
	if in.DestinationRegion != nil {
		in, out := &in.DestinationRegion, &out.DestinationRegion
		*out = new(string)
		**out = **in
	}
	if in.Domain != nil {
		in, out := &in.Domain, &out.Domain
		*out = new(string)
		**out = **in
	}
	if in.DomainIAMRoleName != nil {
		in, out := &in.DomainIAMRoleName, &out.DomainIAMRoleName
		*out = new(string)
		**out = **in
	}
	if in.EnableCloudwatchLogsExports != nil {
		in, out := &in.EnableCloudwatchLogsExports, &out.EnableCloudwatchLogsExports
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.EnableGlobalWriteForwarding != nil {
		in, out := &in.EnableGlobalWriteForwarding, &out.EnableGlobalWriteForwarding
		*out = new(bool)
		**out = **in
	}
	if in.EnableHTTPEndpoint != nil {
		in, out := &in.EnableHTTPEndpoint, &out.EnableHTTPEndpoint
		*out = new(bool)
		**out = **in
	}
	if in.EnableIAMDatabaseAuthentication != nil {
		in, out := &in.EnableIAMDatabaseAuthentication, &out.EnableIAMDatabaseAuthentication
		*out = new(bool)
		**out = **in
	}
	if in.Engine != nil {
		in, out := &in.Engine, &out.Engine
		*out = new(string)
		**out = **in
	}
	if in.EngineMode != nil {
		in, out := &in.EngineMode, &out.EngineMode
		*out = new(string)
		**out = **in
	}
	if in.EngineVersion != nil {
		in, out := &in.EngineVersion, &out.EngineVersion
		*out = new(string)
		**out = **in
	}
	if in.GlobalClusterIdentifier != nil {
		in, out := &in.GlobalClusterIdentifier, &out.GlobalClusterIdentifier
		*out = new(string)
		**out = **in
	}
	if in.KMSKeyID != nil {
		in, out := &in.KMSKeyID, &out.KMSKeyID
		*out = new(string)
		**out = **in
	}
	if in.MasterUsername != nil {
		in, out := &in.MasterUsername, &out.MasterUsername
		*out = new(string)
		**out = **in
	}
	if in.OptionGroupName != nil {
		in, out := &in.OptionGroupName, &out.OptionGroupName
		*out = new(string)
		**out = **in
	}
	if in.Port != nil {
		in, out := &in.Port, &out.Port
		*out = new(int64)
		**out = **in
	}
	if in.PreSignedURL != nil {
		in, out := &in.PreSignedURL, &out.PreSignedURL
		*out = new(string)
		**out = **in
	}
	if in.PreferredBackupWindow != nil {
		in, out := &in.PreferredBackupWindow, &out.PreferredBackupWindow
		*out = new(string)
		**out = **in
	}
	if in.PreferredMaintenanceWindow != nil {
		in, out := &in.PreferredMaintenanceWindow, &out.PreferredMaintenanceWindow
		*out = new(string)
		**out = **in
	}
	if in.ReplicationSourceIdentifier != nil {
		in, out := &in.ReplicationSourceIdentifier, &out.ReplicationSourceIdentifier
		*out = new(string)
		**out = **in
	}
	if in.ScalingConfiguration != nil {
		in, out := &in.ScalingConfiguration, &out.ScalingConfiguration
		*out = new(ScalingConfiguration)
		(*in).DeepCopyInto(*out)
	}
	if in.SourceRegion != nil {
		in, out := &in.SourceRegion, &out.SourceRegion
		*out = new(string)
		**out = **in
	}
	if in.StorageEncrypted != nil {
		in, out := &in.StorageEncrypted, &out.StorageEncrypted
		*out = new(bool)
		**out = **in
	}
	if in.Tags != nil {
		in, out := &in.Tags, &out.Tags
		*out = make([]*Tag, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(Tag)
				(*in).DeepCopyInto(*out)
			}
		}
	}
	in.CustomDBClusterParameters.DeepCopyInto(&out.CustomDBClusterParameters)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DBClusterParameters.
func (in *DBClusterParameters) DeepCopy() *DBClusterParameters {
	if in == nil {
		return nil
	}
	out := new(DBClusterParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DBClusterRole) DeepCopyInto(out *DBClusterRole) {
	*out = *in
	if in.FeatureName != nil {
		in, out := &in.FeatureName, &out.FeatureName
		*out = new(string)
		**out = **in
	}
	if in.RoleARN != nil {
		in, out := &in.RoleARN, &out.RoleARN
		*out = new(string)
		**out = **in
	}
	if in.Status != nil {
		in, out := &in.Status, &out.Status
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DBClusterRole.
func (in *DBClusterRole) DeepCopy() *DBClusterRole {
	if in == nil {
		return nil
	}
	out := new(DBClusterRole)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DBClusterSnapshot) DeepCopyInto(out *DBClusterSnapshot) {
	*out = *in
	if in.AvailabilityZones != nil {
		in, out := &in.AvailabilityZones, &out.AvailabilityZones
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.ClusterCreateTime != nil {
		in, out := &in.ClusterCreateTime, &out.ClusterCreateTime
		*out = (*in).DeepCopy()
	}
	if in.DBClusterIdentifier != nil {
		in, out := &in.DBClusterIdentifier, &out.DBClusterIdentifier
		*out = new(string)
		**out = **in
	}
	if in.DBClusterSnapshotARN != nil {
		in, out := &in.DBClusterSnapshotARN, &out.DBClusterSnapshotARN
		*out = new(string)
		**out = **in
	}
	if in.DBClusterSnapshotIdentifier != nil {
		in, out := &in.DBClusterSnapshotIdentifier, &out.DBClusterSnapshotIdentifier
		*out = new(string)
		**out = **in
	}
	if in.Engine != nil {
		in, out := &in.Engine, &out.Engine
		*out = new(string)
		**out = **in
	}
	if in.EngineVersion != nil {
		in, out := &in.EngineVersion, &out.EngineVersion
		*out = new(string)
		**out = **in
	}
	if in.IAMDatabaseAuthenticationEnabled != nil {
		in, out := &in.IAMDatabaseAuthenticationEnabled, &out.IAMDatabaseAuthenticationEnabled
		*out = new(bool)
		**out = **in
	}
	if in.KMSKeyID != nil {
		in, out := &in.KMSKeyID, &out.KMSKeyID
		*out = new(string)
		**out = **in
	}
	if in.LicenseModel != nil {
		in, out := &in.LicenseModel, &out.LicenseModel
		*out = new(string)
		**out = **in
	}
	if in.MasterUsername != nil {
		in, out := &in.MasterUsername, &out.MasterUsername
		*out = new(string)
		**out = **in
	}
	if in.SnapshotCreateTime != nil {
		in, out := &in.SnapshotCreateTime, &out.SnapshotCreateTime
		*out = (*in).DeepCopy()
	}
	if in.SnapshotType != nil {
		in, out := &in.SnapshotType, &out.SnapshotType
		*out = new(string)
		**out = **in
	}
	if in.SourceDBClusterSnapshotARN != nil {
		in, out := &in.SourceDBClusterSnapshotARN, &out.SourceDBClusterSnapshotARN
		*out = new(string)
		**out = **in
	}
	if in.Status != nil {
		in, out := &in.Status, &out.Status
		*out = new(string)
		**out = **in
	}
	if in.StorageEncrypted != nil {
		in, out := &in.StorageEncrypted, &out.StorageEncrypted
		*out = new(bool)
		**out = **in
	}
	if in.TagList != nil {
		in, out := &in.TagList, &out.TagList
		*out = make([]*Tag, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(Tag)
				(*in).DeepCopyInto(*out)
			}
		}
	}
	if in.VPCID != nil {
		in, out := &in.VPCID, &out.VPCID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DBClusterSnapshot.
func (in *DBClusterSnapshot) DeepCopy() *DBClusterSnapshot {
	if in == nil {
		return nil
	}
	out := new(DBClusterSnapshot)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DBClusterSnapshotAttribute) DeepCopyInto(out *DBClusterSnapshotAttribute) {
	*out = *in
	if in.AttributeName != nil {
		in, out := &in.AttributeName, &out.AttributeName
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DBClusterSnapshotAttribute.
func (in *DBClusterSnapshotAttribute) DeepCopy() *DBClusterSnapshotAttribute {
	if in == nil {
		return nil
	}
	out := new(DBClusterSnapshotAttribute)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DBClusterSnapshotAttributesResult) DeepCopyInto(out *DBClusterSnapshotAttributesResult) {
	*out = *in
	if in.DBClusterSnapshotIdentifier != nil {
		in, out := &in.DBClusterSnapshotIdentifier, &out.DBClusterSnapshotIdentifier
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DBClusterSnapshotAttributesResult.
func (in *DBClusterSnapshotAttributesResult) DeepCopy() *DBClusterSnapshotAttributesResult {
	if in == nil {
		return nil
	}
	out := new(DBClusterSnapshotAttributesResult)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DBClusterSpec) DeepCopyInto(out *DBClusterSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DBClusterSpec.
func (in *DBClusterSpec) DeepCopy() *DBClusterSpec {
	if in == nil {
		return nil
	}
	out := new(DBClusterSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DBClusterStatus) DeepCopyInto(out *DBClusterStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DBClusterStatus.
func (in *DBClusterStatus) DeepCopy() *DBClusterStatus {
	if in == nil {
		return nil
	}
	out := new(DBClusterStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DBCluster_SDK) DeepCopyInto(out *DBCluster_SDK) {
	*out = *in
	if in.ActivityStreamKinesisStreamName != nil {
		in, out := &in.ActivityStreamKinesisStreamName, &out.ActivityStreamKinesisStreamName
		*out = new(string)
		**out = **in
	}
	if in.ActivityStreamKMSKeyID != nil {
		in, out := &in.ActivityStreamKMSKeyID, &out.ActivityStreamKMSKeyID
		*out = new(string)
		**out = **in
	}
	if in.ActivityStreamMode != nil {
		in, out := &in.ActivityStreamMode, &out.ActivityStreamMode
		*out = new(string)
		**out = **in
	}
	if in.ActivityStreamStatus != nil {
		in, out := &in.ActivityStreamStatus, &out.ActivityStreamStatus
		*out = new(string)
		**out = **in
	}
	if in.AllocatedStorage != nil {
		in, out := &in.AllocatedStorage, &out.AllocatedStorage
		*out = new(int64)
		**out = **in
	}
	if in.AssociatedRoles != nil {
		in, out := &in.AssociatedRoles, &out.AssociatedRoles
		*out = make([]*DBClusterRole, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(DBClusterRole)
				(*in).DeepCopyInto(*out)
			}
		}
	}
	if in.AvailabilityZones != nil {
		in, out := &in.AvailabilityZones, &out.AvailabilityZones
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.BacktrackConsumedChangeRecords != nil {
		in, out := &in.BacktrackConsumedChangeRecords, &out.BacktrackConsumedChangeRecords
		*out = new(int64)
		**out = **in
	}
	if in.BacktrackWindow != nil {
		in, out := &in.BacktrackWindow, &out.BacktrackWindow
		*out = new(int64)
		**out = **in
	}
	if in.BackupRetentionPeriod != nil {
		in, out := &in.BackupRetentionPeriod, &out.BackupRetentionPeriod
		*out = new(int64)
		**out = **in
	}
	if in.Capacity != nil {
		in, out := &in.Capacity, &out.Capacity
		*out = new(int64)
		**out = **in
	}
	if in.CharacterSetName != nil {
		in, out := &in.CharacterSetName, &out.CharacterSetName
		*out = new(string)
		**out = **in
	}
	if in.CloneGroupID != nil {
		in, out := &in.CloneGroupID, &out.CloneGroupID
		*out = new(string)
		**out = **in
	}
	if in.ClusterCreateTime != nil {
		in, out := &in.ClusterCreateTime, &out.ClusterCreateTime
		*out = (*in).DeepCopy()
	}
	if in.CopyTagsToSnapshot != nil {
		in, out := &in.CopyTagsToSnapshot, &out.CopyTagsToSnapshot
		*out = new(bool)
		**out = **in
	}
	if in.CrossAccountClone != nil {
		in, out := &in.CrossAccountClone, &out.CrossAccountClone
		*out = new(bool)
		**out = **in
	}
	if in.CustomEndpoints != nil {
		in, out := &in.CustomEndpoints, &out.CustomEndpoints
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.DBClusterARN != nil {
		in, out := &in.DBClusterARN, &out.DBClusterARN
		*out = new(string)
		**out = **in
	}
	if in.DBClusterIdentifier != nil {
		in, out := &in.DBClusterIdentifier, &out.DBClusterIdentifier
		*out = new(string)
		**out = **in
	}
	if in.DBClusterMembers != nil {
		in, out := &in.DBClusterMembers, &out.DBClusterMembers
		*out = make([]*DBClusterMember, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(DBClusterMember)
				(*in).DeepCopyInto(*out)
			}
		}
	}
	if in.DBClusterOptionGroupMemberships != nil {
		in, out := &in.DBClusterOptionGroupMemberships, &out.DBClusterOptionGroupMemberships
		*out = make([]*DBClusterOptionGroupStatus, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(DBClusterOptionGroupStatus)
				(*in).DeepCopyInto(*out)
			}
		}
	}
	if in.DBClusterParameterGroup != nil {
		in, out := &in.DBClusterParameterGroup, &out.DBClusterParameterGroup
		*out = new(string)
		**out = **in
	}
	if in.DBSubnetGroup != nil {
		in, out := &in.DBSubnetGroup, &out.DBSubnetGroup
		*out = new(string)
		**out = **in
	}
	if in.DatabaseName != nil {
		in, out := &in.DatabaseName, &out.DatabaseName
		*out = new(string)
		**out = **in
	}
	if in.DBClusterResourceID != nil {
		in, out := &in.DBClusterResourceID, &out.DBClusterResourceID
		*out = new(string)
		**out = **in
	}
	if in.DeletionProtection != nil {
		in, out := &in.DeletionProtection, &out.DeletionProtection
		*out = new(bool)
		**out = **in
	}
	if in.DomainMemberships != nil {
		in, out := &in.DomainMemberships, &out.DomainMemberships
		*out = make([]*DomainMembership, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(DomainMembership)
				(*in).DeepCopyInto(*out)
			}
		}
	}
	if in.EarliestBacktrackTime != nil {
		in, out := &in.EarliestBacktrackTime, &out.EarliestBacktrackTime
		*out = (*in).DeepCopy()
	}
	if in.EarliestRestorableTime != nil {
		in, out := &in.EarliestRestorableTime, &out.EarliestRestorableTime
		*out = (*in).DeepCopy()
	}
	if in.EnabledCloudwatchLogsExports != nil {
		in, out := &in.EnabledCloudwatchLogsExports, &out.EnabledCloudwatchLogsExports
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Endpoint != nil {
		in, out := &in.Endpoint, &out.Endpoint
		*out = new(string)
		**out = **in
	}
	if in.Engine != nil {
		in, out := &in.Engine, &out.Engine
		*out = new(string)
		**out = **in
	}
	if in.EngineMode != nil {
		in, out := &in.EngineMode, &out.EngineMode
		*out = new(string)
		**out = **in
	}
	if in.EngineVersion != nil {
		in, out := &in.EngineVersion, &out.EngineVersion
		*out = new(string)
		**out = **in
	}
	if in.GlobalWriteForwardingRequested != nil {
		in, out := &in.GlobalWriteForwardingRequested, &out.GlobalWriteForwardingRequested
		*out = new(bool)
		**out = **in
	}
	if in.GlobalWriteForwardingStatus != nil {
		in, out := &in.GlobalWriteForwardingStatus, &out.GlobalWriteForwardingStatus
		*out = new(string)
		**out = **in
	}
	if in.HostedZoneID != nil {
		in, out := &in.HostedZoneID, &out.HostedZoneID
		*out = new(string)
		**out = **in
	}
	if in.HTTPEndpointEnabled != nil {
		in, out := &in.HTTPEndpointEnabled, &out.HTTPEndpointEnabled
		*out = new(bool)
		**out = **in
	}
	if in.IAMDatabaseAuthenticationEnabled != nil {
		in, out := &in.IAMDatabaseAuthenticationEnabled, &out.IAMDatabaseAuthenticationEnabled
		*out = new(bool)
		**out = **in
	}
	if in.KMSKeyID != nil {
		in, out := &in.KMSKeyID, &out.KMSKeyID
		*out = new(string)
		**out = **in
	}
	if in.LatestRestorableTime != nil {
		in, out := &in.LatestRestorableTime, &out.LatestRestorableTime
		*out = (*in).DeepCopy()
	}
	if in.MasterUsername != nil {
		in, out := &in.MasterUsername, &out.MasterUsername
		*out = new(string)
		**out = **in
	}
	if in.MultiAZ != nil {
		in, out := &in.MultiAZ, &out.MultiAZ
		*out = new(bool)
		**out = **in
	}
	if in.PercentProgress != nil {
		in, out := &in.PercentProgress, &out.PercentProgress
		*out = new(string)
		**out = **in
	}
	if in.Port != nil {
		in, out := &in.Port, &out.Port
		*out = new(int64)
		**out = **in
	}
	if in.PreferredBackupWindow != nil {
		in, out := &in.PreferredBackupWindow, &out.PreferredBackupWindow
		*out = new(string)
		**out = **in
	}
	if in.PreferredMaintenanceWindow != nil {
		in, out := &in.PreferredMaintenanceWindow, &out.PreferredMaintenanceWindow
		*out = new(string)
		**out = **in
	}
	if in.ReadReplicaIdentifiers != nil {
		in, out := &in.ReadReplicaIdentifiers, &out.ReadReplicaIdentifiers
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.ReaderEndpoint != nil {
		in, out := &in.ReaderEndpoint, &out.ReaderEndpoint
		*out = new(string)
		**out = **in
	}
	if in.ReplicationSourceIdentifier != nil {
		in, out := &in.ReplicationSourceIdentifier, &out.ReplicationSourceIdentifier
		*out = new(string)
		**out = **in
	}
	if in.ScalingConfigurationInfo != nil {
		in, out := &in.ScalingConfigurationInfo, &out.ScalingConfigurationInfo
		*out = new(ScalingConfigurationInfo)
		(*in).DeepCopyInto(*out)
	}
	if in.Status != nil {
		in, out := &in.Status, &out.Status
		*out = new(string)
		**out = **in
	}
	if in.StorageEncrypted != nil {
		in, out := &in.StorageEncrypted, &out.StorageEncrypted
		*out = new(bool)
		**out = **in
	}
	if in.TagList != nil {
		in, out := &in.TagList, &out.TagList
		*out = make([]*Tag, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(Tag)
				(*in).DeepCopyInto(*out)
			}
		}
	}
	if in.VPCSecurityGroups != nil {
		in, out := &in.VPCSecurityGroups, &out.VPCSecurityGroups
		*out = make([]*VPCSecurityGroupMembership, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(VPCSecurityGroupMembership)
				(*in).DeepCopyInto(*out)
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DBCluster_SDK.
func (in *DBCluster_SDK) DeepCopy() *DBCluster_SDK {
	if in == nil {
		return nil
	}
	out := new(DBCluster_SDK)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DBEngineVersion) DeepCopyInto(out *DBEngineVersion) {
	*out = *in
	if in.DBEngineDescription != nil {
		in, out := &in.DBEngineDescription, &out.DBEngineDescription
		*out = new(string)
		**out = **in
	}
	if in.DBEngineVersionDescription != nil {
		in, out := &in.DBEngineVersionDescription, &out.DBEngineVersionDescription
		*out = new(string)
		**out = **in
	}
	if in.DBParameterGroupFamily != nil {
		in, out := &in.DBParameterGroupFamily, &out.DBParameterGroupFamily
		*out = new(string)
		**out = **in
	}
	if in.Engine != nil {
		in, out := &in.Engine, &out.Engine
		*out = new(string)
		**out = **in
	}
	if in.EngineVersion != nil {
		in, out := &in.EngineVersion, &out.EngineVersion
		*out = new(string)
		**out = **in
	}
	if in.ExportableLogTypes != nil {
		in, out := &in.ExportableLogTypes, &out.ExportableLogTypes
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Status != nil {
		in, out := &in.Status, &out.Status
		*out = new(string)
		**out = **in
	}
	if in.SupportedEngineModes != nil {
		in, out := &in.SupportedEngineModes, &out.SupportedEngineModes
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.SupportsGlobalDatabases != nil {
		in, out := &in.SupportsGlobalDatabases, &out.SupportsGlobalDatabases
		*out = new(bool)
		**out = **in
	}
	if in.SupportsLogExportsToCloudwatchLogs != nil {
		in, out := &in.SupportsLogExportsToCloudwatchLogs, &out.SupportsLogExportsToCloudwatchLogs
		*out = new(bool)
		**out = **in
	}
	if in.SupportsParallelQuery != nil {
		in, out := &in.SupportsParallelQuery, &out.SupportsParallelQuery
		*out = new(bool)
		**out = **in
	}
	if in.SupportsReadReplica != nil {
		in, out := &in.SupportsReadReplica, &out.SupportsReadReplica
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DBEngineVersion.
func (in *DBEngineVersion) DeepCopy() *DBEngineVersion {
	if in == nil {
		return nil
	}
	out := new(DBEngineVersion)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DBInstance) DeepCopyInto(out *DBInstance) {
	*out = *in
	if in.AutoMinorVersionUpgrade != nil {
		in, out := &in.AutoMinorVersionUpgrade, &out.AutoMinorVersionUpgrade
		*out = new(bool)
		**out = **in
	}
	if in.AvailabilityZone != nil {
		in, out := &in.AvailabilityZone, &out.AvailabilityZone
		*out = new(string)
		**out = **in
	}
	if in.CACertificateIdentifier != nil {
		in, out := &in.CACertificateIdentifier, &out.CACertificateIdentifier
		*out = new(string)
		**out = **in
	}
	if in.CharacterSetName != nil {
		in, out := &in.CharacterSetName, &out.CharacterSetName
		*out = new(string)
		**out = **in
	}
	if in.CopyTagsToSnapshot != nil {
		in, out := &in.CopyTagsToSnapshot, &out.CopyTagsToSnapshot
		*out = new(bool)
		**out = **in
	}
	if in.CustomerOwnedIPEnabled != nil {
		in, out := &in.CustomerOwnedIPEnabled, &out.CustomerOwnedIPEnabled
		*out = new(bool)
		**out = **in
	}
	if in.DBClusterIdentifier != nil {
		in, out := &in.DBClusterIdentifier, &out.DBClusterIdentifier
		*out = new(string)
		**out = **in
	}
	if in.DBInstanceARN != nil {
		in, out := &in.DBInstanceARN, &out.DBInstanceARN
		*out = new(string)
		**out = **in
	}
	if in.DBInstanceClass != nil {
		in, out := &in.DBInstanceClass, &out.DBInstanceClass
		*out = new(string)
		**out = **in
	}
	if in.DBInstanceIdentifier != nil {
		in, out := &in.DBInstanceIdentifier, &out.DBInstanceIdentifier
		*out = new(string)
		**out = **in
	}
	if in.DBInstanceStatus != nil {
		in, out := &in.DBInstanceStatus, &out.DBInstanceStatus
		*out = new(string)
		**out = **in
	}
	if in.DBName != nil {
		in, out := &in.DBName, &out.DBName
		*out = new(string)
		**out = **in
	}
	if in.DBIResourceID != nil {
		in, out := &in.DBIResourceID, &out.DBIResourceID
		*out = new(string)
		**out = **in
	}
	if in.DeletionProtection != nil {
		in, out := &in.DeletionProtection, &out.DeletionProtection
		*out = new(bool)
		**out = **in
	}
	if in.DomainMemberships != nil {
		in, out := &in.DomainMemberships, &out.DomainMemberships
		*out = make([]*DomainMembership, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(DomainMembership)
				(*in).DeepCopyInto(*out)
			}
		}
	}
	if in.EnabledCloudwatchLogsExports != nil {
		in, out := &in.EnabledCloudwatchLogsExports, &out.EnabledCloudwatchLogsExports
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Engine != nil {
		in, out := &in.Engine, &out.Engine
		*out = new(string)
		**out = **in
	}
	if in.EngineVersion != nil {
		in, out := &in.EngineVersion, &out.EngineVersion
		*out = new(string)
		**out = **in
	}
	if in.EnhancedMonitoringResourceARN != nil {
		in, out := &in.EnhancedMonitoringResourceARN, &out.EnhancedMonitoringResourceARN
		*out = new(string)
		**out = **in
	}
	if in.IAMDatabaseAuthenticationEnabled != nil {
		in, out := &in.IAMDatabaseAuthenticationEnabled, &out.IAMDatabaseAuthenticationEnabled
		*out = new(bool)
		**out = **in
	}
	if in.InstanceCreateTime != nil {
		in, out := &in.InstanceCreateTime, &out.InstanceCreateTime
		*out = (*in).DeepCopy()
	}
	if in.IOPS != nil {
		in, out := &in.IOPS, &out.IOPS
		*out = new(int64)
		**out = **in
	}
	if in.KMSKeyID != nil {
		in, out := &in.KMSKeyID, &out.KMSKeyID
		*out = new(string)
		**out = **in
	}
	if in.LatestRestorableTime != nil {
		in, out := &in.LatestRestorableTime, &out.LatestRestorableTime
		*out = (*in).DeepCopy()
	}
	if in.LicenseModel != nil {
		in, out := &in.LicenseModel, &out.LicenseModel
		*out = new(string)
		**out = **in
	}
	if in.MasterUsername != nil {
		in, out := &in.MasterUsername, &out.MasterUsername
		*out = new(string)
		**out = **in
	}
	if in.MaxAllocatedStorage != nil {
		in, out := &in.MaxAllocatedStorage, &out.MaxAllocatedStorage
		*out = new(int64)
		**out = **in
	}
	if in.MonitoringInterval != nil {
		in, out := &in.MonitoringInterval, &out.MonitoringInterval
		*out = new(int64)
		**out = **in
	}
	if in.MonitoringRoleARN != nil {
		in, out := &in.MonitoringRoleARN, &out.MonitoringRoleARN
		*out = new(string)
		**out = **in
	}
	if in.MultiAZ != nil {
		in, out := &in.MultiAZ, &out.MultiAZ
		*out = new(bool)
		**out = **in
	}
	if in.NcharCharacterSetName != nil {
		in, out := &in.NcharCharacterSetName, &out.NcharCharacterSetName
		*out = new(string)
		**out = **in
	}
	if in.PerformanceInsightsEnabled != nil {
		in, out := &in.PerformanceInsightsEnabled, &out.PerformanceInsightsEnabled
		*out = new(bool)
		**out = **in
	}
	if in.PerformanceInsightsKMSKeyID != nil {
		in, out := &in.PerformanceInsightsKMSKeyID, &out.PerformanceInsightsKMSKeyID
		*out = new(string)
		**out = **in
	}
	if in.PerformanceInsightsRetentionPeriod != nil {
		in, out := &in.PerformanceInsightsRetentionPeriod, &out.PerformanceInsightsRetentionPeriod
		*out = new(int64)
		**out = **in
	}
	if in.PreferredBackupWindow != nil {
		in, out := &in.PreferredBackupWindow, &out.PreferredBackupWindow
		*out = new(string)
		**out = **in
	}
	if in.PreferredMaintenanceWindow != nil {
		in, out := &in.PreferredMaintenanceWindow, &out.PreferredMaintenanceWindow
		*out = new(string)
		**out = **in
	}
	if in.PromotionTier != nil {
		in, out := &in.PromotionTier, &out.PromotionTier
		*out = new(int64)
		**out = **in
	}
	if in.PubliclyAccessible != nil {
		in, out := &in.PubliclyAccessible, &out.PubliclyAccessible
		*out = new(bool)
		**out = **in
	}
	if in.ReadReplicaSourceDBInstanceIdentifier != nil {
		in, out := &in.ReadReplicaSourceDBInstanceIdentifier, &out.ReadReplicaSourceDBInstanceIdentifier
		*out = new(string)
		**out = **in
	}
	if in.SecondaryAvailabilityZone != nil {
		in, out := &in.SecondaryAvailabilityZone, &out.SecondaryAvailabilityZone
		*out = new(string)
		**out = **in
	}
	if in.StorageEncrypted != nil {
		in, out := &in.StorageEncrypted, &out.StorageEncrypted
		*out = new(bool)
		**out = **in
	}
	if in.StorageType != nil {
		in, out := &in.StorageType, &out.StorageType
		*out = new(string)
		**out = **in
	}
	if in.TagList != nil {
		in, out := &in.TagList, &out.TagList
		*out = make([]*Tag, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(Tag)
				(*in).DeepCopyInto(*out)
			}
		}
	}
	if in.TDECredentialARN != nil {
		in, out := &in.TDECredentialARN, &out.TDECredentialARN
		*out = new(string)
		**out = **in
	}
	if in.Timezone != nil {
		in, out := &in.Timezone, &out.Timezone
		*out = new(string)
		**out = **in
	}
	if in.VPCSecurityGroups != nil {
		in, out := &in.VPCSecurityGroups, &out.VPCSecurityGroups
		*out = make([]*VPCSecurityGroupMembership, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(VPCSecurityGroupMembership)
				(*in).DeepCopyInto(*out)
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DBInstance.
func (in *DBInstance) DeepCopy() *DBInstance {
	if in == nil {
		return nil
	}
	out := new(DBInstance)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DBInstanceAutomatedBackup) DeepCopyInto(out *DBInstanceAutomatedBackup) {
	*out = *in
	if in.AvailabilityZone != nil {
		in, out := &in.AvailabilityZone, &out.AvailabilityZone
		*out = new(string)
		**out = **in
	}
	if in.BackupRetentionPeriod != nil {
		in, out := &in.BackupRetentionPeriod, &out.BackupRetentionPeriod
		*out = new(int64)
		**out = **in
	}
	if in.DBInstanceARN != nil {
		in, out := &in.DBInstanceARN, &out.DBInstanceARN
		*out = new(string)
		**out = **in
	}
	if in.DBInstanceAutomatedBackupsARN != nil {
		in, out := &in.DBInstanceAutomatedBackupsARN, &out.DBInstanceAutomatedBackupsARN
		*out = new(string)
		**out = **in
	}
	if in.DBInstanceIdentifier != nil {
		in, out := &in.DBInstanceIdentifier, &out.DBInstanceIdentifier
		*out = new(string)
		**out = **in
	}
	if in.DBIResourceID != nil {
		in, out := &in.DBIResourceID, &out.DBIResourceID
		*out = new(string)
		**out = **in
	}
	if in.Encrypted != nil {
		in, out := &in.Encrypted, &out.Encrypted
		*out = new(bool)
		**out = **in
	}
	if in.Engine != nil {
		in, out := &in.Engine, &out.Engine
		*out = new(string)
		**out = **in
	}
	if in.EngineVersion != nil {
		in, out := &in.EngineVersion, &out.EngineVersion
		*out = new(string)
		**out = **in
	}
	if in.IAMDatabaseAuthenticationEnabled != nil {
		in, out := &in.IAMDatabaseAuthenticationEnabled, &out.IAMDatabaseAuthenticationEnabled
		*out = new(bool)
		**out = **in
	}
	if in.InstanceCreateTime != nil {
		in, out := &in.InstanceCreateTime, &out.InstanceCreateTime
		*out = (*in).DeepCopy()
	}
	if in.IOPS != nil {
		in, out := &in.IOPS, &out.IOPS
		*out = new(int64)
		**out = **in
	}
	if in.KMSKeyID != nil {
		in, out := &in.KMSKeyID, &out.KMSKeyID
		*out = new(string)
		**out = **in
	}
	if in.LicenseModel != nil {
		in, out := &in.LicenseModel, &out.LicenseModel
		*out = new(string)
		**out = **in
	}
	if in.MasterUsername != nil {
		in, out := &in.MasterUsername, &out.MasterUsername
		*out = new(string)
		**out = **in
	}
	if in.OptionGroupName != nil {
		in, out := &in.OptionGroupName, &out.OptionGroupName
		*out = new(string)
		**out = **in
	}
	if in.Region != nil {
		in, out := &in.Region, &out.Region
		*out = new(string)
		**out = **in
	}
	if in.Status != nil {
		in, out := &in.Status, &out.Status
		*out = new(string)
		**out = **in
	}
	if in.StorageType != nil {
		in, out := &in.StorageType, &out.StorageType
		*out = new(string)
		**out = **in
	}
	if in.TDECredentialARN != nil {
		in, out := &in.TDECredentialARN, &out.TDECredentialARN
		*out = new(string)
		**out = **in
	}
	if in.Timezone != nil {
		in, out := &in.Timezone, &out.Timezone
		*out = new(string)
		**out = **in
	}
	if in.VPCID != nil {
		in, out := &in.VPCID, &out.VPCID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DBInstanceAutomatedBackup.
func (in *DBInstanceAutomatedBackup) DeepCopy() *DBInstanceAutomatedBackup {
	if in == nil {
		return nil
	}
	out := new(DBInstanceAutomatedBackup)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DBInstanceAutomatedBackupsReplication) DeepCopyInto(out *DBInstanceAutomatedBackupsReplication) {
	*out = *in
	if in.DBInstanceAutomatedBackupsARN != nil {
		in, out := &in.DBInstanceAutomatedBackupsARN, &out.DBInstanceAutomatedBackupsARN
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DBInstanceAutomatedBackupsReplication.
func (in *DBInstanceAutomatedBackupsReplication) DeepCopy() *DBInstanceAutomatedBackupsReplication {
	if in == nil {
		return nil
	}
	out := new(DBInstanceAutomatedBackupsReplication)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DBInstanceRole) DeepCopyInto(out *DBInstanceRole) {
	*out = *in
	if in.FeatureName != nil {
		in, out := &in.FeatureName, &out.FeatureName
		*out = new(string)
		**out = **in
	}
	if in.RoleARN != nil {
		in, out := &in.RoleARN, &out.RoleARN
		*out = new(string)
		**out = **in
	}
	if in.Status != nil {
		in, out := &in.Status, &out.Status
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DBInstanceRole.
func (in *DBInstanceRole) DeepCopy() *DBInstanceRole {
	if in == nil {
		return nil
	}
	out := new(DBInstanceRole)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DBInstanceStatusInfo) DeepCopyInto(out *DBInstanceStatusInfo) {
	*out = *in
	if in.Message != nil {
		in, out := &in.Message, &out.Message
		*out = new(string)
		**out = **in
	}
	if in.Normal != nil {
		in, out := &in.Normal, &out.Normal
		*out = new(bool)
		**out = **in
	}
	if in.Status != nil {
		in, out := &in.Status, &out.Status
		*out = new(string)
		**out = **in
	}
	if in.StatusType != nil {
		in, out := &in.StatusType, &out.StatusType
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DBInstanceStatusInfo.
func (in *DBInstanceStatusInfo) DeepCopy() *DBInstanceStatusInfo {
	if in == nil {
		return nil
	}
	out := new(DBInstanceStatusInfo)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DBParameterGroup) DeepCopyInto(out *DBParameterGroup) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DBParameterGroup.
func (in *DBParameterGroup) DeepCopy() *DBParameterGroup {
	if in == nil {
		return nil
	}
	out := new(DBParameterGroup)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *DBParameterGroup) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DBParameterGroupList) DeepCopyInto(out *DBParameterGroupList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]DBParameterGroup, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DBParameterGroupList.
func (in *DBParameterGroupList) DeepCopy() *DBParameterGroupList {
	if in == nil {
		return nil
	}
	out := new(DBParameterGroupList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *DBParameterGroupList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DBParameterGroupObservation) DeepCopyInto(out *DBParameterGroupObservation) {
	*out = *in
	if in.DBParameterGroupARN != nil {
		in, out := &in.DBParameterGroupARN, &out.DBParameterGroupARN
		*out = new(string)
		**out = **in
	}
	if in.DBParameterGroupName != nil {
		in, out := &in.DBParameterGroupName, &out.DBParameterGroupName
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DBParameterGroupObservation.
func (in *DBParameterGroupObservation) DeepCopy() *DBParameterGroupObservation {
	if in == nil {
		return nil
	}
	out := new(DBParameterGroupObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DBParameterGroupParameters) DeepCopyInto(out *DBParameterGroupParameters) {
	*out = *in
	if in.DBParameterGroupFamily != nil {
		in, out := &in.DBParameterGroupFamily, &out.DBParameterGroupFamily
		*out = new(string)
		**out = **in
	}
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.Tags != nil {
		in, out := &in.Tags, &out.Tags
		*out = make([]*Tag, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(Tag)
				(*in).DeepCopyInto(*out)
			}
		}
	}
	in.CustomDBParameterGroupParameters.DeepCopyInto(&out.CustomDBParameterGroupParameters)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DBParameterGroupParameters.
func (in *DBParameterGroupParameters) DeepCopy() *DBParameterGroupParameters {
	if in == nil {
		return nil
	}
	out := new(DBParameterGroupParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DBParameterGroupSpec) DeepCopyInto(out *DBParameterGroupSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DBParameterGroupSpec.
func (in *DBParameterGroupSpec) DeepCopy() *DBParameterGroupSpec {
	if in == nil {
		return nil
	}
	out := new(DBParameterGroupSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DBParameterGroupStatus) DeepCopyInto(out *DBParameterGroupStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DBParameterGroupStatus.
func (in *DBParameterGroupStatus) DeepCopy() *DBParameterGroupStatus {
	if in == nil {
		return nil
	}
	out := new(DBParameterGroupStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DBParameterGroupStatus_SDK) DeepCopyInto(out *DBParameterGroupStatus_SDK) {
	*out = *in
	if in.DBParameterGroupName != nil {
		in, out := &in.DBParameterGroupName, &out.DBParameterGroupName
		*out = new(string)
		**out = **in
	}
	if in.ParameterApplyStatus != nil {
		in, out := &in.ParameterApplyStatus, &out.ParameterApplyStatus
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DBParameterGroupStatus_SDK.
func (in *DBParameterGroupStatus_SDK) DeepCopy() *DBParameterGroupStatus_SDK {
	if in == nil {
		return nil
	}
	out := new(DBParameterGroupStatus_SDK)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DBParameterGroup_SDK) DeepCopyInto(out *DBParameterGroup_SDK) {
	*out = *in
	if in.DBParameterGroupARN != nil {
		in, out := &in.DBParameterGroupARN, &out.DBParameterGroupARN
		*out = new(string)
		**out = **in
	}
	if in.DBParameterGroupFamily != nil {
		in, out := &in.DBParameterGroupFamily, &out.DBParameterGroupFamily
		*out = new(string)
		**out = **in
	}
	if in.DBParameterGroupName != nil {
		in, out := &in.DBParameterGroupName, &out.DBParameterGroupName
		*out = new(string)
		**out = **in
	}
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DBParameterGroup_SDK.
func (in *DBParameterGroup_SDK) DeepCopy() *DBParameterGroup_SDK {
	if in == nil {
		return nil
	}
	out := new(DBParameterGroup_SDK)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DBProxy) DeepCopyInto(out *DBProxy) {
	*out = *in
	if in.CreatedDate != nil {
		in, out := &in.CreatedDate, &out.CreatedDate
		*out = (*in).DeepCopy()
	}
	if in.DBProxyARN != nil {
		in, out := &in.DBProxyARN, &out.DBProxyARN
		*out = new(string)
		**out = **in
	}
	if in.DBProxyName != nil {
		in, out := &in.DBProxyName, &out.DBProxyName
		*out = new(string)
		**out = **in
	}
	if in.DebugLogging != nil {
		in, out := &in.DebugLogging, &out.DebugLogging
		*out = new(bool)
		**out = **in
	}
	if in.Endpoint != nil {
		in, out := &in.Endpoint, &out.Endpoint
		*out = new(string)
		**out = **in
	}
	if in.EngineFamily != nil {
		in, out := &in.EngineFamily, &out.EngineFamily
		*out = new(string)
		**out = **in
	}
	if in.RequireTLS != nil {
		in, out := &in.RequireTLS, &out.RequireTLS
		*out = new(bool)
		**out = **in
	}
	if in.RoleARN != nil {
		in, out := &in.RoleARN, &out.RoleARN
		*out = new(string)
		**out = **in
	}
	if in.UpdatedDate != nil {
		in, out := &in.UpdatedDate, &out.UpdatedDate
		*out = (*in).DeepCopy()
	}
	if in.VPCSecurityGroupIDs != nil {
		in, out := &in.VPCSecurityGroupIDs, &out.VPCSecurityGroupIDs
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.VPCSubnetIDs != nil {
		in, out := &in.VPCSubnetIDs, &out.VPCSubnetIDs
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DBProxy.
func (in *DBProxy) DeepCopy() *DBProxy {
	if in == nil {
		return nil
	}
	out := new(DBProxy)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DBProxyTarget) DeepCopyInto(out *DBProxyTarget) {
	*out = *in
	if in.Endpoint != nil {
		in, out := &in.Endpoint, &out.Endpoint
		*out = new(string)
		**out = **in
	}
	if in.RdsResourceID != nil {
		in, out := &in.RdsResourceID, &out.RdsResourceID
		*out = new(string)
		**out = **in
	}
	if in.TargetARN != nil {
		in, out := &in.TargetARN, &out.TargetARN
		*out = new(string)
		**out = **in
	}
	if in.TrackedClusterID != nil {
		in, out := &in.TrackedClusterID, &out.TrackedClusterID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DBProxyTarget.
func (in *DBProxyTarget) DeepCopy() *DBProxyTarget {
	if in == nil {
		return nil
	}
	out := new(DBProxyTarget)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DBProxyTargetGroup) DeepCopyInto(out *DBProxyTargetGroup) {
	*out = *in
	if in.CreatedDate != nil {
		in, out := &in.CreatedDate, &out.CreatedDate
		*out = (*in).DeepCopy()
	}
	if in.DBProxyName != nil {
		in, out := &in.DBProxyName, &out.DBProxyName
		*out = new(string)
		**out = **in
	}
	if in.IsDefault != nil {
		in, out := &in.IsDefault, &out.IsDefault
		*out = new(bool)
		**out = **in
	}
	if in.Status != nil {
		in, out := &in.Status, &out.Status
		*out = new(string)
		**out = **in
	}
	if in.TargetGroupARN != nil {
		in, out := &in.TargetGroupARN, &out.TargetGroupARN
		*out = new(string)
		**out = **in
	}
	if in.TargetGroupName != nil {
		in, out := &in.TargetGroupName, &out.TargetGroupName
		*out = new(string)
		**out = **in
	}
	if in.UpdatedDate != nil {
		in, out := &in.UpdatedDate, &out.UpdatedDate
		*out = (*in).DeepCopy()
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DBProxyTargetGroup.
func (in *DBProxyTargetGroup) DeepCopy() *DBProxyTargetGroup {
	if in == nil {
		return nil
	}
	out := new(DBProxyTargetGroup)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DBSecurityGroup) DeepCopyInto(out *DBSecurityGroup) {
	*out = *in
	if in.DBSecurityGroupARN != nil {
		in, out := &in.DBSecurityGroupARN, &out.DBSecurityGroupARN
		*out = new(string)
		**out = **in
	}
	if in.DBSecurityGroupDescription != nil {
		in, out := &in.DBSecurityGroupDescription, &out.DBSecurityGroupDescription
		*out = new(string)
		**out = **in
	}
	if in.DBSecurityGroupName != nil {
		in, out := &in.DBSecurityGroupName, &out.DBSecurityGroupName
		*out = new(string)
		**out = **in
	}
	if in.OwnerID != nil {
		in, out := &in.OwnerID, &out.OwnerID
		*out = new(string)
		**out = **in
	}
	if in.VPCID != nil {
		in, out := &in.VPCID, &out.VPCID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DBSecurityGroup.
func (in *DBSecurityGroup) DeepCopy() *DBSecurityGroup {
	if in == nil {
		return nil
	}
	out := new(DBSecurityGroup)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DBSecurityGroupMembership) DeepCopyInto(out *DBSecurityGroupMembership) {
	*out = *in
	if in.DBSecurityGroupName != nil {
		in, out := &in.DBSecurityGroupName, &out.DBSecurityGroupName
		*out = new(string)
		**out = **in
	}
	if in.Status != nil {
		in, out := &in.Status, &out.Status
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DBSecurityGroupMembership.
func (in *DBSecurityGroupMembership) DeepCopy() *DBSecurityGroupMembership {
	if in == nil {
		return nil
	}
	out := new(DBSecurityGroupMembership)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DBSnapshot) DeepCopyInto(out *DBSnapshot) {
	*out = *in
	if in.AvailabilityZone != nil {
		in, out := &in.AvailabilityZone, &out.AvailabilityZone
		*out = new(string)
		**out = **in
	}
	if in.DBInstanceIdentifier != nil {
		in, out := &in.DBInstanceIdentifier, &out.DBInstanceIdentifier
		*out = new(string)
		**out = **in
	}
	if in.DBSnapshotARN != nil {
		in, out := &in.DBSnapshotARN, &out.DBSnapshotARN
		*out = new(string)
		**out = **in
	}
	if in.DBSnapshotIdentifier != nil {
		in, out := &in.DBSnapshotIdentifier, &out.DBSnapshotIdentifier
		*out = new(string)
		**out = **in
	}
	if in.DBIResourceID != nil {
		in, out := &in.DBIResourceID, &out.DBIResourceID
		*out = new(string)
		**out = **in
	}
	if in.Encrypted != nil {
		in, out := &in.Encrypted, &out.Encrypted
		*out = new(bool)
		**out = **in
	}
	if in.Engine != nil {
		in, out := &in.Engine, &out.Engine
		*out = new(string)
		**out = **in
	}
	if in.EngineVersion != nil {
		in, out := &in.EngineVersion, &out.EngineVersion
		*out = new(string)
		**out = **in
	}
	if in.IAMDatabaseAuthenticationEnabled != nil {
		in, out := &in.IAMDatabaseAuthenticationEnabled, &out.IAMDatabaseAuthenticationEnabled
		*out = new(bool)
		**out = **in
	}
	if in.InstanceCreateTime != nil {
		in, out := &in.InstanceCreateTime, &out.InstanceCreateTime
		*out = (*in).DeepCopy()
	}
	if in.IOPS != nil {
		in, out := &in.IOPS, &out.IOPS
		*out = new(int64)
		**out = **in
	}
	if in.KMSKeyID != nil {
		in, out := &in.KMSKeyID, &out.KMSKeyID
		*out = new(string)
		**out = **in
	}
	if in.LicenseModel != nil {
		in, out := &in.LicenseModel, &out.LicenseModel
		*out = new(string)
		**out = **in
	}
	if in.MasterUsername != nil {
		in, out := &in.MasterUsername, &out.MasterUsername
		*out = new(string)
		**out = **in
	}
	if in.OptionGroupName != nil {
		in, out := &in.OptionGroupName, &out.OptionGroupName
		*out = new(string)
		**out = **in
	}
	if in.SnapshotCreateTime != nil {
		in, out := &in.SnapshotCreateTime, &out.SnapshotCreateTime
		*out = (*in).DeepCopy()
	}
	if in.SnapshotType != nil {
		in, out := &in.SnapshotType, &out.SnapshotType
		*out = new(string)
		**out = **in
	}
	if in.SourceDBSnapshotIdentifier != nil {
		in, out := &in.SourceDBSnapshotIdentifier, &out.SourceDBSnapshotIdentifier
		*out = new(string)
		**out = **in
	}
	if in.SourceRegion != nil {
		in, out := &in.SourceRegion, &out.SourceRegion
		*out = new(string)
		**out = **in
	}
	if in.Status != nil {
		in, out := &in.Status, &out.Status
		*out = new(string)
		**out = **in
	}
	if in.StorageType != nil {
		in, out := &in.StorageType, &out.StorageType
		*out = new(string)
		**out = **in
	}
	if in.TagList != nil {
		in, out := &in.TagList, &out.TagList
		*out = make([]*Tag, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(Tag)
				(*in).DeepCopyInto(*out)
			}
		}
	}
	if in.TDECredentialARN != nil {
		in, out := &in.TDECredentialARN, &out.TDECredentialARN
		*out = new(string)
		**out = **in
	}
	if in.Timezone != nil {
		in, out := &in.Timezone, &out.Timezone
		*out = new(string)
		**out = **in
	}
	if in.VPCID != nil {
		in, out := &in.VPCID, &out.VPCID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DBSnapshot.
func (in *DBSnapshot) DeepCopy() *DBSnapshot {
	if in == nil {
		return nil
	}
	out := new(DBSnapshot)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DBSnapshotAttribute) DeepCopyInto(out *DBSnapshotAttribute) {
	*out = *in
	if in.AttributeName != nil {
		in, out := &in.AttributeName, &out.AttributeName
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DBSnapshotAttribute.
func (in *DBSnapshotAttribute) DeepCopy() *DBSnapshotAttribute {
	if in == nil {
		return nil
	}
	out := new(DBSnapshotAttribute)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DBSnapshotAttributesResult) DeepCopyInto(out *DBSnapshotAttributesResult) {
	*out = *in
	if in.DBSnapshotIdentifier != nil {
		in, out := &in.DBSnapshotIdentifier, &out.DBSnapshotIdentifier
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DBSnapshotAttributesResult.
func (in *DBSnapshotAttributesResult) DeepCopy() *DBSnapshotAttributesResult {
	if in == nil {
		return nil
	}
	out := new(DBSnapshotAttributesResult)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DBSubnetGroup) DeepCopyInto(out *DBSubnetGroup) {
	*out = *in
	if in.DBSubnetGroupARN != nil {
		in, out := &in.DBSubnetGroupARN, &out.DBSubnetGroupARN
		*out = new(string)
		**out = **in
	}
	if in.DBSubnetGroupDescription != nil {
		in, out := &in.DBSubnetGroupDescription, &out.DBSubnetGroupDescription
		*out = new(string)
		**out = **in
	}
	if in.DBSubnetGroupName != nil {
		in, out := &in.DBSubnetGroupName, &out.DBSubnetGroupName
		*out = new(string)
		**out = **in
	}
	if in.SubnetGroupStatus != nil {
		in, out := &in.SubnetGroupStatus, &out.SubnetGroupStatus
		*out = new(string)
		**out = **in
	}
	if in.VPCID != nil {
		in, out := &in.VPCID, &out.VPCID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DBSubnetGroup.
func (in *DBSubnetGroup) DeepCopy() *DBSubnetGroup {
	if in == nil {
		return nil
	}
	out := new(DBSubnetGroup)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DescribeDBLogFilesDetails) DeepCopyInto(out *DescribeDBLogFilesDetails) {
	*out = *in
	if in.LogFileName != nil {
		in, out := &in.LogFileName, &out.LogFileName
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DescribeDBLogFilesDetails.
func (in *DescribeDBLogFilesDetails) DeepCopy() *DescribeDBLogFilesDetails {
	if in == nil {
		return nil
	}
	out := new(DescribeDBLogFilesDetails)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DomainMembership) DeepCopyInto(out *DomainMembership) {
	*out = *in
	if in.Domain != nil {
		in, out := &in.Domain, &out.Domain
		*out = new(string)
		**out = **in
	}
	if in.FQDN != nil {
		in, out := &in.FQDN, &out.FQDN
		*out = new(string)
		**out = **in
	}
	if in.IAMRoleName != nil {
		in, out := &in.IAMRoleName, &out.IAMRoleName
		*out = new(string)
		**out = **in
	}
	if in.Status != nil {
		in, out := &in.Status, &out.Status
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DomainMembership.
func (in *DomainMembership) DeepCopy() *DomainMembership {
	if in == nil {
		return nil
	}
	out := new(DomainMembership)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *EC2SecurityGroup) DeepCopyInto(out *EC2SecurityGroup) {
	*out = *in
	if in.EC2SecurityGroupID != nil {
		in, out := &in.EC2SecurityGroupID, &out.EC2SecurityGroupID
		*out = new(string)
		**out = **in
	}
	if in.EC2SecurityGroupName != nil {
		in, out := &in.EC2SecurityGroupName, &out.EC2SecurityGroupName
		*out = new(string)
		**out = **in
	}
	if in.EC2SecurityGroupOwnerID != nil {
		in, out := &in.EC2SecurityGroupOwnerID, &out.EC2SecurityGroupOwnerID
		*out = new(string)
		**out = **in
	}
	if in.Status != nil {
		in, out := &in.Status, &out.Status
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new EC2SecurityGroup.
func (in *EC2SecurityGroup) DeepCopy() *EC2SecurityGroup {
	if in == nil {
		return nil
	}
	out := new(EC2SecurityGroup)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Endpoint) DeepCopyInto(out *Endpoint) {
	*out = *in
	if in.Address != nil {
		in, out := &in.Address, &out.Address
		*out = new(string)
		**out = **in
	}
	if in.HostedZoneID != nil {
		in, out := &in.HostedZoneID, &out.HostedZoneID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Endpoint.
func (in *Endpoint) DeepCopy() *Endpoint {
	if in == nil {
		return nil
	}
	out := new(Endpoint)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *EngineDefaults) DeepCopyInto(out *EngineDefaults) {
	*out = *in
	if in.DBParameterGroupFamily != nil {
		in, out := &in.DBParameterGroupFamily, &out.DBParameterGroupFamily
		*out = new(string)
		**out = **in
	}
	if in.Marker != nil {
		in, out := &in.Marker, &out.Marker
		*out = new(string)
		**out = **in
	}
	if in.Parameters != nil {
		in, out := &in.Parameters, &out.Parameters
		*out = make([]*Parameter, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(Parameter)
				(*in).DeepCopyInto(*out)
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new EngineDefaults.
func (in *EngineDefaults) DeepCopy() *EngineDefaults {
	if in == nil {
		return nil
	}
	out := new(EngineDefaults)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Event) DeepCopyInto(out *Event) {
	*out = *in
	if in.Date != nil {
		in, out := &in.Date, &out.Date
		*out = (*in).DeepCopy()
	}
	if in.Message != nil {
		in, out := &in.Message, &out.Message
		*out = new(string)
		**out = **in
	}
	if in.SourceARN != nil {
		in, out := &in.SourceARN, &out.SourceARN
		*out = new(string)
		**out = **in
	}
	if in.SourceIdentifier != nil {
		in, out := &in.SourceIdentifier, &out.SourceIdentifier
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Event.
func (in *Event) DeepCopy() *Event {
	if in == nil {
		return nil
	}
	out := new(Event)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *EventCategoriesMap) DeepCopyInto(out *EventCategoriesMap) {
	*out = *in
	if in.SourceType != nil {
		in, out := &in.SourceType, &out.SourceType
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new EventCategoriesMap.
func (in *EventCategoriesMap) DeepCopy() *EventCategoriesMap {
	if in == nil {
		return nil
	}
	out := new(EventCategoriesMap)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *EventSubscription) DeepCopyInto(out *EventSubscription) {
	*out = *in
	if in.CustSubscriptionID != nil {
		in, out := &in.CustSubscriptionID, &out.CustSubscriptionID
		*out = new(string)
		**out = **in
	}
	if in.CustomerAWSID != nil {
		in, out := &in.CustomerAWSID, &out.CustomerAWSID
		*out = new(string)
		**out = **in
	}
	if in.Enabled != nil {
		in, out := &in.Enabled, &out.Enabled
		*out = new(bool)
		**out = **in
	}
	if in.EventSubscriptionARN != nil {
		in, out := &in.EventSubscriptionARN, &out.EventSubscriptionARN
		*out = new(string)
		**out = **in
	}
	if in.SnsTopicARN != nil {
		in, out := &in.SnsTopicARN, &out.SnsTopicARN
		*out = new(string)
		**out = **in
	}
	if in.SourceType != nil {
		in, out := &in.SourceType, &out.SourceType
		*out = new(string)
		**out = **in
	}
	if in.Status != nil {
		in, out := &in.Status, &out.Status
		*out = new(string)
		**out = **in
	}
	if in.SubscriptionCreationTime != nil {
		in, out := &in.SubscriptionCreationTime, &out.SubscriptionCreationTime
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new EventSubscription.
func (in *EventSubscription) DeepCopy() *EventSubscription {
	if in == nil {
		return nil
	}
	out := new(EventSubscription)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ExportTask) DeepCopyInto(out *ExportTask) {
	*out = *in
	if in.ExportOnly != nil {
		in, out := &in.ExportOnly, &out.ExportOnly
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.ExportTaskIdentifier != nil {
		in, out := &in.ExportTaskIdentifier, &out.ExportTaskIdentifier
		*out = new(string)
		**out = **in
	}
	if in.FailureCause != nil {
		in, out := &in.FailureCause, &out.FailureCause
		*out = new(string)
		**out = **in
	}
	if in.IAMRoleARN != nil {
		in, out := &in.IAMRoleARN, &out.IAMRoleARN
		*out = new(string)
		**out = **in
	}
	if in.KMSKeyID != nil {
		in, out := &in.KMSKeyID, &out.KMSKeyID
		*out = new(string)
		**out = **in
	}
	if in.S3Bucket != nil {
		in, out := &in.S3Bucket, &out.S3Bucket
		*out = new(string)
		**out = **in
	}
	if in.S3Prefix != nil {
		in, out := &in.S3Prefix, &out.S3Prefix
		*out = new(string)
		**out = **in
	}
	if in.SnapshotTime != nil {
		in, out := &in.SnapshotTime, &out.SnapshotTime
		*out = (*in).DeepCopy()
	}
	if in.SourceARN != nil {
		in, out := &in.SourceARN, &out.SourceARN
		*out = new(string)
		**out = **in
	}
	if in.Status != nil {
		in, out := &in.Status, &out.Status
		*out = new(string)
		**out = **in
	}
	if in.TaskEndTime != nil {
		in, out := &in.TaskEndTime, &out.TaskEndTime
		*out = (*in).DeepCopy()
	}
	if in.TaskStartTime != nil {
		in, out := &in.TaskStartTime, &out.TaskStartTime
		*out = (*in).DeepCopy()
	}
	if in.WarningMessage != nil {
		in, out := &in.WarningMessage, &out.WarningMessage
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ExportTask.
func (in *ExportTask) DeepCopy() *ExportTask {
	if in == nil {
		return nil
	}
	out := new(ExportTask)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Filter) DeepCopyInto(out *Filter) {
	*out = *in
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Values != nil {
		in, out := &in.Values, &out.Values
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Filter.
func (in *Filter) DeepCopy() *Filter {
	if in == nil {
		return nil
	}
	out := new(Filter)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *GlobalCluster) DeepCopyInto(out *GlobalCluster) {
	*out = *in
	if in.DatabaseName != nil {
		in, out := &in.DatabaseName, &out.DatabaseName
		*out = new(string)
		**out = **in
	}
	if in.DeletionProtection != nil {
		in, out := &in.DeletionProtection, &out.DeletionProtection
		*out = new(bool)
		**out = **in
	}
	if in.Engine != nil {
		in, out := &in.Engine, &out.Engine
		*out = new(string)
		**out = **in
	}
	if in.EngineVersion != nil {
		in, out := &in.EngineVersion, &out.EngineVersion
		*out = new(string)
		**out = **in
	}
	if in.GlobalClusterARN != nil {
		in, out := &in.GlobalClusterARN, &out.GlobalClusterARN
		*out = new(string)
		**out = **in
	}
	if in.GlobalClusterIdentifier != nil {
		in, out := &in.GlobalClusterIdentifier, &out.GlobalClusterIdentifier
		*out = new(string)
		**out = **in
	}
	if in.GlobalClusterResourceID != nil {
		in, out := &in.GlobalClusterResourceID, &out.GlobalClusterResourceID
		*out = new(string)
		**out = **in
	}
	if in.Status != nil {
		in, out := &in.Status, &out.Status
		*out = new(string)
		**out = **in
	}
	if in.StorageEncrypted != nil {
		in, out := &in.StorageEncrypted, &out.StorageEncrypted
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new GlobalCluster.
func (in *GlobalCluster) DeepCopy() *GlobalCluster {
	if in == nil {
		return nil
	}
	out := new(GlobalCluster)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *GlobalClusterMember) DeepCopyInto(out *GlobalClusterMember) {
	*out = *in
	if in.DBClusterARN != nil {
		in, out := &in.DBClusterARN, &out.DBClusterARN
		*out = new(string)
		**out = **in
	}
	if in.GlobalWriteForwardingStatus != nil {
		in, out := &in.GlobalWriteForwardingStatus, &out.GlobalWriteForwardingStatus
		*out = new(string)
		**out = **in
	}
	if in.IsWriter != nil {
		in, out := &in.IsWriter, &out.IsWriter
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new GlobalClusterMember.
func (in *GlobalClusterMember) DeepCopy() *GlobalClusterMember {
	if in == nil {
		return nil
	}
	out := new(GlobalClusterMember)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *IPRange) DeepCopyInto(out *IPRange) {
	*out = *in
	if in.CIDRIP != nil {
		in, out := &in.CIDRIP, &out.CIDRIP
		*out = new(string)
		**out = **in
	}
	if in.Status != nil {
		in, out := &in.Status, &out.Status
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new IPRange.
func (in *IPRange) DeepCopy() *IPRange {
	if in == nil {
		return nil
	}
	out := new(IPRange)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *InstallationMedia) DeepCopyInto(out *InstallationMedia) {
	*out = *in
	if in.CustomAvailabilityZoneID != nil {
		in, out := &in.CustomAvailabilityZoneID, &out.CustomAvailabilityZoneID
		*out = new(string)
		**out = **in
	}
	if in.Engine != nil {
		in, out := &in.Engine, &out.Engine
		*out = new(string)
		**out = **in
	}
	if in.EngineInstallationMediaPath != nil {
		in, out := &in.EngineInstallationMediaPath, &out.EngineInstallationMediaPath
		*out = new(string)
		**out = **in
	}
	if in.EngineVersion != nil {
		in, out := &in.EngineVersion, &out.EngineVersion
		*out = new(string)
		**out = **in
	}
	if in.InstallationMediaID != nil {
		in, out := &in.InstallationMediaID, &out.InstallationMediaID
		*out = new(string)
		**out = **in
	}
	if in.OSInstallationMediaPath != nil {
		in, out := &in.OSInstallationMediaPath, &out.OSInstallationMediaPath
		*out = new(string)
		**out = **in
	}
	if in.Status != nil {
		in, out := &in.Status, &out.Status
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new InstallationMedia.
func (in *InstallationMedia) DeepCopy() *InstallationMedia {
	if in == nil {
		return nil
	}
	out := new(InstallationMedia)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *InstallationMediaFailureCause) DeepCopyInto(out *InstallationMediaFailureCause) {
	*out = *in
	if in.Message != nil {
		in, out := &in.Message, &out.Message
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new InstallationMediaFailureCause.
func (in *InstallationMediaFailureCause) DeepCopy() *InstallationMediaFailureCause {
	if in == nil {
		return nil
	}
	out := new(InstallationMediaFailureCause)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MinimumEngineVersionPerAllowedValue) DeepCopyInto(out *MinimumEngineVersionPerAllowedValue) {
	*out = *in
	if in.AllowedValue != nil {
		in, out := &in.AllowedValue, &out.AllowedValue
		*out = new(string)
		**out = **in
	}
	if in.MinimumEngineVersion != nil {
		in, out := &in.MinimumEngineVersion, &out.MinimumEngineVersion
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MinimumEngineVersionPerAllowedValue.
func (in *MinimumEngineVersionPerAllowedValue) DeepCopy() *MinimumEngineVersionPerAllowedValue {
	if in == nil {
		return nil
	}
	out := new(MinimumEngineVersionPerAllowedValue)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Option) DeepCopyInto(out *Option) {
	*out = *in
	if in.OptionDescription != nil {
		in, out := &in.OptionDescription, &out.OptionDescription
		*out = new(string)
		**out = **in
	}
	if in.OptionName != nil {
		in, out := &in.OptionName, &out.OptionName
		*out = new(string)
		**out = **in
	}
	if in.OptionVersion != nil {
		in, out := &in.OptionVersion, &out.OptionVersion
		*out = new(string)
		**out = **in
	}
	if in.Permanent != nil {
		in, out := &in.Permanent, &out.Permanent
		*out = new(bool)
		**out = **in
	}
	if in.Persistent != nil {
		in, out := &in.Persistent, &out.Persistent
		*out = new(bool)
		**out = **in
	}
	if in.Port != nil {
		in, out := &in.Port, &out.Port
		*out = new(int64)
		**out = **in
	}
	if in.VPCSecurityGroupMemberships != nil {
		in, out := &in.VPCSecurityGroupMemberships, &out.VPCSecurityGroupMemberships
		*out = make([]*VPCSecurityGroupMembership, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(VPCSecurityGroupMembership)
				(*in).DeepCopyInto(*out)
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Option.
func (in *Option) DeepCopy() *Option {
	if in == nil {
		return nil
	}
	out := new(Option)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *OptionConfiguration) DeepCopyInto(out *OptionConfiguration) {
	*out = *in
	if in.OptionName != nil {
		in, out := &in.OptionName, &out.OptionName
		*out = new(string)
		**out = **in
	}
	if in.OptionVersion != nil {
		in, out := &in.OptionVersion, &out.OptionVersion
		*out = new(string)
		**out = **in
	}
	if in.Port != nil {
		in, out := &in.Port, &out.Port
		*out = new(int64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new OptionConfiguration.
func (in *OptionConfiguration) DeepCopy() *OptionConfiguration {
	if in == nil {
		return nil
	}
	out := new(OptionConfiguration)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *OptionGroup) DeepCopyInto(out *OptionGroup) {
	*out = *in
	if in.AllowsVPCAndNonVPCInstanceMemberships != nil {
		in, out := &in.AllowsVPCAndNonVPCInstanceMemberships, &out.AllowsVPCAndNonVPCInstanceMemberships
		*out = new(bool)
		**out = **in
	}
	if in.EngineName != nil {
		in, out := &in.EngineName, &out.EngineName
		*out = new(string)
		**out = **in
	}
	if in.MajorEngineVersion != nil {
		in, out := &in.MajorEngineVersion, &out.MajorEngineVersion
		*out = new(string)
		**out = **in
	}
	if in.OptionGroupARN != nil {
		in, out := &in.OptionGroupARN, &out.OptionGroupARN
		*out = new(string)
		**out = **in
	}
	if in.OptionGroupDescription != nil {
		in, out := &in.OptionGroupDescription, &out.OptionGroupDescription
		*out = new(string)
		**out = **in
	}
	if in.OptionGroupName != nil {
		in, out := &in.OptionGroupName, &out.OptionGroupName
		*out = new(string)
		**out = **in
	}
	if in.VPCID != nil {
		in, out := &in.VPCID, &out.VPCID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new OptionGroup.
func (in *OptionGroup) DeepCopy() *OptionGroup {
	if in == nil {
		return nil
	}
	out := new(OptionGroup)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *OptionGroupMembership) DeepCopyInto(out *OptionGroupMembership) {
	*out = *in
	if in.OptionGroupName != nil {
		in, out := &in.OptionGroupName, &out.OptionGroupName
		*out = new(string)
		**out = **in
	}
	if in.Status != nil {
		in, out := &in.Status, &out.Status
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new OptionGroupMembership.
func (in *OptionGroupMembership) DeepCopy() *OptionGroupMembership {
	if in == nil {
		return nil
	}
	out := new(OptionGroupMembership)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *OptionGroupOption) DeepCopyInto(out *OptionGroupOption) {
	*out = *in
	if in.DefaultPort != nil {
		in, out := &in.DefaultPort, &out.DefaultPort
		*out = new(int64)
		**out = **in
	}
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.EngineName != nil {
		in, out := &in.EngineName, &out.EngineName
		*out = new(string)
		**out = **in
	}
	if in.MajorEngineVersion != nil {
		in, out := &in.MajorEngineVersion, &out.MajorEngineVersion
		*out = new(string)
		**out = **in
	}
	if in.MinimumRequiredMinorEngineVersion != nil {
		in, out := &in.MinimumRequiredMinorEngineVersion, &out.MinimumRequiredMinorEngineVersion
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Permanent != nil {
		in, out := &in.Permanent, &out.Permanent
		*out = new(bool)
		**out = **in
	}
	if in.Persistent != nil {
		in, out := &in.Persistent, &out.Persistent
		*out = new(bool)
		**out = **in
	}
	if in.PortRequired != nil {
		in, out := &in.PortRequired, &out.PortRequired
		*out = new(bool)
		**out = **in
	}
	if in.RequiresAutoMinorEngineVersionUpgrade != nil {
		in, out := &in.RequiresAutoMinorEngineVersionUpgrade, &out.RequiresAutoMinorEngineVersionUpgrade
		*out = new(bool)
		**out = **in
	}
	if in.SupportsOptionVersionDowngrade != nil {
		in, out := &in.SupportsOptionVersionDowngrade, &out.SupportsOptionVersionDowngrade
		*out = new(bool)
		**out = **in
	}
	if in.VPCOnly != nil {
		in, out := &in.VPCOnly, &out.VPCOnly
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new OptionGroupOption.
func (in *OptionGroupOption) DeepCopy() *OptionGroupOption {
	if in == nil {
		return nil
	}
	out := new(OptionGroupOption)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *OptionGroupOptionSetting) DeepCopyInto(out *OptionGroupOptionSetting) {
	*out = *in
	if in.AllowedValues != nil {
		in, out := &in.AllowedValues, &out.AllowedValues
		*out = new(string)
		**out = **in
	}
	if in.ApplyType != nil {
		in, out := &in.ApplyType, &out.ApplyType
		*out = new(string)
		**out = **in
	}
	if in.DefaultValue != nil {
		in, out := &in.DefaultValue, &out.DefaultValue
		*out = new(string)
		**out = **in
	}
	if in.IsModifiable != nil {
		in, out := &in.IsModifiable, &out.IsModifiable
		*out = new(bool)
		**out = **in
	}
	if in.IsRequired != nil {
		in, out := &in.IsRequired, &out.IsRequired
		*out = new(bool)
		**out = **in
	}
	if in.SettingDescription != nil {
		in, out := &in.SettingDescription, &out.SettingDescription
		*out = new(string)
		**out = **in
	}
	if in.SettingName != nil {
		in, out := &in.SettingName, &out.SettingName
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new OptionGroupOptionSetting.
func (in *OptionGroupOptionSetting) DeepCopy() *OptionGroupOptionSetting {
	if in == nil {
		return nil
	}
	out := new(OptionGroupOptionSetting)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *OptionSetting) DeepCopyInto(out *OptionSetting) {
	*out = *in
	if in.AllowedValues != nil {
		in, out := &in.AllowedValues, &out.AllowedValues
		*out = new(string)
		**out = **in
	}
	if in.ApplyType != nil {
		in, out := &in.ApplyType, &out.ApplyType
		*out = new(string)
		**out = **in
	}
	if in.DataType != nil {
		in, out := &in.DataType, &out.DataType
		*out = new(string)
		**out = **in
	}
	if in.DefaultValue != nil {
		in, out := &in.DefaultValue, &out.DefaultValue
		*out = new(string)
		**out = **in
	}
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.IsCollection != nil {
		in, out := &in.IsCollection, &out.IsCollection
		*out = new(bool)
		**out = **in
	}
	if in.IsModifiable != nil {
		in, out := &in.IsModifiable, &out.IsModifiable
		*out = new(bool)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Value != nil {
		in, out := &in.Value, &out.Value
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new OptionSetting.
func (in *OptionSetting) DeepCopy() *OptionSetting {
	if in == nil {
		return nil
	}
	out := new(OptionSetting)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *OptionVersion) DeepCopyInto(out *OptionVersion) {
	*out = *in
	if in.IsDefault != nil {
		in, out := &in.IsDefault, &out.IsDefault
		*out = new(bool)
		**out = **in
	}
	if in.Version != nil {
		in, out := &in.Version, &out.Version
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new OptionVersion.
func (in *OptionVersion) DeepCopy() *OptionVersion {
	if in == nil {
		return nil
	}
	out := new(OptionVersion)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *OrderableDBInstanceOption) DeepCopyInto(out *OrderableDBInstanceOption) {
	*out = *in
	if in.AvailabilityZoneGroup != nil {
		in, out := &in.AvailabilityZoneGroup, &out.AvailabilityZoneGroup
		*out = new(string)
		**out = **in
	}
	if in.DBInstanceClass != nil {
		in, out := &in.DBInstanceClass, &out.DBInstanceClass
		*out = new(string)
		**out = **in
	}
	if in.Engine != nil {
		in, out := &in.Engine, &out.Engine
		*out = new(string)
		**out = **in
	}
	if in.EngineVersion != nil {
		in, out := &in.EngineVersion, &out.EngineVersion
		*out = new(string)
		**out = **in
	}
	if in.LicenseModel != nil {
		in, out := &in.LicenseModel, &out.LicenseModel
		*out = new(string)
		**out = **in
	}
	if in.MaxIOPSPerDBInstance != nil {
		in, out := &in.MaxIOPSPerDBInstance, &out.MaxIOPSPerDBInstance
		*out = new(int64)
		**out = **in
	}
	if in.MaxStorageSize != nil {
		in, out := &in.MaxStorageSize, &out.MaxStorageSize
		*out = new(int64)
		**out = **in
	}
	if in.MinIOPSPerDBInstance != nil {
		in, out := &in.MinIOPSPerDBInstance, &out.MinIOPSPerDBInstance
		*out = new(int64)
		**out = **in
	}
	if in.MinStorageSize != nil {
		in, out := &in.MinStorageSize, &out.MinStorageSize
		*out = new(int64)
		**out = **in
	}
	if in.MultiAZCapable != nil {
		in, out := &in.MultiAZCapable, &out.MultiAZCapable
		*out = new(bool)
		**out = **in
	}
	if in.OutpostCapable != nil {
		in, out := &in.OutpostCapable, &out.OutpostCapable
		*out = new(bool)
		**out = **in
	}
	if in.ReadReplicaCapable != nil {
		in, out := &in.ReadReplicaCapable, &out.ReadReplicaCapable
		*out = new(bool)
		**out = **in
	}
	if in.StorageType != nil {
		in, out := &in.StorageType, &out.StorageType
		*out = new(string)
		**out = **in
	}
	if in.SupportedEngineModes != nil {
		in, out := &in.SupportedEngineModes, &out.SupportedEngineModes
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.SupportsEnhancedMonitoring != nil {
		in, out := &in.SupportsEnhancedMonitoring, &out.SupportsEnhancedMonitoring
		*out = new(bool)
		**out = **in
	}
	if in.SupportsGlobalDatabases != nil {
		in, out := &in.SupportsGlobalDatabases, &out.SupportsGlobalDatabases
		*out = new(bool)
		**out = **in
	}
	if in.SupportsIAMDatabaseAuthentication != nil {
		in, out := &in.SupportsIAMDatabaseAuthentication, &out.SupportsIAMDatabaseAuthentication
		*out = new(bool)
		**out = **in
	}
	if in.SupportsIOPS != nil {
		in, out := &in.SupportsIOPS, &out.SupportsIOPS
		*out = new(bool)
		**out = **in
	}
	if in.SupportsKerberosAuthentication != nil {
		in, out := &in.SupportsKerberosAuthentication, &out.SupportsKerberosAuthentication
		*out = new(bool)
		**out = **in
	}
	if in.SupportsPerformanceInsights != nil {
		in, out := &in.SupportsPerformanceInsights, &out.SupportsPerformanceInsights
		*out = new(bool)
		**out = **in
	}
	if in.SupportsStorageAutoscaling != nil {
		in, out := &in.SupportsStorageAutoscaling, &out.SupportsStorageAutoscaling
		*out = new(bool)
		**out = **in
	}
	if in.SupportsStorageEncryption != nil {
		in, out := &in.SupportsStorageEncryption, &out.SupportsStorageEncryption
		*out = new(bool)
		**out = **in
	}
	if in.VPC != nil {
		in, out := &in.VPC, &out.VPC
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new OrderableDBInstanceOption.
func (in *OrderableDBInstanceOption) DeepCopy() *OrderableDBInstanceOption {
	if in == nil {
		return nil
	}
	out := new(OrderableDBInstanceOption)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Outpost) DeepCopyInto(out *Outpost) {
	*out = *in
	if in.ARN != nil {
		in, out := &in.ARN, &out.ARN
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Outpost.
func (in *Outpost) DeepCopy() *Outpost {
	if in == nil {
		return nil
	}
	out := new(Outpost)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Parameter) DeepCopyInto(out *Parameter) {
	*out = *in
	if in.AllowedValues != nil {
		in, out := &in.AllowedValues, &out.AllowedValues
		*out = new(string)
		**out = **in
	}
	if in.ApplyMethod != nil {
		in, out := &in.ApplyMethod, &out.ApplyMethod
		*out = new(string)
		**out = **in
	}
	if in.ApplyType != nil {
		in, out := &in.ApplyType, &out.ApplyType
		*out = new(string)
		**out = **in
	}
	if in.DataType != nil {
		in, out := &in.DataType, &out.DataType
		*out = new(string)
		**out = **in
	}
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.IsModifiable != nil {
		in, out := &in.IsModifiable, &out.IsModifiable
		*out = new(bool)
		**out = **in
	}
	if in.MinimumEngineVersion != nil {
		in, out := &in.MinimumEngineVersion, &out.MinimumEngineVersion
		*out = new(string)
		**out = **in
	}
	if in.ParameterName != nil {
		in, out := &in.ParameterName, &out.ParameterName
		*out = new(string)
		**out = **in
	}
	if in.ParameterValue != nil {
		in, out := &in.ParameterValue, &out.ParameterValue
		*out = new(string)
		**out = **in
	}
	if in.Source != nil {
		in, out := &in.Source, &out.Source
		*out = new(string)
		**out = **in
	}
	if in.SupportedEngineModes != nil {
		in, out := &in.SupportedEngineModes, &out.SupportedEngineModes
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Parameter.
func (in *Parameter) DeepCopy() *Parameter {
	if in == nil {
		return nil
	}
	out := new(Parameter)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PendingCloudwatchLogsExports) DeepCopyInto(out *PendingCloudwatchLogsExports) {
	*out = *in
	if in.LogTypesToDisable != nil {
		in, out := &in.LogTypesToDisable, &out.LogTypesToDisable
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.LogTypesToEnable != nil {
		in, out := &in.LogTypesToEnable, &out.LogTypesToEnable
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PendingCloudwatchLogsExports.
func (in *PendingCloudwatchLogsExports) DeepCopy() *PendingCloudwatchLogsExports {
	if in == nil {
		return nil
	}
	out := new(PendingCloudwatchLogsExports)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PendingMaintenanceAction) DeepCopyInto(out *PendingMaintenanceAction) {
	*out = *in
	if in.Action != nil {
		in, out := &in.Action, &out.Action
		*out = new(string)
		**out = **in
	}
	if in.AutoAppliedAfterDate != nil {
		in, out := &in.AutoAppliedAfterDate, &out.AutoAppliedAfterDate
		*out = (*in).DeepCopy()
	}
	if in.CurrentApplyDate != nil {
		in, out := &in.CurrentApplyDate, &out.CurrentApplyDate
		*out = (*in).DeepCopy()
	}
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.ForcedApplyDate != nil {
		in, out := &in.ForcedApplyDate, &out.ForcedApplyDate
		*out = (*in).DeepCopy()
	}
	if in.OptInStatus != nil {
		in, out := &in.OptInStatus, &out.OptInStatus
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PendingMaintenanceAction.
func (in *PendingMaintenanceAction) DeepCopy() *PendingMaintenanceAction {
	if in == nil {
		return nil
	}
	out := new(PendingMaintenanceAction)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PendingModifiedValues) DeepCopyInto(out *PendingModifiedValues) {
	*out = *in
	if in.AllocatedStorage != nil {
		in, out := &in.AllocatedStorage, &out.AllocatedStorage
		*out = new(int64)
		**out = **in
	}
	if in.BackupRetentionPeriod != nil {
		in, out := &in.BackupRetentionPeriod, &out.BackupRetentionPeriod
		*out = new(int64)
		**out = **in
	}
	if in.CACertificateIdentifier != nil {
		in, out := &in.CACertificateIdentifier, &out.CACertificateIdentifier
		*out = new(string)
		**out = **in
	}
	if in.DBInstanceClass != nil {
		in, out := &in.DBInstanceClass, &out.DBInstanceClass
		*out = new(string)
		**out = **in
	}
	if in.DBInstanceIdentifier != nil {
		in, out := &in.DBInstanceIdentifier, &out.DBInstanceIdentifier
		*out = new(string)
		**out = **in
	}
	if in.DBSubnetGroupName != nil {
		in, out := &in.DBSubnetGroupName, &out.DBSubnetGroupName
		*out = new(string)
		**out = **in
	}
	if in.EngineVersion != nil {
		in, out := &in.EngineVersion, &out.EngineVersion
		*out = new(string)
		**out = **in
	}
	if in.IAMDatabaseAuthenticationEnabled != nil {
		in, out := &in.IAMDatabaseAuthenticationEnabled, &out.IAMDatabaseAuthenticationEnabled
		*out = new(bool)
		**out = **in
	}
	if in.IOPS != nil {
		in, out := &in.IOPS, &out.IOPS
		*out = new(int64)
		**out = **in
	}
	if in.LicenseModel != nil {
		in, out := &in.LicenseModel, &out.LicenseModel
		*out = new(string)
		**out = **in
	}
	if in.MasterUserPassword != nil {
		in, out := &in.MasterUserPassword, &out.MasterUserPassword
		*out = new(string)
		**out = **in
	}
	if in.MultiAZ != nil {
		in, out := &in.MultiAZ, &out.MultiAZ
		*out = new(bool)
		**out = **in
	}
	if in.Port != nil {
		in, out := &in.Port, &out.Port
		*out = new(int64)
		**out = **in
	}
	if in.StorageType != nil {
		in, out := &in.StorageType, &out.StorageType
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PendingModifiedValues.
func (in *PendingModifiedValues) DeepCopy() *PendingModifiedValues {
	if in == nil {
		return nil
	}
	out := new(PendingModifiedValues)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ProcessorFeature) DeepCopyInto(out *ProcessorFeature) {
	*out = *in
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Value != nil {
		in, out := &in.Value, &out.Value
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ProcessorFeature.
func (in *ProcessorFeature) DeepCopy() *ProcessorFeature {
	if in == nil {
		return nil
	}
	out := new(ProcessorFeature)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Range) DeepCopyInto(out *Range) {
	*out = *in
	if in.Step != nil {
		in, out := &in.Step, &out.Step
		*out = new(int64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Range.
func (in *Range) DeepCopy() *Range {
	if in == nil {
		return nil
	}
	out := new(Range)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RecurringCharge) DeepCopyInto(out *RecurringCharge) {
	*out = *in
	if in.RecurringChargeFrequency != nil {
		in, out := &in.RecurringChargeFrequency, &out.RecurringChargeFrequency
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RecurringCharge.
func (in *RecurringCharge) DeepCopy() *RecurringCharge {
	if in == nil {
		return nil
	}
	out := new(RecurringCharge)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ReservedDBInstance) DeepCopyInto(out *ReservedDBInstance) {
	*out = *in
	if in.CurrencyCode != nil {
		in, out := &in.CurrencyCode, &out.CurrencyCode
		*out = new(string)
		**out = **in
	}
	if in.DBInstanceClass != nil {
		in, out := &in.DBInstanceClass, &out.DBInstanceClass
		*out = new(string)
		**out = **in
	}
	if in.LeaseID != nil {
		in, out := &in.LeaseID, &out.LeaseID
		*out = new(string)
		**out = **in
	}
	if in.MultiAZ != nil {
		in, out := &in.MultiAZ, &out.MultiAZ
		*out = new(bool)
		**out = **in
	}
	if in.OfferingType != nil {
		in, out := &in.OfferingType, &out.OfferingType
		*out = new(string)
		**out = **in
	}
	if in.ProductDescription != nil {
		in, out := &in.ProductDescription, &out.ProductDescription
		*out = new(string)
		**out = **in
	}
	if in.ReservedDBInstanceARN != nil {
		in, out := &in.ReservedDBInstanceARN, &out.ReservedDBInstanceARN
		*out = new(string)
		**out = **in
	}
	if in.ReservedDBInstanceID != nil {
		in, out := &in.ReservedDBInstanceID, &out.ReservedDBInstanceID
		*out = new(string)
		**out = **in
	}
	if in.ReservedDBInstancesOfferingID != nil {
		in, out := &in.ReservedDBInstancesOfferingID, &out.ReservedDBInstancesOfferingID
		*out = new(string)
		**out = **in
	}
	if in.StartTime != nil {
		in, out := &in.StartTime, &out.StartTime
		*out = (*in).DeepCopy()
	}
	if in.State != nil {
		in, out := &in.State, &out.State
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ReservedDBInstance.
func (in *ReservedDBInstance) DeepCopy() *ReservedDBInstance {
	if in == nil {
		return nil
	}
	out := new(ReservedDBInstance)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ReservedDBInstancesOffering) DeepCopyInto(out *ReservedDBInstancesOffering) {
	*out = *in
	if in.CurrencyCode != nil {
		in, out := &in.CurrencyCode, &out.CurrencyCode
		*out = new(string)
		**out = **in
	}
	if in.DBInstanceClass != nil {
		in, out := &in.DBInstanceClass, &out.DBInstanceClass
		*out = new(string)
		**out = **in
	}
	if in.MultiAZ != nil {
		in, out := &in.MultiAZ, &out.MultiAZ
		*out = new(bool)
		**out = **in
	}
	if in.OfferingType != nil {
		in, out := &in.OfferingType, &out.OfferingType
		*out = new(string)
		**out = **in
	}
	if in.ProductDescription != nil {
		in, out := &in.ProductDescription, &out.ProductDescription
		*out = new(string)
		**out = **in
	}
	if in.ReservedDBInstancesOfferingID != nil {
		in, out := &in.ReservedDBInstancesOfferingID, &out.ReservedDBInstancesOfferingID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ReservedDBInstancesOffering.
func (in *ReservedDBInstancesOffering) DeepCopy() *ReservedDBInstancesOffering {
	if in == nil {
		return nil
	}
	out := new(ReservedDBInstancesOffering)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ResourcePendingMaintenanceActions) DeepCopyInto(out *ResourcePendingMaintenanceActions) {
	*out = *in
	if in.ResourceIdentifier != nil {
		in, out := &in.ResourceIdentifier, &out.ResourceIdentifier
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ResourcePendingMaintenanceActions.
func (in *ResourcePendingMaintenanceActions) DeepCopy() *ResourcePendingMaintenanceActions {
	if in == nil {
		return nil
	}
	out := new(ResourcePendingMaintenanceActions)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RestoreWindow) DeepCopyInto(out *RestoreWindow) {
	*out = *in
	if in.EarliestTime != nil {
		in, out := &in.EarliestTime, &out.EarliestTime
		*out = (*in).DeepCopy()
	}
	if in.LatestTime != nil {
		in, out := &in.LatestTime, &out.LatestTime
		*out = (*in).DeepCopy()
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RestoreWindow.
func (in *RestoreWindow) DeepCopy() *RestoreWindow {
	if in == nil {
		return nil
	}
	out := new(RestoreWindow)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ScalingConfiguration) DeepCopyInto(out *ScalingConfiguration) {
	*out = *in
	if in.AutoPause != nil {
		in, out := &in.AutoPause, &out.AutoPause
		*out = new(bool)
		**out = **in
	}
	if in.MaxCapacity != nil {
		in, out := &in.MaxCapacity, &out.MaxCapacity
		*out = new(int64)
		**out = **in
	}
	if in.MinCapacity != nil {
		in, out := &in.MinCapacity, &out.MinCapacity
		*out = new(int64)
		**out = **in
	}
	if in.SecondsUntilAutoPause != nil {
		in, out := &in.SecondsUntilAutoPause, &out.SecondsUntilAutoPause
		*out = new(int64)
		**out = **in
	}
	if in.TimeoutAction != nil {
		in, out := &in.TimeoutAction, &out.TimeoutAction
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ScalingConfiguration.
func (in *ScalingConfiguration) DeepCopy() *ScalingConfiguration {
	if in == nil {
		return nil
	}
	out := new(ScalingConfiguration)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ScalingConfigurationInfo) DeepCopyInto(out *ScalingConfigurationInfo) {
	*out = *in
	if in.AutoPause != nil {
		in, out := &in.AutoPause, &out.AutoPause
		*out = new(bool)
		**out = **in
	}
	if in.MaxCapacity != nil {
		in, out := &in.MaxCapacity, &out.MaxCapacity
		*out = new(int64)
		**out = **in
	}
	if in.MinCapacity != nil {
		in, out := &in.MinCapacity, &out.MinCapacity
		*out = new(int64)
		**out = **in
	}
	if in.SecondsUntilAutoPause != nil {
		in, out := &in.SecondsUntilAutoPause, &out.SecondsUntilAutoPause
		*out = new(int64)
		**out = **in
	}
	if in.TimeoutAction != nil {
		in, out := &in.TimeoutAction, &out.TimeoutAction
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ScalingConfigurationInfo.
func (in *ScalingConfigurationInfo) DeepCopy() *ScalingConfigurationInfo {
	if in == nil {
		return nil
	}
	out := new(ScalingConfigurationInfo)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SourceRegion) DeepCopyInto(out *SourceRegion) {
	*out = *in
	if in.Endpoint != nil {
		in, out := &in.Endpoint, &out.Endpoint
		*out = new(string)
		**out = **in
	}
	if in.RegionName != nil {
		in, out := &in.RegionName, &out.RegionName
		*out = new(string)
		**out = **in
	}
	if in.Status != nil {
		in, out := &in.Status, &out.Status
		*out = new(string)
		**out = **in
	}
	if in.SupportsDBInstanceAutomatedBackupsReplication != nil {
		in, out := &in.SupportsDBInstanceAutomatedBackupsReplication, &out.SupportsDBInstanceAutomatedBackupsReplication
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SourceRegion.
func (in *SourceRegion) DeepCopy() *SourceRegion {
	if in == nil {
		return nil
	}
	out := new(SourceRegion)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Subnet) DeepCopyInto(out *Subnet) {
	*out = *in
	if in.SubnetIdentifier != nil {
		in, out := &in.SubnetIdentifier, &out.SubnetIdentifier
		*out = new(string)
		**out = **in
	}
	if in.SubnetStatus != nil {
		in, out := &in.SubnetStatus, &out.SubnetStatus
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Subnet.
func (in *Subnet) DeepCopy() *Subnet {
	if in == nil {
		return nil
	}
	out := new(Subnet)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Tag) DeepCopyInto(out *Tag) {
	*out = *in
	if in.Key != nil {
		in, out := &in.Key, &out.Key
		*out = new(string)
		**out = **in
	}
	if in.Value != nil {
		in, out := &in.Value, &out.Value
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Tag.
func (in *Tag) DeepCopy() *Tag {
	if in == nil {
		return nil
	}
	out := new(Tag)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TargetHealth) DeepCopyInto(out *TargetHealth) {
	*out = *in
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TargetHealth.
func (in *TargetHealth) DeepCopy() *TargetHealth {
	if in == nil {
		return nil
	}
	out := new(TargetHealth)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Timezone) DeepCopyInto(out *Timezone) {
	*out = *in
	if in.TimezoneName != nil {
		in, out := &in.TimezoneName, &out.TimezoneName
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Timezone.
func (in *Timezone) DeepCopy() *Timezone {
	if in == nil {
		return nil
	}
	out := new(Timezone)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *UpgradeTarget) DeepCopyInto(out *UpgradeTarget) {
	*out = *in
	if in.AutoUpgrade != nil {
		in, out := &in.AutoUpgrade, &out.AutoUpgrade
		*out = new(bool)
		**out = **in
	}
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.Engine != nil {
		in, out := &in.Engine, &out.Engine
		*out = new(string)
		**out = **in
	}
	if in.EngineVersion != nil {
		in, out := &in.EngineVersion, &out.EngineVersion
		*out = new(string)
		**out = **in
	}
	if in.IsMajorVersionUpgrade != nil {
		in, out := &in.IsMajorVersionUpgrade, &out.IsMajorVersionUpgrade
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new UpgradeTarget.
func (in *UpgradeTarget) DeepCopy() *UpgradeTarget {
	if in == nil {
		return nil
	}
	out := new(UpgradeTarget)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *UserAuthConfig) DeepCopyInto(out *UserAuthConfig) {
	*out = *in
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.SecretARN != nil {
		in, out := &in.SecretARN, &out.SecretARN
		*out = new(string)
		**out = **in
	}
	if in.UserName != nil {
		in, out := &in.UserName, &out.UserName
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new UserAuthConfig.
func (in *UserAuthConfig) DeepCopy() *UserAuthConfig {
	if in == nil {
		return nil
	}
	out := new(UserAuthConfig)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *UserAuthConfigInfo) DeepCopyInto(out *UserAuthConfigInfo) {
	*out = *in
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.SecretARN != nil {
		in, out := &in.SecretARN, &out.SecretARN
		*out = new(string)
		**out = **in
	}
	if in.UserName != nil {
		in, out := &in.UserName, &out.UserName
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new UserAuthConfigInfo.
func (in *UserAuthConfigInfo) DeepCopy() *UserAuthConfigInfo {
	if in == nil {
		return nil
	}
	out := new(UserAuthConfigInfo)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VPCSecurityGroupMembership) DeepCopyInto(out *VPCSecurityGroupMembership) {
	*out = *in
	if in.Status != nil {
		in, out := &in.Status, &out.Status
		*out = new(string)
		**out = **in
	}
	if in.VPCSecurityGroupID != nil {
		in, out := &in.VPCSecurityGroupID, &out.VPCSecurityGroupID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VPCSecurityGroupMembership.
func (in *VPCSecurityGroupMembership) DeepCopy() *VPCSecurityGroupMembership {
	if in == nil {
		return nil
	}
	out := new(VPCSecurityGroupMembership)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VPNDetails) DeepCopyInto(out *VPNDetails) {
	*out = *in
	if in.VPNGatewayIP != nil {
		in, out := &in.VPNGatewayIP, &out.VPNGatewayIP
		*out = new(string)
		**out = **in
	}
	if in.VPNID != nil {
		in, out := &in.VPNID, &out.VPNID
		*out = new(string)
		**out = **in
	}
	if in.VPNName != nil {
		in, out := &in.VPNName, &out.VPNName
		*out = new(string)
		**out = **in
	}
	if in.VPNState != nil {
		in, out := &in.VPNState, &out.VPNState
		*out = new(string)
		**out = **in
	}
	if in.VPNTunnelOriginatorIP != nil {
		in, out := &in.VPNTunnelOriginatorIP, &out.VPNTunnelOriginatorIP
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VPNDetails.
func (in *VPNDetails) DeepCopy() *VPNDetails {
	if in == nil {
		return nil
	}
	out := new(VPNDetails)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ValidStorageOptions) DeepCopyInto(out *ValidStorageOptions) {
	*out = *in
	if in.StorageType != nil {
		in, out := &in.StorageType, &out.StorageType
		*out = new(string)
		**out = **in
	}
	if in.SupportsStorageAutoscaling != nil {
		in, out := &in.SupportsStorageAutoscaling, &out.SupportsStorageAutoscaling
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ValidStorageOptions.
func (in *ValidStorageOptions) DeepCopy() *ValidStorageOptions {
	if in == nil {
		return nil
	}
	out := new(ValidStorageOptions)
	in.DeepCopyInto(out)
	return out
}
