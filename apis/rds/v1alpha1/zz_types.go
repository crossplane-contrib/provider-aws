/*
Copyright 2021 The Crossplane Authors.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by ack-generate. DO NOT EDIT.

package v1alpha1

import (
	metav1 "k8s.io/apimachinery/pkg/apis/meta/v1"
)

// Hack to avoid import errors during build...
var (
	_ = &metav1.Time{}
)

// +kubebuilder:skipversion
type AccountQuota struct {
	AccountQuotaName *string `json:"accountQuotaName,omitempty"`
}

// +kubebuilder:skipversion
type AvailabilityZone struct {
	Name *string `json:"name,omitempty"`
}

// +kubebuilder:skipversion
type AvailableProcessorFeature struct {
	AllowedValues *string `json:"allowedValues,omitempty"`

	DefaultValue *string `json:"defaultValue,omitempty"`

	Name *string `json:"name,omitempty"`
}

// +kubebuilder:skipversion
type Certificate struct {
	CertificateARN *string `json:"certificateARN,omitempty"`

	CertificateIdentifier *string `json:"certificateIdentifier,omitempty"`

	CertificateType *string `json:"certificateType,omitempty"`

	CustomerOverride *bool `json:"customerOverride,omitempty"`

	CustomerOverrideValidTill *metav1.Time `json:"customerOverrideValidTill,omitempty"`

	Thumbprint *string `json:"thumbprint,omitempty"`

	ValidFrom *metav1.Time `json:"validFrom,omitempty"`

	ValidTill *metav1.Time `json:"validTill,omitempty"`
}

// +kubebuilder:skipversion
type CharacterSet struct {
	CharacterSetDescription *string `json:"characterSetDescription,omitempty"`

	CharacterSetName *string `json:"characterSetName,omitempty"`
}

// +kubebuilder:skipversion
type CloudwatchLogsExportConfiguration struct {
	DisableLogTypes []*string `json:"disableLogTypes,omitempty"`

	EnableLogTypes []*string `json:"enableLogTypes,omitempty"`
}

// +kubebuilder:skipversion
type ClusterPendingModifiedValues struct {
	DBClusterIdentifier *string `json:"dbClusterIdentifier,omitempty"`

	EngineVersion *string `json:"engineVersion,omitempty"`

	IAMDatabaseAuthenticationEnabled *bool `json:"iamDatabaseAuthenticationEnabled,omitempty"`

	MasterUserPassword *string `json:"masterUserPassword,omitempty"`
	// A list of the log types whose configuration is still pending. In other words,
	// these log types are in the process of being activated or deactivated.
	PendingCloudwatchLogsExports *PendingCloudwatchLogsExports `json:"pendingCloudwatchLogsExports,omitempty"`
}

// +kubebuilder:skipversion
type ConnectionPoolConfiguration struct {
	ConnectionBorrowTimeout *int64 `json:"connectionBorrowTimeout,omitempty"`

	InitQuery *string `json:"initQuery,omitempty"`

	MaxConnectionsPercent *int64 `json:"maxConnectionsPercent,omitempty"`

	MaxIdleConnectionsPercent *int64 `json:"maxIdleConnectionsPercent,omitempty"`

	SessionPinningFilters []*string `json:"sessionPinningFilters,omitempty"`
}

// +kubebuilder:skipversion
type ConnectionPoolConfigurationInfo struct {
	ConnectionBorrowTimeout *int64 `json:"connectionBorrowTimeout,omitempty"`

	InitQuery *string `json:"initQuery,omitempty"`

	MaxConnectionsPercent *int64 `json:"maxConnectionsPercent,omitempty"`

	MaxIdleConnectionsPercent *int64 `json:"maxIdleConnectionsPercent,omitempty"`

	SessionPinningFilters []*string `json:"sessionPinningFilters,omitempty"`
}

// +kubebuilder:skipversion
type DBClusterEndpoint struct {
	CustomEndpointType *string `json:"customEndpointType,omitempty"`

	DBClusterEndpointARN *string `json:"dbClusterEndpointARN,omitempty"`

	DBClusterEndpointIdentifier *string `json:"dbClusterEndpointIdentifier,omitempty"`

	DBClusterEndpointResourceIdentifier *string `json:"dbClusterEndpointResourceIdentifier,omitempty"`

	DBClusterIdentifier *string `json:"dbClusterIdentifier,omitempty"`

	Endpoint *string `json:"endpoint,omitempty"`

	EndpointType *string `json:"endpointType,omitempty"`

	ExcludedMembers []*string `json:"excludedMembers,omitempty"`

	StaticMembers []*string `json:"staticMembers,omitempty"`

	Status *string `json:"status,omitempty"`
}

// +kubebuilder:skipversion
type DBClusterMember struct {
	DBClusterParameterGroupStatus *string `json:"dbClusterParameterGroupStatus,omitempty"`

	DBInstanceIdentifier *string `json:"dbInstanceIdentifier,omitempty"`

	IsClusterWriter *bool `json:"isClusterWriter,omitempty"`

	PromotionTier *int64 `json:"promotionTier,omitempty"`
}

// +kubebuilder:skipversion
type DBClusterOptionGroupStatus struct {
	DBClusterOptionGroupName *string `json:"dbClusterOptionGroupName,omitempty"`

	Status *string `json:"status,omitempty"`
}

// +kubebuilder:skipversion
type DBClusterParameterGroup_SDK struct {
	DBClusterParameterGroupARN *string `json:"dbClusterParameterGroupARN,omitempty"`

	DBClusterParameterGroupName *string `json:"dbClusterParameterGroupName,omitempty"`

	DBParameterGroupFamily *string `json:"dbParameterGroupFamily,omitempty"`

	Description *string `json:"description,omitempty"`
}

// +kubebuilder:skipversion
type DBClusterRole struct {
	FeatureName *string `json:"featureName,omitempty"`

	RoleARN *string `json:"roleARN,omitempty"`

	Status *string `json:"status,omitempty"`
}

// +kubebuilder:skipversion
type DBClusterSnapshot struct {
	AllocatedStorage *int64 `json:"allocatedStorage,omitempty"`

	AvailabilityZones []*string `json:"availabilityZones,omitempty"`

	ClusterCreateTime *metav1.Time `json:"clusterCreateTime,omitempty"`

	DBClusterIdentifier *string `json:"dbClusterIdentifier,omitempty"`

	DBClusterSnapshotARN *string `json:"dbClusterSnapshotARN,omitempty"`

	DBClusterSnapshotIdentifier *string `json:"dbClusterSnapshotIdentifier,omitempty"`

	Engine *string `json:"engine,omitempty"`

	EngineMode *string `json:"engineMode,omitempty"`

	EngineVersion *string `json:"engineVersion,omitempty"`

	IAMDatabaseAuthenticationEnabled *bool `json:"iamDatabaseAuthenticationEnabled,omitempty"`

	KMSKeyID *string `json:"kmsKeyID,omitempty"`

	LicenseModel *string `json:"licenseModel,omitempty"`

	MasterUsername *string `json:"masterUsername,omitempty"`

	PercentProgress *int64 `json:"percentProgress,omitempty"`

	Port *int64 `json:"port,omitempty"`

	SnapshotCreateTime *metav1.Time `json:"snapshotCreateTime,omitempty"`

	SnapshotType *string `json:"snapshotType,omitempty"`

	SourceDBClusterSnapshotARN *string `json:"sourceDBClusterSnapshotARN,omitempty"`

	Status *string `json:"status,omitempty"`

	StorageEncrypted *bool `json:"storageEncrypted,omitempty"`
	// A list of tags. For more information, see Tagging Amazon RDS Resources (https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/USER_Tagging.html)
	// in the Amazon RDS User Guide.
	TagList []*Tag `json:"tagList,omitempty"`

	VPCID *string `json:"vpcID,omitempty"`
}

// +kubebuilder:skipversion
type DBClusterSnapshotAttribute struct {
	AttributeName *string `json:"attributeName,omitempty"`
}

// +kubebuilder:skipversion
type DBClusterSnapshotAttributesResult struct {
	DBClusterSnapshotIdentifier *string `json:"dbClusterSnapshotIdentifier,omitempty"`
}

// +kubebuilder:skipversion
type DBCluster_SDK struct {
	ActivityStreamKinesisStreamName *string `json:"activityStreamKinesisStreamName,omitempty"`

	ActivityStreamKMSKeyID *string `json:"activityStreamKMSKeyID,omitempty"`

	ActivityStreamMode *string `json:"activityStreamMode,omitempty"`

	ActivityStreamStatus *string `json:"activityStreamStatus,omitempty"`

	AllocatedStorage *int64 `json:"allocatedStorage,omitempty"`

	AssociatedRoles []*DBClusterRole `json:"associatedRoles,omitempty"`

	AutoMinorVersionUpgrade *bool `json:"autoMinorVersionUpgrade,omitempty"`

	AutomaticRestartTime *metav1.Time `json:"automaticRestartTime,omitempty"`

	AvailabilityZones []*string `json:"availabilityZones,omitempty"`

	BacktrackConsumedChangeRecords *int64 `json:"backtrackConsumedChangeRecords,omitempty"`

	BacktrackWindow *int64 `json:"backtrackWindow,omitempty"`

	BackupRetentionPeriod *int64 `json:"backupRetentionPeriod,omitempty"`

	Capacity *int64 `json:"capacity,omitempty"`

	CharacterSetName *string `json:"characterSetName,omitempty"`

	CloneGroupID *string `json:"cloneGroupID,omitempty"`

	ClusterCreateTime *metav1.Time `json:"clusterCreateTime,omitempty"`

	CopyTagsToSnapshot *bool `json:"copyTagsToSnapshot,omitempty"`

	CrossAccountClone *bool `json:"crossAccountClone,omitempty"`

	CustomEndpoints []*string `json:"customEndpoints,omitempty"`

	DBClusterARN *string `json:"dbClusterARN,omitempty"`

	DBClusterIdentifier *string `json:"dbClusterIdentifier,omitempty"`

	DBClusterInstanceClass *string `json:"dbClusterInstanceClass,omitempty"`

	DBClusterMembers []*DBClusterMember `json:"dbClusterMembers,omitempty"`

	DBClusterOptionGroupMemberships []*DBClusterOptionGroupStatus `json:"dbClusterOptionGroupMemberships,omitempty"`

	DBClusterParameterGroup *string `json:"dbClusterParameterGroup,omitempty"`

	DBSubnetGroup *string `json:"dbSubnetGroup,omitempty"`

	DatabaseName *string `json:"databaseName,omitempty"`

	DBClusterResourceID *string `json:"dbClusterResourceID,omitempty"`

	DeletionProtection *bool `json:"deletionProtection,omitempty"`

	DomainMemberships []*DomainMembership `json:"domainMemberships,omitempty"`

	EarliestBacktrackTime *metav1.Time `json:"earliestBacktrackTime,omitempty"`

	EarliestRestorableTime *metav1.Time `json:"earliestRestorableTime,omitempty"`

	EnabledCloudwatchLogsExports []*string `json:"enabledCloudwatchLogsExports,omitempty"`

	Endpoint *string `json:"endpoint,omitempty"`

	Engine *string `json:"engine,omitempty"`

	EngineMode *string `json:"engineMode,omitempty"`

	EngineVersion *string `json:"engineVersion,omitempty"`

	GlobalWriteForwardingRequested *bool `json:"globalWriteForwardingRequested,omitempty"`

	GlobalWriteForwardingStatus *string `json:"globalWriteForwardingStatus,omitempty"`

	HostedZoneID *string `json:"hostedZoneID,omitempty"`

	HTTPEndpointEnabled *bool `json:"httpEndpointEnabled,omitempty"`

	IAMDatabaseAuthenticationEnabled *bool `json:"iamDatabaseAuthenticationEnabled,omitempty"`

	IOPS *int64 `json:"iops,omitempty"`

	KMSKeyID *string `json:"kmsKeyID,omitempty"`

	LatestRestorableTime *metav1.Time `json:"latestRestorableTime,omitempty"`

	MasterUsername *string `json:"masterUsername,omitempty"`

	MonitoringInterval *int64 `json:"monitoringInterval,omitempty"`

	MonitoringRoleARN *string `json:"monitoringRoleARN,omitempty"`

	MultiAZ *bool `json:"multiAZ,omitempty"`

	PercentProgress *string `json:"percentProgress,omitempty"`

	PerformanceInsightsEnabled *bool `json:"performanceInsightsEnabled,omitempty"`

	PerformanceInsightsKMSKeyID *string `json:"performanceInsightsKMSKeyID,omitempty"`

	PerformanceInsightsRetentionPeriod *int64 `json:"performanceInsightsRetentionPeriod,omitempty"`

	Port *int64 `json:"port,omitempty"`

	PreferredBackupWindow *string `json:"preferredBackupWindow,omitempty"`

	PreferredMaintenanceWindow *string `json:"preferredMaintenanceWindow,omitempty"`

	PubliclyAccessible *bool `json:"publiclyAccessible,omitempty"`

	ReadReplicaIdentifiers []*string `json:"readReplicaIdentifiers,omitempty"`

	ReaderEndpoint *string `json:"readerEndpoint,omitempty"`

	ReplicationSourceIdentifier *string `json:"replicationSourceIdentifier,omitempty"`
	// Shows the scaling configuration for an Aurora DB cluster in serverless DB
	// engine mode.
	//
	// For more information, see Using Amazon Aurora Serverless v1 (https://docs.aws.amazon.com/AmazonRDS/latest/AuroraUserGuide/aurora-serverless.html)
	// in the Amazon Aurora User Guide.
	ScalingConfigurationInfo *ScalingConfigurationInfo `json:"scalingConfigurationInfo,omitempty"`
	// Shows the scaling configuration for an Aurora Serverless v2 DB cluster.
	//
	// For more information, see Using Amazon Aurora Serverless v2 (https://docs.aws.amazon.com/AmazonRDS/latest/AuroraUserGuide/aurora-serverless-v2.html)
	// in the Amazon Aurora User Guide.
	ServerlessV2ScalingConfiguration *ServerlessV2ScalingConfigurationInfo `json:"serverlessV2ScalingConfiguration,omitempty"`

	Status *string `json:"status,omitempty"`

	StorageEncrypted *bool `json:"storageEncrypted,omitempty"`

	StorageType *string `json:"storageType,omitempty"`
	// A list of tags. For more information, see Tagging Amazon RDS Resources (https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/USER_Tagging.html)
	// in the Amazon RDS User Guide.
	TagList []*Tag `json:"tagList,omitempty"`

	VPCSecurityGroups []*VPCSecurityGroupMembership `json:"vpcSecurityGroups,omitempty"`
}

// +kubebuilder:skipversion
type DBEngineVersion struct {
	CreateTime *metav1.Time `json:"createTime,omitempty"`

	DBEngineDescription *string `json:"dbEngineDescription,omitempty"`

	DBEngineVersionARN *string `json:"dbEngineVersionARN,omitempty"`

	DBEngineVersionDescription *string `json:"dbEngineVersionDescription,omitempty"`

	DBParameterGroupFamily *string `json:"dbParameterGroupFamily,omitempty"`

	DatabaseInstallationFilesS3BucketName *string `json:"databaseInstallationFilesS3BucketName,omitempty"`

	DatabaseInstallationFilesS3Prefix *string `json:"databaseInstallationFilesS3Prefix,omitempty"`

	Engine *string `json:"engine,omitempty"`

	EngineVersion *string `json:"engineVersion,omitempty"`

	ExportableLogTypes []*string `json:"exportableLogTypes,omitempty"`

	KMSKeyID *string `json:"kmsKeyID,omitempty"`

	MajorEngineVersion *string `json:"majorEngineVersion,omitempty"`

	Status *string `json:"status,omitempty"`

	SupportedEngineModes []*string `json:"supportedEngineModes,omitempty"`

	SupportsBabelfish *bool `json:"supportsBabelfish,omitempty"`

	SupportsGlobalDatabases *bool `json:"supportsGlobalDatabases,omitempty"`

	SupportsLogExportsToCloudwatchLogs *bool `json:"supportsLogExportsToCloudwatchLogs,omitempty"`

	SupportsParallelQuery *bool `json:"supportsParallelQuery,omitempty"`

	SupportsReadReplica *bool `json:"supportsReadReplica,omitempty"`
	// A list of tags. For more information, see Tagging Amazon RDS Resources (https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/USER_Tagging.html)
	// in the Amazon RDS User Guide.
	TagList []*Tag `json:"tagList,omitempty"`
}

// +kubebuilder:skipversion
type DBInstanceAutomatedBackup struct {
	AllocatedStorage *int64 `json:"allocatedStorage,omitempty"`

	AvailabilityZone *string `json:"availabilityZone,omitempty"`

	BackupRetentionPeriod *int64 `json:"backupRetentionPeriod,omitempty"`

	BackupTarget *string `json:"backupTarget,omitempty"`

	DBInstanceARN *string `json:"dbInstanceARN,omitempty"`

	DBInstanceAutomatedBackupsARN *string `json:"dbInstanceAutomatedBackupsARN,omitempty"`

	DBInstanceAutomatedBackupsReplications []*DBInstanceAutomatedBackupsReplication `json:"dbInstanceAutomatedBackupsReplications,omitempty"`

	DBInstanceIdentifier *string `json:"dbInstanceIdentifier,omitempty"`

	DBIResourceID *string `json:"dbiResourceID,omitempty"`

	Encrypted *bool `json:"encrypted,omitempty"`

	Engine *string `json:"engine,omitempty"`

	EngineVersion *string `json:"engineVersion,omitempty"`

	IAMDatabaseAuthenticationEnabled *bool `json:"iamDatabaseAuthenticationEnabled,omitempty"`

	InstanceCreateTime *metav1.Time `json:"instanceCreateTime,omitempty"`

	IOPS *int64 `json:"iops,omitempty"`

	KMSKeyID *string `json:"kmsKeyID,omitempty"`

	LicenseModel *string `json:"licenseModel,omitempty"`

	MasterUsername *string `json:"masterUsername,omitempty"`

	OptionGroupName *string `json:"optionGroupName,omitempty"`

	Port *int64 `json:"port,omitempty"`

	Region *string `json:"region,omitempty"`

	Status *string `json:"status,omitempty"`

	StorageType *string `json:"storageType,omitempty"`

	TDECredentialARN *string `json:"tdeCredentialARN,omitempty"`

	Timezone *string `json:"timezone,omitempty"`

	VPCID *string `json:"vpcID,omitempty"`
}

// +kubebuilder:skipversion
type DBInstanceAutomatedBackupsReplication struct {
	DBInstanceAutomatedBackupsARN *string `json:"dbInstanceAutomatedBackupsARN,omitempty"`
}

// +kubebuilder:skipversion
type DBInstanceRole struct {
	FeatureName *string `json:"featureName,omitempty"`

	RoleARN *string `json:"roleARN,omitempty"`

	Status *string `json:"status,omitempty"`
}

// +kubebuilder:skipversion
type DBInstanceStatusInfo struct {
	Message *string `json:"message,omitempty"`

	Normal *bool `json:"normal,omitempty"`

	Status *string `json:"status,omitempty"`

	StatusType *string `json:"statusType,omitempty"`
}

// +kubebuilder:skipversion
type DBInstance_SDK struct {
	ActivityStreamEngineNativeAuditFieldsIncluded *bool `json:"activityStreamEngineNativeAuditFieldsIncluded,omitempty"`

	ActivityStreamKinesisStreamName *string `json:"activityStreamKinesisStreamName,omitempty"`

	ActivityStreamKMSKeyID *string `json:"activityStreamKMSKeyID,omitempty"`

	ActivityStreamMode *string `json:"activityStreamMode,omitempty"`

	ActivityStreamStatus *string `json:"activityStreamStatus,omitempty"`

	AllocatedStorage *int64 `json:"allocatedStorage,omitempty"`

	AssociatedRoles []*DBInstanceRole `json:"associatedRoles,omitempty"`

	AutoMinorVersionUpgrade *bool `json:"autoMinorVersionUpgrade,omitempty"`

	AutomaticRestartTime *metav1.Time `json:"automaticRestartTime,omitempty"`

	AutomationMode *string `json:"automationMode,omitempty"`

	AvailabilityZone *string `json:"availabilityZone,omitempty"`

	AWSBackupRecoveryPointARN *string `json:"awsBackupRecoveryPointARN,omitempty"`

	BackupRetentionPeriod *int64 `json:"backupRetentionPeriod,omitempty"`

	BackupTarget *string `json:"backupTarget,omitempty"`

	CACertificateIdentifier *string `json:"caCertificateIdentifier,omitempty"`

	CharacterSetName *string `json:"characterSetName,omitempty"`

	CopyTagsToSnapshot *bool `json:"copyTagsToSnapshot,omitempty"`

	CustomIAMInstanceProfile *string `json:"customIAMInstanceProfile,omitempty"`

	CustomerOwnedIPEnabled *bool `json:"customerOwnedIPEnabled,omitempty"`

	DBClusterIdentifier *string `json:"dbClusterIdentifier,omitempty"`

	DBInstanceARN *string `json:"dbInstanceARN,omitempty"`

	DBInstanceAutomatedBackupsReplications []*DBInstanceAutomatedBackupsReplication `json:"dbInstanceAutomatedBackupsReplications,omitempty"`

	DBInstanceClass *string `json:"dbInstanceClass,omitempty"`

	DBInstanceIdentifier *string `json:"dbInstanceIdentifier,omitempty"`

	DBInstanceStatus *string `json:"dbInstanceStatus,omitempty"`

	DBName *string `json:"dbName,omitempty"`

	DBParameterGroups []*DBParameterGroupStatus_SDK `json:"dbParameterGroups,omitempty"`

	DBSecurityGroups []*DBSecurityGroupMembership `json:"dbSecurityGroups,omitempty"`
	// Contains the details of an Amazon RDS DB subnet group.
	//
	// This data type is used as a response element in the DescribeDBSubnetGroups
	// action.
	DBSubnetGroup *DBSubnetGroup `json:"dbSubnetGroup,omitempty"`

	DBInstancePort *int64 `json:"dbInstancePort,omitempty"`

	DBIResourceID *string `json:"dbiResourceID,omitempty"`

	DeletionProtection *bool `json:"deletionProtection,omitempty"`

	DomainMemberships []*DomainMembership `json:"domainMemberships,omitempty"`

	EnabledCloudwatchLogsExports []*string `json:"enabledCloudwatchLogsExports,omitempty"`
	// This data type represents the information you need to connect to an Amazon
	// RDS DB instance. This data type is used as a response element in the following
	// actions:
	//
	//    * CreateDBInstance
	//
	//    * DescribeDBInstances
	//
	//    * DeleteDBInstance
	//
	// For the data structure that represents Amazon Aurora DB cluster endpoints,
	// see DBClusterEndpoint.
	Endpoint *Endpoint `json:"endpoint,omitempty"`

	Engine *string `json:"engine,omitempty"`

	EngineVersion *string `json:"engineVersion,omitempty"`

	EnhancedMonitoringResourceARN *string `json:"enhancedMonitoringResourceARN,omitempty"`

	IAMDatabaseAuthenticationEnabled *bool `json:"iamDatabaseAuthenticationEnabled,omitempty"`

	InstanceCreateTime *metav1.Time `json:"instanceCreateTime,omitempty"`

	IOPS *int64 `json:"iops,omitempty"`

	KMSKeyID *string `json:"kmsKeyID,omitempty"`

	LatestRestorableTime *metav1.Time `json:"latestRestorableTime,omitempty"`

	LicenseModel *string `json:"licenseModel,omitempty"`
	// This data type represents the information you need to connect to an Amazon
	// RDS DB instance. This data type is used as a response element in the following
	// actions:
	//
	//    * CreateDBInstance
	//
	//    * DescribeDBInstances
	//
	//    * DeleteDBInstance
	//
	// For the data structure that represents Amazon Aurora DB cluster endpoints,
	// see DBClusterEndpoint.
	ListenerEndpoint *Endpoint `json:"listenerEndpoint,omitempty"`

	MasterUsername *string `json:"masterUsername,omitempty"`

	MaxAllocatedStorage *int64 `json:"maxAllocatedStorage,omitempty"`

	MonitoringInterval *int64 `json:"monitoringInterval,omitempty"`

	MonitoringRoleARN *string `json:"monitoringRoleARN,omitempty"`

	MultiAZ *bool `json:"multiAZ,omitempty"`

	NcharCharacterSetName *string `json:"ncharCharacterSetName,omitempty"`

	OptionGroupMemberships []*OptionGroupMembership `json:"optionGroupMemberships,omitempty"`
	// This data type is used as a response element in the ModifyDBInstance operation
	// and contains changes that will be applied during the next maintenance window.
	PendingModifiedValues *PendingModifiedValues `json:"pendingModifiedValues,omitempty"`

	PerformanceInsightsEnabled *bool `json:"performanceInsightsEnabled,omitempty"`

	PerformanceInsightsKMSKeyID *string `json:"performanceInsightsKMSKeyID,omitempty"`

	PerformanceInsightsRetentionPeriod *int64 `json:"performanceInsightsRetentionPeriod,omitempty"`

	PreferredBackupWindow *string `json:"preferredBackupWindow,omitempty"`

	PreferredMaintenanceWindow *string `json:"preferredMaintenanceWindow,omitempty"`

	ProcessorFeatures []*ProcessorFeature `json:"processorFeatures,omitempty"`

	PromotionTier *int64 `json:"promotionTier,omitempty"`

	PubliclyAccessible *bool `json:"publiclyAccessible,omitempty"`

	ReadReplicaDBClusterIdentifiers []*string `json:"readReplicaDBClusterIdentifiers,omitempty"`

	ReadReplicaDBInstanceIdentifiers []*string `json:"readReplicaDBInstanceIdentifiers,omitempty"`

	ReadReplicaSourceDBInstanceIdentifier *string `json:"readReplicaSourceDBInstanceIdentifier,omitempty"`

	ReplicaMode *string `json:"replicaMode,omitempty"`

	ResumeFullAutomationModeTime *metav1.Time `json:"resumeFullAutomationModeTime,omitempty"`

	SecondaryAvailabilityZone *string `json:"secondaryAvailabilityZone,omitempty"`

	StatusInfos []*DBInstanceStatusInfo `json:"statusInfos,omitempty"`

	StorageEncrypted *bool `json:"storageEncrypted,omitempty"`

	StorageType *string `json:"storageType,omitempty"`
	// A list of tags. For more information, see Tagging Amazon RDS Resources (https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/USER_Tagging.html)
	// in the Amazon RDS User Guide.
	TagList []*Tag `json:"tagList,omitempty"`

	TDECredentialARN *string `json:"tdeCredentialARN,omitempty"`

	Timezone *string `json:"timezone,omitempty"`

	VPCSecurityGroups []*VPCSecurityGroupMembership `json:"vpcSecurityGroups,omitempty"`
}

// +kubebuilder:skipversion
type DBParameterGroupStatus_SDK struct {
	DBParameterGroupName *string `json:"dbParameterGroupName,omitempty"`

	ParameterApplyStatus *string `json:"parameterApplyStatus,omitempty"`
}

// +kubebuilder:skipversion
type DBParameterGroup_SDK struct {
	DBParameterGroupARN *string `json:"dbParameterGroupARN,omitempty"`

	DBParameterGroupFamily *string `json:"dbParameterGroupFamily,omitempty"`

	DBParameterGroupName *string `json:"dbParameterGroupName,omitempty"`

	Description *string `json:"description,omitempty"`
}

// +kubebuilder:skipversion
type DBProxy struct {
	CreatedDate *metav1.Time `json:"createdDate,omitempty"`

	DBProxyARN *string `json:"dbProxyARN,omitempty"`

	DBProxyName *string `json:"dbProxyName,omitempty"`

	DebugLogging *bool `json:"debugLogging,omitempty"`

	Endpoint *string `json:"endpoint,omitempty"`

	EngineFamily *string `json:"engineFamily,omitempty"`

	IdleClientTimeout *int64 `json:"idleClientTimeout,omitempty"`

	RequireTLS *bool `json:"requireTLS,omitempty"`

	RoleARN *string `json:"roleARN,omitempty"`

	UpdatedDate *metav1.Time `json:"updatedDate,omitempty"`

	VPCID *string `json:"vpcID,omitempty"`

	VPCSecurityGroupIDs []*string `json:"vpcSecurityGroupIDs,omitempty"`

	VPCSubnetIDs []*string `json:"vpcSubnetIDs,omitempty"`
}

// +kubebuilder:skipversion
type DBProxyEndpoint struct {
	CreatedDate *metav1.Time `json:"createdDate,omitempty"`

	DBProxyEndpointARN *string `json:"dbProxyEndpointARN,omitempty"`

	DBProxyEndpointName *string `json:"dbProxyEndpointName,omitempty"`

	DBProxyName *string `json:"dbProxyName,omitempty"`

	Endpoint *string `json:"endpoint,omitempty"`

	IsDefault *bool `json:"isDefault,omitempty"`

	VPCID *string `json:"vpcID,omitempty"`

	VPCSecurityGroupIDs []*string `json:"vpcSecurityGroupIDs,omitempty"`

	VPCSubnetIDs []*string `json:"vpcSubnetIDs,omitempty"`
}

// +kubebuilder:skipversion
type DBProxyTarget struct {
	Endpoint *string `json:"endpoint,omitempty"`

	Port *int64 `json:"port,omitempty"`

	RdsResourceID *string `json:"rdsResourceID,omitempty"`

	TargetARN *string `json:"targetARN,omitempty"`

	TrackedClusterID *string `json:"trackedClusterID,omitempty"`
}

// +kubebuilder:skipversion
type DBProxyTargetGroup struct {
	CreatedDate *metav1.Time `json:"createdDate,omitempty"`

	DBProxyName *string `json:"dbProxyName,omitempty"`

	IsDefault *bool `json:"isDefault,omitempty"`

	Status *string `json:"status,omitempty"`

	TargetGroupARN *string `json:"targetGroupARN,omitempty"`

	TargetGroupName *string `json:"targetGroupName,omitempty"`

	UpdatedDate *metav1.Time `json:"updatedDate,omitempty"`
}

// +kubebuilder:skipversion
type DBSecurityGroup struct {
	DBSecurityGroupARN *string `json:"dbSecurityGroupARN,omitempty"`

	DBSecurityGroupDescription *string `json:"dbSecurityGroupDescription,omitempty"`

	DBSecurityGroupName *string `json:"dbSecurityGroupName,omitempty"`

	OwnerID *string `json:"ownerID,omitempty"`

	VPCID *string `json:"vpcID,omitempty"`
}

// +kubebuilder:skipversion
type DBSecurityGroupMembership struct {
	DBSecurityGroupName *string `json:"dbSecurityGroupName,omitempty"`

	Status *string `json:"status,omitempty"`
}

// +kubebuilder:skipversion
type DBSnapshot struct {
	AllocatedStorage *int64 `json:"allocatedStorage,omitempty"`

	AvailabilityZone *string `json:"availabilityZone,omitempty"`

	DBInstanceIdentifier *string `json:"dbInstanceIdentifier,omitempty"`

	DBSnapshotARN *string `json:"dbSnapshotARN,omitempty"`

	DBSnapshotIdentifier *string `json:"dbSnapshotIdentifier,omitempty"`

	DBIResourceID *string `json:"dbiResourceID,omitempty"`

	Encrypted *bool `json:"encrypted,omitempty"`

	Engine *string `json:"engine,omitempty"`

	EngineVersion *string `json:"engineVersion,omitempty"`

	IAMDatabaseAuthenticationEnabled *bool `json:"iamDatabaseAuthenticationEnabled,omitempty"`

	InstanceCreateTime *metav1.Time `json:"instanceCreateTime,omitempty"`

	IOPS *int64 `json:"iops,omitempty"`

	KMSKeyID *string `json:"kmsKeyID,omitempty"`

	LicenseModel *string `json:"licenseModel,omitempty"`

	MasterUsername *string `json:"masterUsername,omitempty"`

	OptionGroupName *string `json:"optionGroupName,omitempty"`

	OriginalSnapshotCreateTime *metav1.Time `json:"originalSnapshotCreateTime,omitempty"`

	PercentProgress *int64 `json:"percentProgress,omitempty"`

	Port *int64 `json:"port,omitempty"`

	ProcessorFeatures []*ProcessorFeature `json:"processorFeatures,omitempty"`

	SnapshotCreateTime *metav1.Time `json:"snapshotCreateTime,omitempty"`

	SnapshotTarget *string `json:"snapshotTarget,omitempty"`

	SnapshotType *string `json:"snapshotType,omitempty"`

	SourceDBSnapshotIdentifier *string `json:"sourceDBSnapshotIdentifier,omitempty"`

	SourceRegion *string `json:"sourceRegion,omitempty"`

	Status *string `json:"status,omitempty"`

	StorageType *string `json:"storageType,omitempty"`
	// A list of tags. For more information, see Tagging Amazon RDS Resources (https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/USER_Tagging.html)
	// in the Amazon RDS User Guide.
	TagList []*Tag `json:"tagList,omitempty"`

	TDECredentialARN *string `json:"tdeCredentialARN,omitempty"`

	Timezone *string `json:"timezone,omitempty"`

	VPCID *string `json:"vpcID,omitempty"`
}

// +kubebuilder:skipversion
type DBSnapshotAttribute struct {
	AttributeName *string `json:"attributeName,omitempty"`
}

// +kubebuilder:skipversion
type DBSnapshotAttributesResult struct {
	DBSnapshotIdentifier *string `json:"dbSnapshotIdentifier,omitempty"`
}

// +kubebuilder:skipversion
type DBSubnetGroup struct {
	DBSubnetGroupARN *string `json:"dbSubnetGroupARN,omitempty"`

	DBSubnetGroupDescription *string `json:"dbSubnetGroupDescription,omitempty"`

	DBSubnetGroupName *string `json:"dbSubnetGroupName,omitempty"`

	SubnetGroupStatus *string `json:"subnetGroupStatus,omitempty"`

	Subnets []*Subnet `json:"subnets,omitempty"`

	VPCID *string `json:"vpcID,omitempty"`
}

// +kubebuilder:skipversion
type DescribeDBLogFilesDetails struct {
	LogFileName *string `json:"logFileName,omitempty"`
}

// +kubebuilder:skipversion
type DomainMembership struct {
	Domain *string `json:"domain,omitempty"`

	FQDN *string `json:"fQDN,omitempty"`

	IAMRoleName *string `json:"iamRoleName,omitempty"`

	Status *string `json:"status,omitempty"`
}

// +kubebuilder:skipversion
type EC2SecurityGroup struct {
	EC2SecurityGroupID *string `json:"ec2SecurityGroupID,omitempty"`

	EC2SecurityGroupName *string `json:"ec2SecurityGroupName,omitempty"`

	EC2SecurityGroupOwnerID *string `json:"ec2SecurityGroupOwnerID,omitempty"`

	Status *string `json:"status,omitempty"`
}

// +kubebuilder:skipversion
type Endpoint struct {
	Address *string `json:"address,omitempty"`

	HostedZoneID *string `json:"hostedZoneID,omitempty"`

	Port *int64 `json:"port,omitempty"`
}

// +kubebuilder:skipversion
type EngineDefaults struct {
	DBParameterGroupFamily *string `json:"dbParameterGroupFamily,omitempty"`

	Marker *string `json:"marker,omitempty"`

	Parameters []*Parameter `json:"parameters,omitempty"`
}

// +kubebuilder:skipversion
type Event struct {
	Date *metav1.Time `json:"date,omitempty"`

	Message *string `json:"message,omitempty"`

	SourceARN *string `json:"sourceARN,omitempty"`

	SourceIdentifier *string `json:"sourceIdentifier,omitempty"`
}

// +kubebuilder:skipversion
type EventCategoriesMap struct {
	SourceType *string `json:"sourceType,omitempty"`
}

// +kubebuilder:skipversion
type EventSubscription struct {
	CustSubscriptionID *string `json:"custSubscriptionID,omitempty"`

	CustomerAWSID *string `json:"customerAWSID,omitempty"`

	Enabled *bool `json:"enabled,omitempty"`

	EventSubscriptionARN *string `json:"eventSubscriptionARN,omitempty"`

	SNSTopicARN *string `json:"snsTopicARN,omitempty"`

	SourceType *string `json:"sourceType,omitempty"`

	Status *string `json:"status,omitempty"`

	SubscriptionCreationTime *string `json:"subscriptionCreationTime,omitempty"`
}

// +kubebuilder:skipversion
type ExportTask struct {
	ExportOnly []*string `json:"exportOnly,omitempty"`

	ExportTaskIdentifier *string `json:"exportTaskIdentifier,omitempty"`

	FailureCause *string `json:"failureCause,omitempty"`

	IAMRoleARN *string `json:"iamRoleARN,omitempty"`

	KMSKeyID *string `json:"kmsKeyID,omitempty"`

	PercentProgress *int64 `json:"percentProgress,omitempty"`

	S3Bucket *string `json:"s3Bucket,omitempty"`

	S3Prefix *string `json:"s3Prefix,omitempty"`

	SnapshotTime *metav1.Time `json:"snapshotTime,omitempty"`

	SourceARN *string `json:"sourceARN,omitempty"`

	Status *string `json:"status,omitempty"`

	TaskEndTime *metav1.Time `json:"taskEndTime,omitempty"`

	TaskStartTime *metav1.Time `json:"taskStartTime,omitempty"`

	TotalExtractedDataInGB *int64 `json:"totalExtractedDataInGB,omitempty"`

	WarningMessage *string `json:"warningMessage,omitempty"`
}

// +kubebuilder:skipversion
type FailoverState struct {
	FromDBClusterARN *string `json:"fromDBClusterARN,omitempty"`

	Status *string `json:"status,omitempty"`

	ToDBClusterARN *string `json:"toDBClusterARN,omitempty"`
}

// +kubebuilder:skipversion
type Filter struct {
	Name *string `json:"name,omitempty"`

	Values []*string `json:"values,omitempty"`
}

// +kubebuilder:skipversion
type GlobalClusterMember struct {
	DBClusterARN *string `json:"dbClusterARN,omitempty"`

	GlobalWriteForwardingStatus *string `json:"globalWriteForwardingStatus,omitempty"`

	IsWriter *bool `json:"isWriter,omitempty"`

	Readers []*string `json:"readers,omitempty"`
}

// +kubebuilder:skipversion
type GlobalCluster_SDK struct {
	DatabaseName *string `json:"databaseName,omitempty"`

	DeletionProtection *bool `json:"deletionProtection,omitempty"`

	Engine *string `json:"engine,omitempty"`

	EngineVersion *string `json:"engineVersion,omitempty"`
	// Contains the state of scheduled or in-process failover operations on an Aurora
	// global database (GlobalCluster). This Data type is empty unless a failover
	// operation is scheduled or is currently underway on the Aurora global database.
	FailoverState *FailoverState `json:"failoverState,omitempty"`

	GlobalClusterARN *string `json:"globalClusterARN,omitempty"`

	GlobalClusterIdentifier *string `json:"globalClusterIdentifier,omitempty"`

	GlobalClusterMembers []*GlobalClusterMember `json:"globalClusterMembers,omitempty"`

	GlobalClusterResourceID *string `json:"globalClusterResourceID,omitempty"`

	Status *string `json:"status,omitempty"`

	StorageEncrypted *bool `json:"storageEncrypted,omitempty"`
}

// +kubebuilder:skipversion
type IPRange struct {
	CIDRIP *string `json:"cidrIP,omitempty"`

	Status *string `json:"status,omitempty"`
}

// +kubebuilder:skipversion
type MinimumEngineVersionPerAllowedValue struct {
	AllowedValue *string `json:"allowedValue,omitempty"`

	MinimumEngineVersion *string `json:"minimumEngineVersion,omitempty"`
}

// +kubebuilder:skipversion
type Option struct {
	DBSecurityGroupMemberships []*DBSecurityGroupMembership `json:"dbSecurityGroupMemberships,omitempty"`

	OptionDescription *string `json:"optionDescription,omitempty"`

	OptionName *string `json:"optionName,omitempty"`

	OptionVersion *string `json:"optionVersion,omitempty"`

	Permanent *bool `json:"permanent,omitempty"`

	Persistent *bool `json:"persistent,omitempty"`

	Port *int64 `json:"port,omitempty"`

	VPCSecurityGroupMemberships []*VPCSecurityGroupMembership `json:"vpcSecurityGroupMemberships,omitempty"`
}

// +kubebuilder:skipversion
type OptionConfiguration struct {
	OptionName *string `json:"optionName,omitempty"`

	OptionVersion *string `json:"optionVersion,omitempty"`

	Port *int64 `json:"port,omitempty"`
}

// +kubebuilder:skipversion
type OptionGroup struct {
	AllowsVPCAndNonVPCInstanceMemberships *bool `json:"allowsVPCAndNonVPCInstanceMemberships,omitempty"`

	EngineName *string `json:"engineName,omitempty"`

	MajorEngineVersion *string `json:"majorEngineVersion,omitempty"`

	OptionGroupARN *string `json:"optionGroupARN,omitempty"`

	OptionGroupDescription *string `json:"optionGroupDescription,omitempty"`

	OptionGroupName *string `json:"optionGroupName,omitempty"`

	VPCID *string `json:"vpcID,omitempty"`
}

// +kubebuilder:skipversion
type OptionGroupMembership struct {
	OptionGroupName *string `json:"optionGroupName,omitempty"`

	Status *string `json:"status,omitempty"`
}

// +kubebuilder:skipversion
type OptionGroupOption struct {
	DefaultPort *int64 `json:"defaultPort,omitempty"`

	Description *string `json:"description,omitempty"`

	EngineName *string `json:"engineName,omitempty"`

	MajorEngineVersion *string `json:"majorEngineVersion,omitempty"`

	MinimumRequiredMinorEngineVersion *string `json:"minimumRequiredMinorEngineVersion,omitempty"`

	Name *string `json:"name,omitempty"`

	Permanent *bool `json:"permanent,omitempty"`

	Persistent *bool `json:"persistent,omitempty"`

	PortRequired *bool `json:"portRequired,omitempty"`

	RequiresAutoMinorEngineVersionUpgrade *bool `json:"requiresAutoMinorEngineVersionUpgrade,omitempty"`

	SupportsOptionVersionDowngrade *bool `json:"supportsOptionVersionDowngrade,omitempty"`

	VPCOnly *bool `json:"vpcOnly,omitempty"`
}

// +kubebuilder:skipversion
type OptionGroupOptionSetting struct {
	AllowedValues *string `json:"allowedValues,omitempty"`

	ApplyType *string `json:"applyType,omitempty"`

	DefaultValue *string `json:"defaultValue,omitempty"`

	IsModifiable *bool `json:"isModifiable,omitempty"`

	IsRequired *bool `json:"isRequired,omitempty"`

	SettingDescription *string `json:"settingDescription,omitempty"`

	SettingName *string `json:"settingName,omitempty"`
}

// +kubebuilder:skipversion
type OptionSetting struct {
	AllowedValues *string `json:"allowedValues,omitempty"`

	ApplyType *string `json:"applyType,omitempty"`

	DataType *string `json:"dataType,omitempty"`

	DefaultValue *string `json:"defaultValue,omitempty"`

	Description *string `json:"description,omitempty"`

	IsCollection *bool `json:"isCollection,omitempty"`

	IsModifiable *bool `json:"isModifiable,omitempty"`

	Name *string `json:"name,omitempty"`

	Value *string `json:"value,omitempty"`
}

// +kubebuilder:skipversion
type OptionVersion struct {
	IsDefault *bool `json:"isDefault,omitempty"`

	Version *string `json:"version,omitempty"`
}

// +kubebuilder:skipversion
type OrderableDBInstanceOption struct {
	AvailabilityZoneGroup *string `json:"availabilityZoneGroup,omitempty"`

	DBInstanceClass *string `json:"dbInstanceClass,omitempty"`

	Engine *string `json:"engine,omitempty"`

	EngineVersion *string `json:"engineVersion,omitempty"`

	LicenseModel *string `json:"licenseModel,omitempty"`

	MaxIOPSPerDBInstance *int64 `json:"maxIOPSPerDBInstance,omitempty"`

	MaxIOPSPerGib *float64 `json:"maxIOPSPerGib,omitempty"`

	MaxStorageSize *int64 `json:"maxStorageSize,omitempty"`

	MinIOPSPerDBInstance *int64 `json:"minIOPSPerDBInstance,omitempty"`

	MinIOPSPerGib *float64 `json:"minIOPSPerGib,omitempty"`

	MinStorageSize *int64 `json:"minStorageSize,omitempty"`

	MultiAZCapable *bool `json:"multiAZCapable,omitempty"`

	OutpostCapable *bool `json:"outpostCapable,omitempty"`

	ReadReplicaCapable *bool `json:"readReplicaCapable,omitempty"`

	StorageType *string `json:"storageType,omitempty"`

	SupportedEngineModes []*string `json:"supportedEngineModes,omitempty"`

	SupportsClusters *bool `json:"supportsClusters,omitempty"`

	SupportsEnhancedMonitoring *bool `json:"supportsEnhancedMonitoring,omitempty"`

	SupportsGlobalDatabases *bool `json:"supportsGlobalDatabases,omitempty"`

	SupportsIAMDatabaseAuthentication *bool `json:"supportsIAMDatabaseAuthentication,omitempty"`

	SupportsIOPS *bool `json:"supportsIOPS,omitempty"`

	SupportsKerberosAuthentication *bool `json:"supportsKerberosAuthentication,omitempty"`

	SupportsPerformanceInsights *bool `json:"supportsPerformanceInsights,omitempty"`

	SupportsStorageAutoscaling *bool `json:"supportsStorageAutoscaling,omitempty"`

	SupportsStorageEncryption *bool `json:"supportsStorageEncryption,omitempty"`

	VPC *bool `json:"vpc,omitempty"`
}

// +kubebuilder:skipversion
type Outpost struct {
	ARN *string `json:"arn,omitempty"`
}

// +kubebuilder:skipversion
type Parameter struct {
	AllowedValues *string `json:"allowedValues,omitempty"`

	ApplyMethod *string `json:"applyMethod,omitempty"`

	ApplyType *string `json:"applyType,omitempty"`

	DataType *string `json:"dataType,omitempty"`

	Description *string `json:"description,omitempty"`

	IsModifiable *bool `json:"isModifiable,omitempty"`

	MinimumEngineVersion *string `json:"minimumEngineVersion,omitempty"`

	ParameterName *string `json:"parameterName,omitempty"`

	ParameterValue *string `json:"parameterValue,omitempty"`

	Source *string `json:"source,omitempty"`

	SupportedEngineModes []*string `json:"supportedEngineModes,omitempty"`
}

// +kubebuilder:skipversion
type PendingCloudwatchLogsExports struct {
	LogTypesToDisable []*string `json:"logTypesToDisable,omitempty"`

	LogTypesToEnable []*string `json:"logTypesToEnable,omitempty"`
}

// +kubebuilder:skipversion
type PendingMaintenanceAction struct {
	Action *string `json:"action,omitempty"`

	AutoAppliedAfterDate *metav1.Time `json:"autoAppliedAfterDate,omitempty"`

	CurrentApplyDate *metav1.Time `json:"currentApplyDate,omitempty"`

	Description *string `json:"description,omitempty"`

	ForcedApplyDate *metav1.Time `json:"forcedApplyDate,omitempty"`

	OptInStatus *string `json:"optInStatus,omitempty"`
}

// +kubebuilder:skipversion
type PendingModifiedValues struct {
	AllocatedStorage *int64 `json:"allocatedStorage,omitempty"`

	AutomationMode *string `json:"automationMode,omitempty"`

	BackupRetentionPeriod *int64 `json:"backupRetentionPeriod,omitempty"`

	CACertificateIdentifier *string `json:"caCertificateIdentifier,omitempty"`

	DBInstanceClass *string `json:"dbInstanceClass,omitempty"`

	DBInstanceIdentifier *string `json:"dbInstanceIdentifier,omitempty"`

	DBSubnetGroupName *string `json:"dbSubnetGroupName,omitempty"`

	EngineVersion *string `json:"engineVersion,omitempty"`

	IAMDatabaseAuthenticationEnabled *bool `json:"iamDatabaseAuthenticationEnabled,omitempty"`

	IOPS *int64 `json:"iops,omitempty"`

	LicenseModel *string `json:"licenseModel,omitempty"`

	MasterUserPassword *string `json:"masterUserPassword,omitempty"`

	MultiAZ *bool `json:"multiAZ,omitempty"`
	// A list of the log types whose configuration is still pending. In other words,
	// these log types are in the process of being activated or deactivated.
	PendingCloudwatchLogsExports *PendingCloudwatchLogsExports `json:"pendingCloudwatchLogsExports,omitempty"`

	Port *int64 `json:"port,omitempty"`

	ProcessorFeatures []*ProcessorFeature `json:"processorFeatures,omitempty"`

	ResumeFullAutomationModeTime *metav1.Time `json:"resumeFullAutomationModeTime,omitempty"`

	StorageType *string `json:"storageType,omitempty"`
}

// +kubebuilder:skipversion
type ProcessorFeature struct {
	Name *string `json:"name,omitempty"`

	Value *string `json:"value,omitempty"`
}

// +kubebuilder:skipversion
type Range struct {
	From *int64 `json:"from,omitempty"`

	Step *int64 `json:"step,omitempty"`

	To *int64 `json:"to,omitempty"`
}

// +kubebuilder:skipversion
type RecurringCharge struct {
	RecurringChargeFrequency *string `json:"recurringChargeFrequency,omitempty"`
}

// +kubebuilder:skipversion
type ReservedDBInstance struct {
	CurrencyCode *string `json:"currencyCode,omitempty"`

	DBInstanceClass *string `json:"dbInstanceClass,omitempty"`

	DBInstanceCount *int64 `json:"dbInstanceCount,omitempty"`

	Duration *int64 `json:"duration,omitempty"`

	LeaseID *string `json:"leaseID,omitempty"`

	MultiAZ *bool `json:"multiAZ,omitempty"`

	OfferingType *string `json:"offeringType,omitempty"`

	ProductDescription *string `json:"productDescription,omitempty"`

	ReservedDBInstanceARN *string `json:"reservedDBInstanceARN,omitempty"`

	ReservedDBInstanceID *string `json:"reservedDBInstanceID,omitempty"`

	ReservedDBInstancesOfferingID *string `json:"reservedDBInstancesOfferingID,omitempty"`

	StartTime *metav1.Time `json:"startTime,omitempty"`

	State *string `json:"state,omitempty"`
}

// +kubebuilder:skipversion
type ReservedDBInstancesOffering struct {
	CurrencyCode *string `json:"currencyCode,omitempty"`

	DBInstanceClass *string `json:"dbInstanceClass,omitempty"`

	Duration *int64 `json:"duration,omitempty"`

	MultiAZ *bool `json:"multiAZ,omitempty"`

	OfferingType *string `json:"offeringType,omitempty"`

	ProductDescription *string `json:"productDescription,omitempty"`

	ReservedDBInstancesOfferingID *string `json:"reservedDBInstancesOfferingID,omitempty"`
}

// +kubebuilder:skipversion
type ResourcePendingMaintenanceActions struct {
	ResourceIdentifier *string `json:"resourceIdentifier,omitempty"`
}

// +kubebuilder:skipversion
type RestoreWindow struct {
	EarliestTime *metav1.Time `json:"earliestTime,omitempty"`

	LatestTime *metav1.Time `json:"latestTime,omitempty"`
}

// +kubebuilder:skipversion
type ScalingConfiguration struct {
	AutoPause *bool `json:"autoPause,omitempty"`

	MaxCapacity *int64 `json:"maxCapacity,omitempty"`

	MinCapacity *int64 `json:"minCapacity,omitempty"`

	SecondsBeforeTimeout *int64 `json:"secondsBeforeTimeout,omitempty"`

	SecondsUntilAutoPause *int64 `json:"secondsUntilAutoPause,omitempty"`

	TimeoutAction *string `json:"timeoutAction,omitempty"`
}

// +kubebuilder:skipversion
type ScalingConfigurationInfo struct {
	AutoPause *bool `json:"autoPause,omitempty"`

	MaxCapacity *int64 `json:"maxCapacity,omitempty"`

	MinCapacity *int64 `json:"minCapacity,omitempty"`

	SecondsBeforeTimeout *int64 `json:"secondsBeforeTimeout,omitempty"`

	SecondsUntilAutoPause *int64 `json:"secondsUntilAutoPause,omitempty"`

	TimeoutAction *string `json:"timeoutAction,omitempty"`
}

// +kubebuilder:skipversion
type ServerlessV2ScalingConfiguration struct {
	MaxCapacity *float64 `json:"maxCapacity,omitempty"`

	MinCapacity *float64 `json:"minCapacity,omitempty"`
}

// +kubebuilder:skipversion
type ServerlessV2ScalingConfigurationInfo struct {
	MaxCapacity *float64 `json:"maxCapacity,omitempty"`

	MinCapacity *float64 `json:"minCapacity,omitempty"`
}

// +kubebuilder:skipversion
type SourceRegion struct {
	Endpoint *string `json:"endpoint,omitempty"`

	RegionName *string `json:"regionName,omitempty"`

	Status *string `json:"status,omitempty"`

	SupportsDBInstanceAutomatedBackupsReplication *bool `json:"supportsDBInstanceAutomatedBackupsReplication,omitempty"`
}

// +kubebuilder:skipversion
type Subnet struct {
	// Contains Availability Zone information.
	//
	// This data type is used as an element in the OrderableDBInstanceOption data
	// type.
	SubnetAvailabilityZone *AvailabilityZone `json:"subnetAvailabilityZone,omitempty"`

	SubnetIdentifier *string `json:"subnetIdentifier,omitempty"`
	// A data type that represents an Outpost.
	//
	// For more information about RDS on Outposts, see Amazon RDS on Amazon Web
	// Services Outposts (https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/rds-on-outposts.html)
	// in the Amazon RDS User Guide.
	SubnetOutpost *Outpost `json:"subnetOutpost,omitempty"`

	SubnetStatus *string `json:"subnetStatus,omitempty"`
}

// +kubebuilder:skipversion
type Tag struct {
	Key *string `json:"key,omitempty"`

	Value *string `json:"value,omitempty"`
}

// +kubebuilder:skipversion
type TargetHealth struct {
	Description *string `json:"description,omitempty"`
}

// +kubebuilder:skipversion
type Timezone struct {
	TimezoneName *string `json:"timezoneName,omitempty"`
}

// +kubebuilder:skipversion
type UpgradeTarget struct {
	AutoUpgrade *bool `json:"autoUpgrade,omitempty"`

	Description *string `json:"description,omitempty"`

	Engine *string `json:"engine,omitempty"`

	EngineVersion *string `json:"engineVersion,omitempty"`

	IsMajorVersionUpgrade *bool `json:"isMajorVersionUpgrade,omitempty"`

	SupportedEngineModes []*string `json:"supportedEngineModes,omitempty"`

	SupportsBabelfish *bool `json:"supportsBabelfish,omitempty"`

	SupportsGlobalDatabases *bool `json:"supportsGlobalDatabases,omitempty"`

	SupportsParallelQuery *bool `json:"supportsParallelQuery,omitempty"`
}

// +kubebuilder:skipversion
type UserAuthConfig struct {
	Description *string `json:"description,omitempty"`

	SecretARN *string `json:"secretARN,omitempty"`

	UserName *string `json:"userName,omitempty"`
}

// +kubebuilder:skipversion
type UserAuthConfigInfo struct {
	Description *string `json:"description,omitempty"`

	SecretARN *string `json:"secretARN,omitempty"`

	UserName *string `json:"userName,omitempty"`
}

// +kubebuilder:skipversion
type VPCSecurityGroupMembership struct {
	Status *string `json:"status,omitempty"`

	VPCSecurityGroupID *string `json:"vpcSecurityGroupID,omitempty"`
}

// +kubebuilder:skipversion
type ValidStorageOptions struct {
	StorageType *string `json:"storageType,omitempty"`

	SupportsStorageAutoscaling *bool `json:"supportsStorageAutoscaling,omitempty"`
}
