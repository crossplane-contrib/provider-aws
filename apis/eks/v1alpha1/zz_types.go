/*
Copyright 2021 The Crossplane Authors.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by ack-generate. DO NOT EDIT.

package v1alpha1

import (
	metav1 "k8s.io/apimachinery/pkg/apis/meta/v1"
)

// Hack to avoid import errors during build...
var (
	_ = &metav1.Time{}
)

// +kubebuilder:skipversion
type AddonHealth struct {
	Issues []*AddonIssue `json:"issues,omitempty"`
}

// +kubebuilder:skipversion
type AddonInfo struct {
	AddonName *string `json:"addonName,omitempty"`

	Type *string `json:"type_,omitempty"`
}

// +kubebuilder:skipversion
type AddonIssue struct {
	Code *string `json:"code,omitempty"`

	Message *string `json:"message,omitempty"`

	ResourceIDs []*string `json:"resourceIDs,omitempty"`
}

// +kubebuilder:skipversion
type AddonVersionInfo struct {
	AddonVersion *string `json:"addonVersion,omitempty"`

	Architecture []*string `json:"architecture,omitempty"`
}

// +kubebuilder:skipversion
type Addon_SDK struct {
	AddonARN *string `json:"addonARN,omitempty"`

	AddonName *string `json:"addonName,omitempty"`

	AddonVersion *string `json:"addonVersion,omitempty"`

	ClusterName *string `json:"clusterName,omitempty"`

	CreatedAt *metav1.Time `json:"createdAt,omitempty"`
	// The health of the add-on.
	Health *AddonHealth `json:"health,omitempty"`

	ModifiedAt *metav1.Time `json:"modifiedAt,omitempty"`

	ServiceAccountRoleARN *string `json:"serviceAccountRoleARN,omitempty"`

	Status *string `json:"status,omitempty"`

	Tags map[string]*string `json:"tags,omitempty"`
}

// +kubebuilder:skipversion
type AutoScalingGroup struct {
	Name *string `json:"name,omitempty"`
}

// +kubebuilder:skipversion
type Certificate struct {
	Data *string `json:"data,omitempty"`
}

// +kubebuilder:skipversion
type Compatibility struct {
	ClusterVersion *string `json:"clusterVersion,omitempty"`

	DefaultVersion *bool `json:"defaultVersion,omitempty"`

	PlatformVersions []*string `json:"platformVersions,omitempty"`
}

// +kubebuilder:skipversion
type ConnectorConfigRequest struct {
	RoleARN *string `json:"roleARN,omitempty"`
}

// +kubebuilder:skipversion
type ConnectorConfigResponse struct {
	ActivationCode *string `json:"activationCode,omitempty"`

	ActivationExpiry *metav1.Time `json:"activationExpiry,omitempty"`

	ActivationID *string `json:"activationID,omitempty"`

	Provider *string `json:"provider,omitempty"`

	RoleARN *string `json:"roleARN,omitempty"`
}

// +kubebuilder:skipversion
type EncryptionConfig struct {
	Resources []*string `json:"resources,omitempty"`
}

// +kubebuilder:skipversion
type ErrorDetail struct {
	ErrorCode *string `json:"errorCode,omitempty"`

	ErrorMessage *string `json:"errorMessage,omitempty"`

	ResourceIDs []*string `json:"resourceIDs,omitempty"`
}

// +kubebuilder:skipversion
type FargateProfileSelector struct {
	Namespace *string `json:"namespace,omitempty"`
}

// +kubebuilder:skipversion
type Issue struct {
	Message *string `json:"message,omitempty"`

	ResourceIDs []*string `json:"resourceIDs,omitempty"`
}

// +kubebuilder:skipversion
type KubernetesNetworkConfigRequest struct {
	ServiceIPv4CIDR *string `json:"serviceIPv4CIDR,omitempty"`
}

// +kubebuilder:skipversion
type KubernetesNetworkConfigResponse struct {
	ServiceIPv4CIDR *string `json:"serviceIPv4CIDR,omitempty"`
}

// +kubebuilder:skipversion
type LaunchTemplateSpecification struct {
	ID *string `json:"id,omitempty"`

	Name *string `json:"name,omitempty"`

	Version *string `json:"version,omitempty"`
}

// +kubebuilder:skipversion
type NodegroupResources struct {
	RemoteAccessSecurityGroup *string `json:"remoteAccessSecurityGroup,omitempty"`
}

// +kubebuilder:skipversion
type OIDC struct {
	Issuer *string `json:"issuer,omitempty"`
}

// +kubebuilder:skipversion
type OIDCIdentityProviderConfig struct {
	ClientID *string `json:"clientID,omitempty"`

	ClusterName *string `json:"clusterName,omitempty"`

	GroupsClaim *string `json:"groupsClaim,omitempty"`

	GroupsPrefix *string `json:"groupsPrefix,omitempty"`

	IdentityProviderConfigARN *string `json:"identityProviderConfigARN,omitempty"`

	IdentityProviderConfigName *string `json:"identityProviderConfigName,omitempty"`

	IssuerURL *string `json:"issuerURL,omitempty"`

	Tags map[string]*string `json:"tags,omitempty"`

	UsernameClaim *string `json:"usernameClaim,omitempty"`

	UsernamePrefix *string `json:"usernamePrefix,omitempty"`
}

// +kubebuilder:skipversion
type OIDCIdentityProviderConfigRequest struct {
	ClientID *string `json:"clientID,omitempty"`

	GroupsClaim *string `json:"groupsClaim,omitempty"`

	GroupsPrefix *string `json:"groupsPrefix,omitempty"`

	IdentityProviderConfigName *string `json:"identityProviderConfigName,omitempty"`

	IssuerURL *string `json:"issuerURL,omitempty"`

	UsernameClaim *string `json:"usernameClaim,omitempty"`

	UsernamePrefix *string `json:"usernamePrefix,omitempty"`
}

// +kubebuilder:skipversion
type Provider struct {
	KeyARN *string `json:"keyARN,omitempty"`
}

// +kubebuilder:skipversion
type RemoteAccessConfig struct {
	EC2SshKey *string `json:"ec2SshKey,omitempty"`

	SourceSecurityGroups []*string `json:"sourceSecurityGroups,omitempty"`
}

// +kubebuilder:skipversion
type Update struct {
	CreatedAt *metav1.Time `json:"createdAt,omitempty"`

	Errors []*ErrorDetail `json:"errors,omitempty"`

	ID *string `json:"id,omitempty"`

	Params []*UpdateParam `json:"params,omitempty"`

	Status *string `json:"status,omitempty"`

	Type *string `json:"type_,omitempty"`
}

// +kubebuilder:skipversion
type UpdateParam struct {
	Type *string `json:"type_,omitempty"`

	Value *string `json:"value,omitempty"`
}

// +kubebuilder:skipversion
type VPCConfigRequest struct {
	PublicAccessCIDRs []*string `json:"publicAccessCIDRs,omitempty"`

	SecurityGroupIDs []*string `json:"securityGroupIDs,omitempty"`

	SubnetIDs []*string `json:"subnetIDs,omitempty"`
}

// +kubebuilder:skipversion
type VPCConfigResponse struct {
	ClusterSecurityGroupID *string `json:"clusterSecurityGroupID,omitempty"`

	EndpointPrivateAccess *bool `json:"endpointPrivateAccess,omitempty"`

	EndpointPublicAccess *bool `json:"endpointPublicAccess,omitempty"`

	PublicAccessCIDRs []*string `json:"publicAccessCIDRs,omitempty"`

	SecurityGroupIDs []*string `json:"securityGroupIDs,omitempty"`

	SubnetIDs []*string `json:"subnetIDs,omitempty"`

	VPCID *string `json:"vpcID,omitempty"`
}
