/*
Copyright 2021 The Crossplane Authors.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by ack-generate. DO NOT EDIT.

package v1alpha1

import (
	metav1 "k8s.io/apimachinery/pkg/apis/meta/v1"
)

// Hack to avoid import errors during build...
var (
	_ = &metav1.Time{}
)

// +kubebuilder:skipversion
type Cluster_SDK struct {
	ActiveNodes *int64 `json:"activeNodes,omitempty"`

	ClusterARN *string `json:"clusterARN,omitempty"`
	// Represents the information required for client programs to connect to the
	// endpoint for a DAX cluster.
	ClusterDiscoveryEndpoint *Endpoint `json:"clusterDiscoveryEndpoint,omitempty"`

	ClusterEndpointEncryptionType *string `json:"clusterEndpointEncryptionType,omitempty"`

	ClusterName *string `json:"clusterName,omitempty"`

	Description *string `json:"description,omitempty"`

	IAMRoleARN *string `json:"iamRoleARN,omitempty"`

	NodeIDsToRemove []*string `json:"nodeIDsToRemove,omitempty"`

	NodeType *string `json:"nodeType,omitempty"`

	Nodes []*Node `json:"nodes,omitempty"`
	// Describes a notification topic and its status. Notification topics are used
	// for publishing DAX events to subscribers using Amazon Simple Notification
	// Service (SNS).
	NotificationConfiguration *NotificationConfiguration `json:"notificationConfiguration,omitempty"`
	// The status of a parameter group.
	ParameterGroup *ParameterGroupStatus_SDK `json:"parameterGroup,omitempty"`

	PreferredMaintenanceWindow *string `json:"preferredMaintenanceWindow,omitempty"`
	// The description of the server-side encryption status on the specified DAX
	// cluster.
	SSEDescription *SSEDescription `json:"sseDescription,omitempty"`

	SecurityGroups []*SecurityGroupMembership `json:"securityGroups,omitempty"`

	Status *string `json:"status,omitempty"`

	SubnetGroup *string `json:"subnetGroup,omitempty"`

	TotalNodes *int64 `json:"totalNodes,omitempty"`
}

// +kubebuilder:skipversion
type Endpoint struct {
	Address *string `json:"address,omitempty"`

	Port *int64 `json:"port,omitempty"`

	URL *string `json:"url,omitempty"`
}

// +kubebuilder:skipversion
type Event struct {
	Date *metav1.Time `json:"date,omitempty"`

	Message *string `json:"message,omitempty"`

	SourceName *string `json:"sourceName,omitempty"`
}

// +kubebuilder:skipversion
type Node struct {
	AvailabilityZone *string `json:"availabilityZone,omitempty"`
	// Represents the information required for client programs to connect to the
	// endpoint for a DAX cluster.
	Endpoint *Endpoint `json:"endpoint,omitempty"`

	NodeCreateTime *metav1.Time `json:"nodeCreateTime,omitempty"`

	NodeID *string `json:"nodeID,omitempty"`

	NodeStatus *string `json:"nodeStatus,omitempty"`

	ParameterGroupStatus *string `json:"parameterGroupStatus,omitempty"`
}

// +kubebuilder:skipversion
type NodeTypeSpecificValue struct {
	NodeType *string `json:"nodeType,omitempty"`

	Value *string `json:"value,omitempty"`
}

// +kubebuilder:skipversion
type NotificationConfiguration struct {
	TopicARN *string `json:"topicARN,omitempty"`

	TopicStatus *string `json:"topicStatus,omitempty"`
}

// +kubebuilder:skipversion
type Parameter struct {
	AllowedValues *string `json:"allowedValues,omitempty"`

	DataType *string `json:"dataType,omitempty"`

	Description *string `json:"description,omitempty"`

	ParameterName *string `json:"parameterName,omitempty"`

	ParameterValue *string `json:"parameterValue,omitempty"`

	Source *string `json:"source,omitempty"`
}

// +kubebuilder:skipversion
type ParameterGroupStatus_SDK struct {
	NodeIDsToReboot []*string `json:"nodeIDsToReboot,omitempty"`

	ParameterApplyStatus *string `json:"parameterApplyStatus,omitempty"`

	ParameterGroupName *string `json:"parameterGroupName,omitempty"`
}

// +kubebuilder:skipversion
type ParameterGroup_SDK struct {
	Description *string `json:"description,omitempty"`

	ParameterGroupName *string `json:"parameterGroupName,omitempty"`
}

// +kubebuilder:skipversion
type ParameterNameValue struct {
	ParameterName *string `json:"parameterName,omitempty"`

	ParameterValue *string `json:"parameterValue,omitempty"`
}

// +kubebuilder:skipversion
type SSEDescription struct {
	Status *string `json:"status,omitempty"`
}

// +kubebuilder:skipversion
type SSESpecification struct {
	Enabled *bool `json:"enabled,omitempty"`
}

// +kubebuilder:skipversion
type SecurityGroupMembership struct {
	SecurityGroupIdentifier *string `json:"securityGroupIdentifier,omitempty"`

	Status *string `json:"status,omitempty"`
}

// +kubebuilder:skipversion
type Subnet struct {
	SubnetAvailabilityZone *string `json:"subnetAvailabilityZone,omitempty"`

	SubnetIdentifier *string `json:"subnetIdentifier,omitempty"`
}

// +kubebuilder:skipversion
type SubnetGroup_SDK struct {
	Description *string `json:"description,omitempty"`

	SubnetGroupName *string `json:"subnetGroupName,omitempty"`

	Subnets []*Subnet `json:"subnets,omitempty"`

	VPCID *string `json:"vpcID,omitempty"`
}

// +kubebuilder:skipversion
type Tag struct {
	Key *string `json:"key,omitempty"`

	Value *string `json:"value,omitempty"`
}
