//go:build !ignore_autogenerated
// +build !ignore_autogenerated

/*
Copyright 2021 The Crossplane Authors.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by controller-gen. DO NOT EDIT.

package v1alpha1

import (
	"github.com/crossplane/crossplane-runtime/apis/common/v1"
	runtime "k8s.io/apimachinery/pkg/runtime"
)

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AWSVPCConfiguration) DeepCopyInto(out *AWSVPCConfiguration) {
	*out = *in
	if in.AssignPublicIP != nil {
		in, out := &in.AssignPublicIP, &out.AssignPublicIP
		*out = new(string)
		**out = **in
	}
	if in.SecurityGroups != nil {
		in, out := &in.SecurityGroups, &out.SecurityGroups
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Subnets != nil {
		in, out := &in.Subnets, &out.Subnets
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AWSVPCConfiguration.
func (in *AWSVPCConfiguration) DeepCopy() *AWSVPCConfiguration {
	if in == nil {
		return nil
	}
	out := new(AWSVPCConfiguration)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Attachment) DeepCopyInto(out *Attachment) {
	*out = *in
	if in.Details != nil {
		in, out := &in.Details, &out.Details
		*out = make([]*KeyValuePair, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(KeyValuePair)
				(*in).DeepCopyInto(*out)
			}
		}
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.Status != nil {
		in, out := &in.Status, &out.Status
		*out = new(string)
		**out = **in
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Attachment.
func (in *Attachment) DeepCopy() *Attachment {
	if in == nil {
		return nil
	}
	out := new(Attachment)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AttachmentStateChange) DeepCopyInto(out *AttachmentStateChange) {
	*out = *in
	if in.AttachmentARN != nil {
		in, out := &in.AttachmentARN, &out.AttachmentARN
		*out = new(string)
		**out = **in
	}
	if in.Status != nil {
		in, out := &in.Status, &out.Status
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AttachmentStateChange.
func (in *AttachmentStateChange) DeepCopy() *AttachmentStateChange {
	if in == nil {
		return nil
	}
	out := new(AttachmentStateChange)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Attribute) DeepCopyInto(out *Attribute) {
	*out = *in
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.TargetID != nil {
		in, out := &in.TargetID, &out.TargetID
		*out = new(string)
		**out = **in
	}
	if in.TargetType != nil {
		in, out := &in.TargetType, &out.TargetType
		*out = new(string)
		**out = **in
	}
	if in.Value != nil {
		in, out := &in.Value, &out.Value
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Attribute.
func (in *Attribute) DeepCopy() *Attribute {
	if in == nil {
		return nil
	}
	out := new(Attribute)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AutoScalingGroupProvider) DeepCopyInto(out *AutoScalingGroupProvider) {
	*out = *in
	if in.AutoScalingGroupARN != nil {
		in, out := &in.AutoScalingGroupARN, &out.AutoScalingGroupARN
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AutoScalingGroupProvider.
func (in *AutoScalingGroupProvider) DeepCopy() *AutoScalingGroupProvider {
	if in == nil {
		return nil
	}
	out := new(AutoScalingGroupProvider)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CapacityProvider) DeepCopyInto(out *CapacityProvider) {
	*out = *in
	if in.CapacityProviderARN != nil {
		in, out := &in.CapacityProviderARN, &out.CapacityProviderARN
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Tags != nil {
		in, out := &in.Tags, &out.Tags
		*out = make([]*Tag, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(Tag)
				(*in).DeepCopyInto(*out)
			}
		}
	}
	if in.UpdateStatusReason != nil {
		in, out := &in.UpdateStatusReason, &out.UpdateStatusReason
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CapacityProvider.
func (in *CapacityProvider) DeepCopy() *CapacityProvider {
	if in == nil {
		return nil
	}
	out := new(CapacityProvider)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CapacityProviderStrategyItem) DeepCopyInto(out *CapacityProviderStrategyItem) {
	*out = *in
	if in.Base != nil {
		in, out := &in.Base, &out.Base
		*out = new(int64)
		**out = **in
	}
	if in.CapacityProvider != nil {
		in, out := &in.CapacityProvider, &out.CapacityProvider
		*out = new(string)
		**out = **in
	}
	if in.Weight != nil {
		in, out := &in.Weight, &out.Weight
		*out = new(int64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CapacityProviderStrategyItem.
func (in *CapacityProviderStrategyItem) DeepCopy() *CapacityProviderStrategyItem {
	if in == nil {
		return nil
	}
	out := new(CapacityProviderStrategyItem)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Cluster) DeepCopyInto(out *Cluster) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Cluster.
func (in *Cluster) DeepCopy() *Cluster {
	if in == nil {
		return nil
	}
	out := new(Cluster)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *Cluster) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ClusterConfiguration) DeepCopyInto(out *ClusterConfiguration) {
	*out = *in
	if in.ExecuteCommandConfiguration != nil {
		in, out := &in.ExecuteCommandConfiguration, &out.ExecuteCommandConfiguration
		*out = new(ExecuteCommandConfiguration)
		(*in).DeepCopyInto(*out)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ClusterConfiguration.
func (in *ClusterConfiguration) DeepCopy() *ClusterConfiguration {
	if in == nil {
		return nil
	}
	out := new(ClusterConfiguration)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ClusterList) DeepCopyInto(out *ClusterList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]Cluster, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ClusterList.
func (in *ClusterList) DeepCopy() *ClusterList {
	if in == nil {
		return nil
	}
	out := new(ClusterList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *ClusterList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ClusterObservation) DeepCopyInto(out *ClusterObservation) {
	*out = *in
	if in.ActiveServicesCount != nil {
		in, out := &in.ActiveServicesCount, &out.ActiveServicesCount
		*out = new(int64)
		**out = **in
	}
	if in.Attachments != nil {
		in, out := &in.Attachments, &out.Attachments
		*out = make([]*Attachment, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(Attachment)
				(*in).DeepCopyInto(*out)
			}
		}
	}
	if in.AttachmentsStatus != nil {
		in, out := &in.AttachmentsStatus, &out.AttachmentsStatus
		*out = new(string)
		**out = **in
	}
	if in.ClusterARN != nil {
		in, out := &in.ClusterARN, &out.ClusterARN
		*out = new(string)
		**out = **in
	}
	if in.PendingTasksCount != nil {
		in, out := &in.PendingTasksCount, &out.PendingTasksCount
		*out = new(int64)
		**out = **in
	}
	if in.RegisteredContainerInstancesCount != nil {
		in, out := &in.RegisteredContainerInstancesCount, &out.RegisteredContainerInstancesCount
		*out = new(int64)
		**out = **in
	}
	if in.RunningTasksCount != nil {
		in, out := &in.RunningTasksCount, &out.RunningTasksCount
		*out = new(int64)
		**out = **in
	}
	if in.Statistics != nil {
		in, out := &in.Statistics, &out.Statistics
		*out = make([]*KeyValuePair, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(KeyValuePair)
				(*in).DeepCopyInto(*out)
			}
		}
	}
	if in.Status != nil {
		in, out := &in.Status, &out.Status
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ClusterObservation.
func (in *ClusterObservation) DeepCopy() *ClusterObservation {
	if in == nil {
		return nil
	}
	out := new(ClusterObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ClusterParameters) DeepCopyInto(out *ClusterParameters) {
	*out = *in
	if in.CapacityProviders != nil {
		in, out := &in.CapacityProviders, &out.CapacityProviders
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.ClusterName != nil {
		in, out := &in.ClusterName, &out.ClusterName
		*out = new(string)
		**out = **in
	}
	if in.Configuration != nil {
		in, out := &in.Configuration, &out.Configuration
		*out = new(ClusterConfiguration)
		(*in).DeepCopyInto(*out)
	}
	if in.DefaultCapacityProviderStrategy != nil {
		in, out := &in.DefaultCapacityProviderStrategy, &out.DefaultCapacityProviderStrategy
		*out = make([]*CapacityProviderStrategyItem, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(CapacityProviderStrategyItem)
				(*in).DeepCopyInto(*out)
			}
		}
	}
	if in.Settings != nil {
		in, out := &in.Settings, &out.Settings
		*out = make([]*ClusterSetting, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(ClusterSetting)
				(*in).DeepCopyInto(*out)
			}
		}
	}
	if in.Tags != nil {
		in, out := &in.Tags, &out.Tags
		*out = make([]*Tag, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(Tag)
				(*in).DeepCopyInto(*out)
			}
		}
	}
	out.CustomClusterParameters = in.CustomClusterParameters
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ClusterParameters.
func (in *ClusterParameters) DeepCopy() *ClusterParameters {
	if in == nil {
		return nil
	}
	out := new(ClusterParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ClusterSetting) DeepCopyInto(out *ClusterSetting) {
	*out = *in
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Value != nil {
		in, out := &in.Value, &out.Value
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ClusterSetting.
func (in *ClusterSetting) DeepCopy() *ClusterSetting {
	if in == nil {
		return nil
	}
	out := new(ClusterSetting)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ClusterSpec) DeepCopyInto(out *ClusterSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ClusterSpec.
func (in *ClusterSpec) DeepCopy() *ClusterSpec {
	if in == nil {
		return nil
	}
	out := new(ClusterSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ClusterStatus) DeepCopyInto(out *ClusterStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ClusterStatus.
func (in *ClusterStatus) DeepCopy() *ClusterStatus {
	if in == nil {
		return nil
	}
	out := new(ClusterStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Cluster_SDK) DeepCopyInto(out *Cluster_SDK) {
	*out = *in
	if in.ActiveServicesCount != nil {
		in, out := &in.ActiveServicesCount, &out.ActiveServicesCount
		*out = new(int64)
		**out = **in
	}
	if in.Attachments != nil {
		in, out := &in.Attachments, &out.Attachments
		*out = make([]*Attachment, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(Attachment)
				(*in).DeepCopyInto(*out)
			}
		}
	}
	if in.AttachmentsStatus != nil {
		in, out := &in.AttachmentsStatus, &out.AttachmentsStatus
		*out = new(string)
		**out = **in
	}
	if in.CapacityProviders != nil {
		in, out := &in.CapacityProviders, &out.CapacityProviders
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.ClusterARN != nil {
		in, out := &in.ClusterARN, &out.ClusterARN
		*out = new(string)
		**out = **in
	}
	if in.ClusterName != nil {
		in, out := &in.ClusterName, &out.ClusterName
		*out = new(string)
		**out = **in
	}
	if in.Configuration != nil {
		in, out := &in.Configuration, &out.Configuration
		*out = new(ClusterConfiguration)
		(*in).DeepCopyInto(*out)
	}
	if in.DefaultCapacityProviderStrategy != nil {
		in, out := &in.DefaultCapacityProviderStrategy, &out.DefaultCapacityProviderStrategy
		*out = make([]*CapacityProviderStrategyItem, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(CapacityProviderStrategyItem)
				(*in).DeepCopyInto(*out)
			}
		}
	}
	if in.PendingTasksCount != nil {
		in, out := &in.PendingTasksCount, &out.PendingTasksCount
		*out = new(int64)
		**out = **in
	}
	if in.RegisteredContainerInstancesCount != nil {
		in, out := &in.RegisteredContainerInstancesCount, &out.RegisteredContainerInstancesCount
		*out = new(int64)
		**out = **in
	}
	if in.RunningTasksCount != nil {
		in, out := &in.RunningTasksCount, &out.RunningTasksCount
		*out = new(int64)
		**out = **in
	}
	if in.Settings != nil {
		in, out := &in.Settings, &out.Settings
		*out = make([]*ClusterSetting, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(ClusterSetting)
				(*in).DeepCopyInto(*out)
			}
		}
	}
	if in.Statistics != nil {
		in, out := &in.Statistics, &out.Statistics
		*out = make([]*KeyValuePair, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(KeyValuePair)
				(*in).DeepCopyInto(*out)
			}
		}
	}
	if in.Status != nil {
		in, out := &in.Status, &out.Status
		*out = new(string)
		**out = **in
	}
	if in.Tags != nil {
		in, out := &in.Tags, &out.Tags
		*out = make([]*Tag, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(Tag)
				(*in).DeepCopyInto(*out)
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Cluster_SDK.
func (in *Cluster_SDK) DeepCopy() *Cluster_SDK {
	if in == nil {
		return nil
	}
	out := new(Cluster_SDK)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Container) DeepCopyInto(out *Container) {
	*out = *in
	if in.ContainerARN != nil {
		in, out := &in.ContainerARN, &out.ContainerARN
		*out = new(string)
		**out = **in
	}
	if in.CPU != nil {
		in, out := &in.CPU, &out.CPU
		*out = new(string)
		**out = **in
	}
	if in.ExitCode != nil {
		in, out := &in.ExitCode, &out.ExitCode
		*out = new(int64)
		**out = **in
	}
	if in.Image != nil {
		in, out := &in.Image, &out.Image
		*out = new(string)
		**out = **in
	}
	if in.ImageDigest != nil {
		in, out := &in.ImageDigest, &out.ImageDigest
		*out = new(string)
		**out = **in
	}
	if in.LastStatus != nil {
		in, out := &in.LastStatus, &out.LastStatus
		*out = new(string)
		**out = **in
	}
	if in.Memory != nil {
		in, out := &in.Memory, &out.Memory
		*out = new(string)
		**out = **in
	}
	if in.MemoryReservation != nil {
		in, out := &in.MemoryReservation, &out.MemoryReservation
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Reason != nil {
		in, out := &in.Reason, &out.Reason
		*out = new(string)
		**out = **in
	}
	if in.RuntimeID != nil {
		in, out := &in.RuntimeID, &out.RuntimeID
		*out = new(string)
		**out = **in
	}
	if in.TaskARN != nil {
		in, out := &in.TaskARN, &out.TaskARN
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Container.
func (in *Container) DeepCopy() *Container {
	if in == nil {
		return nil
	}
	out := new(Container)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ContainerDefinition) DeepCopyInto(out *ContainerDefinition) {
	*out = *in
	if in.Command != nil {
		in, out := &in.Command, &out.Command
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.CPU != nil {
		in, out := &in.CPU, &out.CPU
		*out = new(int64)
		**out = **in
	}
	if in.DependsOn != nil {
		in, out := &in.DependsOn, &out.DependsOn
		*out = make([]*ContainerDependency, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(ContainerDependency)
				(*in).DeepCopyInto(*out)
			}
		}
	}
	if in.DisableNetworking != nil {
		in, out := &in.DisableNetworking, &out.DisableNetworking
		*out = new(bool)
		**out = **in
	}
	if in.DNSSearchDomains != nil {
		in, out := &in.DNSSearchDomains, &out.DNSSearchDomains
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.DNSServers != nil {
		in, out := &in.DNSServers, &out.DNSServers
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.DockerLabels != nil {
		in, out := &in.DockerLabels, &out.DockerLabels
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				in, out := &val, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.DockerSecurityOptions != nil {
		in, out := &in.DockerSecurityOptions, &out.DockerSecurityOptions
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.EntryPoint != nil {
		in, out := &in.EntryPoint, &out.EntryPoint
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Environment != nil {
		in, out := &in.Environment, &out.Environment
		*out = make([]*KeyValuePair, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(KeyValuePair)
				(*in).DeepCopyInto(*out)
			}
		}
	}
	if in.EnvironmentFiles != nil {
		in, out := &in.EnvironmentFiles, &out.EnvironmentFiles
		*out = make([]*EnvironmentFile, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(EnvironmentFile)
				(*in).DeepCopyInto(*out)
			}
		}
	}
	if in.Essential != nil {
		in, out := &in.Essential, &out.Essential
		*out = new(bool)
		**out = **in
	}
	if in.ExtraHosts != nil {
		in, out := &in.ExtraHosts, &out.ExtraHosts
		*out = make([]*HostEntry, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(HostEntry)
				(*in).DeepCopyInto(*out)
			}
		}
	}
	if in.FirelensConfiguration != nil {
		in, out := &in.FirelensConfiguration, &out.FirelensConfiguration
		*out = new(FirelensConfiguration)
		(*in).DeepCopyInto(*out)
	}
	if in.HealthCheck != nil {
		in, out := &in.HealthCheck, &out.HealthCheck
		*out = new(HealthCheck)
		(*in).DeepCopyInto(*out)
	}
	if in.Hostname != nil {
		in, out := &in.Hostname, &out.Hostname
		*out = new(string)
		**out = **in
	}
	if in.Image != nil {
		in, out := &in.Image, &out.Image
		*out = new(string)
		**out = **in
	}
	if in.Interactive != nil {
		in, out := &in.Interactive, &out.Interactive
		*out = new(bool)
		**out = **in
	}
	if in.Links != nil {
		in, out := &in.Links, &out.Links
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.LinuxParameters != nil {
		in, out := &in.LinuxParameters, &out.LinuxParameters
		*out = new(LinuxParameters)
		(*in).DeepCopyInto(*out)
	}
	if in.LogConfiguration != nil {
		in, out := &in.LogConfiguration, &out.LogConfiguration
		*out = new(LogConfiguration)
		(*in).DeepCopyInto(*out)
	}
	if in.Memory != nil {
		in, out := &in.Memory, &out.Memory
		*out = new(int64)
		**out = **in
	}
	if in.MemoryReservation != nil {
		in, out := &in.MemoryReservation, &out.MemoryReservation
		*out = new(int64)
		**out = **in
	}
	if in.MountPoints != nil {
		in, out := &in.MountPoints, &out.MountPoints
		*out = make([]*MountPoint, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(MountPoint)
				(*in).DeepCopyInto(*out)
			}
		}
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.PortMappings != nil {
		in, out := &in.PortMappings, &out.PortMappings
		*out = make([]*PortMapping, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(PortMapping)
				(*in).DeepCopyInto(*out)
			}
		}
	}
	if in.Privileged != nil {
		in, out := &in.Privileged, &out.Privileged
		*out = new(bool)
		**out = **in
	}
	if in.PseudoTerminal != nil {
		in, out := &in.PseudoTerminal, &out.PseudoTerminal
		*out = new(bool)
		**out = **in
	}
	if in.ReadonlyRootFilesystem != nil {
		in, out := &in.ReadonlyRootFilesystem, &out.ReadonlyRootFilesystem
		*out = new(bool)
		**out = **in
	}
	if in.RepositoryCredentials != nil {
		in, out := &in.RepositoryCredentials, &out.RepositoryCredentials
		*out = new(RepositoryCredentials)
		(*in).DeepCopyInto(*out)
	}
	if in.ResourceRequirements != nil {
		in, out := &in.ResourceRequirements, &out.ResourceRequirements
		*out = make([]*ResourceRequirement, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(ResourceRequirement)
				(*in).DeepCopyInto(*out)
			}
		}
	}
	if in.Secrets != nil {
		in, out := &in.Secrets, &out.Secrets
		*out = make([]*Secret, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(Secret)
				(*in).DeepCopyInto(*out)
			}
		}
	}
	if in.StartTimeout != nil {
		in, out := &in.StartTimeout, &out.StartTimeout
		*out = new(int64)
		**out = **in
	}
	if in.StopTimeout != nil {
		in, out := &in.StopTimeout, &out.StopTimeout
		*out = new(int64)
		**out = **in
	}
	if in.SystemControls != nil {
		in, out := &in.SystemControls, &out.SystemControls
		*out = make([]*SystemControl, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(SystemControl)
				(*in).DeepCopyInto(*out)
			}
		}
	}
	if in.Ulimits != nil {
		in, out := &in.Ulimits, &out.Ulimits
		*out = make([]*Ulimit, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(Ulimit)
				(*in).DeepCopyInto(*out)
			}
		}
	}
	if in.User != nil {
		in, out := &in.User, &out.User
		*out = new(string)
		**out = **in
	}
	if in.VolumesFrom != nil {
		in, out := &in.VolumesFrom, &out.VolumesFrom
		*out = make([]*VolumeFrom, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(VolumeFrom)
				(*in).DeepCopyInto(*out)
			}
		}
	}
	if in.WorkingDirectory != nil {
		in, out := &in.WorkingDirectory, &out.WorkingDirectory
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ContainerDefinition.
func (in *ContainerDefinition) DeepCopy() *ContainerDefinition {
	if in == nil {
		return nil
	}
	out := new(ContainerDefinition)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ContainerDependency) DeepCopyInto(out *ContainerDependency) {
	*out = *in
	if in.Condition != nil {
		in, out := &in.Condition, &out.Condition
		*out = new(string)
		**out = **in
	}
	if in.ContainerName != nil {
		in, out := &in.ContainerName, &out.ContainerName
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ContainerDependency.
func (in *ContainerDependency) DeepCopy() *ContainerDependency {
	if in == nil {
		return nil
	}
	out := new(ContainerDependency)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ContainerInstance) DeepCopyInto(out *ContainerInstance) {
	*out = *in
	if in.AgentConnected != nil {
		in, out := &in.AgentConnected, &out.AgentConnected
		*out = new(bool)
		**out = **in
	}
	if in.Attachments != nil {
		in, out := &in.Attachments, &out.Attachments
		*out = make([]*Attachment, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(Attachment)
				(*in).DeepCopyInto(*out)
			}
		}
	}
	if in.CapacityProviderName != nil {
		in, out := &in.CapacityProviderName, &out.CapacityProviderName
		*out = new(string)
		**out = **in
	}
	if in.ContainerInstanceARN != nil {
		in, out := &in.ContainerInstanceARN, &out.ContainerInstanceARN
		*out = new(string)
		**out = **in
	}
	if in.EC2InstanceID != nil {
		in, out := &in.EC2InstanceID, &out.EC2InstanceID
		*out = new(string)
		**out = **in
	}
	if in.PendingTasksCount != nil {
		in, out := &in.PendingTasksCount, &out.PendingTasksCount
		*out = new(int64)
		**out = **in
	}
	if in.RegisteredAt != nil {
		in, out := &in.RegisteredAt, &out.RegisteredAt
		*out = (*in).DeepCopy()
	}
	if in.RunningTasksCount != nil {
		in, out := &in.RunningTasksCount, &out.RunningTasksCount
		*out = new(int64)
		**out = **in
	}
	if in.Status != nil {
		in, out := &in.Status, &out.Status
		*out = new(string)
		**out = **in
	}
	if in.StatusReason != nil {
		in, out := &in.StatusReason, &out.StatusReason
		*out = new(string)
		**out = **in
	}
	if in.Tags != nil {
		in, out := &in.Tags, &out.Tags
		*out = make([]*Tag, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(Tag)
				(*in).DeepCopyInto(*out)
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ContainerInstance.
func (in *ContainerInstance) DeepCopy() *ContainerInstance {
	if in == nil {
		return nil
	}
	out := new(ContainerInstance)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ContainerOverride) DeepCopyInto(out *ContainerOverride) {
	*out = *in
	if in.Command != nil {
		in, out := &in.Command, &out.Command
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.CPU != nil {
		in, out := &in.CPU, &out.CPU
		*out = new(int64)
		**out = **in
	}
	if in.Environment != nil {
		in, out := &in.Environment, &out.Environment
		*out = make([]*KeyValuePair, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(KeyValuePair)
				(*in).DeepCopyInto(*out)
			}
		}
	}
	if in.EnvironmentFiles != nil {
		in, out := &in.EnvironmentFiles, &out.EnvironmentFiles
		*out = make([]*EnvironmentFile, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(EnvironmentFile)
				(*in).DeepCopyInto(*out)
			}
		}
	}
	if in.Memory != nil {
		in, out := &in.Memory, &out.Memory
		*out = new(int64)
		**out = **in
	}
	if in.MemoryReservation != nil {
		in, out := &in.MemoryReservation, &out.MemoryReservation
		*out = new(int64)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.ResourceRequirements != nil {
		in, out := &in.ResourceRequirements, &out.ResourceRequirements
		*out = make([]*ResourceRequirement, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(ResourceRequirement)
				(*in).DeepCopyInto(*out)
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ContainerOverride.
func (in *ContainerOverride) DeepCopy() *ContainerOverride {
	if in == nil {
		return nil
	}
	out := new(ContainerOverride)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ContainerStateChange) DeepCopyInto(out *ContainerStateChange) {
	*out = *in
	if in.ContainerName != nil {
		in, out := &in.ContainerName, &out.ContainerName
		*out = new(string)
		**out = **in
	}
	if in.ExitCode != nil {
		in, out := &in.ExitCode, &out.ExitCode
		*out = new(int64)
		**out = **in
	}
	if in.ImageDigest != nil {
		in, out := &in.ImageDigest, &out.ImageDigest
		*out = new(string)
		**out = **in
	}
	if in.Reason != nil {
		in, out := &in.Reason, &out.Reason
		*out = new(string)
		**out = **in
	}
	if in.RuntimeID != nil {
		in, out := &in.RuntimeID, &out.RuntimeID
		*out = new(string)
		**out = **in
	}
	if in.Status != nil {
		in, out := &in.Status, &out.Status
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ContainerStateChange.
func (in *ContainerStateChange) DeepCopy() *ContainerStateChange {
	if in == nil {
		return nil
	}
	out := new(ContainerStateChange)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CustomAWSVPCConfiguration) DeepCopyInto(out *CustomAWSVPCConfiguration) {
	*out = *in
	if in.AssignPublicIP != nil {
		in, out := &in.AssignPublicIP, &out.AssignPublicIP
		*out = new(string)
		**out = **in
	}
	if in.SecurityGroups != nil {
		in, out := &in.SecurityGroups, &out.SecurityGroups
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.SecurityGroupRefs != nil {
		in, out := &in.SecurityGroupRefs, &out.SecurityGroupRefs
		*out = make([]v1.Reference, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.SecurityGroupSelector != nil {
		in, out := &in.SecurityGroupSelector, &out.SecurityGroupSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.Subnets != nil {
		in, out := &in.Subnets, &out.Subnets
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.SubnetRefs != nil {
		in, out := &in.SubnetRefs, &out.SubnetRefs
		*out = make([]v1.Reference, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.SubnetSelector != nil {
		in, out := &in.SubnetSelector, &out.SubnetSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CustomAWSVPCConfiguration.
func (in *CustomAWSVPCConfiguration) DeepCopy() *CustomAWSVPCConfiguration {
	if in == nil {
		return nil
	}
	out := new(CustomAWSVPCConfiguration)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CustomClusterParameters) DeepCopyInto(out *CustomClusterParameters) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CustomClusterParameters.
func (in *CustomClusterParameters) DeepCopy() *CustomClusterParameters {
	if in == nil {
		return nil
	}
	out := new(CustomClusterParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CustomEFSAuthorizationConfig) DeepCopyInto(out *CustomEFSAuthorizationConfig) {
	*out = *in
	if in.AccessPointID != nil {
		in, out := &in.AccessPointID, &out.AccessPointID
		*out = new(string)
		**out = **in
	}
	if in.AccessPointIDRef != nil {
		in, out := &in.AccessPointIDRef, &out.AccessPointIDRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.AccessPointIDSelector != nil {
		in, out := &in.AccessPointIDSelector, &out.AccessPointIDSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.IAM != nil {
		in, out := &in.IAM, &out.IAM
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CustomEFSAuthorizationConfig.
func (in *CustomEFSAuthorizationConfig) DeepCopy() *CustomEFSAuthorizationConfig {
	if in == nil {
		return nil
	}
	out := new(CustomEFSAuthorizationConfig)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CustomEFSVolumeConfiguration) DeepCopyInto(out *CustomEFSVolumeConfiguration) {
	*out = *in
	if in.AuthorizationConfig != nil {
		in, out := &in.AuthorizationConfig, &out.AuthorizationConfig
		*out = new(CustomEFSAuthorizationConfig)
		(*in).DeepCopyInto(*out)
	}
	if in.FileSystemID != nil {
		in, out := &in.FileSystemID, &out.FileSystemID
		*out = new(string)
		**out = **in
	}
	if in.FileSystemIDRef != nil {
		in, out := &in.FileSystemIDRef, &out.FileSystemIDRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.FileSystemIDSelector != nil {
		in, out := &in.FileSystemIDSelector, &out.FileSystemIDSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.RootDirectory != nil {
		in, out := &in.RootDirectory, &out.RootDirectory
		*out = new(string)
		**out = **in
	}
	if in.TransitEncryption != nil {
		in, out := &in.TransitEncryption, &out.TransitEncryption
		*out = new(string)
		**out = **in
	}
	if in.TransitEncryptionPort != nil {
		in, out := &in.TransitEncryptionPort, &out.TransitEncryptionPort
		*out = new(int64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CustomEFSVolumeConfiguration.
func (in *CustomEFSVolumeConfiguration) DeepCopy() *CustomEFSVolumeConfiguration {
	if in == nil {
		return nil
	}
	out := new(CustomEFSVolumeConfiguration)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CustomLoadBalancer) DeepCopyInto(out *CustomLoadBalancer) {
	*out = *in
	if in.ContainerName != nil {
		in, out := &in.ContainerName, &out.ContainerName
		*out = new(string)
		**out = **in
	}
	if in.ContainerPort != nil {
		in, out := &in.ContainerPort, &out.ContainerPort
		*out = new(int64)
		**out = **in
	}
	if in.LoadBalancerName != nil {
		in, out := &in.LoadBalancerName, &out.LoadBalancerName
		*out = new(string)
		**out = **in
	}
	if in.LoadBalancerNameRef != nil {
		in, out := &in.LoadBalancerNameRef, &out.LoadBalancerNameRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.LoadBalancerNameSelector != nil {
		in, out := &in.LoadBalancerNameSelector, &out.LoadBalancerNameSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.TargetGroupARN != nil {
		in, out := &in.TargetGroupARN, &out.TargetGroupARN
		*out = new(string)
		**out = **in
	}
	if in.TargetGroupARNRef != nil {
		in, out := &in.TargetGroupARNRef, &out.TargetGroupARNRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.TargetGroupARNSelector != nil {
		in, out := &in.TargetGroupARNSelector, &out.TargetGroupARNSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CustomLoadBalancer.
func (in *CustomLoadBalancer) DeepCopy() *CustomLoadBalancer {
	if in == nil {
		return nil
	}
	out := new(CustomLoadBalancer)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CustomNetworkConfiguration) DeepCopyInto(out *CustomNetworkConfiguration) {
	*out = *in
	if in.AWSvpcConfiguration != nil {
		in, out := &in.AWSvpcConfiguration, &out.AWSvpcConfiguration
		*out = new(CustomAWSVPCConfiguration)
		(*in).DeepCopyInto(*out)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CustomNetworkConfiguration.
func (in *CustomNetworkConfiguration) DeepCopy() *CustomNetworkConfiguration {
	if in == nil {
		return nil
	}
	out := new(CustomNetworkConfiguration)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CustomServiceParameters) DeepCopyInto(out *CustomServiceParameters) {
	*out = *in
	if in.Cluster != nil {
		in, out := &in.Cluster, &out.Cluster
		*out = new(string)
		**out = **in
	}
	if in.ClusterRef != nil {
		in, out := &in.ClusterRef, &out.ClusterRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.ClusterSelector != nil {
		in, out := &in.ClusterSelector, &out.ClusterSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.LoadBalancers != nil {
		in, out := &in.LoadBalancers, &out.LoadBalancers
		*out = make([]*CustomLoadBalancer, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(CustomLoadBalancer)
				(*in).DeepCopyInto(*out)
			}
		}
	}
	if in.NetworkConfiguration != nil {
		in, out := &in.NetworkConfiguration, &out.NetworkConfiguration
		*out = new(CustomNetworkConfiguration)
		(*in).DeepCopyInto(*out)
	}
	if in.TaskDefinition != nil {
		in, out := &in.TaskDefinition, &out.TaskDefinition
		*out = new(string)
		**out = **in
	}
	if in.TaskDefinitionRef != nil {
		in, out := &in.TaskDefinitionRef, &out.TaskDefinitionRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.TaskDefinitionSelector != nil {
		in, out := &in.TaskDefinitionSelector, &out.TaskDefinitionSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CustomServiceParameters.
func (in *CustomServiceParameters) DeepCopy() *CustomServiceParameters {
	if in == nil {
		return nil
	}
	out := new(CustomServiceParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CustomTaskDefinitionParameters) DeepCopyInto(out *CustomTaskDefinitionParameters) {
	*out = *in
	if in.ExecutionRoleARN != nil {
		in, out := &in.ExecutionRoleARN, &out.ExecutionRoleARN
		*out = new(string)
		**out = **in
	}
	if in.ExecutionRoleARNRef != nil {
		in, out := &in.ExecutionRoleARNRef, &out.ExecutionRoleARNRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.ExecutionRoleARNSelector != nil {
		in, out := &in.ExecutionRoleARNSelector, &out.ExecutionRoleARNSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.TaskRoleARN != nil {
		in, out := &in.TaskRoleARN, &out.TaskRoleARN
		*out = new(string)
		**out = **in
	}
	if in.TaskRoleARNRef != nil {
		in, out := &in.TaskRoleARNRef, &out.TaskRoleARNRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.TaskRoleARNSelector != nil {
		in, out := &in.TaskRoleARNSelector, &out.TaskRoleARNSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.Volumes != nil {
		in, out := &in.Volumes, &out.Volumes
		*out = make([]*CustomVolume, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(CustomVolume)
				(*in).DeepCopyInto(*out)
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CustomTaskDefinitionParameters.
func (in *CustomTaskDefinitionParameters) DeepCopy() *CustomTaskDefinitionParameters {
	if in == nil {
		return nil
	}
	out := new(CustomTaskDefinitionParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CustomVolume) DeepCopyInto(out *CustomVolume) {
	*out = *in
	if in.DockerVolumeConfiguration != nil {
		in, out := &in.DockerVolumeConfiguration, &out.DockerVolumeConfiguration
		*out = new(DockerVolumeConfiguration)
		(*in).DeepCopyInto(*out)
	}
	if in.EFSVolumeConfiguration != nil {
		in, out := &in.EFSVolumeConfiguration, &out.EFSVolumeConfiguration
		*out = new(CustomEFSVolumeConfiguration)
		(*in).DeepCopyInto(*out)
	}
	if in.FsxWindowsFileServerVolumeConfiguration != nil {
		in, out := &in.FsxWindowsFileServerVolumeConfiguration, &out.FsxWindowsFileServerVolumeConfiguration
		*out = new(FSxWindowsFileServerVolumeConfiguration)
		(*in).DeepCopyInto(*out)
	}
	if in.Host != nil {
		in, out := &in.Host, &out.Host
		*out = new(HostVolumeProperties)
		(*in).DeepCopyInto(*out)
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CustomVolume.
func (in *CustomVolume) DeepCopy() *CustomVolume {
	if in == nil {
		return nil
	}
	out := new(CustomVolume)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Deployment) DeepCopyInto(out *Deployment) {
	*out = *in
	if in.CapacityProviderStrategy != nil {
		in, out := &in.CapacityProviderStrategy, &out.CapacityProviderStrategy
		*out = make([]*CapacityProviderStrategyItem, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(CapacityProviderStrategyItem)
				(*in).DeepCopyInto(*out)
			}
		}
	}
	if in.CreatedAt != nil {
		in, out := &in.CreatedAt, &out.CreatedAt
		*out = (*in).DeepCopy()
	}
	if in.DesiredCount != nil {
		in, out := &in.DesiredCount, &out.DesiredCount
		*out = new(int64)
		**out = **in
	}
	if in.FailedTasks != nil {
		in, out := &in.FailedTasks, &out.FailedTasks
		*out = new(int64)
		**out = **in
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.LaunchType != nil {
		in, out := &in.LaunchType, &out.LaunchType
		*out = new(string)
		**out = **in
	}
	if in.NetworkConfiguration != nil {
		in, out := &in.NetworkConfiguration, &out.NetworkConfiguration
		*out = new(NetworkConfiguration)
		(*in).DeepCopyInto(*out)
	}
	if in.PendingCount != nil {
		in, out := &in.PendingCount, &out.PendingCount
		*out = new(int64)
		**out = **in
	}
	if in.PlatformFamily != nil {
		in, out := &in.PlatformFamily, &out.PlatformFamily
		*out = new(string)
		**out = **in
	}
	if in.PlatformVersion != nil {
		in, out := &in.PlatformVersion, &out.PlatformVersion
		*out = new(string)
		**out = **in
	}
	if in.RolloutState != nil {
		in, out := &in.RolloutState, &out.RolloutState
		*out = new(string)
		**out = **in
	}
	if in.RolloutStateReason != nil {
		in, out := &in.RolloutStateReason, &out.RolloutStateReason
		*out = new(string)
		**out = **in
	}
	if in.RunningCount != nil {
		in, out := &in.RunningCount, &out.RunningCount
		*out = new(int64)
		**out = **in
	}
	if in.Status != nil {
		in, out := &in.Status, &out.Status
		*out = new(string)
		**out = **in
	}
	if in.TaskDefinition != nil {
		in, out := &in.TaskDefinition, &out.TaskDefinition
		*out = new(string)
		**out = **in
	}
	if in.UpdatedAt != nil {
		in, out := &in.UpdatedAt, &out.UpdatedAt
		*out = (*in).DeepCopy()
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Deployment.
func (in *Deployment) DeepCopy() *Deployment {
	if in == nil {
		return nil
	}
	out := new(Deployment)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DeploymentCircuitBreaker) DeepCopyInto(out *DeploymentCircuitBreaker) {
	*out = *in
	if in.Enable != nil {
		in, out := &in.Enable, &out.Enable
		*out = new(bool)
		**out = **in
	}
	if in.Rollback != nil {
		in, out := &in.Rollback, &out.Rollback
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DeploymentCircuitBreaker.
func (in *DeploymentCircuitBreaker) DeepCopy() *DeploymentCircuitBreaker {
	if in == nil {
		return nil
	}
	out := new(DeploymentCircuitBreaker)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DeploymentConfiguration) DeepCopyInto(out *DeploymentConfiguration) {
	*out = *in
	if in.DeploymentCircuitBreaker != nil {
		in, out := &in.DeploymentCircuitBreaker, &out.DeploymentCircuitBreaker
		*out = new(DeploymentCircuitBreaker)
		(*in).DeepCopyInto(*out)
	}
	if in.MaximumPercent != nil {
		in, out := &in.MaximumPercent, &out.MaximumPercent
		*out = new(int64)
		**out = **in
	}
	if in.MinimumHealthyPercent != nil {
		in, out := &in.MinimumHealthyPercent, &out.MinimumHealthyPercent
		*out = new(int64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DeploymentConfiguration.
func (in *DeploymentConfiguration) DeepCopy() *DeploymentConfiguration {
	if in == nil {
		return nil
	}
	out := new(DeploymentConfiguration)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DeploymentController) DeepCopyInto(out *DeploymentController) {
	*out = *in
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DeploymentController.
func (in *DeploymentController) DeepCopy() *DeploymentController {
	if in == nil {
		return nil
	}
	out := new(DeploymentController)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Device) DeepCopyInto(out *Device) {
	*out = *in
	if in.ContainerPath != nil {
		in, out := &in.ContainerPath, &out.ContainerPath
		*out = new(string)
		**out = **in
	}
	if in.HostPath != nil {
		in, out := &in.HostPath, &out.HostPath
		*out = new(string)
		**out = **in
	}
	if in.Permissions != nil {
		in, out := &in.Permissions, &out.Permissions
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Device.
func (in *Device) DeepCopy() *Device {
	if in == nil {
		return nil
	}
	out := new(Device)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DockerVolumeConfiguration) DeepCopyInto(out *DockerVolumeConfiguration) {
	*out = *in
	if in.Autoprovision != nil {
		in, out := &in.Autoprovision, &out.Autoprovision
		*out = new(bool)
		**out = **in
	}
	if in.Driver != nil {
		in, out := &in.Driver, &out.Driver
		*out = new(string)
		**out = **in
	}
	if in.DriverOpts != nil {
		in, out := &in.DriverOpts, &out.DriverOpts
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				in, out := &val, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.Labels != nil {
		in, out := &in.Labels, &out.Labels
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				in, out := &val, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.Scope != nil {
		in, out := &in.Scope, &out.Scope
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DockerVolumeConfiguration.
func (in *DockerVolumeConfiguration) DeepCopy() *DockerVolumeConfiguration {
	if in == nil {
		return nil
	}
	out := new(DockerVolumeConfiguration)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *EFSAuthorizationConfig) DeepCopyInto(out *EFSAuthorizationConfig) {
	*out = *in
	if in.AccessPointID != nil {
		in, out := &in.AccessPointID, &out.AccessPointID
		*out = new(string)
		**out = **in
	}
	if in.IAM != nil {
		in, out := &in.IAM, &out.IAM
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new EFSAuthorizationConfig.
func (in *EFSAuthorizationConfig) DeepCopy() *EFSAuthorizationConfig {
	if in == nil {
		return nil
	}
	out := new(EFSAuthorizationConfig)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *EFSVolumeConfiguration) DeepCopyInto(out *EFSVolumeConfiguration) {
	*out = *in
	if in.AuthorizationConfig != nil {
		in, out := &in.AuthorizationConfig, &out.AuthorizationConfig
		*out = new(EFSAuthorizationConfig)
		(*in).DeepCopyInto(*out)
	}
	if in.FileSystemID != nil {
		in, out := &in.FileSystemID, &out.FileSystemID
		*out = new(string)
		**out = **in
	}
	if in.RootDirectory != nil {
		in, out := &in.RootDirectory, &out.RootDirectory
		*out = new(string)
		**out = **in
	}
	if in.TransitEncryption != nil {
		in, out := &in.TransitEncryption, &out.TransitEncryption
		*out = new(string)
		**out = **in
	}
	if in.TransitEncryptionPort != nil {
		in, out := &in.TransitEncryptionPort, &out.TransitEncryptionPort
		*out = new(int64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new EFSVolumeConfiguration.
func (in *EFSVolumeConfiguration) DeepCopy() *EFSVolumeConfiguration {
	if in == nil {
		return nil
	}
	out := new(EFSVolumeConfiguration)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *EnvironmentFile) DeepCopyInto(out *EnvironmentFile) {
	*out = *in
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
	if in.Value != nil {
		in, out := &in.Value, &out.Value
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new EnvironmentFile.
func (in *EnvironmentFile) DeepCopy() *EnvironmentFile {
	if in == nil {
		return nil
	}
	out := new(EnvironmentFile)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *EphemeralStorage) DeepCopyInto(out *EphemeralStorage) {
	*out = *in
	if in.SizeInGiB != nil {
		in, out := &in.SizeInGiB, &out.SizeInGiB
		*out = new(int64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new EphemeralStorage.
func (in *EphemeralStorage) DeepCopy() *EphemeralStorage {
	if in == nil {
		return nil
	}
	out := new(EphemeralStorage)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ExecuteCommandConfiguration) DeepCopyInto(out *ExecuteCommandConfiguration) {
	*out = *in
	if in.KMSKeyID != nil {
		in, out := &in.KMSKeyID, &out.KMSKeyID
		*out = new(string)
		**out = **in
	}
	if in.LogConfiguration != nil {
		in, out := &in.LogConfiguration, &out.LogConfiguration
		*out = new(ExecuteCommandLogConfiguration)
		(*in).DeepCopyInto(*out)
	}
	if in.Logging != nil {
		in, out := &in.Logging, &out.Logging
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ExecuteCommandConfiguration.
func (in *ExecuteCommandConfiguration) DeepCopy() *ExecuteCommandConfiguration {
	if in == nil {
		return nil
	}
	out := new(ExecuteCommandConfiguration)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ExecuteCommandLogConfiguration) DeepCopyInto(out *ExecuteCommandLogConfiguration) {
	*out = *in
	if in.CloudWatchEncryptionEnabled != nil {
		in, out := &in.CloudWatchEncryptionEnabled, &out.CloudWatchEncryptionEnabled
		*out = new(bool)
		**out = **in
	}
	if in.CloudWatchLogGroupName != nil {
		in, out := &in.CloudWatchLogGroupName, &out.CloudWatchLogGroupName
		*out = new(string)
		**out = **in
	}
	if in.S3BucketName != nil {
		in, out := &in.S3BucketName, &out.S3BucketName
		*out = new(string)
		**out = **in
	}
	if in.S3EncryptionEnabled != nil {
		in, out := &in.S3EncryptionEnabled, &out.S3EncryptionEnabled
		*out = new(bool)
		**out = **in
	}
	if in.S3KeyPrefix != nil {
		in, out := &in.S3KeyPrefix, &out.S3KeyPrefix
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ExecuteCommandLogConfiguration.
func (in *ExecuteCommandLogConfiguration) DeepCopy() *ExecuteCommandLogConfiguration {
	if in == nil {
		return nil
	}
	out := new(ExecuteCommandLogConfiguration)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *FSxWindowsFileServerAuthorizationConfig) DeepCopyInto(out *FSxWindowsFileServerAuthorizationConfig) {
	*out = *in
	if in.CredentialsParameter != nil {
		in, out := &in.CredentialsParameter, &out.CredentialsParameter
		*out = new(string)
		**out = **in
	}
	if in.Domain != nil {
		in, out := &in.Domain, &out.Domain
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new FSxWindowsFileServerAuthorizationConfig.
func (in *FSxWindowsFileServerAuthorizationConfig) DeepCopy() *FSxWindowsFileServerAuthorizationConfig {
	if in == nil {
		return nil
	}
	out := new(FSxWindowsFileServerAuthorizationConfig)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *FSxWindowsFileServerVolumeConfiguration) DeepCopyInto(out *FSxWindowsFileServerVolumeConfiguration) {
	*out = *in
	if in.AuthorizationConfig != nil {
		in, out := &in.AuthorizationConfig, &out.AuthorizationConfig
		*out = new(FSxWindowsFileServerAuthorizationConfig)
		(*in).DeepCopyInto(*out)
	}
	if in.FileSystemID != nil {
		in, out := &in.FileSystemID, &out.FileSystemID
		*out = new(string)
		**out = **in
	}
	if in.RootDirectory != nil {
		in, out := &in.RootDirectory, &out.RootDirectory
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new FSxWindowsFileServerVolumeConfiguration.
func (in *FSxWindowsFileServerVolumeConfiguration) DeepCopy() *FSxWindowsFileServerVolumeConfiguration {
	if in == nil {
		return nil
	}
	out := new(FSxWindowsFileServerVolumeConfiguration)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Failure) DeepCopyInto(out *Failure) {
	*out = *in
	if in.ARN != nil {
		in, out := &in.ARN, &out.ARN
		*out = new(string)
		**out = **in
	}
	if in.Detail != nil {
		in, out := &in.Detail, &out.Detail
		*out = new(string)
		**out = **in
	}
	if in.Reason != nil {
		in, out := &in.Reason, &out.Reason
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Failure.
func (in *Failure) DeepCopy() *Failure {
	if in == nil {
		return nil
	}
	out := new(Failure)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *FirelensConfiguration) DeepCopyInto(out *FirelensConfiguration) {
	*out = *in
	if in.Options != nil {
		in, out := &in.Options, &out.Options
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				in, out := &val, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new FirelensConfiguration.
func (in *FirelensConfiguration) DeepCopy() *FirelensConfiguration {
	if in == nil {
		return nil
	}
	out := new(FirelensConfiguration)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *HealthCheck) DeepCopyInto(out *HealthCheck) {
	*out = *in
	if in.Command != nil {
		in, out := &in.Command, &out.Command
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Interval != nil {
		in, out := &in.Interval, &out.Interval
		*out = new(int64)
		**out = **in
	}
	if in.Retries != nil {
		in, out := &in.Retries, &out.Retries
		*out = new(int64)
		**out = **in
	}
	if in.StartPeriod != nil {
		in, out := &in.StartPeriod, &out.StartPeriod
		*out = new(int64)
		**out = **in
	}
	if in.Timeout != nil {
		in, out := &in.Timeout, &out.Timeout
		*out = new(int64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new HealthCheck.
func (in *HealthCheck) DeepCopy() *HealthCheck {
	if in == nil {
		return nil
	}
	out := new(HealthCheck)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *HostEntry) DeepCopyInto(out *HostEntry) {
	*out = *in
	if in.Hostname != nil {
		in, out := &in.Hostname, &out.Hostname
		*out = new(string)
		**out = **in
	}
	if in.IPAddress != nil {
		in, out := &in.IPAddress, &out.IPAddress
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new HostEntry.
func (in *HostEntry) DeepCopy() *HostEntry {
	if in == nil {
		return nil
	}
	out := new(HostEntry)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *HostVolumeProperties) DeepCopyInto(out *HostVolumeProperties) {
	*out = *in
	if in.SourcePath != nil {
		in, out := &in.SourcePath, &out.SourcePath
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new HostVolumeProperties.
func (in *HostVolumeProperties) DeepCopy() *HostVolumeProperties {
	if in == nil {
		return nil
	}
	out := new(HostVolumeProperties)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *InferenceAccelerator) DeepCopyInto(out *InferenceAccelerator) {
	*out = *in
	if in.DeviceName != nil {
		in, out := &in.DeviceName, &out.DeviceName
		*out = new(string)
		**out = **in
	}
	if in.DeviceType != nil {
		in, out := &in.DeviceType, &out.DeviceType
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new InferenceAccelerator.
func (in *InferenceAccelerator) DeepCopy() *InferenceAccelerator {
	if in == nil {
		return nil
	}
	out := new(InferenceAccelerator)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *InferenceAcceleratorOverride) DeepCopyInto(out *InferenceAcceleratorOverride) {
	*out = *in
	if in.DeviceName != nil {
		in, out := &in.DeviceName, &out.DeviceName
		*out = new(string)
		**out = **in
	}
	if in.DeviceType != nil {
		in, out := &in.DeviceType, &out.DeviceType
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new InferenceAcceleratorOverride.
func (in *InferenceAcceleratorOverride) DeepCopy() *InferenceAcceleratorOverride {
	if in == nil {
		return nil
	}
	out := new(InferenceAcceleratorOverride)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *KernelCapabilities) DeepCopyInto(out *KernelCapabilities) {
	*out = *in
	if in.Add != nil {
		in, out := &in.Add, &out.Add
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Drop != nil {
		in, out := &in.Drop, &out.Drop
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new KernelCapabilities.
func (in *KernelCapabilities) DeepCopy() *KernelCapabilities {
	if in == nil {
		return nil
	}
	out := new(KernelCapabilities)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *KeyValuePair) DeepCopyInto(out *KeyValuePair) {
	*out = *in
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Value != nil {
		in, out := &in.Value, &out.Value
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new KeyValuePair.
func (in *KeyValuePair) DeepCopy() *KeyValuePair {
	if in == nil {
		return nil
	}
	out := new(KeyValuePair)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LinuxParameters) DeepCopyInto(out *LinuxParameters) {
	*out = *in
	if in.Capabilities != nil {
		in, out := &in.Capabilities, &out.Capabilities
		*out = new(KernelCapabilities)
		(*in).DeepCopyInto(*out)
	}
	if in.Devices != nil {
		in, out := &in.Devices, &out.Devices
		*out = make([]*Device, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(Device)
				(*in).DeepCopyInto(*out)
			}
		}
	}
	if in.InitProcessEnabled != nil {
		in, out := &in.InitProcessEnabled, &out.InitProcessEnabled
		*out = new(bool)
		**out = **in
	}
	if in.MaxSwap != nil {
		in, out := &in.MaxSwap, &out.MaxSwap
		*out = new(int64)
		**out = **in
	}
	if in.SharedMemorySize != nil {
		in, out := &in.SharedMemorySize, &out.SharedMemorySize
		*out = new(int64)
		**out = **in
	}
	if in.Swappiness != nil {
		in, out := &in.Swappiness, &out.Swappiness
		*out = new(int64)
		**out = **in
	}
	if in.Tmpfs != nil {
		in, out := &in.Tmpfs, &out.Tmpfs
		*out = make([]*Tmpfs, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(Tmpfs)
				(*in).DeepCopyInto(*out)
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LinuxParameters.
func (in *LinuxParameters) DeepCopy() *LinuxParameters {
	if in == nil {
		return nil
	}
	out := new(LinuxParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LoadBalancer) DeepCopyInto(out *LoadBalancer) {
	*out = *in
	if in.ContainerName != nil {
		in, out := &in.ContainerName, &out.ContainerName
		*out = new(string)
		**out = **in
	}
	if in.ContainerPort != nil {
		in, out := &in.ContainerPort, &out.ContainerPort
		*out = new(int64)
		**out = **in
	}
	if in.LoadBalancerName != nil {
		in, out := &in.LoadBalancerName, &out.LoadBalancerName
		*out = new(string)
		**out = **in
	}
	if in.TargetGroupARN != nil {
		in, out := &in.TargetGroupARN, &out.TargetGroupARN
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LoadBalancer.
func (in *LoadBalancer) DeepCopy() *LoadBalancer {
	if in == nil {
		return nil
	}
	out := new(LoadBalancer)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LogConfiguration) DeepCopyInto(out *LogConfiguration) {
	*out = *in
	if in.LogDriver != nil {
		in, out := &in.LogDriver, &out.LogDriver
		*out = new(string)
		**out = **in
	}
	if in.Options != nil {
		in, out := &in.Options, &out.Options
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				in, out := &val, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.SecretOptions != nil {
		in, out := &in.SecretOptions, &out.SecretOptions
		*out = make([]*Secret, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(Secret)
				(*in).DeepCopyInto(*out)
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LogConfiguration.
func (in *LogConfiguration) DeepCopy() *LogConfiguration {
	if in == nil {
		return nil
	}
	out := new(LogConfiguration)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ManagedAgent) DeepCopyInto(out *ManagedAgent) {
	*out = *in
	if in.LastStartedAt != nil {
		in, out := &in.LastStartedAt, &out.LastStartedAt
		*out = (*in).DeepCopy()
	}
	if in.LastStatus != nil {
		in, out := &in.LastStatus, &out.LastStatus
		*out = new(string)
		**out = **in
	}
	if in.Reason != nil {
		in, out := &in.Reason, &out.Reason
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ManagedAgent.
func (in *ManagedAgent) DeepCopy() *ManagedAgent {
	if in == nil {
		return nil
	}
	out := new(ManagedAgent)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ManagedAgentStateChange) DeepCopyInto(out *ManagedAgentStateChange) {
	*out = *in
	if in.ContainerName != nil {
		in, out := &in.ContainerName, &out.ContainerName
		*out = new(string)
		**out = **in
	}
	if in.Reason != nil {
		in, out := &in.Reason, &out.Reason
		*out = new(string)
		**out = **in
	}
	if in.Status != nil {
		in, out := &in.Status, &out.Status
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ManagedAgentStateChange.
func (in *ManagedAgentStateChange) DeepCopy() *ManagedAgentStateChange {
	if in == nil {
		return nil
	}
	out := new(ManagedAgentStateChange)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MountPoint) DeepCopyInto(out *MountPoint) {
	*out = *in
	if in.ContainerPath != nil {
		in, out := &in.ContainerPath, &out.ContainerPath
		*out = new(string)
		**out = **in
	}
	if in.ReadOnly != nil {
		in, out := &in.ReadOnly, &out.ReadOnly
		*out = new(bool)
		**out = **in
	}
	if in.SourceVolume != nil {
		in, out := &in.SourceVolume, &out.SourceVolume
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MountPoint.
func (in *MountPoint) DeepCopy() *MountPoint {
	if in == nil {
		return nil
	}
	out := new(MountPoint)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NetworkBinding) DeepCopyInto(out *NetworkBinding) {
	*out = *in
	if in.BindIP != nil {
		in, out := &in.BindIP, &out.BindIP
		*out = new(string)
		**out = **in
	}
	if in.ContainerPort != nil {
		in, out := &in.ContainerPort, &out.ContainerPort
		*out = new(int64)
		**out = **in
	}
	if in.HostPort != nil {
		in, out := &in.HostPort, &out.HostPort
		*out = new(int64)
		**out = **in
	}
	if in.Protocol != nil {
		in, out := &in.Protocol, &out.Protocol
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NetworkBinding.
func (in *NetworkBinding) DeepCopy() *NetworkBinding {
	if in == nil {
		return nil
	}
	out := new(NetworkBinding)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NetworkConfiguration) DeepCopyInto(out *NetworkConfiguration) {
	*out = *in
	if in.AWSvpcConfiguration != nil {
		in, out := &in.AWSvpcConfiguration, &out.AWSvpcConfiguration
		*out = new(AWSVPCConfiguration)
		(*in).DeepCopyInto(*out)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NetworkConfiguration.
func (in *NetworkConfiguration) DeepCopy() *NetworkConfiguration {
	if in == nil {
		return nil
	}
	out := new(NetworkConfiguration)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NetworkInterface) DeepCopyInto(out *NetworkInterface) {
	*out = *in
	if in.AttachmentID != nil {
		in, out := &in.AttachmentID, &out.AttachmentID
		*out = new(string)
		**out = **in
	}
	if in.IPv6Address != nil {
		in, out := &in.IPv6Address, &out.IPv6Address
		*out = new(string)
		**out = **in
	}
	if in.PrivateIPv4Address != nil {
		in, out := &in.PrivateIPv4Address, &out.PrivateIPv4Address
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NetworkInterface.
func (in *NetworkInterface) DeepCopy() *NetworkInterface {
	if in == nil {
		return nil
	}
	out := new(NetworkInterface)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PlacementConstraint) DeepCopyInto(out *PlacementConstraint) {
	*out = *in
	if in.Expression != nil {
		in, out := &in.Expression, &out.Expression
		*out = new(string)
		**out = **in
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PlacementConstraint.
func (in *PlacementConstraint) DeepCopy() *PlacementConstraint {
	if in == nil {
		return nil
	}
	out := new(PlacementConstraint)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PlacementStrategy) DeepCopyInto(out *PlacementStrategy) {
	*out = *in
	if in.Field != nil {
		in, out := &in.Field, &out.Field
		*out = new(string)
		**out = **in
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PlacementStrategy.
func (in *PlacementStrategy) DeepCopy() *PlacementStrategy {
	if in == nil {
		return nil
	}
	out := new(PlacementStrategy)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PlatformDevice) DeepCopyInto(out *PlatformDevice) {
	*out = *in
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PlatformDevice.
func (in *PlatformDevice) DeepCopy() *PlatformDevice {
	if in == nil {
		return nil
	}
	out := new(PlatformDevice)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PortMapping) DeepCopyInto(out *PortMapping) {
	*out = *in
	if in.ContainerPort != nil {
		in, out := &in.ContainerPort, &out.ContainerPort
		*out = new(int64)
		**out = **in
	}
	if in.HostPort != nil {
		in, out := &in.HostPort, &out.HostPort
		*out = new(int64)
		**out = **in
	}
	if in.Protocol != nil {
		in, out := &in.Protocol, &out.Protocol
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PortMapping.
func (in *PortMapping) DeepCopy() *PortMapping {
	if in == nil {
		return nil
	}
	out := new(PortMapping)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ProxyConfiguration) DeepCopyInto(out *ProxyConfiguration) {
	*out = *in
	if in.ContainerName != nil {
		in, out := &in.ContainerName, &out.ContainerName
		*out = new(string)
		**out = **in
	}
	if in.Properties != nil {
		in, out := &in.Properties, &out.Properties
		*out = make([]*KeyValuePair, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(KeyValuePair)
				(*in).DeepCopyInto(*out)
			}
		}
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ProxyConfiguration.
func (in *ProxyConfiguration) DeepCopy() *ProxyConfiguration {
	if in == nil {
		return nil
	}
	out := new(ProxyConfiguration)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RepositoryCredentials) DeepCopyInto(out *RepositoryCredentials) {
	*out = *in
	if in.CredentialsParameter != nil {
		in, out := &in.CredentialsParameter, &out.CredentialsParameter
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RepositoryCredentials.
func (in *RepositoryCredentials) DeepCopy() *RepositoryCredentials {
	if in == nil {
		return nil
	}
	out := new(RepositoryCredentials)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Resource) DeepCopyInto(out *Resource) {
	*out = *in
	if in.DoubleValue != nil {
		in, out := &in.DoubleValue, &out.DoubleValue
		*out = new(float64)
		**out = **in
	}
	if in.IntegerValue != nil {
		in, out := &in.IntegerValue, &out.IntegerValue
		*out = new(int64)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.StringSetValue != nil {
		in, out := &in.StringSetValue, &out.StringSetValue
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Resource.
func (in *Resource) DeepCopy() *Resource {
	if in == nil {
		return nil
	}
	out := new(Resource)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ResourceRequirement) DeepCopyInto(out *ResourceRequirement) {
	*out = *in
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
	if in.Value != nil {
		in, out := &in.Value, &out.Value
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ResourceRequirement.
func (in *ResourceRequirement) DeepCopy() *ResourceRequirement {
	if in == nil {
		return nil
	}
	out := new(ResourceRequirement)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RuntimePlatform) DeepCopyInto(out *RuntimePlatform) {
	*out = *in
	if in.CPUArchitecture != nil {
		in, out := &in.CPUArchitecture, &out.CPUArchitecture
		*out = new(string)
		**out = **in
	}
	if in.OperatingSystemFamily != nil {
		in, out := &in.OperatingSystemFamily, &out.OperatingSystemFamily
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RuntimePlatform.
func (in *RuntimePlatform) DeepCopy() *RuntimePlatform {
	if in == nil {
		return nil
	}
	out := new(RuntimePlatform)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Scale) DeepCopyInto(out *Scale) {
	*out = *in
	if in.Unit != nil {
		in, out := &in.Unit, &out.Unit
		*out = new(string)
		**out = **in
	}
	if in.Value != nil {
		in, out := &in.Value, &out.Value
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Scale.
func (in *Scale) DeepCopy() *Scale {
	if in == nil {
		return nil
	}
	out := new(Scale)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Secret) DeepCopyInto(out *Secret) {
	*out = *in
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.ValueFrom != nil {
		in, out := &in.ValueFrom, &out.ValueFrom
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Secret.
func (in *Secret) DeepCopy() *Secret {
	if in == nil {
		return nil
	}
	out := new(Secret)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Service) DeepCopyInto(out *Service) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Service.
func (in *Service) DeepCopy() *Service {
	if in == nil {
		return nil
	}
	out := new(Service)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *Service) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ServiceEvent) DeepCopyInto(out *ServiceEvent) {
	*out = *in
	if in.CreatedAt != nil {
		in, out := &in.CreatedAt, &out.CreatedAt
		*out = (*in).DeepCopy()
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.Message != nil {
		in, out := &in.Message, &out.Message
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ServiceEvent.
func (in *ServiceEvent) DeepCopy() *ServiceEvent {
	if in == nil {
		return nil
	}
	out := new(ServiceEvent)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ServiceList) DeepCopyInto(out *ServiceList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]Service, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ServiceList.
func (in *ServiceList) DeepCopy() *ServiceList {
	if in == nil {
		return nil
	}
	out := new(ServiceList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *ServiceList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ServiceObservation) DeepCopyInto(out *ServiceObservation) {
	*out = *in
	if in.ClusterARN != nil {
		in, out := &in.ClusterARN, &out.ClusterARN
		*out = new(string)
		**out = **in
	}
	if in.CreatedAt != nil {
		in, out := &in.CreatedAt, &out.CreatedAt
		*out = (*in).DeepCopy()
	}
	if in.CreatedBy != nil {
		in, out := &in.CreatedBy, &out.CreatedBy
		*out = new(string)
		**out = **in
	}
	if in.Deployments != nil {
		in, out := &in.Deployments, &out.Deployments
		*out = make([]*Deployment, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(Deployment)
				(*in).DeepCopyInto(*out)
			}
		}
	}
	if in.Events != nil {
		in, out := &in.Events, &out.Events
		*out = make([]*ServiceEvent, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(ServiceEvent)
				(*in).DeepCopyInto(*out)
			}
		}
	}
	if in.LoadBalancers != nil {
		in, out := &in.LoadBalancers, &out.LoadBalancers
		*out = make([]*LoadBalancer, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(LoadBalancer)
				(*in).DeepCopyInto(*out)
			}
		}
	}
	if in.NetworkConfiguration != nil {
		in, out := &in.NetworkConfiguration, &out.NetworkConfiguration
		*out = new(NetworkConfiguration)
		(*in).DeepCopyInto(*out)
	}
	if in.PendingCount != nil {
		in, out := &in.PendingCount, &out.PendingCount
		*out = new(int64)
		**out = **in
	}
	if in.PlatformFamily != nil {
		in, out := &in.PlatformFamily, &out.PlatformFamily
		*out = new(string)
		**out = **in
	}
	if in.RoleARN != nil {
		in, out := &in.RoleARN, &out.RoleARN
		*out = new(string)
		**out = **in
	}
	if in.RunningCount != nil {
		in, out := &in.RunningCount, &out.RunningCount
		*out = new(int64)
		**out = **in
	}
	if in.ServiceARN != nil {
		in, out := &in.ServiceARN, &out.ServiceARN
		*out = new(string)
		**out = **in
	}
	if in.ServiceName != nil {
		in, out := &in.ServiceName, &out.ServiceName
		*out = new(string)
		**out = **in
	}
	if in.Status != nil {
		in, out := &in.Status, &out.Status
		*out = new(string)
		**out = **in
	}
	if in.TaskDefinition != nil {
		in, out := &in.TaskDefinition, &out.TaskDefinition
		*out = new(string)
		**out = **in
	}
	if in.TaskSets != nil {
		in, out := &in.TaskSets, &out.TaskSets
		*out = make([]*TaskSet, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(TaskSet)
				(*in).DeepCopyInto(*out)
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ServiceObservation.
func (in *ServiceObservation) DeepCopy() *ServiceObservation {
	if in == nil {
		return nil
	}
	out := new(ServiceObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ServiceParameters) DeepCopyInto(out *ServiceParameters) {
	*out = *in
	if in.CapacityProviderStrategy != nil {
		in, out := &in.CapacityProviderStrategy, &out.CapacityProviderStrategy
		*out = make([]*CapacityProviderStrategyItem, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(CapacityProviderStrategyItem)
				(*in).DeepCopyInto(*out)
			}
		}
	}
	if in.DeploymentConfiguration != nil {
		in, out := &in.DeploymentConfiguration, &out.DeploymentConfiguration
		*out = new(DeploymentConfiguration)
		(*in).DeepCopyInto(*out)
	}
	if in.DeploymentController != nil {
		in, out := &in.DeploymentController, &out.DeploymentController
		*out = new(DeploymentController)
		(*in).DeepCopyInto(*out)
	}
	if in.DesiredCount != nil {
		in, out := &in.DesiredCount, &out.DesiredCount
		*out = new(int64)
		**out = **in
	}
	if in.EnableECSManagedTags != nil {
		in, out := &in.EnableECSManagedTags, &out.EnableECSManagedTags
		*out = new(bool)
		**out = **in
	}
	if in.EnableExecuteCommand != nil {
		in, out := &in.EnableExecuteCommand, &out.EnableExecuteCommand
		*out = new(bool)
		**out = **in
	}
	if in.HealthCheckGracePeriodSeconds != nil {
		in, out := &in.HealthCheckGracePeriodSeconds, &out.HealthCheckGracePeriodSeconds
		*out = new(int64)
		**out = **in
	}
	if in.LaunchType != nil {
		in, out := &in.LaunchType, &out.LaunchType
		*out = new(string)
		**out = **in
	}
	if in.PlacementConstraints != nil {
		in, out := &in.PlacementConstraints, &out.PlacementConstraints
		*out = make([]*PlacementConstraint, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(PlacementConstraint)
				(*in).DeepCopyInto(*out)
			}
		}
	}
	if in.PlacementStrategy != nil {
		in, out := &in.PlacementStrategy, &out.PlacementStrategy
		*out = make([]*PlacementStrategy, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(PlacementStrategy)
				(*in).DeepCopyInto(*out)
			}
		}
	}
	if in.PlatformVersion != nil {
		in, out := &in.PlatformVersion, &out.PlatformVersion
		*out = new(string)
		**out = **in
	}
	if in.PropagateTags != nil {
		in, out := &in.PropagateTags, &out.PropagateTags
		*out = new(string)
		**out = **in
	}
	if in.Role != nil {
		in, out := &in.Role, &out.Role
		*out = new(string)
		**out = **in
	}
	if in.SchedulingStrategy != nil {
		in, out := &in.SchedulingStrategy, &out.SchedulingStrategy
		*out = new(string)
		**out = **in
	}
	if in.ServiceRegistries != nil {
		in, out := &in.ServiceRegistries, &out.ServiceRegistries
		*out = make([]*ServiceRegistry, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(ServiceRegistry)
				(*in).DeepCopyInto(*out)
			}
		}
	}
	if in.Tags != nil {
		in, out := &in.Tags, &out.Tags
		*out = make([]*Tag, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(Tag)
				(*in).DeepCopyInto(*out)
			}
		}
	}
	in.CustomServiceParameters.DeepCopyInto(&out.CustomServiceParameters)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ServiceParameters.
func (in *ServiceParameters) DeepCopy() *ServiceParameters {
	if in == nil {
		return nil
	}
	out := new(ServiceParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ServiceRegistry) DeepCopyInto(out *ServiceRegistry) {
	*out = *in
	if in.ContainerName != nil {
		in, out := &in.ContainerName, &out.ContainerName
		*out = new(string)
		**out = **in
	}
	if in.ContainerPort != nil {
		in, out := &in.ContainerPort, &out.ContainerPort
		*out = new(int64)
		**out = **in
	}
	if in.Port != nil {
		in, out := &in.Port, &out.Port
		*out = new(int64)
		**out = **in
	}
	if in.RegistryARN != nil {
		in, out := &in.RegistryARN, &out.RegistryARN
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ServiceRegistry.
func (in *ServiceRegistry) DeepCopy() *ServiceRegistry {
	if in == nil {
		return nil
	}
	out := new(ServiceRegistry)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ServiceSpec) DeepCopyInto(out *ServiceSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ServiceSpec.
func (in *ServiceSpec) DeepCopy() *ServiceSpec {
	if in == nil {
		return nil
	}
	out := new(ServiceSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ServiceStatus) DeepCopyInto(out *ServiceStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ServiceStatus.
func (in *ServiceStatus) DeepCopy() *ServiceStatus {
	if in == nil {
		return nil
	}
	out := new(ServiceStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Service_SDK) DeepCopyInto(out *Service_SDK) {
	*out = *in
	if in.CapacityProviderStrategy != nil {
		in, out := &in.CapacityProviderStrategy, &out.CapacityProviderStrategy
		*out = make([]*CapacityProviderStrategyItem, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(CapacityProviderStrategyItem)
				(*in).DeepCopyInto(*out)
			}
		}
	}
	if in.ClusterARN != nil {
		in, out := &in.ClusterARN, &out.ClusterARN
		*out = new(string)
		**out = **in
	}
	if in.CreatedAt != nil {
		in, out := &in.CreatedAt, &out.CreatedAt
		*out = (*in).DeepCopy()
	}
	if in.CreatedBy != nil {
		in, out := &in.CreatedBy, &out.CreatedBy
		*out = new(string)
		**out = **in
	}
	if in.DeploymentConfiguration != nil {
		in, out := &in.DeploymentConfiguration, &out.DeploymentConfiguration
		*out = new(DeploymentConfiguration)
		(*in).DeepCopyInto(*out)
	}
	if in.DeploymentController != nil {
		in, out := &in.DeploymentController, &out.DeploymentController
		*out = new(DeploymentController)
		(*in).DeepCopyInto(*out)
	}
	if in.Deployments != nil {
		in, out := &in.Deployments, &out.Deployments
		*out = make([]*Deployment, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(Deployment)
				(*in).DeepCopyInto(*out)
			}
		}
	}
	if in.DesiredCount != nil {
		in, out := &in.DesiredCount, &out.DesiredCount
		*out = new(int64)
		**out = **in
	}
	if in.EnableECSManagedTags != nil {
		in, out := &in.EnableECSManagedTags, &out.EnableECSManagedTags
		*out = new(bool)
		**out = **in
	}
	if in.EnableExecuteCommand != nil {
		in, out := &in.EnableExecuteCommand, &out.EnableExecuteCommand
		*out = new(bool)
		**out = **in
	}
	if in.Events != nil {
		in, out := &in.Events, &out.Events
		*out = make([]*ServiceEvent, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(ServiceEvent)
				(*in).DeepCopyInto(*out)
			}
		}
	}
	if in.HealthCheckGracePeriodSeconds != nil {
		in, out := &in.HealthCheckGracePeriodSeconds, &out.HealthCheckGracePeriodSeconds
		*out = new(int64)
		**out = **in
	}
	if in.LaunchType != nil {
		in, out := &in.LaunchType, &out.LaunchType
		*out = new(string)
		**out = **in
	}
	if in.LoadBalancers != nil {
		in, out := &in.LoadBalancers, &out.LoadBalancers
		*out = make([]*LoadBalancer, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(LoadBalancer)
				(*in).DeepCopyInto(*out)
			}
		}
	}
	if in.NetworkConfiguration != nil {
		in, out := &in.NetworkConfiguration, &out.NetworkConfiguration
		*out = new(NetworkConfiguration)
		(*in).DeepCopyInto(*out)
	}
	if in.PendingCount != nil {
		in, out := &in.PendingCount, &out.PendingCount
		*out = new(int64)
		**out = **in
	}
	if in.PlacementConstraints != nil {
		in, out := &in.PlacementConstraints, &out.PlacementConstraints
		*out = make([]*PlacementConstraint, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(PlacementConstraint)
				(*in).DeepCopyInto(*out)
			}
		}
	}
	if in.PlacementStrategy != nil {
		in, out := &in.PlacementStrategy, &out.PlacementStrategy
		*out = make([]*PlacementStrategy, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(PlacementStrategy)
				(*in).DeepCopyInto(*out)
			}
		}
	}
	if in.PlatformFamily != nil {
		in, out := &in.PlatformFamily, &out.PlatformFamily
		*out = new(string)
		**out = **in
	}
	if in.PlatformVersion != nil {
		in, out := &in.PlatformVersion, &out.PlatformVersion
		*out = new(string)
		**out = **in
	}
	if in.PropagateTags != nil {
		in, out := &in.PropagateTags, &out.PropagateTags
		*out = new(string)
		**out = **in
	}
	if in.RoleARN != nil {
		in, out := &in.RoleARN, &out.RoleARN
		*out = new(string)
		**out = **in
	}
	if in.RunningCount != nil {
		in, out := &in.RunningCount, &out.RunningCount
		*out = new(int64)
		**out = **in
	}
	if in.SchedulingStrategy != nil {
		in, out := &in.SchedulingStrategy, &out.SchedulingStrategy
		*out = new(string)
		**out = **in
	}
	if in.ServiceARN != nil {
		in, out := &in.ServiceARN, &out.ServiceARN
		*out = new(string)
		**out = **in
	}
	if in.ServiceName != nil {
		in, out := &in.ServiceName, &out.ServiceName
		*out = new(string)
		**out = **in
	}
	if in.ServiceRegistries != nil {
		in, out := &in.ServiceRegistries, &out.ServiceRegistries
		*out = make([]*ServiceRegistry, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(ServiceRegistry)
				(*in).DeepCopyInto(*out)
			}
		}
	}
	if in.Status != nil {
		in, out := &in.Status, &out.Status
		*out = new(string)
		**out = **in
	}
	if in.Tags != nil {
		in, out := &in.Tags, &out.Tags
		*out = make([]*Tag, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(Tag)
				(*in).DeepCopyInto(*out)
			}
		}
	}
	if in.TaskDefinition != nil {
		in, out := &in.TaskDefinition, &out.TaskDefinition
		*out = new(string)
		**out = **in
	}
	if in.TaskSets != nil {
		in, out := &in.TaskSets, &out.TaskSets
		*out = make([]*TaskSet, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(TaskSet)
				(*in).DeepCopyInto(*out)
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Service_SDK.
func (in *Service_SDK) DeepCopy() *Service_SDK {
	if in == nil {
		return nil
	}
	out := new(Service_SDK)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Session) DeepCopyInto(out *Session) {
	*out = *in
	if in.SessionID != nil {
		in, out := &in.SessionID, &out.SessionID
		*out = new(string)
		**out = **in
	}
	if in.StreamURL != nil {
		in, out := &in.StreamURL, &out.StreamURL
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Session.
func (in *Session) DeepCopy() *Session {
	if in == nil {
		return nil
	}
	out := new(Session)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Setting) DeepCopyInto(out *Setting) {
	*out = *in
	if in.PrincipalARN != nil {
		in, out := &in.PrincipalARN, &out.PrincipalARN
		*out = new(string)
		**out = **in
	}
	if in.Value != nil {
		in, out := &in.Value, &out.Value
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Setting.
func (in *Setting) DeepCopy() *Setting {
	if in == nil {
		return nil
	}
	out := new(Setting)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SystemControl) DeepCopyInto(out *SystemControl) {
	*out = *in
	if in.Namespace != nil {
		in, out := &in.Namespace, &out.Namespace
		*out = new(string)
		**out = **in
	}
	if in.Value != nil {
		in, out := &in.Value, &out.Value
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SystemControl.
func (in *SystemControl) DeepCopy() *SystemControl {
	if in == nil {
		return nil
	}
	out := new(SystemControl)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Tag) DeepCopyInto(out *Tag) {
	*out = *in
	if in.Key != nil {
		in, out := &in.Key, &out.Key
		*out = new(string)
		**out = **in
	}
	if in.Value != nil {
		in, out := &in.Value, &out.Value
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Tag.
func (in *Tag) DeepCopy() *Tag {
	if in == nil {
		return nil
	}
	out := new(Tag)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Task) DeepCopyInto(out *Task) {
	*out = *in
	if in.Attachments != nil {
		in, out := &in.Attachments, &out.Attachments
		*out = make([]*Attachment, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(Attachment)
				(*in).DeepCopyInto(*out)
			}
		}
	}
	if in.AvailabilityZone != nil {
		in, out := &in.AvailabilityZone, &out.AvailabilityZone
		*out = new(string)
		**out = **in
	}
	if in.CapacityProviderName != nil {
		in, out := &in.CapacityProviderName, &out.CapacityProviderName
		*out = new(string)
		**out = **in
	}
	if in.ClusterARN != nil {
		in, out := &in.ClusterARN, &out.ClusterARN
		*out = new(string)
		**out = **in
	}
	if in.ConnectivityAt != nil {
		in, out := &in.ConnectivityAt, &out.ConnectivityAt
		*out = (*in).DeepCopy()
	}
	if in.ContainerInstanceARN != nil {
		in, out := &in.ContainerInstanceARN, &out.ContainerInstanceARN
		*out = new(string)
		**out = **in
	}
	if in.CPU != nil {
		in, out := &in.CPU, &out.CPU
		*out = new(string)
		**out = **in
	}
	if in.CreatedAt != nil {
		in, out := &in.CreatedAt, &out.CreatedAt
		*out = (*in).DeepCopy()
	}
	if in.DesiredStatus != nil {
		in, out := &in.DesiredStatus, &out.DesiredStatus
		*out = new(string)
		**out = **in
	}
	if in.EnableExecuteCommand != nil {
		in, out := &in.EnableExecuteCommand, &out.EnableExecuteCommand
		*out = new(bool)
		**out = **in
	}
	if in.EphemeralStorage != nil {
		in, out := &in.EphemeralStorage, &out.EphemeralStorage
		*out = new(EphemeralStorage)
		(*in).DeepCopyInto(*out)
	}
	if in.ExecutionStoppedAt != nil {
		in, out := &in.ExecutionStoppedAt, &out.ExecutionStoppedAt
		*out = (*in).DeepCopy()
	}
	if in.Group != nil {
		in, out := &in.Group, &out.Group
		*out = new(string)
		**out = **in
	}
	if in.InferenceAccelerators != nil {
		in, out := &in.InferenceAccelerators, &out.InferenceAccelerators
		*out = make([]*InferenceAccelerator, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(InferenceAccelerator)
				(*in).DeepCopyInto(*out)
			}
		}
	}
	if in.LastStatus != nil {
		in, out := &in.LastStatus, &out.LastStatus
		*out = new(string)
		**out = **in
	}
	if in.LaunchType != nil {
		in, out := &in.LaunchType, &out.LaunchType
		*out = new(string)
		**out = **in
	}
	if in.Memory != nil {
		in, out := &in.Memory, &out.Memory
		*out = new(string)
		**out = **in
	}
	if in.PlatformFamily != nil {
		in, out := &in.PlatformFamily, &out.PlatformFamily
		*out = new(string)
		**out = **in
	}
	if in.PlatformVersion != nil {
		in, out := &in.PlatformVersion, &out.PlatformVersion
		*out = new(string)
		**out = **in
	}
	if in.PullStartedAt != nil {
		in, out := &in.PullStartedAt, &out.PullStartedAt
		*out = (*in).DeepCopy()
	}
	if in.PullStoppedAt != nil {
		in, out := &in.PullStoppedAt, &out.PullStoppedAt
		*out = (*in).DeepCopy()
	}
	if in.StartedAt != nil {
		in, out := &in.StartedAt, &out.StartedAt
		*out = (*in).DeepCopy()
	}
	if in.StartedBy != nil {
		in, out := &in.StartedBy, &out.StartedBy
		*out = new(string)
		**out = **in
	}
	if in.StoppedAt != nil {
		in, out := &in.StoppedAt, &out.StoppedAt
		*out = (*in).DeepCopy()
	}
	if in.StoppedReason != nil {
		in, out := &in.StoppedReason, &out.StoppedReason
		*out = new(string)
		**out = **in
	}
	if in.StoppingAt != nil {
		in, out := &in.StoppingAt, &out.StoppingAt
		*out = (*in).DeepCopy()
	}
	if in.Tags != nil {
		in, out := &in.Tags, &out.Tags
		*out = make([]*Tag, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(Tag)
				(*in).DeepCopyInto(*out)
			}
		}
	}
	if in.TaskARN != nil {
		in, out := &in.TaskARN, &out.TaskARN
		*out = new(string)
		**out = **in
	}
	if in.TaskDefinitionARN != nil {
		in, out := &in.TaskDefinitionARN, &out.TaskDefinitionARN
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Task.
func (in *Task) DeepCopy() *Task {
	if in == nil {
		return nil
	}
	out := new(Task)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TaskDefinition) DeepCopyInto(out *TaskDefinition) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TaskDefinition.
func (in *TaskDefinition) DeepCopy() *TaskDefinition {
	if in == nil {
		return nil
	}
	out := new(TaskDefinition)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *TaskDefinition) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TaskDefinitionList) DeepCopyInto(out *TaskDefinitionList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]TaskDefinition, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TaskDefinitionList.
func (in *TaskDefinitionList) DeepCopy() *TaskDefinitionList {
	if in == nil {
		return nil
	}
	out := new(TaskDefinitionList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *TaskDefinitionList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TaskDefinitionObservation) DeepCopyInto(out *TaskDefinitionObservation) {
	*out = *in
	if in.TaskDefinition != nil {
		in, out := &in.TaskDefinition, &out.TaskDefinition
		*out = new(TaskDefinition_SDK)
		(*in).DeepCopyInto(*out)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TaskDefinitionObservation.
func (in *TaskDefinitionObservation) DeepCopy() *TaskDefinitionObservation {
	if in == nil {
		return nil
	}
	out := new(TaskDefinitionObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TaskDefinitionParameters) DeepCopyInto(out *TaskDefinitionParameters) {
	*out = *in
	if in.ContainerDefinitions != nil {
		in, out := &in.ContainerDefinitions, &out.ContainerDefinitions
		*out = make([]*ContainerDefinition, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(ContainerDefinition)
				(*in).DeepCopyInto(*out)
			}
		}
	}
	if in.CPU != nil {
		in, out := &in.CPU, &out.CPU
		*out = new(string)
		**out = **in
	}
	if in.EphemeralStorage != nil {
		in, out := &in.EphemeralStorage, &out.EphemeralStorage
		*out = new(EphemeralStorage)
		(*in).DeepCopyInto(*out)
	}
	if in.Family != nil {
		in, out := &in.Family, &out.Family
		*out = new(string)
		**out = **in
	}
	if in.InferenceAccelerators != nil {
		in, out := &in.InferenceAccelerators, &out.InferenceAccelerators
		*out = make([]*InferenceAccelerator, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(InferenceAccelerator)
				(*in).DeepCopyInto(*out)
			}
		}
	}
	if in.IPcMode != nil {
		in, out := &in.IPcMode, &out.IPcMode
		*out = new(string)
		**out = **in
	}
	if in.Memory != nil {
		in, out := &in.Memory, &out.Memory
		*out = new(string)
		**out = **in
	}
	if in.NetworkMode != nil {
		in, out := &in.NetworkMode, &out.NetworkMode
		*out = new(string)
		**out = **in
	}
	if in.PidMode != nil {
		in, out := &in.PidMode, &out.PidMode
		*out = new(string)
		**out = **in
	}
	if in.PlacementConstraints != nil {
		in, out := &in.PlacementConstraints, &out.PlacementConstraints
		*out = make([]*TaskDefinitionPlacementConstraint, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(TaskDefinitionPlacementConstraint)
				(*in).DeepCopyInto(*out)
			}
		}
	}
	if in.ProxyConfiguration != nil {
		in, out := &in.ProxyConfiguration, &out.ProxyConfiguration
		*out = new(ProxyConfiguration)
		(*in).DeepCopyInto(*out)
	}
	if in.RequiresCompatibilities != nil {
		in, out := &in.RequiresCompatibilities, &out.RequiresCompatibilities
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.RuntimePlatform != nil {
		in, out := &in.RuntimePlatform, &out.RuntimePlatform
		*out = new(RuntimePlatform)
		(*in).DeepCopyInto(*out)
	}
	if in.Tags != nil {
		in, out := &in.Tags, &out.Tags
		*out = make([]*Tag, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(Tag)
				(*in).DeepCopyInto(*out)
			}
		}
	}
	in.CustomTaskDefinitionParameters.DeepCopyInto(&out.CustomTaskDefinitionParameters)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TaskDefinitionParameters.
func (in *TaskDefinitionParameters) DeepCopy() *TaskDefinitionParameters {
	if in == nil {
		return nil
	}
	out := new(TaskDefinitionParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TaskDefinitionPlacementConstraint) DeepCopyInto(out *TaskDefinitionPlacementConstraint) {
	*out = *in
	if in.Expression != nil {
		in, out := &in.Expression, &out.Expression
		*out = new(string)
		**out = **in
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TaskDefinitionPlacementConstraint.
func (in *TaskDefinitionPlacementConstraint) DeepCopy() *TaskDefinitionPlacementConstraint {
	if in == nil {
		return nil
	}
	out := new(TaskDefinitionPlacementConstraint)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TaskDefinitionSpec) DeepCopyInto(out *TaskDefinitionSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TaskDefinitionSpec.
func (in *TaskDefinitionSpec) DeepCopy() *TaskDefinitionSpec {
	if in == nil {
		return nil
	}
	out := new(TaskDefinitionSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TaskDefinitionStatus) DeepCopyInto(out *TaskDefinitionStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TaskDefinitionStatus.
func (in *TaskDefinitionStatus) DeepCopy() *TaskDefinitionStatus {
	if in == nil {
		return nil
	}
	out := new(TaskDefinitionStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TaskDefinition_SDK) DeepCopyInto(out *TaskDefinition_SDK) {
	*out = *in
	if in.Compatibilities != nil {
		in, out := &in.Compatibilities, &out.Compatibilities
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.ContainerDefinitions != nil {
		in, out := &in.ContainerDefinitions, &out.ContainerDefinitions
		*out = make([]*ContainerDefinition, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(ContainerDefinition)
				(*in).DeepCopyInto(*out)
			}
		}
	}
	if in.CPU != nil {
		in, out := &in.CPU, &out.CPU
		*out = new(string)
		**out = **in
	}
	if in.DeregisteredAt != nil {
		in, out := &in.DeregisteredAt, &out.DeregisteredAt
		*out = (*in).DeepCopy()
	}
	if in.EphemeralStorage != nil {
		in, out := &in.EphemeralStorage, &out.EphemeralStorage
		*out = new(EphemeralStorage)
		(*in).DeepCopyInto(*out)
	}
	if in.ExecutionRoleARN != nil {
		in, out := &in.ExecutionRoleARN, &out.ExecutionRoleARN
		*out = new(string)
		**out = **in
	}
	if in.Family != nil {
		in, out := &in.Family, &out.Family
		*out = new(string)
		**out = **in
	}
	if in.InferenceAccelerators != nil {
		in, out := &in.InferenceAccelerators, &out.InferenceAccelerators
		*out = make([]*InferenceAccelerator, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(InferenceAccelerator)
				(*in).DeepCopyInto(*out)
			}
		}
	}
	if in.IPcMode != nil {
		in, out := &in.IPcMode, &out.IPcMode
		*out = new(string)
		**out = **in
	}
	if in.Memory != nil {
		in, out := &in.Memory, &out.Memory
		*out = new(string)
		**out = **in
	}
	if in.NetworkMode != nil {
		in, out := &in.NetworkMode, &out.NetworkMode
		*out = new(string)
		**out = **in
	}
	if in.PidMode != nil {
		in, out := &in.PidMode, &out.PidMode
		*out = new(string)
		**out = **in
	}
	if in.PlacementConstraints != nil {
		in, out := &in.PlacementConstraints, &out.PlacementConstraints
		*out = make([]*TaskDefinitionPlacementConstraint, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(TaskDefinitionPlacementConstraint)
				(*in).DeepCopyInto(*out)
			}
		}
	}
	if in.ProxyConfiguration != nil {
		in, out := &in.ProxyConfiguration, &out.ProxyConfiguration
		*out = new(ProxyConfiguration)
		(*in).DeepCopyInto(*out)
	}
	if in.RegisteredAt != nil {
		in, out := &in.RegisteredAt, &out.RegisteredAt
		*out = (*in).DeepCopy()
	}
	if in.RegisteredBy != nil {
		in, out := &in.RegisteredBy, &out.RegisteredBy
		*out = new(string)
		**out = **in
	}
	if in.RequiresAttributes != nil {
		in, out := &in.RequiresAttributes, &out.RequiresAttributes
		*out = make([]*Attribute, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(Attribute)
				(*in).DeepCopyInto(*out)
			}
		}
	}
	if in.RequiresCompatibilities != nil {
		in, out := &in.RequiresCompatibilities, &out.RequiresCompatibilities
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Revision != nil {
		in, out := &in.Revision, &out.Revision
		*out = new(int64)
		**out = **in
	}
	if in.RuntimePlatform != nil {
		in, out := &in.RuntimePlatform, &out.RuntimePlatform
		*out = new(RuntimePlatform)
		(*in).DeepCopyInto(*out)
	}
	if in.Status != nil {
		in, out := &in.Status, &out.Status
		*out = new(string)
		**out = **in
	}
	if in.TaskDefinitionARN != nil {
		in, out := &in.TaskDefinitionARN, &out.TaskDefinitionARN
		*out = new(string)
		**out = **in
	}
	if in.TaskRoleARN != nil {
		in, out := &in.TaskRoleARN, &out.TaskRoleARN
		*out = new(string)
		**out = **in
	}
	if in.Volumes != nil {
		in, out := &in.Volumes, &out.Volumes
		*out = make([]*Volume, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(Volume)
				(*in).DeepCopyInto(*out)
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TaskDefinition_SDK.
func (in *TaskDefinition_SDK) DeepCopy() *TaskDefinition_SDK {
	if in == nil {
		return nil
	}
	out := new(TaskDefinition_SDK)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TaskOverride) DeepCopyInto(out *TaskOverride) {
	*out = *in
	if in.CPU != nil {
		in, out := &in.CPU, &out.CPU
		*out = new(string)
		**out = **in
	}
	if in.EphemeralStorage != nil {
		in, out := &in.EphemeralStorage, &out.EphemeralStorage
		*out = new(EphemeralStorage)
		(*in).DeepCopyInto(*out)
	}
	if in.ExecutionRoleARN != nil {
		in, out := &in.ExecutionRoleARN, &out.ExecutionRoleARN
		*out = new(string)
		**out = **in
	}
	if in.Memory != nil {
		in, out := &in.Memory, &out.Memory
		*out = new(string)
		**out = **in
	}
	if in.TaskRoleARN != nil {
		in, out := &in.TaskRoleARN, &out.TaskRoleARN
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TaskOverride.
func (in *TaskOverride) DeepCopy() *TaskOverride {
	if in == nil {
		return nil
	}
	out := new(TaskOverride)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TaskSet) DeepCopyInto(out *TaskSet) {
	*out = *in
	if in.CapacityProviderStrategy != nil {
		in, out := &in.CapacityProviderStrategy, &out.CapacityProviderStrategy
		*out = make([]*CapacityProviderStrategyItem, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(CapacityProviderStrategyItem)
				(*in).DeepCopyInto(*out)
			}
		}
	}
	if in.ClusterARN != nil {
		in, out := &in.ClusterARN, &out.ClusterARN
		*out = new(string)
		**out = **in
	}
	if in.ComputedDesiredCount != nil {
		in, out := &in.ComputedDesiredCount, &out.ComputedDesiredCount
		*out = new(int64)
		**out = **in
	}
	if in.CreatedAt != nil {
		in, out := &in.CreatedAt, &out.CreatedAt
		*out = (*in).DeepCopy()
	}
	if in.ExternalID != nil {
		in, out := &in.ExternalID, &out.ExternalID
		*out = new(string)
		**out = **in
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.LaunchType != nil {
		in, out := &in.LaunchType, &out.LaunchType
		*out = new(string)
		**out = **in
	}
	if in.LoadBalancers != nil {
		in, out := &in.LoadBalancers, &out.LoadBalancers
		*out = make([]*LoadBalancer, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(LoadBalancer)
				(*in).DeepCopyInto(*out)
			}
		}
	}
	if in.NetworkConfiguration != nil {
		in, out := &in.NetworkConfiguration, &out.NetworkConfiguration
		*out = new(NetworkConfiguration)
		(*in).DeepCopyInto(*out)
	}
	if in.PendingCount != nil {
		in, out := &in.PendingCount, &out.PendingCount
		*out = new(int64)
		**out = **in
	}
	if in.PlatformFamily != nil {
		in, out := &in.PlatformFamily, &out.PlatformFamily
		*out = new(string)
		**out = **in
	}
	if in.PlatformVersion != nil {
		in, out := &in.PlatformVersion, &out.PlatformVersion
		*out = new(string)
		**out = **in
	}
	if in.RunningCount != nil {
		in, out := &in.RunningCount, &out.RunningCount
		*out = new(int64)
		**out = **in
	}
	if in.Scale != nil {
		in, out := &in.Scale, &out.Scale
		*out = new(Scale)
		(*in).DeepCopyInto(*out)
	}
	if in.ServiceARN != nil {
		in, out := &in.ServiceARN, &out.ServiceARN
		*out = new(string)
		**out = **in
	}
	if in.ServiceRegistries != nil {
		in, out := &in.ServiceRegistries, &out.ServiceRegistries
		*out = make([]*ServiceRegistry, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(ServiceRegistry)
				(*in).DeepCopyInto(*out)
			}
		}
	}
	if in.StabilityStatus != nil {
		in, out := &in.StabilityStatus, &out.StabilityStatus
		*out = new(string)
		**out = **in
	}
	if in.StabilityStatusAt != nil {
		in, out := &in.StabilityStatusAt, &out.StabilityStatusAt
		*out = (*in).DeepCopy()
	}
	if in.StartedBy != nil {
		in, out := &in.StartedBy, &out.StartedBy
		*out = new(string)
		**out = **in
	}
	if in.Status != nil {
		in, out := &in.Status, &out.Status
		*out = new(string)
		**out = **in
	}
	if in.Tags != nil {
		in, out := &in.Tags, &out.Tags
		*out = make([]*Tag, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(Tag)
				(*in).DeepCopyInto(*out)
			}
		}
	}
	if in.TaskDefinition != nil {
		in, out := &in.TaskDefinition, &out.TaskDefinition
		*out = new(string)
		**out = **in
	}
	if in.TaskSetARN != nil {
		in, out := &in.TaskSetARN, &out.TaskSetARN
		*out = new(string)
		**out = **in
	}
	if in.UpdatedAt != nil {
		in, out := &in.UpdatedAt, &out.UpdatedAt
		*out = (*in).DeepCopy()
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TaskSet.
func (in *TaskSet) DeepCopy() *TaskSet {
	if in == nil {
		return nil
	}
	out := new(TaskSet)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Tmpfs) DeepCopyInto(out *Tmpfs) {
	*out = *in
	if in.ContainerPath != nil {
		in, out := &in.ContainerPath, &out.ContainerPath
		*out = new(string)
		**out = **in
	}
	if in.MountOptions != nil {
		in, out := &in.MountOptions, &out.MountOptions
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Size != nil {
		in, out := &in.Size, &out.Size
		*out = new(int64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Tmpfs.
func (in *Tmpfs) DeepCopy() *Tmpfs {
	if in == nil {
		return nil
	}
	out := new(Tmpfs)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Ulimit) DeepCopyInto(out *Ulimit) {
	*out = *in
	if in.HardLimit != nil {
		in, out := &in.HardLimit, &out.HardLimit
		*out = new(int64)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.SoftLimit != nil {
		in, out := &in.SoftLimit, &out.SoftLimit
		*out = new(int64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Ulimit.
func (in *Ulimit) DeepCopy() *Ulimit {
	if in == nil {
		return nil
	}
	out := new(Ulimit)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VersionInfo) DeepCopyInto(out *VersionInfo) {
	*out = *in
	if in.AgentHash != nil {
		in, out := &in.AgentHash, &out.AgentHash
		*out = new(string)
		**out = **in
	}
	if in.AgentVersion != nil {
		in, out := &in.AgentVersion, &out.AgentVersion
		*out = new(string)
		**out = **in
	}
	if in.DockerVersion != nil {
		in, out := &in.DockerVersion, &out.DockerVersion
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VersionInfo.
func (in *VersionInfo) DeepCopy() *VersionInfo {
	if in == nil {
		return nil
	}
	out := new(VersionInfo)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Volume) DeepCopyInto(out *Volume) {
	*out = *in
	if in.DockerVolumeConfiguration != nil {
		in, out := &in.DockerVolumeConfiguration, &out.DockerVolumeConfiguration
		*out = new(DockerVolumeConfiguration)
		(*in).DeepCopyInto(*out)
	}
	if in.EFSVolumeConfiguration != nil {
		in, out := &in.EFSVolumeConfiguration, &out.EFSVolumeConfiguration
		*out = new(EFSVolumeConfiguration)
		(*in).DeepCopyInto(*out)
	}
	if in.FsxWindowsFileServerVolumeConfiguration != nil {
		in, out := &in.FsxWindowsFileServerVolumeConfiguration, &out.FsxWindowsFileServerVolumeConfiguration
		*out = new(FSxWindowsFileServerVolumeConfiguration)
		(*in).DeepCopyInto(*out)
	}
	if in.Host != nil {
		in, out := &in.Host, &out.Host
		*out = new(HostVolumeProperties)
		(*in).DeepCopyInto(*out)
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Volume.
func (in *Volume) DeepCopy() *Volume {
	if in == nil {
		return nil
	}
	out := new(Volume)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VolumeFrom) DeepCopyInto(out *VolumeFrom) {
	*out = *in
	if in.ReadOnly != nil {
		in, out := &in.ReadOnly, &out.ReadOnly
		*out = new(bool)
		**out = **in
	}
	if in.SourceContainer != nil {
		in, out := &in.SourceContainer, &out.SourceContainer
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VolumeFrom.
func (in *VolumeFrom) DeepCopy() *VolumeFrom {
	if in == nil {
		return nil
	}
	out := new(VolumeFrom)
	in.DeepCopyInto(out)
	return out
}
