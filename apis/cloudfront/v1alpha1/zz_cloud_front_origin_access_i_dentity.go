/*
Copyright 2021 The Crossplane Authors.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by ack-generate. DO NOT EDIT.

package v1alpha1

import (
	xpv1 "github.com/crossplane/crossplane-runtime/apis/common/v1"
	metav1 "k8s.io/apimachinery/pkg/apis/meta/v1"
	"k8s.io/apimachinery/pkg/runtime/schema"
)

// CloudFrontOriginAccessIDentityParameters defines the desired state of CloudFrontOriginAccessIDentity
type CloudFrontOriginAccessIDentityParameters struct {
	// Region is which region the CloudFrontOriginAccessIDentity will be created.
	// +kubebuilder:validation:Required
	Region string `json:"region"`
	// The current configuration information for the identity.
	// +kubebuilder:validation:Required
	CloudFrontOriginAccessIDentityConfig           *OriginAccessIDentityConfig `json:"cloudFrontOriginAccessIDentityConfig"`
	CustomCloudFrontOriginAccessIDentityParameters `json:",inline"`
}

// CloudFrontOriginAccessIDentitySpec defines the desired state of CloudFrontOriginAccessIDentity
type CloudFrontOriginAccessIDentitySpec struct {
	xpv1.ResourceSpec `json:",inline"`
	ForProvider       CloudFrontOriginAccessIDentityParameters `json:"forProvider"`
}

// CloudFrontOriginAccessIDentityObservation defines the observed state of CloudFrontOriginAccessIDentity
type CloudFrontOriginAccessIDentityObservation struct {
	// The origin access identity's information.
	CloudFrontOriginAccessIDentity *OriginAccessIDentity `json:"cloudFrontOriginAccessIDentity,omitempty"`
	// The current version of the origin access identity created.
	ETag *string `json:"eTag,omitempty"`
	// The fully qualified URI of the new origin access identity just created.
	Location *string `json:"location,omitempty"`
}

// CloudFrontOriginAccessIDentityStatus defines the observed state of CloudFrontOriginAccessIDentity.
type CloudFrontOriginAccessIDentityStatus struct {
	xpv1.ResourceStatus `json:",inline"`
	AtProvider          CloudFrontOriginAccessIDentityObservation `json:"atProvider,omitempty"`
}

// +kubebuilder:object:root=true

// CloudFrontOriginAccessIDentity is the Schema for the CloudFrontOriginAccessIDentities API
// +kubebuilder:printcolumn:name="READY",type="string",JSONPath=".status.conditions[?(@.type=='Ready')].status"
// +kubebuilder:printcolumn:name="SYNCED",type="string",JSONPath=".status.conditions[?(@.type=='Synced')].status"
// +kubebuilder:printcolumn:name="EXTERNAL-NAME",type="string",JSONPath=".metadata.annotations.crossplane\\.io/external-name"
// +kubebuilder:subresource:status
// +kubebuilder:resource:scope=Cluster,categories={crossplane,managed,aws}
type CloudFrontOriginAccessIDentity struct {
	metav1.TypeMeta   `json:",inline"`
	metav1.ObjectMeta `json:"metadata,omitempty"`
	Spec              CloudFrontOriginAccessIDentitySpec   `json:"spec"`
	Status            CloudFrontOriginAccessIDentityStatus `json:"status,omitempty"`
}

// +kubebuilder:object:root=true

// CloudFrontOriginAccessIDentityList contains a list of CloudFrontOriginAccessIDentities
type CloudFrontOriginAccessIDentityList struct {
	metav1.TypeMeta `json:",inline"`
	metav1.ListMeta `json:"metadata,omitempty"`
	Items           []CloudFrontOriginAccessIDentity `json:"items"`
}

// Repository type metadata.
var (
	CloudFrontOriginAccessIDentityKind             = "CloudFrontOriginAccessIDentity"
	CloudFrontOriginAccessIDentityGroupKind        = schema.GroupKind{Group: Group, Kind: CloudFrontOriginAccessIDentityKind}.String()
	CloudFrontOriginAccessIDentityKindAPIVersion   = CloudFrontOriginAccessIDentityKind + "." + GroupVersion.String()
	CloudFrontOriginAccessIDentityGroupVersionKind = GroupVersion.WithKind(CloudFrontOriginAccessIDentityKind)
)

func init() {
	SchemeBuilder.Register(&CloudFrontOriginAccessIDentity{}, &CloudFrontOriginAccessIDentityList{})
}
