/*
Copyright 2021 The Crossplane Authors.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by ack-generate. DO NOT EDIT.

package v1alpha1

import (
	metav1 "k8s.io/apimachinery/pkg/apis/meta/v1"
)

// Hack to avoid import errors during build...
var (
	_ = &metav1.Time{}
)

// +kubebuilder:skipversion
type DNSConfig struct {
	NamespaceID *string `json:"namespaceID,omitempty"`
}

// +kubebuilder:skipversion
type DNSProperties struct {
	HostedZoneID *string `json:"hostedZoneID,omitempty"`
	// Start of Authority (SOA) properties for a public or private DNS namespace.
	SOA *SOA `json:"sOA,omitempty"`
}

// +kubebuilder:skipversion
type DNSRecord struct {
	TTL *int64 `json:"tTL,omitempty"`
}

// +kubebuilder:skipversion
type HTTPInstanceSummary struct {
	InstanceID *string `json:"instanceID,omitempty"`

	NamespaceName *string `json:"namespaceName,omitempty"`
}

// +kubebuilder:skipversion
type HTTPNamespaceChange struct {
	Description *string `json:"description,omitempty"`
}

// +kubebuilder:skipversion
type Instance struct {
	CreatorRequestID *string `json:"creatorRequestID,omitempty"`

	ID *string `json:"id,omitempty"`
}

// +kubebuilder:skipversion
type InstanceSummary struct {
	ID *string `json:"id,omitempty"`
}

// +kubebuilder:skipversion
type Namespace struct {
	CreatorRequestID *string `json:"creatorRequestID,omitempty"`

	Description *string `json:"description,omitempty"`

	ID *string `json:"id,omitempty"`
}

// +kubebuilder:skipversion
type NamespaceSummary struct {
	Description *string `json:"description,omitempty"`

	ID *string `json:"id,omitempty"`
}

// +kubebuilder:skipversion
type Operation struct {
	ID *string `json:"id,omitempty"`
}

// +kubebuilder:skipversion
type OperationSummary struct {
	ID *string `json:"id,omitempty"`
}

// +kubebuilder:skipversion
type PrivateDNSNamespaceChange struct {
	Description *string `json:"description,omitempty"`
	// Updated properties for the private DNS namespace.
	Properties *PrivateDNSNamespacePropertiesChange `json:"properties,omitempty"`
}

// +kubebuilder:skipversion
type PrivateDNSNamespaceProperties struct {
	// DNS properties for the private DNS namespace.
	DNSProperties *PrivateDNSPropertiesMutable `json:"dnsProperties,omitempty"`
}

// +kubebuilder:skipversion
type PrivateDNSNamespacePropertiesChange struct {
	// Updated DNS properties for the private DNS namespace.
	DNSProperties *PrivateDNSPropertiesMutableChange `json:"dnsProperties,omitempty"`
}

// +kubebuilder:skipversion
type PrivateDNSPropertiesMutable struct {
	// Start of Authority (SOA) properties for a public or private DNS namespace.
	SOA *SOA `json:"sOA,omitempty"`
}

// +kubebuilder:skipversion
type PrivateDNSPropertiesMutableChange struct {
	// Updated Start of Authority (SOA) properties for a public or private DNS namespace.
	SOA *SOAChange `json:"sOA,omitempty"`
}

// +kubebuilder:skipversion
type PublicDNSNamespaceChange struct {
	Description *string `json:"description,omitempty"`
	// Updated properties for the public DNS namespace.
	Properties *PublicDNSNamespacePropertiesChange `json:"properties,omitempty"`
}

// +kubebuilder:skipversion
type PublicDNSNamespaceProperties struct {
	// DNS properties for the public DNS namespace.
	DNSProperties *PublicDNSPropertiesMutable `json:"dnsProperties,omitempty"`
}

// +kubebuilder:skipversion
type PublicDNSNamespacePropertiesChange struct {
	// Updated DNS properties for the public DNS namespace.
	DNSProperties *PublicDNSPropertiesMutableChange `json:"dnsProperties,omitempty"`
}

// +kubebuilder:skipversion
type PublicDNSPropertiesMutable struct {
	// Start of Authority (SOA) properties for a public or private DNS namespace.
	SOA *SOA `json:"sOA,omitempty"`
}

// +kubebuilder:skipversion
type PublicDNSPropertiesMutableChange struct {
	// Updated Start of Authority (SOA) properties for a public or private DNS namespace.
	SOA *SOAChange `json:"sOA,omitempty"`
}

// +kubebuilder:skipversion
type SOA struct {
	TTL *int64 `json:"tTL,omitempty"`
}

// +kubebuilder:skipversion
type SOAChange struct {
	TTL *int64 `json:"tTL,omitempty"`
}

// +kubebuilder:skipversion
type Service struct {
	CreatorRequestID *string `json:"creatorRequestID,omitempty"`

	Description *string `json:"description,omitempty"`

	ID *string `json:"id,omitempty"`

	NamespaceID *string `json:"namespaceID,omitempty"`
}

// +kubebuilder:skipversion
type ServiceChange struct {
	Description *string `json:"description,omitempty"`
}

// +kubebuilder:skipversion
type ServiceSummary struct {
	Description *string `json:"description,omitempty"`

	ID *string `json:"id,omitempty"`
}

// +kubebuilder:skipversion
type Tag struct {
	Key *string `json:"key,omitempty"`

	Value *string `json:"value,omitempty"`
}
