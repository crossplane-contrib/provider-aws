/*
Copyright 2021 The Crossplane Authors.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by ack-generate. DO NOT EDIT.

package v1alpha1

import (
	metav1 "k8s.io/apimachinery/pkg/apis/meta/v1"
)

// Hack to avoid import errors during build...
var (
	_ = &metav1.Time{}
)

// +kubebuilder:skipversion
type AccountLimit struct {
	CodeSizeUnzipped *int64 `json:"codeSizeUnzipped,omitempty"`

	CodeSizeZipped *int64 `json:"codeSizeZipped,omitempty"`

	TotalCodeSize *int64 `json:"totalCodeSize,omitempty"`
}

// +kubebuilder:skipversion
type AccountUsage struct {
	FunctionCount *int64 `json:"functionCount,omitempty"`

	TotalCodeSize *int64 `json:"totalCodeSize,omitempty"`
}

// +kubebuilder:skipversion
type CodeSigningConfig struct {
	CodeSigningConfigARN *string `json:"codeSigningConfigARN,omitempty"`

	Description *string `json:"description,omitempty"`

	LastModified *string `json:"lastModified,omitempty"`
}

// +kubebuilder:skipversion
type DeadLetterConfig struct {
	TargetARN *string `json:"targetARN,omitempty"`
}

// +kubebuilder:skipversion
type Environment struct {
	Variables map[string]*string `json:"variables,omitempty"`
}

// +kubebuilder:skipversion
type EnvironmentError struct {
	ErrorCode *string `json:"errorCode,omitempty"`

	Message *string `json:"message,omitempty"`
}

// +kubebuilder:skipversion
type EnvironmentResponse struct {
	// Error messages for environment variables that couldn't be applied.
	Error *EnvironmentError `json:"error,omitempty"`

	Variables map[string]*string `json:"variables,omitempty"`
}

// +kubebuilder:skipversion
type FileSystemConfig struct {
	ARN *string `json:"arn,omitempty"`

	LocalMountPath *string `json:"localMountPath,omitempty"`
}

// +kubebuilder:skipversion
type FunctionCode struct {
	ImageURI *string `json:"imageURI,omitempty"`
}

// +kubebuilder:skipversion
type FunctionCodeLocation struct {
	ImageURI *string `json:"imageURI,omitempty"`

	Location *string `json:"location,omitempty"`

	RepositoryType *string `json:"repositoryType,omitempty"`

	ResolvedImageURI *string `json:"resolvedImageURI,omitempty"`
}

// +kubebuilder:skipversion
type FunctionConfiguration struct {
	CodeSHA256 *string `json:"codeSHA256,omitempty"`

	CodeSize *int64 `json:"codeSize,omitempty"`
	// The dead-letter queue (https://docs.aws.amazon.com/lambda/latest/dg/invocation-async.html#dlq)
	// for failed asynchronous invocations.
	DeadLetterConfig *DeadLetterConfig `json:"deadLetterConfig,omitempty"`

	Description *string `json:"description,omitempty"`
	// The results of an operation to update or read environment variables. If the
	// operation is successful, the response contains the environment variables.
	// If it failed, the response contains details about the error.
	Environment *EnvironmentResponse `json:"environment,omitempty"`

	FileSystemConfigs []*FileSystemConfig `json:"fileSystemConfigs,omitempty"`

	FunctionARN *string `json:"functionARN,omitempty"`

	FunctionName *string `json:"functionName,omitempty"`

	Handler *string `json:"handler,omitempty"`
	// Response to GetFunctionConfiguration request.
	ImageConfigResponse *ImageConfigResponse `json:"imageConfigResponse,omitempty"`

	KMSKeyARN *string `json:"kmsKeyARN,omitempty"`

	LastModified *string `json:"lastModified,omitempty"`

	LastUpdateStatus *string `json:"lastUpdateStatus,omitempty"`

	LastUpdateStatusReason *string `json:"lastUpdateStatusReason,omitempty"`

	LastUpdateStatusReasonCode *string `json:"lastUpdateStatusReasonCode,omitempty"`

	MasterARN *string `json:"masterARN,omitempty"`

	MemorySize *int64 `json:"memorySize,omitempty"`

	PackageType *string `json:"packageType,omitempty"`

	RevisionID *string `json:"revisionID,omitempty"`

	Role *string `json:"role,omitempty"`

	Runtime *string `json:"runtime,omitempty"`

	SigningJobARN *string `json:"signingJobARN,omitempty"`

	SigningProfileVersionARN *string `json:"signingProfileVersionARN,omitempty"`

	State *string `json:"state,omitempty"`

	StateReason *string `json:"stateReason,omitempty"`

	StateReasonCode *string `json:"stateReasonCode,omitempty"`

	Timeout *int64 `json:"timeout,omitempty"`
	// The function's AWS X-Ray tracing configuration.
	TracingConfig *TracingConfigResponse `json:"tracingConfig,omitempty"`

	Version *string `json:"version,omitempty"`
	// The VPC security groups and subnets that are attached to a Lambda function.
	VPCConfig *VPCConfigResponse `json:"vpcConfig,omitempty"`
}

// +kubebuilder:skipversion
type FunctionEventInvokeConfig struct {
	FunctionARN *string `json:"functionARN,omitempty"`
}

// +kubebuilder:skipversion
type ImageConfig struct {
	Command []*string `json:"command,omitempty"`

	EntryPoint []*string `json:"entryPoint,omitempty"`

	WorkingDirectory *string `json:"workingDirectory,omitempty"`
}

// +kubebuilder:skipversion
type ImageConfigError struct {
	ErrorCode *string `json:"errorCode,omitempty"`

	Message *string `json:"message,omitempty"`
}

// +kubebuilder:skipversion
type ImageConfigResponse struct {
	// Error response to GetFunctionConfiguration.
	Error *ImageConfigError `json:"error,omitempty"`
	// Configuration values that override the container image Dockerfile settings.
	// See Container settings (https://docs.aws.amazon.com/lambda/latest/dg/images-create.html#images-parms).
	ImageConfig *ImageConfig `json:"imageConfig,omitempty"`
}

// +kubebuilder:skipversion
type Layer struct {
	ARN *string `json:"arn,omitempty"`

	CodeSize *int64 `json:"codeSize,omitempty"`

	SigningJobARN *string `json:"signingJobARN,omitempty"`

	SigningProfileVersionARN *string `json:"signingProfileVersionARN,omitempty"`
}

// +kubebuilder:skipversion
type LayerVersionContentOutput struct {
	CodeSHA256 *string `json:"codeSHA256,omitempty"`

	CodeSize *int64 `json:"codeSize,omitempty"`

	Location *string `json:"location,omitempty"`

	SigningJobARN *string `json:"signingJobARN,omitempty"`

	SigningProfileVersionARN *string `json:"signingProfileVersionARN,omitempty"`
}

// +kubebuilder:skipversion
type LayerVersionsListItem struct {
	CreatedDate *string `json:"createdDate,omitempty"`

	Description *string `json:"description,omitempty"`

	LayerVersionARN *string `json:"layerVersionARN,omitempty"`
}

// +kubebuilder:skipversion
type ProvisionedConcurrencyConfigListItem struct {
	FunctionARN *string `json:"functionARN,omitempty"`

	LastModified *string `json:"lastModified,omitempty"`

	StatusReason *string `json:"statusReason,omitempty"`
}

// +kubebuilder:skipversion
type PutFunctionConcurrencyOutput struct {
	ReservedConcurrentExecutions *int64 `json:"reservedConcurrentExecutions,omitempty"`
}

// +kubebuilder:skipversion
type TracingConfig struct {
	Mode *string `json:"mode,omitempty"`
}

// +kubebuilder:skipversion
type TracingConfigResponse struct {
	Mode *string `json:"mode,omitempty"`
}

// +kubebuilder:skipversion
type VPCConfig struct {
	SecurityGroupIDs []*string `json:"securityGroupIDs,omitempty"`

	SubnetIDs []*string `json:"subnetIDs,omitempty"`
}

// +kubebuilder:skipversion
type VPCConfigResponse struct {
	SecurityGroupIDs []*string `json:"securityGroupIDs,omitempty"`

	SubnetIDs []*string `json:"subnetIDs,omitempty"`

	VPCID *string `json:"vpcID,omitempty"`
}
