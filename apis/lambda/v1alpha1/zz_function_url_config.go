/*
Copyright 2021 The Crossplane Authors.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by ack-generate. DO NOT EDIT.

package v1alpha1

import (
	xpv1 "github.com/crossplane/crossplane-runtime/apis/common/v1"
	metav1 "k8s.io/apimachinery/pkg/apis/meta/v1"
	"k8s.io/apimachinery/pkg/runtime/schema"
)

// FunctionURLConfigParameters defines the desired state of FunctionURLConfig
type FunctionURLConfigParameters struct {
	// Region is which region the FunctionURLConfig will be created.
	// +kubebuilder:validation:Required
	Region string `json:"region"`
	// The type of authentication that your function URL uses. Set to AWS_IAM if
	// you want to restrict access to authenticated users only. Set to NONE if you
	// want to bypass IAM authentication to create a public endpoint. For more information,
	// see Security and auth model for Lambda function URLs (https://docs.aws.amazon.com/lambda/latest/dg/urls-auth.html).
	// +kubebuilder:validation:Required
	AuthType *string `json:"authType"`
	// The cross-origin resource sharing (CORS) (https://developer.mozilla.org/en-US/docs/Web/HTTP/CORS)
	// settings for your function URL.
	CORS *CORS `json:"cors,omitempty"`
	// Use one of the following options:
	//
	//    * BUFFERED – This is the default option. Lambda invokes your function
	//    using the Invoke API operation. Invocation results are available when
	//    the payload is complete. The maximum payload size is 6 MB.
	//
	//    * RESPONSE_STREAM – Your function streams payload results as they become
	//    available. Lambda invokes your function using the InvokeWithResponseStream
	//    API operation. The maximum response payload size is 20 MB, however, you
	//    can request a quota increase (https://docs.aws.amazon.com/servicequotas/latest/userguide/request-quota-increase.html).
	InvokeMode *string `json:"invokeMode,omitempty"`
	// The alias name.
	Qualifier                         *string `json:"qualifier,omitempty"`
	CustomFunctionURLConfigParameters `json:",inline"`
}

// FunctionURLConfigSpec defines the desired state of FunctionURLConfig
type FunctionURLConfigSpec struct {
	xpv1.ResourceSpec `json:",inline"`
	ForProvider       FunctionURLConfigParameters `json:"forProvider"`
}

// FunctionURLConfigObservation defines the observed state of FunctionURLConfig
type FunctionURLConfigObservation struct {
	// When the function URL was created, in ISO-8601 format (https://www.w3.org/TR/NOTE-datetime)
	// (YYYY-MM-DDThh:mm:ss.sTZD).
	CreationTime *string `json:"creationTime,omitempty"`
	// The Amazon Resource Name (ARN) of your function.
	FunctionARN *string `json:"functionARN,omitempty"`
	// The HTTP URL endpoint for your function.
	FunctionURL *string `json:"functionURL,omitempty"`
}

// FunctionURLConfigStatus defines the observed state of FunctionURLConfig.
type FunctionURLConfigStatus struct {
	xpv1.ResourceStatus `json:",inline"`
	AtProvider          FunctionURLConfigObservation `json:"atProvider,omitempty"`
}

// +kubebuilder:object:root=true

// FunctionURLConfig is the Schema for the FunctionURLConfigs API
// +kubebuilder:printcolumn:name="READY",type="string",JSONPath=".status.conditions[?(@.type=='Ready')].status"
// +kubebuilder:printcolumn:name="SYNCED",type="string",JSONPath=".status.conditions[?(@.type=='Synced')].status"
// +kubebuilder:printcolumn:name="EXTERNAL-NAME",type="string",JSONPath=".metadata.annotations.crossplane\\.io/external-name"
// +kubebuilder:printcolumn:name="AGE",type="date",JSONPath=".metadata.creationTimestamp"
// +kubebuilder:subresource:status
// +kubebuilder:storageversion
// +kubebuilder:resource:scope=Cluster,categories={crossplane,managed,aws}
type FunctionURLConfig struct {
	metav1.TypeMeta   `json:",inline"`
	metav1.ObjectMeta `json:"metadata,omitempty"`
	Spec              FunctionURLConfigSpec   `json:"spec"`
	Status            FunctionURLConfigStatus `json:"status,omitempty"`
}

// +kubebuilder:object:root=true

// FunctionURLConfigList contains a list of FunctionURLConfigs
type FunctionURLConfigList struct {
	metav1.TypeMeta `json:",inline"`
	metav1.ListMeta `json:"metadata,omitempty"`
	Items           []FunctionURLConfig `json:"items"`
}

// Repository type metadata.
var (
	FunctionURLConfigKind             = "FunctionURLConfig"
	FunctionURLConfigGroupKind        = schema.GroupKind{Group: CRDGroup, Kind: FunctionURLConfigKind}.String()
	FunctionURLConfigKindAPIVersion   = FunctionURLConfigKind + "." + GroupVersion.String()
	FunctionURLConfigGroupVersionKind = GroupVersion.WithKind(FunctionURLConfigKind)
)

func init() {
	SchemeBuilder.Register(&FunctionURLConfig{}, &FunctionURLConfigList{})
}
