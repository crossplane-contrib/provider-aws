/*
Copyright 2021 The Crossplane Authors.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by ack-generate. DO NOT EDIT.

package v1alpha1

import (
	metav1 "k8s.io/apimachinery/pkg/apis/meta/v1"
)

// Hack to avoid import errors during build...
var (
	_ = &metav1.Time{}
)

// +kubebuilder:skipversion
type AliasListEntry struct {
	AliasARN *string `json:"aliasARN,omitempty"`

	CreationDate *metav1.Time `json:"creationDate,omitempty"`

	LastUpdatedDate *metav1.Time `json:"lastUpdatedDate,omitempty"`

	TargetKeyID *string `json:"targetKeyID,omitempty"`
}

// +kubebuilder:skipversion
type CustomKeyStoresListEntry struct {
	CloudHsmClusterID *string `json:"cloudHsmClusterID,omitempty"`

	CreationDate *metav1.Time `json:"creationDate,omitempty"`

	CustomKeyStoreID *string `json:"customKeyStoreID,omitempty"`
}

// +kubebuilder:skipversion
type GrantListEntry struct {
	CreationDate *metav1.Time `json:"creationDate,omitempty"`

	KeyID *string `json:"keyID,omitempty"`
}

// +kubebuilder:skipversion
type KeyListEntry struct {
	KeyARN *string `json:"keyARN,omitempty"`

	KeyID *string `json:"keyID,omitempty"`
}

// +kubebuilder:skipversion
type KeyMetadata struct {
	AWSAccountID *string `json:"awsAccountID,omitempty"`

	ARN *string `json:"arn,omitempty"`

	CloudHsmClusterID *string `json:"cloudHsmClusterID,omitempty"`

	CreationDate *metav1.Time `json:"creationDate,omitempty"`

	CustomKeyStoreID *string `json:"customKeyStoreID,omitempty"`

	CustomerMasterKeySpec *string `json:"customerMasterKeySpec,omitempty"`

	DeletionDate *metav1.Time `json:"deletionDate,omitempty"`

	Description *string `json:"description,omitempty"`

	Enabled *bool `json:"enabled,omitempty"`

	EncryptionAlgorithms []*string `json:"encryptionAlgorithms,omitempty"`

	ExpirationModel *string `json:"expirationModel,omitempty"`

	KeyID *string `json:"keyID,omitempty"`

	KeyManager *string `json:"keyManager,omitempty"`

	KeySpec *string `json:"keySpec,omitempty"`

	KeyState *string `json:"keyState,omitempty"`

	KeyUsage *string `json:"keyUsage,omitempty"`

	MultiRegion *bool `json:"multiRegion,omitempty"`
	// Describes the configuration of this multi-Region key. This field appears
	// only when the KMS key is a primary or replica of a multi-Region key.
	//
	// For more information about any listed KMS key, use the DescribeKey operation.
	MultiRegionConfiguration *MultiRegionConfiguration `json:"multiRegionConfiguration,omitempty"`

	Origin *string `json:"origin,omitempty"`

	PendingDeletionWindowInDays *int64 `json:"pendingDeletionWindowInDays,omitempty"`

	SigningAlgorithms []*string `json:"signingAlgorithms,omitempty"`

	ValidTo *metav1.Time `json:"validTo,omitempty"`
}

// +kubebuilder:skipversion
type MultiRegionConfiguration struct {
	MultiRegionKeyType *string `json:"multiRegionKeyType,omitempty"`
	// Describes the primary or replica key in a multi-Region key.
	PrimaryKey *MultiRegionKey `json:"primaryKey,omitempty"`

	ReplicaKeys []*MultiRegionKey `json:"replicaKeys,omitempty"`
}

// +kubebuilder:skipversion
type MultiRegionKey struct {
	ARN *string `json:"arn,omitempty"`

	Region *string `json:"region,omitempty"`
}

// +kubebuilder:skipversion
type Tag struct {
	TagKey *string `json:"tagKey,omitempty"`

	TagValue *string `json:"tagValue,omitempty"`
}
