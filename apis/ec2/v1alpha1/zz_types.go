/*
Copyright 2021 The Crossplane Authors.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by ack-generate. DO NOT EDIT.

package v1alpha1

import (
	metav1 "k8s.io/apimachinery/pkg/apis/meta/v1"
)

// Hack to avoid import errors during build...
var (
	_ = &metav1.Time{}
)

type AccountAttribute struct {
	AttributeName *string `json:"attributeName,omitempty"`
}

type AccountAttributeValue struct {
	AttributeValue *string `json:"attributeValue,omitempty"`
}

type ActiveInstance struct {
	InstanceID *string `json:"instanceID,omitempty"`

	InstanceType *string `json:"instanceType,omitempty"`

	SpotInstanceRequestID *string `json:"spotInstanceRequestID,omitempty"`
}

type AddPrefixListEntry struct {
	CIDR *string `json:"cidr,omitempty"`

	Description *string `json:"description,omitempty"`
}

type Address struct {
	AllocationID *string `json:"allocationID,omitempty"`

	AssociationID *string `json:"associationID,omitempty"`

	CarrierIP *string `json:"carrierIP,omitempty"`

	CustomerOwnedIP *string `json:"customerOwnedIP,omitempty"`

	CustomerOwnedIPv4Pool *string `json:"customerOwnedIPv4Pool,omitempty"`

	InstanceID *string `json:"instanceID,omitempty"`

	NetworkBorderGroup *string `json:"networkBorderGroup,omitempty"`

	NetworkInterfaceID *string `json:"networkInterfaceID,omitempty"`

	NetworkInterfaceOwnerID *string `json:"networkInterfaceOwnerID,omitempty"`

	PrivateIPAddress *string `json:"privateIPAddress,omitempty"`

	PublicIP *string `json:"publicIP,omitempty"`

	PublicIPv4Pool *string `json:"publicIPv4Pool,omitempty"`

	Tags []*Tag `json:"tags,omitempty"`
}

type AllowedPrincipal struct {
	Principal *string `json:"principal,omitempty"`
}

type AlternatePathHint struct {
	ComponentARN *string `json:"componentARN,omitempty"`

	ComponentID *string `json:"componentID,omitempty"`
}

type AnalysisACLRule struct {
	CIDR *string `json:"cidr,omitempty"`

	Egress *bool `json:"egress,omitempty"`

	Protocol *string `json:"protocol,omitempty"`

	RuleAction *string `json:"ruleAction,omitempty"`
}

type AnalysisComponent struct {
	ARN *string `json:"arn,omitempty"`

	ID *string `json:"id,omitempty"`
}

type AnalysisLoadBalancerTarget struct {
	AvailabilityZone *string `json:"availabilityZone,omitempty"`
}

type AnalysisPacketHeader struct {
	Protocol *string `json:"protocol,omitempty"`
}

type AnalysisRouteTableRoute struct {
	DestinationCIDR *string `json:"destinationCIDR,omitempty"`

	DestinationPrefixListID *string `json:"destinationPrefixListID,omitempty"`

	EgressOnlyInternetGatewayID *string `json:"egressOnlyInternetGatewayID,omitempty"`

	GatewayID *string `json:"gatewayID,omitempty"`

	InstanceID *string `json:"instanceID,omitempty"`

	NatGatewayID *string `json:"natGatewayID,omitempty"`

	NetworkInterfaceID *string `json:"networkInterfaceID,omitempty"`

	Origin *string `json:"origin,omitempty"`

	TransitGatewayID *string `json:"transitGatewayID,omitempty"`

	VPCPeeringConnectionID *string `json:"vpcPeeringConnectionID,omitempty"`
}

type AnalysisSecurityGroupRule struct {
	CIDR *string `json:"cidr,omitempty"`

	Direction *string `json:"direction,omitempty"`

	PrefixListID *string `json:"prefixListID,omitempty"`

	Protocol *string `json:"protocol,omitempty"`

	SecurityGroupID *string `json:"securityGroupID,omitempty"`
}

type AssignedPrivateIPAddress struct {
	PrivateIPAddress *string `json:"privateIPAddress,omitempty"`
}

type AssociatedRole struct {
	CertificateS3BucketName *string `json:"certificateS3BucketName,omitempty"`

	CertificateS3ObjectKey *string `json:"certificateS3ObjectKey,omitempty"`

	EncryptionKMSKeyID *string `json:"encryptionKMSKeyID,omitempty"`
}

type AssociatedTargetNetwork struct {
	NetworkID *string `json:"networkID,omitempty"`
}

type AssociationStatus struct {
	Message *string `json:"message,omitempty"`
}

type AttributeBooleanValue struct {
	Value *bool `json:"value,omitempty"`
}

type AttributeValue struct {
	Value *string `json:"value,omitempty"`
}

type AuthorizationRule struct {
	AccessAll *bool `json:"accessAll,omitempty"`

	ClientVPNEndpointID *string `json:"clientVPNEndpointID,omitempty"`

	Description *string `json:"description,omitempty"`

	DestinationCIDR *string `json:"destinationCIDR,omitempty"`

	GroupID *string `json:"groupID,omitempty"`
}

type AvailabilityZone struct {
	GroupName *string `json:"groupName,omitempty"`

	NetworkBorderGroup *string `json:"networkBorderGroup,omitempty"`

	ParentZoneID *string `json:"parentZoneID,omitempty"`

	ParentZoneName *string `json:"parentZoneName,omitempty"`

	RegionName *string `json:"regionName,omitempty"`

	ZoneID *string `json:"zoneID,omitempty"`

	ZoneName *string `json:"zoneName,omitempty"`

	ZoneType *string `json:"zoneType,omitempty"`
}

type AvailabilityZoneMessage struct {
	Message *string `json:"message,omitempty"`
}

type BlockDeviceMapping struct {
	DeviceName *string `json:"deviceName,omitempty"`

	NoDevice *string `json:"noDevice,omitempty"`

	VirtualName *string `json:"virtualName,omitempty"`
}

type BundleTask struct {
	BundleID *string `json:"bundleID,omitempty"`

	InstanceID *string `json:"instanceID,omitempty"`

	Progress *string `json:"progress,omitempty"`

	StartTime *metav1.Time `json:"startTime,omitempty"`

	UpdateTime *metav1.Time `json:"updateTime,omitempty"`
}

type BundleTaskError struct {
	Code *string `json:"code,omitempty"`

	Message *string `json:"message,omitempty"`
}

type ByoipCIDR struct {
	CIDR *string `json:"cidr,omitempty"`

	Description *string `json:"description,omitempty"`

	StatusMessage *string `json:"statusMessage,omitempty"`
}

type CIDRAuthorizationContext struct {
	Message *string `json:"message,omitempty"`

	Signature *string `json:"signature,omitempty"`
}

type CIDRBlock struct {
	CIDRBlock *string `json:"cidrBlock,omitempty"`
}

type CancelSpotFleetRequestsError struct {
	Message *string `json:"message,omitempty"`
}

type CancelSpotFleetRequestsErrorItem struct {
	SpotFleetRequestID *string `json:"spotFleetRequestID,omitempty"`
}

type CancelSpotFleetRequestsSuccessItem struct {
	SpotFleetRequestID *string `json:"spotFleetRequestID,omitempty"`
}

type CancelledSpotInstanceRequest struct {
	SpotInstanceRequestID *string `json:"spotInstanceRequestID,omitempty"`
}

type CapacityReservation struct {
	AvailabilityZone *string `json:"availabilityZone,omitempty"`

	AvailabilityZoneID *string `json:"availabilityZoneID,omitempty"`

	CapacityReservationARN *string `json:"capacityReservationARN,omitempty"`

	CapacityReservationID *string `json:"capacityReservationID,omitempty"`

	CreateDate *metav1.Time `json:"createDate,omitempty"`

	EBSOptimized *bool `json:"ebsOptimized,omitempty"`

	EndDate *metav1.Time `json:"endDate,omitempty"`

	EphemeralStorage *bool `json:"ephemeralStorage,omitempty"`

	InstanceType *string `json:"instanceType,omitempty"`

	OwnerID *string `json:"ownerID,omitempty"`

	Tags []*Tag `json:"tags,omitempty"`
}

type CapacityReservationGroup struct {
	GroupARN *string `json:"groupARN,omitempty"`

	OwnerID *string `json:"ownerID,omitempty"`
}

type CapacityReservationTarget struct {
	CapacityReservationResourceGroupARN *string `json:"capacityReservationResourceGroupARN,omitempty"`
}

type CapacityReservationTargetResponse struct {
	CapacityReservationID *string `json:"capacityReservationID,omitempty"`

	CapacityReservationResourceGroupARN *string `json:"capacityReservationResourceGroupARN,omitempty"`
}

type CarrierGateway struct {
	OwnerID *string `json:"ownerID,omitempty"`

	Tags []*Tag `json:"tags,omitempty"`

	VPCID *string `json:"vpcID,omitempty"`
}

type CertificateAuthentication struct {
	ClientRootCertificateChain *string `json:"clientRootCertificateChain,omitempty"`
}

type CertificateAuthenticationRequest struct {
	ClientRootCertificateChainARN *string `json:"clientRootCertificateChainARN,omitempty"`
}

type ClassicLinkDNSSupport struct {
	ClassicLinkDNSSupported *bool `json:"classicLinkDNSSupported,omitempty"`

	VPCID *string `json:"vpcID,omitempty"`
}

type ClassicLinkInstance struct {
	InstanceID *string `json:"instanceID,omitempty"`

	Tags []*Tag `json:"tags,omitempty"`

	VPCID *string `json:"vpcID,omitempty"`
}

type ClassicLoadBalancer struct {
	Name *string `json:"name,omitempty"`
}

type ClientCertificateRevocationListStatus struct {
	Message *string `json:"message,omitempty"`
}

type ClientConnectOptions struct {
	Enabled *bool `json:"enabled,omitempty"`

	LambdaFunctionARN *string `json:"lambdaFunctionARN,omitempty"`
}

type ClientConnectResponseOptions struct {
	Enabled *bool `json:"enabled,omitempty"`

	LambdaFunctionARN *string `json:"lambdaFunctionARN,omitempty"`
}

type ClientData struct {
	Comment *string `json:"comment,omitempty"`

	UploadEnd *metav1.Time `json:"uploadEnd,omitempty"`

	UploadStart *metav1.Time `json:"uploadStart,omitempty"`
}

type ClientVPNAuthorizationRuleStatus struct {
	Message *string `json:"message,omitempty"`
}

type ClientVPNConnection struct {
	ClientIP *string `json:"clientIP,omitempty"`

	ClientVPNEndpointID *string `json:"clientVPNEndpointID,omitempty"`

	CommonName *string `json:"commonName,omitempty"`

	ConnectionEndTime *string `json:"connectionEndTime,omitempty"`

	ConnectionEstablishedTime *string `json:"connectionEstablishedTime,omitempty"`

	ConnectionID *string `json:"connectionID,omitempty"`

	EgressBytes *string `json:"egressBytes,omitempty"`

	EgressPackets *string `json:"egressPackets,omitempty"`

	IngressBytes *string `json:"ingressBytes,omitempty"`

	IngressPackets *string `json:"ingressPackets,omitempty"`

	PostureComplianceStatuses []*string `json:"postureComplianceStatuses,omitempty"`

	Timestamp *string `json:"timestamp,omitempty"`

	Username *string `json:"username,omitempty"`
}

type ClientVPNConnectionStatus struct {
	Message *string `json:"message,omitempty"`
}

type ClientVPNEndpoint struct {
	ClientCIDRBlock *string `json:"clientCIDRBlock,omitempty"`

	ClientVPNEndpointID *string `json:"clientVPNEndpointID,omitempty"`

	CreationTime *string `json:"creationTime,omitempty"`

	DeletionTime *string `json:"deletionTime,omitempty"`

	Description *string `json:"description,omitempty"`

	DNSName *string `json:"dnsName,omitempty"`

	DNSServers []*string `json:"dnsServers,omitempty"`

	SelfServicePortalURL *string `json:"selfServicePortalURL,omitempty"`

	ServerCertificateARN *string `json:"serverCertificateARN,omitempty"`

	SplitTunnel *bool `json:"splitTunnel,omitempty"`

	Tags []*Tag `json:"tags,omitempty"`

	VPCID *string `json:"vpcID,omitempty"`
}

type ClientVPNEndpointAttributeStatus struct {
	Message *string `json:"message,omitempty"`
}

type ClientVPNEndpointStatus struct {
	Message *string `json:"message,omitempty"`
}

type ClientVPNRoute struct {
	ClientVPNEndpointID *string `json:"clientVPNEndpointID,omitempty"`

	Description *string `json:"description,omitempty"`

	DestinationCIDR *string `json:"destinationCIDR,omitempty"`

	Origin *string `json:"origin,omitempty"`

	TargetSubnet *string `json:"targetSubnet,omitempty"`

	Type *string `json:"type_,omitempty"`
}

type ClientVPNRouteStatus struct {
	Message *string `json:"message,omitempty"`
}

type CoipAddressUsage struct {
	AllocationID *string `json:"allocationID,omitempty"`

	AWSAccountID *string `json:"awsAccountID,omitempty"`

	AWSService *string `json:"awsService,omitempty"`

	CoIP *string `json:"coIP,omitempty"`
}

type CoipPool struct {
	PoolCIDRs []*string `json:"poolCIDRs,omitempty"`

	Tags []*Tag `json:"tags,omitempty"`
}

type ConnectionLogOptions struct {
	CloudwatchLogGroup *string `json:"cloudwatchLogGroup,omitempty"`

	CloudwatchLogStream *string `json:"cloudwatchLogStream,omitempty"`

	Enabled *bool `json:"enabled,omitempty"`
}

type ConnectionLogResponseOptions struct {
	CloudwatchLogGroup *string `json:"cloudwatchLogGroup,omitempty"`

	CloudwatchLogStream *string `json:"cloudwatchLogStream,omitempty"`

	Enabled *bool `json:"enabled,omitempty"`
}

type ConnectionNotification struct {
	ConnectionEvents []*string `json:"connectionEvents,omitempty"`

	ConnectionNotificationARN *string `json:"connectionNotificationARN,omitempty"`

	ConnectionNotificationID *string `json:"connectionNotificationID,omitempty"`

	ServiceID *string `json:"serviceID,omitempty"`

	VPCEndpointID *string `json:"vpcEndpointID,omitempty"`
}

type ConversionTask struct {
	ConversionTaskID *string `json:"conversionTaskID,omitempty"`

	ExpirationTime *string `json:"expirationTime,omitempty"`

	StatusMessage *string `json:"statusMessage,omitempty"`

	Tags []*Tag `json:"tags,omitempty"`
}

type CreateFleetError struct {
	ErrorCode *string `json:"errorCode,omitempty"`

	ErrorMessage *string `json:"errorMessage,omitempty"`
}

type CreateVolumePermission struct {
	UserID *string `json:"userID,omitempty"`
}

type CreditSpecification struct {
	CPUCredits *string `json:"cpuCredits,omitempty"`
}

type CreditSpecificationRequest struct {
	CPUCredits *string `json:"cpuCredits,omitempty"`
}

type CustomerGateway struct {
	BGPASN *string `json:"bgpASN,omitempty"`

	CertificateARN *string `json:"certificateARN,omitempty"`

	CustomerGatewayID *string `json:"customerGatewayID,omitempty"`

	DeviceName *string `json:"deviceName,omitempty"`

	IPAddress *string `json:"ipAddress,omitempty"`

	State *string `json:"state,omitempty"`

	Tags []*Tag `json:"tags,omitempty"`

	Type *string `json:"type_,omitempty"`
}

type DHCPConfiguration struct {
	Key *string `json:"key,omitempty"`
}

type DHCPOptions struct {
	DHCPOptionsID *string `json:"dhcpOptionsID,omitempty"`

	OwnerID *string `json:"ownerID,omitempty"`

	Tags []*Tag `json:"tags,omitempty"`
}

type DNSEntry struct {
	DNSName *string `json:"dnsName,omitempty"`

	HostedZoneID *string `json:"hostedZoneID,omitempty"`
}

type DNSServersOptionsModifyStructure struct {
	CustomDNSServers []*string `json:"customDNSServers,omitempty"`

	Enabled *bool `json:"enabled,omitempty"`
}

type DeleteFleetError struct {
	Message *string `json:"message,omitempty"`
}

type DeleteLaunchTemplateVersionsResponseErrorItem struct {
	LaunchTemplateID *string `json:"launchTemplateID,omitempty"`

	LaunchTemplateName *string `json:"launchTemplateName,omitempty"`
}

type DeleteLaunchTemplateVersionsResponseSuccessItem struct {
	LaunchTemplateID *string `json:"launchTemplateID,omitempty"`

	LaunchTemplateName *string `json:"launchTemplateName,omitempty"`
}

type DeleteQueuedReservedInstancesError struct {
	Message *string `json:"message,omitempty"`
}

type DeregisterInstanceTagAttributeRequest struct {
	IncludeAllTagsOfInstance *bool `json:"includeAllTagsOfInstance,omitempty"`
}

type DescribeFastSnapshotRestoreSuccessItem struct {
	AvailabilityZone *string `json:"availabilityZone,omitempty"`

	OwnerAlias *string `json:"ownerAlias,omitempty"`

	OwnerID *string `json:"ownerID,omitempty"`

	SnapshotID *string `json:"snapshotID,omitempty"`

	StateTransitionReason *string `json:"stateTransitionReason,omitempty"`
}

type DescribeFleetError struct {
	ErrorCode *string `json:"errorCode,omitempty"`

	ErrorMessage *string `json:"errorMessage,omitempty"`
}

type DirectoryServiceAuthentication struct {
	DirectoryID *string `json:"directoryID,omitempty"`
}

type DirectoryServiceAuthenticationRequest struct {
	DirectoryID *string `json:"directoryID,omitempty"`
}

type DisableFastSnapshotRestoreErrorItem struct {
	SnapshotID *string `json:"snapshotID,omitempty"`
}

type DisableFastSnapshotRestoreStateError struct {
	Code *string `json:"code,omitempty"`

	Message *string `json:"message,omitempty"`
}

type DisableFastSnapshotRestoreStateErrorItem struct {
	AvailabilityZone *string `json:"availabilityZone,omitempty"`
}

type DisableFastSnapshotRestoreSuccessItem struct {
	AvailabilityZone *string `json:"availabilityZone,omitempty"`

	OwnerAlias *string `json:"ownerAlias,omitempty"`

	OwnerID *string `json:"ownerID,omitempty"`

	SnapshotID *string `json:"snapshotID,omitempty"`

	StateTransitionReason *string `json:"stateTransitionReason,omitempty"`
}

type DiskImage struct {
	Description *string `json:"description,omitempty"`
}

type DiskImageDescription struct {
	Checksum *string `json:"checksum,omitempty"`

	ImportManifestURL *string `json:"importManifestURL,omitempty"`
}

type DiskImageDetail struct {
	ImportManifestURL *string `json:"importManifestURL,omitempty"`
}

type DiskImageVolumeDescription struct {
	ID *string `json:"id,omitempty"`
}

type EBSBlockDevice struct {
	DeleteOnTermination *bool `json:"deleteOnTermination,omitempty"`

	Encrypted *bool `json:"encrypted,omitempty"`

	KMSKeyID *string `json:"kmsKeyID,omitempty"`

	OutpostARN *string `json:"outpostARN,omitempty"`

	SnapshotID *string `json:"snapshotID,omitempty"`
}

type EBSInstanceBlockDevice struct {
	AttachTime *metav1.Time `json:"attachTime,omitempty"`

	DeleteOnTermination *bool `json:"deleteOnTermination,omitempty"`

	VolumeID *string `json:"volumeID,omitempty"`
}

type EBSInstanceBlockDeviceSpecification struct {
	DeleteOnTermination *bool `json:"deleteOnTermination,omitempty"`
}

type EgressOnlyInternetGateway struct {
	Tags []*Tag `json:"tags,omitempty"`
}

type ElasticGPUAssociation struct {
	ElasticGPUAssociationID *string `json:"elasticGPUAssociationID,omitempty"`

	ElasticGPUAssociationState *string `json:"elasticGPUAssociationState,omitempty"`

	ElasticGPUAssociationTime *string `json:"elasticGPUAssociationTime,omitempty"`

	ElasticGPUID *string `json:"elasticGPUID,omitempty"`
}

type ElasticGPUSpecification struct {
	Type *string `json:"type_,omitempty"`
}

type ElasticGPUSpecificationResponse struct {
	Type *string `json:"type_,omitempty"`
}

type ElasticGPUs struct {
	AvailabilityZone *string `json:"availabilityZone,omitempty"`

	ElasticGPUID *string `json:"elasticGPUID,omitempty"`

	ElasticGPUType *string `json:"elasticGPUType,omitempty"`

	InstanceID *string `json:"instanceID,omitempty"`

	Tags []*Tag `json:"tags,omitempty"`
}

type ElasticInferenceAccelerator struct {
	Type *string `json:"type_,omitempty"`
}

type ElasticInferenceAcceleratorAssociation struct {
	ElasticInferenceAcceleratorARN *string `json:"elasticInferenceAcceleratorARN,omitempty"`

	ElasticInferenceAcceleratorAssociationID *string `json:"elasticInferenceAcceleratorAssociationID,omitempty"`

	ElasticInferenceAcceleratorAssociationState *string `json:"elasticInferenceAcceleratorAssociationState,omitempty"`

	ElasticInferenceAcceleratorAssociationTime *metav1.Time `json:"elasticInferenceAcceleratorAssociationTime,omitempty"`
}

type EnableFastSnapshotRestoreErrorItem struct {
	SnapshotID *string `json:"snapshotID,omitempty"`
}

type EnableFastSnapshotRestoreStateError struct {
	Code *string `json:"code,omitempty"`

	Message *string `json:"message,omitempty"`
}

type EnableFastSnapshotRestoreStateErrorItem struct {
	AvailabilityZone *string `json:"availabilityZone,omitempty"`
}

type EnableFastSnapshotRestoreSuccessItem struct {
	AvailabilityZone *string `json:"availabilityZone,omitempty"`

	OwnerAlias *string `json:"ownerAlias,omitempty"`

	OwnerID *string `json:"ownerID,omitempty"`

	SnapshotID *string `json:"snapshotID,omitempty"`

	StateTransitionReason *string `json:"stateTransitionReason,omitempty"`
}

type EnclaveOptions struct {
	Enabled *bool `json:"enabled,omitempty"`
}

type EnclaveOptionsRequest struct {
	Enabled *bool `json:"enabled,omitempty"`
}

type EventInformation struct {
	EventDescription *string `json:"eventDescription,omitempty"`

	EventSubType *string `json:"eventSubType,omitempty"`

	InstanceID *string `json:"instanceID,omitempty"`
}

type Explanation struct {
	AvailabilityZones []*string `json:"availabilityZones,omitempty"`

	CIDRs []*string `json:"cidrs,omitempty"`

	Direction *string `json:"direction,omitempty"`

	ExplanationCode *string `json:"explanationCode,omitempty"`

	MissingComponent *string `json:"missingComponent,omitempty"`

	PacketField *string `json:"packetField,omitempty"`

	State *string `json:"state,omitempty"`
}

type ExportImageTask struct {
	Description *string `json:"description,omitempty"`

	ExportImageTaskID *string `json:"exportImageTaskID,omitempty"`

	ImageID *string `json:"imageID,omitempty"`

	Progress *string `json:"progress,omitempty"`

	Status *string `json:"status,omitempty"`

	StatusMessage *string `json:"statusMessage,omitempty"`

	Tags []*Tag `json:"tags,omitempty"`
}

type ExportTask struct {
	Description *string `json:"description,omitempty"`

	ExportTaskID *string `json:"exportTaskID,omitempty"`

	StatusMessage *string `json:"statusMessage,omitempty"`

	Tags []*Tag `json:"tags,omitempty"`
}

type ExportTaskS3Location struct {
	S3Bucket *string `json:"s3Bucket,omitempty"`

	S3Prefix *string `json:"s3Prefix,omitempty"`
}

type ExportTaskS3LocationRequest struct {
	S3Bucket *string `json:"s3Bucket,omitempty"`

	S3Prefix *string `json:"s3Prefix,omitempty"`
}

type ExportToS3Task struct {
	S3Bucket *string `json:"s3Bucket,omitempty"`

	S3Key *string `json:"s3Key,omitempty"`
}

type ExportToS3TaskSpecification struct {
	S3Bucket *string `json:"s3Bucket,omitempty"`

	S3Prefix *string `json:"s3Prefix,omitempty"`
}

type FPGAImage struct {
	CreateTime *metav1.Time `json:"createTime,omitempty"`

	DataRetentionSupport *bool `json:"dataRetentionSupport,omitempty"`

	Description *string `json:"description,omitempty"`

	FPGAImageGlobalID *string `json:"fpgaImageGlobalID,omitempty"`

	FPGAImageID *string `json:"fpgaImageID,omitempty"`

	Name *string `json:"name,omitempty"`

	OwnerAlias *string `json:"ownerAlias,omitempty"`

	OwnerID *string `json:"ownerID,omitempty"`

	Public *bool `json:"public,omitempty"`

	ShellVersion *string `json:"shellVersion,omitempty"`

	Tags []*Tag `json:"tags,omitempty"`

	UpdateTime *metav1.Time `json:"updateTime,omitempty"`
}

type FPGAImageAttribute struct {
	Description *string `json:"description,omitempty"`

	FPGAImageID *string `json:"fpgaImageID,omitempty"`

	Name *string `json:"name,omitempty"`
}

type FPGAImageState struct {
	Message *string `json:"message,omitempty"`
}

type FailedQueuedPurchaseDeletion struct {
	ReservedInstancesID *string `json:"reservedInstancesID,omitempty"`
}

type FederatedAuthentication struct {
	SamlProviderARN *string `json:"samlProviderARN,omitempty"`

	SelfServiceSamlProviderARN *string `json:"selfServiceSamlProviderARN,omitempty"`
}

type FederatedAuthenticationRequest struct {
	SAMLProviderARN *string `json:"sAMLProviderARN,omitempty"`

	SelfServiceSAMLProviderARN *string `json:"selfServiceSAMLProviderARN,omitempty"`
}

type Filter struct {
	Name *string `json:"name,omitempty"`

	Values []*string `json:"values,omitempty"`
}

type FleetData struct {
	ClientToken *string `json:"clientToken,omitempty"`

	CreateTime *metav1.Time `json:"createTime,omitempty"`

	ReplaceUnhealthyInstances *bool `json:"replaceUnhealthyInstances,omitempty"`

	Tags []*Tag `json:"tags,omitempty"`

	TerminateInstancesWithExpiration *bool `json:"terminateInstancesWithExpiration,omitempty"`

	ValidFrom *metav1.Time `json:"validFrom,omitempty"`

	ValidUntil *metav1.Time `json:"validUntil,omitempty"`
}

type FleetLaunchTemplateOverrides struct {
	AvailabilityZone *string `json:"availabilityZone,omitempty"`

	MaxPrice *string `json:"maxPrice,omitempty"`

	SubnetID *string `json:"subnetID,omitempty"`
}

type FleetLaunchTemplateOverridesRequest struct {
	AvailabilityZone *string `json:"availabilityZone,omitempty"`

	MaxPrice *string `json:"maxPrice,omitempty"`
}

type FleetLaunchTemplateSpecification struct {
	LaunchTemplateID *string `json:"launchTemplateID,omitempty"`

	Version *string `json:"version,omitempty"`
}

type FleetLaunchTemplateSpecificationRequest struct {
	Version *string `json:"version,omitempty"`
}

type FlowLog struct {
	DeliverLogsErrorMessage *string `json:"deliverLogsErrorMessage,omitempty"`

	DeliverLogsPermissionARN *string `json:"deliverLogsPermissionARN,omitempty"`

	DeliverLogsStatus *string `json:"deliverLogsStatus,omitempty"`

	FlowLogID *string `json:"flowLogID,omitempty"`

	FlowLogStatus *string `json:"flowLogStatus,omitempty"`

	LogDestination *string `json:"logDestination,omitempty"`

	LogFormat *string `json:"logFormat,omitempty"`

	LogGroupName *string `json:"logGroupName,omitempty"`

	ResourceID *string `json:"resourceID,omitempty"`

	Tags []*Tag `json:"tags,omitempty"`
}

type GroupIdentifier struct {
	GroupID *string `json:"groupID,omitempty"`

	GroupName *string `json:"groupName,omitempty"`
}

type HibernationOptions struct {
	Configured *bool `json:"configured,omitempty"`
}

type HibernationOptionsRequest struct {
	Configured *bool `json:"configured,omitempty"`
}

type HistoryRecord struct {
	Timestamp *metav1.Time `json:"timestamp,omitempty"`
}

type HistoryRecordEntry struct {
	Timestamp *metav1.Time `json:"timestamp,omitempty"`
}

type Host struct {
	AllocationTime *metav1.Time `json:"allocationTime,omitempty"`

	AvailabilityZone *string `json:"availabilityZone,omitempty"`

	AvailabilityZoneID *string `json:"availabilityZoneID,omitempty"`

	ClientToken *string `json:"clientToken,omitempty"`

	HostID *string `json:"hostID,omitempty"`

	HostReservationID *string `json:"hostReservationID,omitempty"`

	MemberOfServiceLinkedResourceGroup *bool `json:"memberOfServiceLinkedResourceGroup,omitempty"`

	OwnerID *string `json:"ownerID,omitempty"`

	ReleaseTime *metav1.Time `json:"releaseTime,omitempty"`

	Tags []*Tag `json:"tags,omitempty"`
}

type HostInstance struct {
	InstanceID *string `json:"instanceID,omitempty"`

	InstanceType *string `json:"instanceType,omitempty"`

	OwnerID *string `json:"ownerID,omitempty"`
}

type HostOffering struct {
	HourlyPrice *string `json:"hourlyPrice,omitempty"`

	InstanceFamily *string `json:"instanceFamily,omitempty"`

	OfferingID *string `json:"offeringID,omitempty"`

	UpfrontPrice *string `json:"upfrontPrice,omitempty"`
}

type HostProperties struct {
	InstanceFamily *string `json:"instanceFamily,omitempty"`

	InstanceType *string `json:"instanceType,omitempty"`
}

type HostReservation struct {
	End *metav1.Time `json:"end,omitempty"`

	HostReservationID *string `json:"hostReservationID,omitempty"`

	HourlyPrice *string `json:"hourlyPrice,omitempty"`

	InstanceFamily *string `json:"instanceFamily,omitempty"`

	OfferingID *string `json:"offeringID,omitempty"`

	Start *metav1.Time `json:"start,omitempty"`

	Tags []*Tag `json:"tags,omitempty"`

	UpfrontPrice *string `json:"upfrontPrice,omitempty"`
}

type IAMInstanceProfile struct {
	ARN *string `json:"arn,omitempty"`

	ID *string `json:"id,omitempty"`
}

type IAMInstanceProfileAssociation struct {
	AssociationID *string `json:"associationID,omitempty"`

	InstanceID *string `json:"instanceID,omitempty"`

	Timestamp *metav1.Time `json:"timestamp,omitempty"`
}

type IAMInstanceProfileSpecification struct {
	ARN *string `json:"arn,omitempty"`

	Name *string `json:"name,omitempty"`
}

type IDFormat struct {
	Deadline *metav1.Time `json:"deadline,omitempty"`

	Resource *string `json:"resource,omitempty"`

	UseLongIDs *bool `json:"useLongIDs,omitempty"`
}

type IKEVersionsListValue struct {
	Value *string `json:"value,omitempty"`
}

type IKEVersionsRequestListValue struct {
	Value *string `json:"value,omitempty"`
}

type IPPermission struct {
	IPProtocol *string `json:"ipProtocol,omitempty"`
}

type IPRange struct {
	CIDRIP *string `json:"cidrIP,omitempty"`

	Description *string `json:"description,omitempty"`
}

type IPv6CIDRAssociation struct {
	AssociatedResource *string `json:"associatedResource,omitempty"`

	IPv6CIDR *string `json:"ipv6CIDR,omitempty"`
}

type IPv6CIDRBlock struct {
	IPv6CIDRBlock *string `json:"ipv6CIDRBlock,omitempty"`
}

type IPv6Pool struct {
	Description *string `json:"description,omitempty"`

	PoolID *string `json:"poolID,omitempty"`

	Tags []*Tag `json:"tags,omitempty"`
}

type IPv6Range struct {
	CIDRIPv6 *string `json:"cidrIPv6,omitempty"`

	Description *string `json:"description,omitempty"`
}

type Image struct {
	CreationDate *string `json:"creationDate,omitempty"`

	Description *string `json:"description,omitempty"`

	EnaSupport *bool `json:"enaSupport,omitempty"`

	ImageID *string `json:"imageID,omitempty"`

	ImageLocation *string `json:"imageLocation,omitempty"`

	ImageOwnerAlias *string `json:"imageOwnerAlias,omitempty"`

	KernelID *string `json:"kernelID,omitempty"`

	Name *string `json:"name,omitempty"`

	OwnerID *string `json:"ownerID,omitempty"`

	PlatformDetails *string `json:"platformDetails,omitempty"`

	Public *bool `json:"public,omitempty"`

	RamdiskID *string `json:"ramdiskID,omitempty"`

	RootDeviceName *string `json:"rootDeviceName,omitempty"`

	SriovNetSupport *string `json:"sriovNetSupport,omitempty"`

	Tags []*Tag `json:"tags,omitempty"`

	UsageOperation *string `json:"usageOperation,omitempty"`
}

type ImageDiskContainer struct {
	Description *string `json:"description,omitempty"`

	DeviceName *string `json:"deviceName,omitempty"`

	Format *string `json:"format,omitempty"`

	URL *string `json:"url,omitempty"`
}

type ImportImageLicenseConfigurationRequest struct {
	LicenseConfigurationARN *string `json:"licenseConfigurationARN,omitempty"`
}

type ImportImageLicenseConfigurationResponse struct {
	LicenseConfigurationARN *string `json:"licenseConfigurationARN,omitempty"`
}

type ImportImageTask struct {
	Architecture *string `json:"architecture,omitempty"`

	Description *string `json:"description,omitempty"`

	Encrypted *bool `json:"encrypted,omitempty"`

	Hypervisor *string `json:"hypervisor,omitempty"`

	ImageID *string `json:"imageID,omitempty"`

	ImportTaskID *string `json:"importTaskID,omitempty"`

	KMSKeyID *string `json:"kmsKeyID,omitempty"`

	LicenseType *string `json:"licenseType,omitempty"`

	Platform *string `json:"platform,omitempty"`

	Progress *string `json:"progress,omitempty"`

	Status *string `json:"status,omitempty"`

	StatusMessage *string `json:"statusMessage,omitempty"`

	Tags []*Tag `json:"tags,omitempty"`
}

type ImportInstanceLaunchSpecification struct {
	AdditionalInfo *string `json:"additionalInfo,omitempty"`

	Monitoring *bool `json:"monitoring,omitempty"`

	PrivateIPAddress *string `json:"privateIPAddress,omitempty"`
}

type ImportInstanceTaskDetails struct {
	Description *string `json:"description,omitempty"`

	InstanceID *string `json:"instanceID,omitempty"`
}

type ImportInstanceVolumeDetailItem struct {
	AvailabilityZone *string `json:"availabilityZone,omitempty"`

	Description *string `json:"description,omitempty"`

	Status *string `json:"status,omitempty"`

	StatusMessage *string `json:"statusMessage,omitempty"`
}

type ImportSnapshotTask struct {
	Description *string `json:"description,omitempty"`

	ImportTaskID *string `json:"importTaskID,omitempty"`

	Tags []*Tag `json:"tags,omitempty"`
}

type ImportVolumeTaskDetails struct {
	AvailabilityZone *string `json:"availabilityZone,omitempty"`

	Description *string `json:"description,omitempty"`
}

type Instance struct {
	CapacityReservationID *string `json:"capacityReservationID,omitempty"`

	ClientToken *string `json:"clientToken,omitempty"`

	EBSOptimized *bool `json:"ebsOptimized,omitempty"`

	EnaSupport *bool `json:"enaSupport,omitempty"`

	ImageID *string `json:"imageID,omitempty"`

	InstanceID *string `json:"instanceID,omitempty"`

	KernelID *string `json:"kernelID,omitempty"`

	KeyName *string `json:"keyName,omitempty"`

	LaunchTime *metav1.Time `json:"launchTime,omitempty"`

	OutpostARN *string `json:"outpostARN,omitempty"`

	PrivateDNSName *string `json:"privateDNSName,omitempty"`

	PrivateIPAddress *string `json:"privateIPAddress,omitempty"`

	PublicDNSName *string `json:"publicDNSName,omitempty"`

	PublicIPAddress *string `json:"publicIPAddress,omitempty"`

	RamdiskID *string `json:"ramdiskID,omitempty"`

	RootDeviceName *string `json:"rootDeviceName,omitempty"`

	SourceDestCheck *bool `json:"sourceDestCheck,omitempty"`

	SpotInstanceRequestID *string `json:"spotInstanceRequestID,omitempty"`

	SriovNetSupport *string `json:"sriovNetSupport,omitempty"`

	StateTransitionReason *string `json:"stateTransitionReason,omitempty"`

	SubnetID *string `json:"subnetID,omitempty"`

	Tags []*Tag `json:"tags,omitempty"`

	VPCID *string `json:"vpcID,omitempty"`
}

type InstanceBlockDeviceMapping struct {
	DeviceName *string `json:"deviceName,omitempty"`
}

type InstanceBlockDeviceMappingSpecification struct {
	DeviceName *string `json:"deviceName,omitempty"`

	NoDevice *string `json:"noDevice,omitempty"`

	VirtualName *string `json:"virtualName,omitempty"`
}

type InstanceCapacity struct {
	InstanceType *string `json:"instanceType,omitempty"`
}

type InstanceCreditSpecification struct {
	CPUCredits *string `json:"cpuCredits,omitempty"`

	InstanceID *string `json:"instanceID,omitempty"`
}

type InstanceCreditSpecificationRequest struct {
	CPUCredits *string `json:"cpuCredits,omitempty"`
}

type InstanceExportDetails struct {
	InstanceID *string `json:"instanceID,omitempty"`
}

type InstanceFamilyCreditSpecification struct {
	CPUCredits *string `json:"cpuCredits,omitempty"`
}

type InstanceIPv6Address struct {
	IPv6Address *string `json:"ipv6Address,omitempty"`
}

type InstanceIPv6AddressRequest struct {
	IPv6Address *string `json:"ipv6Address,omitempty"`
}

type InstanceMonitoring struct {
	InstanceID *string `json:"instanceID,omitempty"`
}

type InstanceNetworkInterface struct {
	Description *string `json:"description,omitempty"`

	InterfaceType *string `json:"interfaceType,omitempty"`

	MacAddress *string `json:"macAddress,omitempty"`

	NetworkInterfaceID *string `json:"networkInterfaceID,omitempty"`

	OwnerID *string `json:"ownerID,omitempty"`

	PrivateDNSName *string `json:"privateDNSName,omitempty"`

	PrivateIPAddress *string `json:"privateIPAddress,omitempty"`

	SourceDestCheck *bool `json:"sourceDestCheck,omitempty"`

	SubnetID *string `json:"subnetID,omitempty"`

	VPCID *string `json:"vpcID,omitempty"`
}

type InstanceNetworkInterfaceAssociation struct {
	CarrierIP *string `json:"carrierIP,omitempty"`

	IPOwnerID *string `json:"ipOwnerID,omitempty"`

	PublicDNSName *string `json:"publicDNSName,omitempty"`

	PublicIP *string `json:"publicIP,omitempty"`
}

type InstanceNetworkInterfaceAttachment struct {
	AttachTime *metav1.Time `json:"attachTime,omitempty"`

	AttachmentID *string `json:"attachmentID,omitempty"`

	DeleteOnTermination *bool `json:"deleteOnTermination,omitempty"`
}

type InstanceNetworkInterfaceSpecification struct {
	AssociateCarrierIPAddress *bool `json:"associateCarrierIPAddress,omitempty"`

	AssociatePublicIPAddress *bool `json:"associatePublicIPAddress,omitempty"`

	DeleteOnTermination *bool `json:"deleteOnTermination,omitempty"`

	Description *string `json:"description,omitempty"`

	InterfaceType *string `json:"interfaceType,omitempty"`

	NetworkInterfaceID *string `json:"networkInterfaceID,omitempty"`

	PrivateIPAddress *string `json:"privateIPAddress,omitempty"`

	SubnetID *string `json:"subnetID,omitempty"`
}

type InstancePrivateIPAddress struct {
	Primary *bool `json:"primary,omitempty"`

	PrivateDNSName *string `json:"privateDNSName,omitempty"`

	PrivateIPAddress *string `json:"privateIPAddress,omitempty"`
}

type InstanceSpecification struct {
	ExcludeBootVolume *bool `json:"excludeBootVolume,omitempty"`
}

type InstanceStateChange struct {
	InstanceID *string `json:"instanceID,omitempty"`
}

type InstanceStatus struct {
	AvailabilityZone *string `json:"availabilityZone,omitempty"`

	InstanceID *string `json:"instanceID,omitempty"`

	OutpostARN *string `json:"outpostARN,omitempty"`
}

type InstanceStatusDetails struct {
	ImpairedSince *metav1.Time `json:"impairedSince,omitempty"`
}

type InstanceStatusEvent struct {
	Description *string `json:"description,omitempty"`

	NotAfter *metav1.Time `json:"notAfter,omitempty"`

	NotBefore *metav1.Time `json:"notBefore,omitempty"`

	NotBeforeDeadline *metav1.Time `json:"notBeforeDeadline,omitempty"`
}

type InstanceTagNotificationAttribute struct {
	IncludeAllTagsOfInstance *bool `json:"includeAllTagsOfInstance,omitempty"`
}

type InstanceUsage struct {
	AccountID *string `json:"accountID,omitempty"`
}

type InternetGateway struct {
	InternetGatewayID *string `json:"internetGatewayID,omitempty"`

	OwnerID *string `json:"ownerID,omitempty"`

	Tags []*Tag `json:"tags,omitempty"`
}

type InternetGatewayAttachment struct {
	VPCID *string `json:"vpcID,omitempty"`
}

type KeyPairInfo struct {
	KeyFingerprint *string `json:"keyFingerprint,omitempty"`

	KeyName *string `json:"keyName,omitempty"`

	KeyPairID *string `json:"keyPairID,omitempty"`

	Tags []*Tag `json:"tags,omitempty"`
}

type LastError struct {
	Code *string `json:"code,omitempty"`

	Message *string `json:"message,omitempty"`
}

type LaunchPermission struct {
	UserID *string `json:"userID,omitempty"`
}

type LaunchSpecification struct {
	AddressingType *string `json:"addressingType,omitempty"`

	EBSOptimized *bool `json:"ebsOptimized,omitempty"`

	ImageID *string `json:"imageID,omitempty"`

	KernelID *string `json:"kernelID,omitempty"`

	KeyName *string `json:"keyName,omitempty"`

	RamdiskID *string `json:"ramdiskID,omitempty"`

	SubnetID *string `json:"subnetID,omitempty"`

	UserData *string `json:"userData,omitempty"`
}

type LaunchTemplate struct {
	CreateTime *metav1.Time `json:"createTime,omitempty"`

	CreatedBy *string `json:"createdBy,omitempty"`

	LaunchTemplateID *string `json:"launchTemplateID,omitempty"`

	Tags []*Tag `json:"tags,omitempty"`
}

type LaunchTemplateBlockDeviceMapping struct {
	DeviceName *string `json:"deviceName,omitempty"`

	NoDevice *string `json:"noDevice,omitempty"`

	VirtualName *string `json:"virtualName,omitempty"`
}

type LaunchTemplateBlockDeviceMappingRequest struct {
	DeviceName *string `json:"deviceName,omitempty"`

	NoDevice *string `json:"noDevice,omitempty"`

	VirtualName *string `json:"virtualName,omitempty"`
}

type LaunchTemplateEBSBlockDevice struct {
	DeleteOnTermination *bool `json:"deleteOnTermination,omitempty"`

	Encrypted *bool `json:"encrypted,omitempty"`
}

type LaunchTemplateEBSBlockDeviceRequest struct {
	DeleteOnTermination *bool `json:"deleteOnTermination,omitempty"`

	Encrypted *bool `json:"encrypted,omitempty"`
}

type LaunchTemplateElasticInferenceAccelerator struct {
	Type *string `json:"type_,omitempty"`
}

type LaunchTemplateElasticInferenceAcceleratorResponse struct {
	Type *string `json:"type_,omitempty"`
}

type LaunchTemplateEnclaveOptions struct {
	Enabled *bool `json:"enabled,omitempty"`
}

type LaunchTemplateEnclaveOptionsRequest struct {
	Enabled *bool `json:"enabled,omitempty"`
}

type LaunchTemplateHibernationOptions struct {
	Configured *bool `json:"configured,omitempty"`
}

type LaunchTemplateHibernationOptionsRequest struct {
	Configured *bool `json:"configured,omitempty"`
}

type LaunchTemplateIAMInstanceProfileSpecification struct {
	ARN *string `json:"arn,omitempty"`

	Name *string `json:"name,omitempty"`
}

type LaunchTemplateIAMInstanceProfileSpecificationRequest struct {
	ARN *string `json:"arn,omitempty"`

	Name *string `json:"name,omitempty"`
}

type LaunchTemplateInstanceNetworkInterfaceSpecification struct {
	AssociateCarrierIPAddress *bool `json:"associateCarrierIPAddress,omitempty"`

	AssociatePublicIPAddress *bool `json:"associatePublicIPAddress,omitempty"`

	DeleteOnTermination *bool `json:"deleteOnTermination,omitempty"`

	Description *string `json:"description,omitempty"`

	InterfaceType *string `json:"interfaceType,omitempty"`

	PrivateIPAddress *string `json:"privateIPAddress,omitempty"`
}

type LaunchTemplateInstanceNetworkInterfaceSpecificationRequest struct {
	AssociateCarrierIPAddress *bool `json:"associateCarrierIPAddress,omitempty"`

	AssociatePublicIPAddress *bool `json:"associatePublicIPAddress,omitempty"`

	DeleteOnTermination *bool `json:"deleteOnTermination,omitempty"`

	Description *string `json:"description,omitempty"`

	InterfaceType *string `json:"interfaceType,omitempty"`

	PrivateIPAddress *string `json:"privateIPAddress,omitempty"`
}

type LaunchTemplateLicenseConfiguration struct {
	LicenseConfigurationARN *string `json:"licenseConfigurationARN,omitempty"`
}

type LaunchTemplateLicenseConfigurationRequest struct {
	LicenseConfigurationARN *string `json:"licenseConfigurationARN,omitempty"`
}

type LaunchTemplateOverrides struct {
	AvailabilityZone *string `json:"availabilityZone,omitempty"`

	SpotPrice *string `json:"spotPrice,omitempty"`

	SubnetID *string `json:"subnetID,omitempty"`
}

type LaunchTemplatePlacement struct {
	Affinity *string `json:"affinity,omitempty"`

	AvailabilityZone *string `json:"availabilityZone,omitempty"`

	GroupName *string `json:"groupName,omitempty"`

	HostID *string `json:"hostID,omitempty"`

	HostResourceGroupARN *string `json:"hostResourceGroupARN,omitempty"`

	SpreadDomain *string `json:"spreadDomain,omitempty"`
}

type LaunchTemplatePlacementRequest struct {
	Affinity *string `json:"affinity,omitempty"`

	AvailabilityZone *string `json:"availabilityZone,omitempty"`

	HostResourceGroupARN *string `json:"hostResourceGroupARN,omitempty"`

	SpreadDomain *string `json:"spreadDomain,omitempty"`
}

type LaunchTemplateSpecification struct {
	LaunchTemplateName *string `json:"launchTemplateName,omitempty"`

	Version *string `json:"version,omitempty"`
}

type LaunchTemplateSpotMarketOptions struct {
	MaxPrice *string `json:"maxPrice,omitempty"`

	ValidUntil *metav1.Time `json:"validUntil,omitempty"`
}

type LaunchTemplateSpotMarketOptionsRequest struct {
	MaxPrice *string `json:"maxPrice,omitempty"`

	ValidUntil *metav1.Time `json:"validUntil,omitempty"`
}

type LaunchTemplateTagSpecification struct {
	ResourceType *string `json:"resourceType,omitempty"`

	Tags []*Tag `json:"tags,omitempty"`
}

type LaunchTemplateTagSpecificationRequest struct {
	ResourceType *string `json:"resourceType,omitempty"`

	Tags []*Tag `json:"tags,omitempty"`
}

type LaunchTemplateVersion struct {
	CreateTime *metav1.Time `json:"createTime,omitempty"`

	CreatedBy *string `json:"createdBy,omitempty"`

	DefaultVersion *bool `json:"defaultVersion,omitempty"`

	LaunchTemplateID *string `json:"launchTemplateID,omitempty"`
}

type LaunchTemplatesMonitoring struct {
	Enabled *bool `json:"enabled,omitempty"`
}

type LaunchTemplatesMonitoringRequest struct {
	Enabled *bool `json:"enabled,omitempty"`
}

type LicenseConfiguration struct {
	LicenseConfigurationARN *string `json:"licenseConfigurationARN,omitempty"`
}

type LicenseConfigurationRequest struct {
	LicenseConfigurationARN *string `json:"licenseConfigurationARN,omitempty"`
}

type LoadPermission struct {
	UserID *string `json:"userID,omitempty"`
}

type LoadPermissionRequest struct {
	UserID *string `json:"userID,omitempty"`
}

type LocalGateway struct {
	OutpostARN *string `json:"outpostARN,omitempty"`

	OwnerID *string `json:"ownerID,omitempty"`

	State *string `json:"state,omitempty"`

	Tags []*Tag `json:"tags,omitempty"`
}

type LocalGatewayRoute struct {
	DestinationCIDRBlock *string `json:"destinationCIDRBlock,omitempty"`

	OwnerID *string `json:"ownerID,omitempty"`
}

type LocalGatewayRouteTable struct {
	LocalGatewayRouteTableID *string `json:"localGatewayRouteTableID,omitempty"`

	OutpostARN *string `json:"outpostARN,omitempty"`

	OwnerID *string `json:"ownerID,omitempty"`

	State *string `json:"state,omitempty"`

	Tags []*Tag `json:"tags,omitempty"`
}

type LocalGatewayRouteTableVPCAssociation struct {
	LocalGatewayID *string `json:"localGatewayID,omitempty"`

	LocalGatewayRouteTableID *string `json:"localGatewayRouteTableID,omitempty"`

	OwnerID *string `json:"ownerID,omitempty"`

	State *string `json:"state,omitempty"`

	Tags []*Tag `json:"tags,omitempty"`

	VPCID *string `json:"vpcID,omitempty"`
}

type LocalGatewayRouteTableVirtualInterfaceGroupAssociation struct {
	LocalGatewayID *string `json:"localGatewayID,omitempty"`

	OwnerID *string `json:"ownerID,omitempty"`

	State *string `json:"state,omitempty"`

	Tags []*Tag `json:"tags,omitempty"`
}

type LocalGatewayVirtualInterface struct {
	LocalAddress *string `json:"localAddress,omitempty"`

	LocalGatewayID *string `json:"localGatewayID,omitempty"`

	OwnerID *string `json:"ownerID,omitempty"`

	PeerAddress *string `json:"peerAddress,omitempty"`

	Tags []*Tag `json:"tags,omitempty"`
}

type LocalGatewayVirtualInterfaceGroup struct {
	LocalGatewayID *string `json:"localGatewayID,omitempty"`

	OwnerID *string `json:"ownerID,omitempty"`

	Tags []*Tag `json:"tags,omitempty"`
}

type ManagedPrefixList struct {
	AddressFamily *string `json:"addressFamily,omitempty"`

	OwnerID *string `json:"ownerID,omitempty"`

	PrefixListName *string `json:"prefixListName,omitempty"`

	StateMessage *string `json:"stateMessage,omitempty"`

	Tags []*Tag `json:"tags,omitempty"`
}

type ModifyVPNTunnelOptionsSpecification struct {
	DPDTimeoutAction *string `json:"dPDTimeoutAction,omitempty"`

	PreSharedKey *string `json:"preSharedKey,omitempty"`

	StartupAction *string `json:"startupAction,omitempty"`

	TunnelInsideCIDR *string `json:"tunnelInsideCIDR,omitempty"`

	TunnelInsideIPv6CIDR *string `json:"tunnelInsideIPv6CIDR,omitempty"`
}

type MovingAddressStatus struct {
	PublicIP *string `json:"publicIP,omitempty"`
}

type NatGateway struct {
	CreateTime *metav1.Time `json:"createTime,omitempty"`

	DeleteTime *metav1.Time `json:"deleteTime,omitempty"`

	FailureCode *string `json:"failureCode,omitempty"`

	FailureMessage *string `json:"failureMessage,omitempty"`

	NatGatewayID *string `json:"natGatewayID,omitempty"`

	SubnetID *string `json:"subnetID,omitempty"`

	Tags []*Tag `json:"tags,omitempty"`

	VPCID *string `json:"vpcID,omitempty"`
}

type NatGatewayAddress struct {
	AllocationID *string `json:"allocationID,omitempty"`

	NetworkInterfaceID *string `json:"networkInterfaceID,omitempty"`

	PrivateIP *string `json:"privateIP,omitempty"`

	PublicIP *string `json:"publicIP,omitempty"`
}

type NetworkACL struct {
	IsDefault *bool `json:"isDefault,omitempty"`

	NetworkACLID *string `json:"networkACLID,omitempty"`

	OwnerID *string `json:"ownerID,omitempty"`

	Tags []*Tag `json:"tags,omitempty"`

	VPCID *string `json:"vpcID,omitempty"`
}

type NetworkACLAssociation struct {
	NetworkACLAssociationID *string `json:"networkACLAssociationID,omitempty"`

	NetworkACLID *string `json:"networkACLID,omitempty"`

	SubnetID *string `json:"subnetID,omitempty"`
}

type NetworkACLEntry struct {
	CIDRBlock *string `json:"cidrBlock,omitempty"`

	Egress *bool `json:"egress,omitempty"`

	IPv6CIDRBlock *string `json:"ipv6CIDRBlock,omitempty"`

	Protocol *string `json:"protocol,omitempty"`
}

type NetworkInsightsAnalysis struct {
	NetworkPathFound *bool `json:"networkPathFound,omitempty"`

	StatusMessage *string `json:"statusMessage,omitempty"`

	Tags []*Tag `json:"tags,omitempty"`
}

type NetworkInsightsPath struct {
	Destination *string `json:"destination,omitempty"`

	Source *string `json:"source,omitempty"`

	Tags []*Tag `json:"tags,omitempty"`
}

type NetworkInterface struct {
	AvailabilityZone *string `json:"availabilityZone,omitempty"`

	Description *string `json:"description,omitempty"`

	MacAddress *string `json:"macAddress,omitempty"`

	NetworkInterfaceID *string `json:"networkInterfaceID,omitempty"`

	OutpostARN *string `json:"outpostARN,omitempty"`

	OwnerID *string `json:"ownerID,omitempty"`

	PrivateDNSName *string `json:"privateDNSName,omitempty"`

	PrivateIPAddress *string `json:"privateIPAddress,omitempty"`

	RequesterID *string `json:"requesterID,omitempty"`

	RequesterManaged *bool `json:"requesterManaged,omitempty"`

	SourceDestCheck *bool `json:"sourceDestCheck,omitempty"`

	SubnetID *string `json:"subnetID,omitempty"`

	TagSet []*Tag `json:"tagSet,omitempty"`

	VPCID *string `json:"vpcID,omitempty"`
}

type NetworkInterfaceAssociation struct {
	AllocationID *string `json:"allocationID,omitempty"`

	AssociationID *string `json:"associationID,omitempty"`

	CarrierIP *string `json:"carrierIP,omitempty"`

	CustomerOwnedIP *string `json:"customerOwnedIP,omitempty"`

	IPOwnerID *string `json:"ipOwnerID,omitempty"`

	PublicDNSName *string `json:"publicDNSName,omitempty"`

	PublicIP *string `json:"publicIP,omitempty"`
}

type NetworkInterfaceAttachment struct {
	AttachTime *metav1.Time `json:"attachTime,omitempty"`

	AttachmentID *string `json:"attachmentID,omitempty"`

	DeleteOnTermination *bool `json:"deleteOnTermination,omitempty"`

	InstanceID *string `json:"instanceID,omitempty"`

	InstanceOwnerID *string `json:"instanceOwnerID,omitempty"`
}

type NetworkInterfaceAttachmentChanges struct {
	DeleteOnTermination *bool `json:"deleteOnTermination,omitempty"`
}

type NetworkInterfaceIPv6Address struct {
	IPv6Address *string `json:"ipv6Address,omitempty"`
}

type NetworkInterfacePermission struct {
	AWSAccountID *string `json:"awsAccountID,omitempty"`

	AWSService *string `json:"awsService,omitempty"`

	NetworkInterfaceID *string `json:"networkInterfaceID,omitempty"`

	NetworkInterfacePermissionID *string `json:"networkInterfacePermissionID,omitempty"`
}

type NetworkInterfacePermissionState struct {
	StatusMessage *string `json:"statusMessage,omitempty"`
}

type NetworkInterfacePrivateIPAddress struct {
	Primary *bool `json:"primary,omitempty"`

	PrivateDNSName *string `json:"privateDNSName,omitempty"`

	PrivateIPAddress *string `json:"privateIPAddress,omitempty"`
}

type NewDHCPConfiguration struct {
	Key *string `json:"key,omitempty"`

	Values []*string `json:"values,omitempty"`
}

type OnDemandOptions struct {
	MaxTotalPrice *string `json:"maxTotalPrice,omitempty"`

	SingleAvailabilityZone *bool `json:"singleAvailabilityZone,omitempty"`

	SingleInstanceType *bool `json:"singleInstanceType,omitempty"`
}

type OnDemandOptionsRequest struct {
	MaxTotalPrice *string `json:"maxTotalPrice,omitempty"`

	SingleAvailabilityZone *bool `json:"singleAvailabilityZone,omitempty"`

	SingleInstanceType *bool `json:"singleInstanceType,omitempty"`
}

type PciID struct {
	DeviceID *string `json:"deviceID,omitempty"`

	SubsystemID *string `json:"subsystemID,omitempty"`

	SubsystemVendorID *string `json:"subsystemVendorID,omitempty"`

	VendorID *string `json:"vendorID,omitempty"`
}

type PeeringAttachmentStatus struct {
	Code *string `json:"code,omitempty"`

	Message *string `json:"message,omitempty"`
}

type PeeringConnectionOptions struct {
	AllowDNSResolutionFromRemoteVPC *bool `json:"allowDNSResolutionFromRemoteVPC,omitempty"`

	AllowEgressFromLocalClassicLinkToRemoteVPC *bool `json:"allowEgressFromLocalClassicLinkToRemoteVPC,omitempty"`

	AllowEgressFromLocalVPCToRemoteClassicLink *bool `json:"allowEgressFromLocalVPCToRemoteClassicLink,omitempty"`
}

type PeeringConnectionOptionsRequest struct {
	AllowDNSResolutionFromRemoteVPC *bool `json:"allowDNSResolutionFromRemoteVPC,omitempty"`

	AllowEgressFromLocalClassicLinkToRemoteVPC *bool `json:"allowEgressFromLocalClassicLinkToRemoteVPC,omitempty"`

	AllowEgressFromLocalVPCToRemoteClassicLink *bool `json:"allowEgressFromLocalVPCToRemoteClassicLink,omitempty"`
}

type PeeringTgwInfo struct {
	OwnerID *string `json:"ownerID,omitempty"`

	Region *string `json:"region,omitempty"`

	TransitGatewayID *string `json:"transitGatewayID,omitempty"`
}

type Phase1EncryptionAlgorithmsListValue struct {
	Value *string `json:"value,omitempty"`
}

type Phase1EncryptionAlgorithmsRequestListValue struct {
	Value *string `json:"value,omitempty"`
}

type Phase1IntegrityAlgorithmsListValue struct {
	Value *string `json:"value,omitempty"`
}

type Phase1IntegrityAlgorithmsRequestListValue struct {
	Value *string `json:"value,omitempty"`
}

type Phase2EncryptionAlgorithmsListValue struct {
	Value *string `json:"value,omitempty"`
}

type Phase2EncryptionAlgorithmsRequestListValue struct {
	Value *string `json:"value,omitempty"`
}

type Phase2IntegrityAlgorithmsListValue struct {
	Value *string `json:"value,omitempty"`
}

type Phase2IntegrityAlgorithmsRequestListValue struct {
	Value *string `json:"value,omitempty"`
}

type Placement struct {
	Affinity *string `json:"affinity,omitempty"`

	AvailabilityZone *string `json:"availabilityZone,omitempty"`

	GroupName *string `json:"groupName,omitempty"`

	HostID *string `json:"hostID,omitempty"`

	HostResourceGroupARN *string `json:"hostResourceGroupARN,omitempty"`

	SpreadDomain *string `json:"spreadDomain,omitempty"`
}

type PlacementGroup struct {
	GroupID *string `json:"groupID,omitempty"`

	GroupName *string `json:"groupName,omitempty"`

	Tags []*Tag `json:"tags,omitempty"`
}

type PlacementResponse struct {
	GroupName *string `json:"groupName,omitempty"`
}

type PoolCIDRBlock struct {
	CIDR *string `json:"cidr,omitempty"`
}

type PrefixList struct {
	CIDRs []*string `json:"cidrs,omitempty"`

	PrefixListID *string `json:"prefixListID,omitempty"`

	PrefixListName *string `json:"prefixListName,omitempty"`
}

type PrefixListAssociation struct {
	ResourceID *string `json:"resourceID,omitempty"`

	ResourceOwner *string `json:"resourceOwner,omitempty"`
}

type PrefixListEntry struct {
	CIDR *string `json:"cidr,omitempty"`

	Description *string `json:"description,omitempty"`
}

type PrefixListID struct {
	Description *string `json:"description,omitempty"`

	PrefixListID *string `json:"prefixListID,omitempty"`
}

type PriceSchedule struct {
	Active *bool `json:"active,omitempty"`
}

type PrincipalIDFormat struct {
	ARN *string `json:"arn,omitempty"`
}

type PrivateDNSDetails struct {
	PrivateDNSName *string `json:"privateDNSName,omitempty"`
}

type PrivateDNSNameConfiguration struct {
	Name *string `json:"name,omitempty"`

	Type *string `json:"type_,omitempty"`

	Value *string `json:"value,omitempty"`
}

type PrivateIPAddressSpecification struct {
	Primary *bool `json:"primary,omitempty"`

	PrivateIPAddress *string `json:"privateIPAddress,omitempty"`
}

type ProductCode struct {
	ProductCodeID *string `json:"productCodeID,omitempty"`
}

type PropagatingVGW struct {
	GatewayID *string `json:"gatewayID,omitempty"`
}

type ProvisionedBandwidth struct {
	ProvisionTime *metav1.Time `json:"provisionTime,omitempty"`

	Provisioned *string `json:"provisioned,omitempty"`

	RequestTime *metav1.Time `json:"requestTime,omitempty"`

	Requested *string `json:"requested,omitempty"`

	Status *string `json:"status,omitempty"`
}

type PublicIPv4Pool struct {
	Description *string `json:"description,omitempty"`

	NetworkBorderGroup *string `json:"networkBorderGroup,omitempty"`

	PoolID *string `json:"poolID,omitempty"`

	Tags []*Tag `json:"tags,omitempty"`
}

type PublicIPv4PoolRange struct {
	FirstAddress *string `json:"firstAddress,omitempty"`

	LastAddress *string `json:"lastAddress,omitempty"`
}

type Purchase struct {
	HostReservationID *string `json:"hostReservationID,omitempty"`

	HourlyPrice *string `json:"hourlyPrice,omitempty"`

	InstanceFamily *string `json:"instanceFamily,omitempty"`

	UpfrontPrice *string `json:"upfrontPrice,omitempty"`
}

type PurchaseRequest struct {
	PurchaseToken *string `json:"purchaseToken,omitempty"`
}

type Region struct {
	Endpoint *string `json:"endpoint,omitempty"`

	OptInStatus *string `json:"optInStatus,omitempty"`

	RegionName *string `json:"regionName,omitempty"`
}

type RegisterInstanceTagAttributeRequest struct {
	IncludeAllTagsOfInstance *bool `json:"includeAllTagsOfInstance,omitempty"`
}

type RemovePrefixListEntry struct {
	CIDR *string `json:"cidr,omitempty"`
}

type RequestLaunchTemplateData struct {
	DisableAPITermination *bool `json:"disableAPITermination,omitempty"`

	EBSOptimized *bool `json:"ebsOptimized,omitempty"`

	UserData *string `json:"userData,omitempty"`
}

type RequestSpotLaunchSpecification struct {
	AddressingType *string `json:"addressingType,omitempty"`

	EBSOptimized *bool `json:"ebsOptimized,omitempty"`

	UserData *string `json:"userData,omitempty"`
}

type ReservationValue struct {
	HourlyPrice *string `json:"hourlyPrice,omitempty"`

	RemainingTotalValue *string `json:"remainingTotalValue,omitempty"`

	RemainingUpfrontValue *string `json:"remainingUpfrontValue,omitempty"`
}

type ReservedInstanceReservationValue struct {
	ReservedInstanceID *string `json:"reservedInstanceID,omitempty"`
}

type ReservedInstances struct {
	AvailabilityZone *string `json:"availabilityZone,omitempty"`

	End *metav1.Time `json:"end,omitempty"`

	ReservedInstancesID *string `json:"reservedInstancesID,omitempty"`

	Start *metav1.Time `json:"start,omitempty"`

	Tags []*Tag `json:"tags,omitempty"`
}

type ReservedInstancesConfiguration struct {
	AvailabilityZone *string `json:"availabilityZone,omitempty"`

	Platform *string `json:"platform,omitempty"`
}

type ReservedInstancesID struct {
	ReservedInstancesID *string `json:"reservedInstancesID,omitempty"`
}

type ReservedInstancesListing struct {
	ClientToken *string `json:"clientToken,omitempty"`

	CreateDate *metav1.Time `json:"createDate,omitempty"`

	ReservedInstancesID *string `json:"reservedInstancesID,omitempty"`

	ReservedInstancesListingID *string `json:"reservedInstancesListingID,omitempty"`

	StatusMessage *string `json:"statusMessage,omitempty"`

	Tags []*Tag `json:"tags,omitempty"`

	UpdateDate *metav1.Time `json:"updateDate,omitempty"`
}

type ReservedInstancesModification struct {
	ClientToken *string `json:"clientToken,omitempty"`

	CreateDate *metav1.Time `json:"createDate,omitempty"`

	EffectiveDate *metav1.Time `json:"effectiveDate,omitempty"`

	ReservedInstancesModificationID *string `json:"reservedInstancesModificationID,omitempty"`

	Status *string `json:"status,omitempty"`

	StatusMessage *string `json:"statusMessage,omitempty"`

	UpdateDate *metav1.Time `json:"updateDate,omitempty"`
}

type ReservedInstancesModificationResult struct {
	ReservedInstancesID *string `json:"reservedInstancesID,omitempty"`
}

type ReservedInstancesOffering struct {
	AvailabilityZone *string `json:"availabilityZone,omitempty"`

	Marketplace *bool `json:"marketplace,omitempty"`

	ReservedInstancesOfferingID *string `json:"reservedInstancesOfferingID,omitempty"`
}

type ResponseError struct {
	Message *string `json:"message,omitempty"`
}

type ResponseLaunchTemplateData struct {
	DisableAPITermination *bool `json:"disableAPITermination,omitempty"`

	EBSOptimized *bool `json:"ebsOptimized,omitempty"`

	ImageID *string `json:"imageID,omitempty"`

	KernelID *string `json:"kernelID,omitempty"`

	KeyName *string `json:"keyName,omitempty"`

	RamDiskID *string `json:"ramDiskID,omitempty"`

	SecurityGroupIDs []*string `json:"securityGroupIDs,omitempty"`

	SecurityGroups []*string `json:"securityGroups,omitempty"`

	UserData *string `json:"userData,omitempty"`
}

type Route struct {
	DestinationCIDRBlock *string `json:"destinationCIDRBlock,omitempty"`

	DestinationIPv6CIDRBlock *string `json:"destinationIPv6CIDRBlock,omitempty"`

	DestinationPrefixListID *string `json:"destinationPrefixListID,omitempty"`

	EgressOnlyInternetGatewayID *string `json:"egressOnlyInternetGatewayID,omitempty"`

	GatewayID *string `json:"gatewayID,omitempty"`

	InstanceID *string `json:"instanceID,omitempty"`

	InstanceOwnerID *string `json:"instanceOwnerID,omitempty"`

	LocalGatewayID *string `json:"localGatewayID,omitempty"`

	NatGatewayID *string `json:"natGatewayID,omitempty"`

	NetworkInterfaceID *string `json:"networkInterfaceID,omitempty"`

	TransitGatewayID *string `json:"transitGatewayID,omitempty"`

	VPCPeeringConnectionID *string `json:"vpcPeeringConnectionID,omitempty"`
}

type RouteTable struct {
	OwnerID *string `json:"ownerID,omitempty"`

	RouteTableID *string `json:"routeTableID,omitempty"`

	Tags []*Tag `json:"tags,omitempty"`

	VPCID *string `json:"vpcID,omitempty"`
}

type RouteTableAssociation struct {
	GatewayID *string `json:"gatewayID,omitempty"`

	Main *bool `json:"main,omitempty"`

	RouteTableAssociationID *string `json:"routeTableAssociationID,omitempty"`

	RouteTableID *string `json:"routeTableID,omitempty"`

	SubnetID *string `json:"subnetID,omitempty"`
}

type RouteTableAssociationState struct {
	StatusMessage *string `json:"statusMessage,omitempty"`
}

type RunInstancesMonitoringEnabled struct {
	Enabled *bool `json:"enabled,omitempty"`
}

type S3Storage struct {
	AWSAccessKeyID *string `json:"awsAccessKeyID,omitempty"`

	Bucket *string `json:"bucket,omitempty"`

	Prefix *string `json:"prefix,omitempty"`

	UploadPolicySignature *string `json:"uploadPolicySignature,omitempty"`
}

type ScheduledInstance struct {
	AvailabilityZone *string `json:"availabilityZone,omitempty"`

	CreateDate *metav1.Time `json:"createDate,omitempty"`

	HourlyPrice *string `json:"hourlyPrice,omitempty"`

	InstanceType *string `json:"instanceType,omitempty"`

	NetworkPlatform *string `json:"networkPlatform,omitempty"`

	NextSlotStartTime *metav1.Time `json:"nextSlotStartTime,omitempty"`

	Platform *string `json:"platform,omitempty"`

	PreviousSlotEndTime *metav1.Time `json:"previousSlotEndTime,omitempty"`

	ScheduledInstanceID *string `json:"scheduledInstanceID,omitempty"`

	TermEndDate *metav1.Time `json:"termEndDate,omitempty"`

	TermStartDate *metav1.Time `json:"termStartDate,omitempty"`
}

type ScheduledInstanceAvailability struct {
	AvailabilityZone *string `json:"availabilityZone,omitempty"`

	FirstSlotStartTime *metav1.Time `json:"firstSlotStartTime,omitempty"`

	HourlyPrice *string `json:"hourlyPrice,omitempty"`

	InstanceType *string `json:"instanceType,omitempty"`

	NetworkPlatform *string `json:"networkPlatform,omitempty"`

	Platform *string `json:"platform,omitempty"`

	PurchaseToken *string `json:"purchaseToken,omitempty"`
}

type ScheduledInstanceRecurrence struct {
	Frequency *string `json:"frequency,omitempty"`

	OccurrenceRelativeToEnd *bool `json:"occurrenceRelativeToEnd,omitempty"`

	OccurrenceUnit *string `json:"occurrenceUnit,omitempty"`
}

type ScheduledInstanceRecurrenceRequest struct {
	Frequency *string `json:"frequency,omitempty"`

	OccurrenceRelativeToEnd *bool `json:"occurrenceRelativeToEnd,omitempty"`

	OccurrenceUnit *string `json:"occurrenceUnit,omitempty"`
}

type ScheduledInstancesBlockDeviceMapping struct {
	DeviceName *string `json:"deviceName,omitempty"`

	NoDevice *string `json:"noDevice,omitempty"`

	VirtualName *string `json:"virtualName,omitempty"`
}

type ScheduledInstancesEBS struct {
	DeleteOnTermination *bool `json:"deleteOnTermination,omitempty"`

	Encrypted *bool `json:"encrypted,omitempty"`

	VolumeType *string `json:"volumeType,omitempty"`
}

type ScheduledInstancesIAMInstanceProfile struct {
	ARN *string `json:"arn,omitempty"`

	Name *string `json:"name,omitempty"`
}

type ScheduledInstancesLaunchSpecification struct {
	EBSOptimized *bool `json:"ebsOptimized,omitempty"`

	InstanceType *string `json:"instanceType,omitempty"`

	UserData *string `json:"userData,omitempty"`
}

type ScheduledInstancesMonitoring struct {
	Enabled *bool `json:"enabled,omitempty"`
}

type ScheduledInstancesNetworkInterface struct {
	AssociatePublicIPAddress *bool `json:"associatePublicIPAddress,omitempty"`

	DeleteOnTermination *bool `json:"deleteOnTermination,omitempty"`

	Description *string `json:"description,omitempty"`

	PrivateIPAddress *string `json:"privateIPAddress,omitempty"`
}

type ScheduledInstancesPlacement struct {
	AvailabilityZone *string `json:"availabilityZone,omitempty"`
}

type ScheduledInstancesPrivateIPAddressConfig struct {
	Primary *bool `json:"primary,omitempty"`

	PrivateIPAddress *string `json:"privateIPAddress,omitempty"`
}

type SecurityGroup struct {
	Description *string `json:"description,omitempty"`

	GroupID *string `json:"groupID,omitempty"`

	GroupName *string `json:"groupName,omitempty"`

	OwnerID *string `json:"ownerID,omitempty"`

	Tags []*Tag `json:"tags,omitempty"`

	VPCID *string `json:"vpcID,omitempty"`
}

type SecurityGroupIdentifier struct {
	GroupID *string `json:"groupID,omitempty"`

	GroupName *string `json:"groupName,omitempty"`
}

type SecurityGroupReference struct {
	GroupID *string `json:"groupID,omitempty"`

	ReferencingVPCID *string `json:"referencingVPCID,omitempty"`

	VPCPeeringConnectionID *string `json:"vpcPeeringConnectionID,omitempty"`
}

type ServiceConfiguration struct {
	AcceptanceRequired *bool `json:"acceptanceRequired,omitempty"`

	AvailabilityZones []*string `json:"availabilityZones,omitempty"`

	BaseEndpointDNSNames []*string `json:"baseEndpointDNSNames,omitempty"`

	GatewayLoadBalancerARNs []*string `json:"gatewayLoadBalancerARNs,omitempty"`

	ManagesVPCEndpoints *bool `json:"managesVPCEndpoints,omitempty"`

	NetworkLoadBalancerARNs []*string `json:"networkLoadBalancerARNs,omitempty"`

	PrivateDNSName *string `json:"privateDNSName,omitempty"`

	ServiceID *string `json:"serviceID,omitempty"`

	ServiceName *string `json:"serviceName,omitempty"`

	Tags []*Tag `json:"tags,omitempty"`
}

type ServiceDetail struct {
	AcceptanceRequired *bool `json:"acceptanceRequired,omitempty"`

	AvailabilityZones []*string `json:"availabilityZones,omitempty"`

	BaseEndpointDNSNames []*string `json:"baseEndpointDNSNames,omitempty"`

	ManagesVPCEndpoints *bool `json:"managesVPCEndpoints,omitempty"`

	Owner *string `json:"owner,omitempty"`

	PrivateDNSName *string `json:"privateDNSName,omitempty"`

	ServiceID *string `json:"serviceID,omitempty"`

	ServiceName *string `json:"serviceName,omitempty"`

	Tags []*Tag `json:"tags,omitempty"`

	VPCEndpointPolicySupported *bool `json:"vpcEndpointPolicySupported,omitempty"`
}

type SlotDateTimeRangeRequest struct {
	EarliestTime *metav1.Time `json:"earliestTime,omitempty"`

	LatestTime *metav1.Time `json:"latestTime,omitempty"`
}

type SlotStartTimeRangeRequest struct {
	EarliestTime *metav1.Time `json:"earliestTime,omitempty"`

	LatestTime *metav1.Time `json:"latestTime,omitempty"`
}

type SnapshotDetail struct {
	Description *string `json:"description,omitempty"`

	DeviceName *string `json:"deviceName,omitempty"`

	Format *string `json:"format,omitempty"`

	Progress *string `json:"progress,omitempty"`

	SnapshotID *string `json:"snapshotID,omitempty"`

	Status *string `json:"status,omitempty"`

	StatusMessage *string `json:"statusMessage,omitempty"`

	URL *string `json:"url,omitempty"`
}

type SnapshotDiskContainer struct {
	Description *string `json:"description,omitempty"`

	Format *string `json:"format,omitempty"`

	URL *string `json:"url,omitempty"`
}

type SnapshotInfo struct {
	Description *string `json:"description,omitempty"`

	Encrypted *bool `json:"encrypted,omitempty"`

	OutpostARN *string `json:"outpostARN,omitempty"`

	OwnerID *string `json:"ownerID,omitempty"`

	Progress *string `json:"progress,omitempty"`

	SnapshotID *string `json:"snapshotID,omitempty"`

	Tags []*Tag `json:"tags,omitempty"`

	VolumeID *string `json:"volumeID,omitempty"`
}

type SnapshotTaskDetail struct {
	Description *string `json:"description,omitempty"`

	Encrypted *bool `json:"encrypted,omitempty"`

	Format *string `json:"format,omitempty"`

	KMSKeyID *string `json:"kmsKeyID,omitempty"`

	Progress *string `json:"progress,omitempty"`

	SnapshotID *string `json:"snapshotID,omitempty"`

	Status *string `json:"status,omitempty"`

	StatusMessage *string `json:"statusMessage,omitempty"`

	URL *string `json:"url,omitempty"`
}

type SpotDatafeedSubscription struct {
	Bucket *string `json:"bucket,omitempty"`

	OwnerID *string `json:"ownerID,omitempty"`

	Prefix *string `json:"prefix,omitempty"`
}

type SpotFleetLaunchSpecification struct {
	AddressingType *string `json:"addressingType,omitempty"`

	EBSOptimized *bool `json:"ebsOptimized,omitempty"`

	ImageID *string `json:"imageID,omitempty"`

	KernelID *string `json:"kernelID,omitempty"`

	KeyName *string `json:"keyName,omitempty"`

	RamdiskID *string `json:"ramdiskID,omitempty"`

	SpotPrice *string `json:"spotPrice,omitempty"`

	SubnetID *string `json:"subnetID,omitempty"`

	UserData *string `json:"userData,omitempty"`
}

type SpotFleetMonitoring struct {
	Enabled *bool `json:"enabled,omitempty"`
}

type SpotFleetRequestConfig struct {
	SpotFleetRequestID *string `json:"spotFleetRequestID,omitempty"`

	Tags []*Tag `json:"tags,omitempty"`
}

type SpotFleetRequestConfigData struct {
	ClientToken *string `json:"clientToken,omitempty"`

	IAMFleetRole *string `json:"iamFleetRole,omitempty"`

	OnDemandMaxTotalPrice *string `json:"onDemandMaxTotalPrice,omitempty"`

	ReplaceUnhealthyInstances *bool `json:"replaceUnhealthyInstances,omitempty"`

	SpotMaxTotalPrice *string `json:"spotMaxTotalPrice,omitempty"`

	SpotPrice *string `json:"spotPrice,omitempty"`

	TagSpecifications []*TagSpecification `json:"tagSpecifications,omitempty"`

	TerminateInstancesWithExpiration *bool `json:"terminateInstancesWithExpiration,omitempty"`

	ValidFrom *metav1.Time `json:"validFrom,omitempty"`

	ValidUntil *metav1.Time `json:"validUntil,omitempty"`
}

type SpotFleetTagSpecification struct {
	ResourceType *string `json:"resourceType,omitempty"`

	Tags []*Tag `json:"tags,omitempty"`
}

type SpotInstanceRequest struct {
	ActualBlockHourlyPrice *string `json:"actualBlockHourlyPrice,omitempty"`

	AvailabilityZoneGroup *string `json:"availabilityZoneGroup,omitempty"`

	CreateTime *metav1.Time `json:"createTime,omitempty"`

	LaunchGroup *string `json:"launchGroup,omitempty"`

	LaunchedAvailabilityZone *string `json:"launchedAvailabilityZone,omitempty"`

	SpotInstanceRequestID *string `json:"spotInstanceRequestID,omitempty"`

	SpotPrice *string `json:"spotPrice,omitempty"`

	Tags []*Tag `json:"tags,omitempty"`

	ValidFrom *metav1.Time `json:"validFrom,omitempty"`

	ValidUntil *metav1.Time `json:"validUntil,omitempty"`
}

type SpotInstanceStateFault struct {
	Code *string `json:"code,omitempty"`

	Message *string `json:"message,omitempty"`
}

type SpotInstanceStatus struct {
	Code *string `json:"code,omitempty"`

	Message *string `json:"message,omitempty"`

	UpdateTime *metav1.Time `json:"updateTime,omitempty"`
}

type SpotMarketOptions struct {
	MaxPrice *string `json:"maxPrice,omitempty"`

	ValidUntil *metav1.Time `json:"validUntil,omitempty"`
}

type SpotOptions struct {
	MaxTotalPrice *string `json:"maxTotalPrice,omitempty"`

	SingleAvailabilityZone *bool `json:"singleAvailabilityZone,omitempty"`

	SingleInstanceType *bool `json:"singleInstanceType,omitempty"`
}

type SpotOptionsRequest struct {
	MaxTotalPrice *string `json:"maxTotalPrice,omitempty"`

	SingleAvailabilityZone *bool `json:"singleAvailabilityZone,omitempty"`

	SingleInstanceType *bool `json:"singleInstanceType,omitempty"`
}

type SpotPlacement struct {
	AvailabilityZone *string `json:"availabilityZone,omitempty"`

	GroupName *string `json:"groupName,omitempty"`
}

type SpotPrice struct {
	AvailabilityZone *string `json:"availabilityZone,omitempty"`

	SpotPrice *string `json:"spotPrice,omitempty"`

	Timestamp *metav1.Time `json:"timestamp,omitempty"`
}

type StaleIPPermission struct {
	IPProtocol *string `json:"ipProtocol,omitempty"`
}

type StaleSecurityGroup struct {
	Description *string `json:"description,omitempty"`

	GroupID *string `json:"groupID,omitempty"`

	GroupName *string `json:"groupName,omitempty"`

	VPCID *string `json:"vpcID,omitempty"`
}

type StateReason struct {
	Code *string `json:"code,omitempty"`

	Message *string `json:"message,omitempty"`
}

type StorageLocation struct {
	Bucket *string `json:"bucket,omitempty"`

	Key *string `json:"key,omitempty"`
}

type Subnet struct {
	AssignIPv6AddressOnCreation *bool `json:"assignIPv6AddressOnCreation,omitempty"`

	AvailabilityZone *string `json:"availabilityZone,omitempty"`

	AvailabilityZoneID *string `json:"availabilityZoneID,omitempty"`

	CIDRBlock *string `json:"cidrBlock,omitempty"`

	DefaultForAZ *bool `json:"defaultForAZ,omitempty"`

	MapCustomerOwnedIPOnLaunch *bool `json:"mapCustomerOwnedIPOnLaunch,omitempty"`

	MapPublicIPOnLaunch *bool `json:"mapPublicIPOnLaunch,omitempty"`

	OutpostARN *string `json:"outpostARN,omitempty"`

	OwnerID *string `json:"ownerID,omitempty"`

	SubnetARN *string `json:"subnetARN,omitempty"`

	SubnetID *string `json:"subnetID,omitempty"`

	Tags []*Tag `json:"tags,omitempty"`

	VPCID *string `json:"vpcID,omitempty"`
}

type SubnetAssociation struct {
	SubnetID *string `json:"subnetID,omitempty"`
}

type SubnetCIDRBlockState struct {
	StatusMessage *string `json:"statusMessage,omitempty"`
}

type SubnetIPv6CIDRBlockAssociation struct {
	AssociationID *string `json:"associationID,omitempty"`

	IPv6CIDRBlock *string `json:"ipv6CIDRBlock,omitempty"`
}

type SuccessfulInstanceCreditSpecificationItem struct {
	InstanceID *string `json:"instanceID,omitempty"`
}

type SuccessfulQueuedPurchaseDeletion struct {
	ReservedInstancesID *string `json:"reservedInstancesID,omitempty"`
}

type Tag struct {
	Key *string `json:"key,omitempty"`

	Value *string `json:"value,omitempty"`
}

type TagDescription struct {
	Key *string `json:"key,omitempty"`

	ResourceID *string `json:"resourceID,omitempty"`

	ResourceType *string `json:"resourceType,omitempty"`

	Value *string `json:"value,omitempty"`
}

type TagSpecification struct {
	ResourceType *string `json:"resourceType,omitempty"`

	Tags []*Tag `json:"tags,omitempty"`
}

type TargetConfiguration struct {
	OfferingID *string `json:"offeringID,omitempty"`
}

type TargetGroup struct {
	ARN *string `json:"arn,omitempty"`
}

type TargetNetwork struct {
	AssociationID *string `json:"associationID,omitempty"`

	ClientVPNEndpointID *string `json:"clientVPNEndpointID,omitempty"`

	SecurityGroups []*string `json:"securityGroups,omitempty"`

	TargetNetworkID *string `json:"targetNetworkID,omitempty"`

	VPCID *string `json:"vpcID,omitempty"`
}

type TerminateConnectionStatus struct {
	ConnectionID *string `json:"connectionID,omitempty"`
}

type TrafficMirrorFilter struct {
	Description *string `json:"description,omitempty"`

	Tags []*Tag `json:"tags,omitempty"`

	TrafficMirrorFilterID *string `json:"trafficMirrorFilterID,omitempty"`
}

type TrafficMirrorFilterRule struct {
	Description *string `json:"description,omitempty"`

	DestinationCIDRBlock *string `json:"destinationCIDRBlock,omitempty"`

	SourceCIDRBlock *string `json:"sourceCIDRBlock,omitempty"`

	TrafficMirrorFilterID *string `json:"trafficMirrorFilterID,omitempty"`

	TrafficMirrorFilterRuleID *string `json:"trafficMirrorFilterRuleID,omitempty"`
}

type TrafficMirrorSession struct {
	Description *string `json:"description,omitempty"`

	NetworkInterfaceID *string `json:"networkInterfaceID,omitempty"`

	OwnerID *string `json:"ownerID,omitempty"`

	Tags []*Tag `json:"tags,omitempty"`

	TrafficMirrorFilterID *string `json:"trafficMirrorFilterID,omitempty"`

	TrafficMirrorSessionID *string `json:"trafficMirrorSessionID,omitempty"`

	TrafficMirrorTargetID *string `json:"trafficMirrorTargetID,omitempty"`
}

type TrafficMirrorTarget struct {
	Description *string `json:"description,omitempty"`

	NetworkInterfaceID *string `json:"networkInterfaceID,omitempty"`

	NetworkLoadBalancerARN *string `json:"networkLoadBalancerARN,omitempty"`

	OwnerID *string `json:"ownerID,omitempty"`

	Tags []*Tag `json:"tags,omitempty"`

	TrafficMirrorTargetID *string `json:"trafficMirrorTargetID,omitempty"`
}

type TransitGateway struct {
	CreationTime *metav1.Time `json:"creationTime,omitempty"`

	Description *string `json:"description,omitempty"`

	OwnerID *string `json:"ownerID,omitempty"`

	Tags []*Tag `json:"tags,omitempty"`

	TransitGatewayARN *string `json:"transitGatewayARN,omitempty"`

	TransitGatewayID *string `json:"transitGatewayID,omitempty"`
}

type TransitGatewayAssociation struct {
	ResourceID *string `json:"resourceID,omitempty"`
}

type TransitGatewayAttachment struct {
	CreationTime *metav1.Time `json:"creationTime,omitempty"`

	ResourceID *string `json:"resourceID,omitempty"`

	ResourceOwnerID *string `json:"resourceOwnerID,omitempty"`

	Tags []*Tag `json:"tags,omitempty"`

	TransitGatewayAttachmentID *string `json:"transitGatewayAttachmentID,omitempty"`

	TransitGatewayID *string `json:"transitGatewayID,omitempty"`

	TransitGatewayOwnerID *string `json:"transitGatewayOwnerID,omitempty"`
}

type TransitGatewayAttachmentAssociation struct {
	TransitGatewayRouteTableID *string `json:"transitGatewayRouteTableID,omitempty"`
}

type TransitGatewayAttachmentBGPConfiguration struct {
	PeerAddress *string `json:"peerAddress,omitempty"`

	TransitGatewayAddress *string `json:"transitGatewayAddress,omitempty"`
}

type TransitGatewayAttachmentPropagation struct {
	TransitGatewayRouteTableID *string `json:"transitGatewayRouteTableID,omitempty"`
}

type TransitGatewayConnect struct {
	CreationTime *metav1.Time `json:"creationTime,omitempty"`

	Tags []*Tag `json:"tags,omitempty"`
}

type TransitGatewayConnectPeer struct {
	CreationTime *metav1.Time `json:"creationTime,omitempty"`

	Tags []*Tag `json:"tags,omitempty"`
}

type TransitGatewayConnectPeerConfiguration struct {
	PeerAddress *string `json:"peerAddress,omitempty"`

	TransitGatewayAddress *string `json:"transitGatewayAddress,omitempty"`
}

type TransitGatewayMulticastDeregisteredGroupMembers struct {
	DeregisteredNetworkInterfaceIDs []*string `json:"deregisteredNetworkInterfaceIDs,omitempty"`

	GroupIPAddress *string `json:"groupIPAddress,omitempty"`

	TransitGatewayMulticastDomainID *string `json:"transitGatewayMulticastDomainID,omitempty"`
}

type TransitGatewayMulticastDeregisteredGroupSources struct {
	DeregisteredNetworkInterfaceIDs []*string `json:"deregisteredNetworkInterfaceIDs,omitempty"`

	GroupIPAddress *string `json:"groupIPAddress,omitempty"`

	TransitGatewayMulticastDomainID *string `json:"transitGatewayMulticastDomainID,omitempty"`
}

type TransitGatewayMulticastDomain struct {
	CreationTime *metav1.Time `json:"creationTime,omitempty"`

	OwnerID *string `json:"ownerID,omitempty"`

	Tags []*Tag `json:"tags,omitempty"`

	TransitGatewayID *string `json:"transitGatewayID,omitempty"`

	TransitGatewayMulticastDomainARN *string `json:"transitGatewayMulticastDomainARN,omitempty"`

	TransitGatewayMulticastDomainID *string `json:"transitGatewayMulticastDomainID,omitempty"`
}

type TransitGatewayMulticastDomainAssociation struct {
	ResourceID *string `json:"resourceID,omitempty"`

	ResourceOwnerID *string `json:"resourceOwnerID,omitempty"`

	TransitGatewayAttachmentID *string `json:"transitGatewayAttachmentID,omitempty"`
}

type TransitGatewayMulticastDomainAssociations struct {
	ResourceID *string `json:"resourceID,omitempty"`

	ResourceOwnerID *string `json:"resourceOwnerID,omitempty"`

	TransitGatewayAttachmentID *string `json:"transitGatewayAttachmentID,omitempty"`

	TransitGatewayMulticastDomainID *string `json:"transitGatewayMulticastDomainID,omitempty"`
}

type TransitGatewayMulticastGroup struct {
	GroupIPAddress *string `json:"groupIPAddress,omitempty"`

	GroupMember *bool `json:"groupMember,omitempty"`

	GroupSource *bool `json:"groupSource,omitempty"`

	NetworkInterfaceID *string `json:"networkInterfaceID,omitempty"`

	ResourceID *string `json:"resourceID,omitempty"`

	ResourceOwnerID *string `json:"resourceOwnerID,omitempty"`

	SubnetID *string `json:"subnetID,omitempty"`

	TransitGatewayAttachmentID *string `json:"transitGatewayAttachmentID,omitempty"`
}

type TransitGatewayMulticastRegisteredGroupMembers struct {
	GroupIPAddress *string `json:"groupIPAddress,omitempty"`

	RegisteredNetworkInterfaceIDs []*string `json:"registeredNetworkInterfaceIDs,omitempty"`

	TransitGatewayMulticastDomainID *string `json:"transitGatewayMulticastDomainID,omitempty"`
}

type TransitGatewayMulticastRegisteredGroupSources struct {
	GroupIPAddress *string `json:"groupIPAddress,omitempty"`

	RegisteredNetworkInterfaceIDs []*string `json:"registeredNetworkInterfaceIDs,omitempty"`

	TransitGatewayMulticastDomainID *string `json:"transitGatewayMulticastDomainID,omitempty"`
}

type TransitGatewayOptions struct {
	AssociationDefaultRouteTableID *string `json:"associationDefaultRouteTableID,omitempty"`

	PropagationDefaultRouteTableID *string `json:"propagationDefaultRouteTableID,omitempty"`

	TransitGatewayCIDRBlocks []*string `json:"transitGatewayCIDRBlocks,omitempty"`
}

type TransitGatewayPeeringAttachment struct {
	CreationTime *metav1.Time `json:"creationTime,omitempty"`

	Tags []*Tag `json:"tags,omitempty"`

	TransitGatewayAttachmentID *string `json:"transitGatewayAttachmentID,omitempty"`
}

type TransitGatewayPrefixListAttachment struct {
	ResourceID *string `json:"resourceID,omitempty"`
}

type TransitGatewayPrefixListReference struct {
	Blackhole *bool `json:"blackhole,omitempty"`

	PrefixListOwnerID *string `json:"prefixListOwnerID,omitempty"`
}

type TransitGatewayPropagation struct {
	ResourceID *string `json:"resourceID,omitempty"`

	TransitGatewayRouteTableID *string `json:"transitGatewayRouteTableID,omitempty"`
}

type TransitGatewayRoute struct {
	DestinationCIDRBlock *string `json:"destinationCIDRBlock,omitempty"`
}

type TransitGatewayRouteAttachment struct {
	ResourceID *string `json:"resourceID,omitempty"`

	TransitGatewayAttachmentID *string `json:"transitGatewayAttachmentID,omitempty"`
}

type TransitGatewayRouteTable struct {
	CreationTime *metav1.Time `json:"creationTime,omitempty"`

	DefaultAssociationRouteTable *bool `json:"defaultAssociationRouteTable,omitempty"`

	DefaultPropagationRouteTable *bool `json:"defaultPropagationRouteTable,omitempty"`

	Tags []*Tag `json:"tags,omitempty"`

	TransitGatewayID *string `json:"transitGatewayID,omitempty"`

	TransitGatewayRouteTableID *string `json:"transitGatewayRouteTableID,omitempty"`
}

type TransitGatewayRouteTableAssociation struct {
	ResourceID *string `json:"resourceID,omitempty"`

	TransitGatewayAttachmentID *string `json:"transitGatewayAttachmentID,omitempty"`
}

type TransitGatewayRouteTablePropagation struct {
	ResourceID *string `json:"resourceID,omitempty"`

	TransitGatewayAttachmentID *string `json:"transitGatewayAttachmentID,omitempty"`
}

type TransitGatewayVPCAttachment struct {
	CreationTime *metav1.Time `json:"creationTime,omitempty"`

	SubnetIDs []*string `json:"subnetIDs,omitempty"`

	Tags []*Tag `json:"tags,omitempty"`

	TransitGatewayAttachmentID *string `json:"transitGatewayAttachmentID,omitempty"`

	TransitGatewayID *string `json:"transitGatewayID,omitempty"`

	VPCID *string `json:"vpcID,omitempty"`

	VPCOwnerID *string `json:"vpcOwnerID,omitempty"`
}

type TunnelOption struct {
	DpdTimeoutAction *string `json:"dpdTimeoutAction,omitempty"`

	OutsideIPAddress *string `json:"outsideIPAddress,omitempty"`

	PreSharedKey *string `json:"preSharedKey,omitempty"`

	StartupAction *string `json:"startupAction,omitempty"`

	TunnelInsideCIDR *string `json:"tunnelInsideCIDR,omitempty"`

	TunnelInsideIPv6CIDR *string `json:"tunnelInsideIPv6CIDR,omitempty"`
}

type UnsuccessfulInstanceCreditSpecificationItem struct {
	InstanceID *string `json:"instanceID,omitempty"`
}

type UnsuccessfulInstanceCreditSpecificationItemError struct {
	Message *string `json:"message,omitempty"`
}

type UnsuccessfulItem struct {
	ResourceID *string `json:"resourceID,omitempty"`
}

type UnsuccessfulItemError struct {
	Code *string `json:"code,omitempty"`

	Message *string `json:"message,omitempty"`
}

type UserBucket struct {
	S3Bucket *string `json:"s3Bucket,omitempty"`

	S3Key *string `json:"s3Key,omitempty"`
}

type UserBucketDetails struct {
	S3Bucket *string `json:"s3Bucket,omitempty"`

	S3Key *string `json:"s3Key,omitempty"`
}

type UserData struct {
	Data *string `json:"data,omitempty"`
}

type UserIDGroupPair struct {
	Description *string `json:"description,omitempty"`

	GroupID *string `json:"groupID,omitempty"`

	GroupName *string `json:"groupName,omitempty"`

	PeeringStatus *string `json:"peeringStatus,omitempty"`

	UserID *string `json:"userID,omitempty"`

	VPCID *string `json:"vpcID,omitempty"`

	VPCPeeringConnectionID *string `json:"vpcPeeringConnectionID,omitempty"`
}

type VGWTelemetry struct {
	CertificateARN *string `json:"certificateARN,omitempty"`

	LastStatusChange *metav1.Time `json:"lastStatusChange,omitempty"`

	OutsideIPAddress *string `json:"outsideIPAddress,omitempty"`

	StatusMessage *string `json:"statusMessage,omitempty"`
}

type VPC struct {
	CIDRBlock *string `json:"cidrBlock,omitempty"`

	DHCPOptionsID *string `json:"dhcpOptionsID,omitempty"`

	IsDefault *bool `json:"isDefault,omitempty"`

	OwnerID *string `json:"ownerID,omitempty"`

	Tags []*Tag `json:"tags,omitempty"`

	VPCID *string `json:"vpcID,omitempty"`
}

type VPCAttachment struct {
	VPCID *string `json:"vpcID,omitempty"`
}

type VPCCIDRBlockAssociation struct {
	AssociationID *string `json:"associationID,omitempty"`

	CIDRBlock *string `json:"cidrBlock,omitempty"`
}

type VPCCIDRBlockState struct {
	StatusMessage *string `json:"statusMessage,omitempty"`
}

type VPCClassicLink struct {
	ClassicLinkEnabled *bool `json:"classicLinkEnabled,omitempty"`

	Tags []*Tag `json:"tags,omitempty"`

	VPCID *string `json:"vpcID,omitempty"`
}

type VPCEndpoint struct {
	NetworkInterfaceIDs []*string `json:"networkInterfaceIDs,omitempty"`

	OwnerID *string `json:"ownerID,omitempty"`

	PolicyDocument *string `json:"policyDocument,omitempty"`

	PrivateDNSEnabled *bool `json:"privateDNSEnabled,omitempty"`

	RequesterManaged *bool `json:"requesterManaged,omitempty"`

	RouteTableIDs []*string `json:"routeTableIDs,omitempty"`

	ServiceName *string `json:"serviceName,omitempty"`

	SubnetIDs []*string `json:"subnetIDs,omitempty"`

	Tags []*Tag `json:"tags,omitempty"`

	VPCEndpointID *string `json:"vpcEndpointID,omitempty"`

	VPCID *string `json:"vpcID,omitempty"`
}

type VPCEndpointConnection struct {
	GatewayLoadBalancerARNs []*string `json:"gatewayLoadBalancerARNs,omitempty"`

	NetworkLoadBalancerARNs []*string `json:"networkLoadBalancerARNs,omitempty"`

	ServiceID *string `json:"serviceID,omitempty"`

	VPCEndpointID *string `json:"vpcEndpointID,omitempty"`

	VPCEndpointOwner *string `json:"vpcEndpointOwner,omitempty"`
}

type VPCIPv6CIDRBlockAssociation struct {
	AssociationID *string `json:"associationID,omitempty"`

	IPv6CIDRBlock *string `json:"ipv6CIDRBlock,omitempty"`

	IPv6Pool *string `json:"ipv6Pool,omitempty"`

	NetworkBorderGroup *string `json:"networkBorderGroup,omitempty"`
}

type VPCPeeringConnectionOptionsDescription struct {
	AllowDNSResolutionFromRemoteVPC *bool `json:"allowDNSResolutionFromRemoteVPC,omitempty"`

	AllowEgressFromLocalClassicLinkToRemoteVPC *bool `json:"allowEgressFromLocalClassicLinkToRemoteVPC,omitempty"`

	AllowEgressFromLocalVPCToRemoteClassicLink *bool `json:"allowEgressFromLocalVPCToRemoteClassicLink,omitempty"`
}

type VPCPeeringConnectionStateReason struct {
	Code *string `json:"code,omitempty"`

	Message *string `json:"message,omitempty"`
}

type VPCPeeringConnectionVPCInfo struct {
	CIDRBlock *string `json:"cidrBlock,omitempty"`

	CIDRBlockSet []*CIDRBlock `json:"cidrBlockSet,omitempty"`

	IPv6CIDRBlockSet []*IPv6CIDRBlock `json:"ipv6CIDRBlockSet,omitempty"`

	OwnerID *string `json:"ownerID,omitempty"`
	// Describes the VPC peering connection options.
	PeeringOptions *VPCPeeringConnectionOptionsDescription `json:"peeringOptions,omitempty"`

	Region *string `json:"region,omitempty"`

	VPCID *string `json:"vpcID,omitempty"`
}

type VPCPeeringConnection_SDK struct {
	// Describes a VPC in a VPC peering connection.
	AccepterVPCInfo *VPCPeeringConnectionVPCInfo `json:"accepterVPCInfo,omitempty"`

	ExpirationTime *metav1.Time `json:"expirationTime,omitempty"`
	// Describes a VPC in a VPC peering connection.
	RequesterVPCInfo *VPCPeeringConnectionVPCInfo `json:"requesterVPCInfo,omitempty"`
	// Describes the status of a VPC peering connection.
	Status *VPCPeeringConnectionStateReason `json:"status,omitempty"`

	Tags []*Tag `json:"tags,omitempty"`

	VPCPeeringConnectionID *string `json:"vpcPeeringConnectionID,omitempty"`
}

type VPNConnection struct {
	Category *string `json:"category,omitempty"`

	CustomerGatewayConfiguration *string `json:"customerGatewayConfiguration,omitempty"`

	CustomerGatewayID *string `json:"customerGatewayID,omitempty"`

	Tags []*Tag `json:"tags,omitempty"`

	TransitGatewayID *string `json:"transitGatewayID,omitempty"`

	VPNConnectionID *string `json:"vpnConnectionID,omitempty"`

	VPNGatewayID *string `json:"vpnGatewayID,omitempty"`
}

type VPNConnectionOptions struct {
	EnableAcceleration *bool `json:"enableAcceleration,omitempty"`

	LocalIPv4NetworkCIDR *string `json:"localIPv4NetworkCIDR,omitempty"`

	LocalIPv6NetworkCIDR *string `json:"localIPv6NetworkCIDR,omitempty"`

	RemoteIPv4NetworkCIDR *string `json:"remoteIPv4NetworkCIDR,omitempty"`

	RemoteIPv6NetworkCIDR *string `json:"remoteIPv6NetworkCIDR,omitempty"`

	StaticRoutesOnly *bool `json:"staticRoutesOnly,omitempty"`
}

type VPNConnectionOptionsSpecification struct {
	EnableAcceleration *bool `json:"enableAcceleration,omitempty"`

	LocalIPv4NetworkCIDR *string `json:"localIPv4NetworkCIDR,omitempty"`

	LocalIPv6NetworkCIDR *string `json:"localIPv6NetworkCIDR,omitempty"`

	RemoteIPv4NetworkCIDR *string `json:"remoteIPv4NetworkCIDR,omitempty"`

	RemoteIPv6NetworkCIDR *string `json:"remoteIPv6NetworkCIDR,omitempty"`

	StaticRoutesOnly *bool `json:"staticRoutesOnly,omitempty"`
}

type VPNGateway struct {
	AvailabilityZone *string `json:"availabilityZone,omitempty"`

	Tags []*Tag `json:"tags,omitempty"`

	VPNGatewayID *string `json:"vpnGatewayID,omitempty"`
}

type VPNStaticRoute struct {
	DestinationCIDRBlock *string `json:"destinationCIDRBlock,omitempty"`
}

type VPNTunnelOptionsSpecification struct {
	DPDTimeoutAction *string `json:"dPDTimeoutAction,omitempty"`

	PreSharedKey *string `json:"preSharedKey,omitempty"`

	StartupAction *string `json:"startupAction,omitempty"`

	TunnelInsideCIDR *string `json:"tunnelInsideCIDR,omitempty"`

	TunnelInsideIPv6CIDR *string `json:"tunnelInsideIPv6CIDR,omitempty"`
}

type ValidationError struct {
	Code *string `json:"code,omitempty"`

	Message *string `json:"message,omitempty"`
}

type VolumeModification struct {
	EndTime *metav1.Time `json:"endTime,omitempty"`

	OriginalMultiAttachEnabled *bool `json:"originalMultiAttachEnabled,omitempty"`

	StartTime *metav1.Time `json:"startTime,omitempty"`

	StatusMessage *string `json:"statusMessage,omitempty"`

	TargetMultiAttachEnabled *bool `json:"targetMultiAttachEnabled,omitempty"`

	VolumeID *string `json:"volumeID,omitempty"`
}

type VolumeStatusAction struct {
	Code *string `json:"code,omitempty"`

	Description *string `json:"description,omitempty"`

	EventID *string `json:"eventID,omitempty"`

	EventType *string `json:"eventType,omitempty"`
}

type VolumeStatusAttachmentStatus struct {
	InstanceID *string `json:"instanceID,omitempty"`

	IoPerformance *string `json:"ioPerformance,omitempty"`
}

type VolumeStatusDetails struct {
	Status *string `json:"status,omitempty"`
}

type VolumeStatusEvent struct {
	Description *string `json:"description,omitempty"`

	EventID *string `json:"eventID,omitempty"`

	EventType *string `json:"eventType,omitempty"`

	InstanceID *string `json:"instanceID,omitempty"`
}

type VolumeStatusItem struct {
	AvailabilityZone *string `json:"availabilityZone,omitempty"`

	OutpostARN *string `json:"outpostARN,omitempty"`

	VolumeID *string `json:"volumeID,omitempty"`
}
