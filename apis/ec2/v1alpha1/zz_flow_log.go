/*
Copyright 2021 The Crossplane Authors.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by ack-generate. DO NOT EDIT.

package v1alpha1

import (
	xpv1 "github.com/crossplane/crossplane-runtime/apis/common/v1"
	metav1 "k8s.io/apimachinery/pkg/apis/meta/v1"
	"k8s.io/apimachinery/pkg/runtime/schema"
)

// FlowLogParameters defines the desired state of FlowLog
type FlowLogParameters struct {
	// Region is which region the FlowLog will be created.
	// +kubebuilder:validation:Required
	Region string `json:"region"`
	// Unique, case-sensitive identifier that you provide to ensure the idempotency
	// of the request. For more information, see How to ensure idempotency (https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/Run_Instance_Idempotency.html).
	ClientToken *string `json:"clientToken,omitempty"`
	// The destination options.
	DestinationOptions *DestinationOptionsRequest `json:"destinationOptions,omitempty"`
	// The destination to which the flow log data is to be published. Flow log data
	// can be published to a CloudWatch Logs log group or an Amazon S3 bucket. The
	// value specified for this parameter depends on the value specified for LogDestinationType.
	//
	// If LogDestinationType is not specified or cloud-watch-logs, specify the Amazon
	// Resource Name (ARN) of the CloudWatch Logs log group. For example, to publish
	// to a log group called my-logs, specify arn:aws:logs:us-east-1:123456789012:log-group:my-logs.
	// Alternatively, use LogGroupName instead.
	//
	// If LogDestinationType is s3, specify the ARN of the Amazon S3 bucket. You
	// can also specify a subfolder in the bucket. To specify a subfolder in the
	// bucket, use the following ARN format: bucket_ARN/subfolder_name/. For example,
	// to specify a subfolder named my-logs in a bucket named my-bucket, use the
	// following ARN: arn:aws:s3:::my-bucket/my-logs/. You cannot use AWSLogs as
	// a subfolder name. This is a reserved term.
	LogDestination *string `json:"logDestination,omitempty"`
	// The type of destination to which the flow log data is to be published. Flow
	// log data can be published to CloudWatch Logs or Amazon S3. To publish flow
	// log data to CloudWatch Logs, specify cloud-watch-logs. To publish flow log
	// data to Amazon S3, specify s3.
	//
	// If you specify LogDestinationType as s3, do not specify DeliverLogsPermissionArn
	// or LogGroupName.
	//
	// Default: cloud-watch-logs
	LogDestinationType *string `json:"logDestinationType,omitempty"`
	// The fields to include in the flow log record, in the order in which they
	// should appear. For a list of available fields, see Flow log records (https://docs.aws.amazon.com/vpc/latest/userguide/flow-logs.html#flow-log-records).
	// If you omit this parameter, the flow log is created using the default format.
	// If you specify this parameter, you must specify at least one field.
	//
	// Specify the fields using the ${field-id} format, separated by spaces. For
	// the CLI, surround this parameter value with single quotes on Linux or double
	// quotes on Windows.
	LogFormat *string `json:"logFormat,omitempty"`
	// The name of a new or existing CloudWatch Logs log group where Amazon EC2
	// publishes your flow logs.
	//
	// If you specify LogDestinationType as s3, do not specify DeliverLogsPermissionArn
	// or LogGroupName.
	LogGroupName *string `json:"logGroupName,omitempty"`
	// The maximum interval of time during which a flow of packets is captured and
	// aggregated into a flow log record. You can specify 60 seconds (1 minute)
	// or 600 seconds (10 minutes).
	//
	// When a network interface is attached to a Nitro-based instance (https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/instance-types.html#ec2-nitro-instances),
	// the aggregation interval is always 60 seconds or less, regardless of the
	// value that you specify.
	//
	// Default: 600
	MaxAggregationInterval *int64 `json:"maxAggregationInterval,omitempty"`
	// The type of traffic to log. You can log traffic that the resource accepts
	// or rejects, or all traffic.
	// +kubebuilder:validation:Required
	TrafficType             *string `json:"trafficType"`
	CustomFlowLogParameters `json:",inline"`
}

// FlowLogSpec defines the desired state of FlowLog
type FlowLogSpec struct {
	xpv1.ResourceSpec `json:",inline"`
	ForProvider       FlowLogParameters `json:"forProvider"`
}

// FlowLogObservation defines the observed state of FlowLog
type FlowLogObservation struct {
	// The date and time the flow log was created.
	CreationTime *metav1.Time `json:"creationTime,omitempty"`
	// The status of the logs delivery (SUCCESS | FAILED).
	DeliverLogsStatus *string `json:"deliverLogsStatus,omitempty"`
	// The flow log ID.
	FlowLogID *string `json:"flowLogID,omitempty"`
	// The status of the flow log (ACTIVE).
	FlowLogStatus *string `json:"flowLogStatus,omitempty"`
	// The ID of the resource on which the flow log was created.
	ResourceID *string `json:"resourceID,omitempty"`
	// The tags for the flow log.
	Tags []*Tag `json:"tags,omitempty"`
}

// FlowLogStatus defines the observed state of FlowLog.
type FlowLogStatus struct {
	xpv1.ResourceStatus `json:",inline"`
	AtProvider          FlowLogObservation `json:"atProvider,omitempty"`
}

// +kubebuilder:object:root=true

// FlowLog is the Schema for the FlowLogs API
// +kubebuilder:printcolumn:name="READY",type="string",JSONPath=".status.conditions[?(@.type=='Ready')].status"
// +kubebuilder:printcolumn:name="SYNCED",type="string",JSONPath=".status.conditions[?(@.type=='Synced')].status"
// +kubebuilder:printcolumn:name="EXTERNAL-NAME",type="string",JSONPath=".metadata.annotations.crossplane\\.io/external-name"
// +kubebuilder:subresource:status
// +kubebuilder:storageversion
// +kubebuilder:resource:scope=Cluster,categories={crossplane,managed,aws}
type FlowLog struct {
	metav1.TypeMeta   `json:",inline"`
	metav1.ObjectMeta `json:"metadata,omitempty"`
	Spec              FlowLogSpec   `json:"spec"`
	Status            FlowLogStatus `json:"status,omitempty"`
}

// +kubebuilder:object:root=true

// FlowLogList contains a list of FlowLogs
type FlowLogList struct {
	metav1.TypeMeta `json:",inline"`
	metav1.ListMeta `json:"metadata,omitempty"`
	Items           []FlowLog `json:"items"`
}

// Repository type metadata.
var (
	FlowLogKind             = "FlowLog"
	FlowLogGroupKind        = schema.GroupKind{Group: CRDGroup, Kind: FlowLogKind}.String()
	FlowLogKindAPIVersion   = FlowLogKind + "." + GroupVersion.String()
	FlowLogGroupVersionKind = GroupVersion.WithKind(FlowLogKind)
)

func init() {
	SchemeBuilder.Register(&FlowLog{}, &FlowLogList{})
}
