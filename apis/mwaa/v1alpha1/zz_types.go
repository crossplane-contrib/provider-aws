/*
Copyright 2021 The Crossplane Authors.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by ack-generate. DO NOT EDIT.

package v1alpha1

import (
	metav1 "k8s.io/apimachinery/pkg/apis/meta/v1"
)

// Hack to avoid import errors during build...
var (
	_ = &metav1.Time{}
)

// +kubebuilder:skipversion
type Environment_SDK struct {
	AirflowConfigurationOptions map[string]*string `json:"airflowConfigurationOptions,omitempty"`

	AirflowVersion *string `json:"airflowVersion,omitempty"`

	ARN *string `json:"arn,omitempty"`

	CreatedAt *metav1.Time `json:"createdAt,omitempty"`

	DagS3Path *string `json:"dagS3Path,omitempty"`

	EnvironmentClass *string `json:"environmentClass,omitempty"`

	ExecutionRoleARN *string `json:"executionRoleARN,omitempty"`

	KMSKey *string `json:"kmsKey,omitempty"`
	// Describes the status of the last update on the environment, and any errors
	// that were encountered.
	LastUpdate *LastUpdate `json:"lastUpdate,omitempty"`
	// Describes the Apache Airflow log types that are published to CloudWatch Logs.
	LoggingConfiguration *LoggingConfiguration `json:"loggingConfiguration,omitempty"`

	MaxWorkers *int64 `json:"maxWorkers,omitempty"`

	MinWorkers *int64 `json:"minWorkers,omitempty"`

	Name *string `json:"name,omitempty"`

	PluginsS3ObjectVersion *string `json:"pluginsS3ObjectVersion,omitempty"`

	PluginsS3Path *string `json:"pluginsS3Path,omitempty"`

	RequirementsS3ObjectVersion *string `json:"requirementsS3ObjectVersion,omitempty"`

	RequirementsS3Path *string `json:"requirementsS3Path,omitempty"`

	Schedulers *int64 `json:"schedulers,omitempty"`

	ServiceRoleARN *string `json:"serviceRoleARN,omitempty"`

	SourceBucketARN *string `json:"sourceBucketARN,omitempty"`

	Status *string `json:"status,omitempty"`

	Tags map[string]*string `json:"tags,omitempty"`

	WebserverAccessMode *string `json:"webserverAccessMode,omitempty"`

	WebserverURL *string `json:"webserverURL,omitempty"`

	WeeklyMaintenanceWindowStart *string `json:"weeklyMaintenanceWindowStart,omitempty"`
}

// +kubebuilder:skipversion
type LastUpdate struct {
	// Describes the error(s) encountered with the last update of the environment.
	Error *UpdateError `json:"error,omitempty"`

	Source *string `json:"source,omitempty"`

	Status *string `json:"status,omitempty"`
}

// +kubebuilder:skipversion
type LoggingConfiguration struct {
	// Describes the Apache Airflow log details for the log type (e.g. DagProcessingLogs).
	DagProcessingLogs *ModuleLoggingConfiguration `json:"dagProcessingLogs,omitempty"`
	// Describes the Apache Airflow log details for the log type (e.g. DagProcessingLogs).
	SchedulerLogs *ModuleLoggingConfiguration `json:"schedulerLogs,omitempty"`
	// Describes the Apache Airflow log details for the log type (e.g. DagProcessingLogs).
	TaskLogs *ModuleLoggingConfiguration `json:"taskLogs,omitempty"`
	// Describes the Apache Airflow log details for the log type (e.g. DagProcessingLogs).
	WebserverLogs *ModuleLoggingConfiguration `json:"webserverLogs,omitempty"`
	// Describes the Apache Airflow log details for the log type (e.g. DagProcessingLogs).
	WorkerLogs *ModuleLoggingConfiguration `json:"workerLogs,omitempty"`
}

// +kubebuilder:skipversion
type LoggingConfigurationInput struct {
	// Enables the Apache Airflow log type (e.g. DagProcessingLogs) and defines
	// the log level to send to CloudWatch Logs (e.g. INFO).
	DagProcessingLogs *ModuleLoggingConfigurationInput `json:"dagProcessingLogs,omitempty"`
	// Enables the Apache Airflow log type (e.g. DagProcessingLogs) and defines
	// the log level to send to CloudWatch Logs (e.g. INFO).
	SchedulerLogs *ModuleLoggingConfigurationInput `json:"schedulerLogs,omitempty"`
	// Enables the Apache Airflow log type (e.g. DagProcessingLogs) and defines
	// the log level to send to CloudWatch Logs (e.g. INFO).
	TaskLogs *ModuleLoggingConfigurationInput `json:"taskLogs,omitempty"`
	// Enables the Apache Airflow log type (e.g. DagProcessingLogs) and defines
	// the log level to send to CloudWatch Logs (e.g. INFO).
	WebserverLogs *ModuleLoggingConfigurationInput `json:"webserverLogs,omitempty"`
	// Enables the Apache Airflow log type (e.g. DagProcessingLogs) and defines
	// the log level to send to CloudWatch Logs (e.g. INFO).
	WorkerLogs *ModuleLoggingConfigurationInput `json:"workerLogs,omitempty"`
}

// +kubebuilder:skipversion
type ModuleLoggingConfiguration struct {
	CloudWatchLogGroupARN *string `json:"cloudWatchLogGroupARN,omitempty"`

	Enabled *bool `json:"enabled,omitempty"`

	LogLevel *string `json:"logLevel,omitempty"`
}

// +kubebuilder:skipversion
type ModuleLoggingConfigurationInput struct {
	Enabled *bool `json:"enabled,omitempty"`

	LogLevel *string `json:"logLevel,omitempty"`
}

// +kubebuilder:skipversion
type UpdateError struct {
	ErrorCode *string `json:"errorCode,omitempty"`

	ErrorMessage *string `json:"errorMessage,omitempty"`
}
