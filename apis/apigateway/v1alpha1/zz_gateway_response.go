/*
Copyright 2021 The Crossplane Authors.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by ack-generate. DO NOT EDIT.

package v1alpha1

import (
	xpv1 "github.com/crossplane/crossplane-runtime/apis/common/v1"
	metav1 "k8s.io/apimachinery/pkg/apis/meta/v1"
	"k8s.io/apimachinery/pkg/runtime/schema"
)

// GatewayResponseParameters defines the desired state of GatewayResponse
type GatewayResponseParameters struct {
	// Region is which region the GatewayResponse will be created.
	// +kubebuilder:validation:Required
	Region string `json:"region"`
	// Response parameters (paths, query strings and headers) of the GatewayResponse
	// as a string-to-string map of key-value pairs.
	ResponseParameters map[string]*string `json:"responseParameters,omitempty"`
	// Response templates of the GatewayResponse as a string-to-string map of key-value
	// pairs.
	ResponseTemplates map[string]*string `json:"responseTemplates,omitempty"`
	// [Required]
	// The response type of the associated GatewayResponse.
	// +kubebuilder:validation:Required
	ResponseType *string `json:"responseType"`
	// The HTTP status code of the GatewayResponse.
	StatusCode                      *string `json:"statusCode,omitempty"`
	CustomGatewayResponseParameters `json:",inline"`
}

// GatewayResponseSpec defines the desired state of GatewayResponse
type GatewayResponseSpec struct {
	xpv1.ResourceSpec `json:",inline"`
	ForProvider       GatewayResponseParameters `json:"forProvider"`
}

// GatewayResponseObservation defines the observed state of GatewayResponse
type GatewayResponseObservation struct {
	// A Boolean flag to indicate whether this GatewayResponse is the default gateway
	// response (true) or not (false). A default gateway response is one generated
	// by API Gateway without any customization by an API developer.
	DefaultResponse *bool `json:"defaultResponse,omitempty"`
}

// GatewayResponseStatus defines the observed state of GatewayResponse.
type GatewayResponseStatus struct {
	xpv1.ResourceStatus `json:",inline"`
	AtProvider          GatewayResponseObservation `json:"atProvider,omitempty"`
}

// +kubebuilder:object:root=true

// GatewayResponse is the Schema for the GatewayResponses API
// +kubebuilder:printcolumn:name="READY",type="string",JSONPath=".status.conditions[?(@.type=='Ready')].status"
// +kubebuilder:printcolumn:name="SYNCED",type="string",JSONPath=".status.conditions[?(@.type=='Synced')].status"
// +kubebuilder:printcolumn:name="EXTERNAL-NAME",type="string",JSONPath=".metadata.annotations.crossplane\\.io/external-name"
// +kubebuilder:subresource:status
// +kubebuilder:storageversion
// +kubebuilder:resource:scope=Cluster,categories={crossplane,managed,aws}
type GatewayResponse struct {
	metav1.TypeMeta   `json:",inline"`
	metav1.ObjectMeta `json:"metadata,omitempty"`
	Spec              GatewayResponseSpec   `json:"spec"`
	Status            GatewayResponseStatus `json:"status,omitempty"`
}

// +kubebuilder:object:root=true

// GatewayResponseList contains a list of GatewayResponses
type GatewayResponseList struct {
	metav1.TypeMeta `json:",inline"`
	metav1.ListMeta `json:"metadata,omitempty"`
	Items           []GatewayResponse `json:"items"`
}

// Repository type metadata.
var (
	GatewayResponseKind             = "GatewayResponse"
	GatewayResponseGroupKind        = schema.GroupKind{Group: CRDGroup, Kind: GatewayResponseKind}.String()
	GatewayResponseKindAPIVersion   = GatewayResponseKind + "." + GroupVersion.String()
	GatewayResponseGroupVersionKind = GroupVersion.WithKind(GatewayResponseKind)
)

func init() {
	SchemeBuilder.Register(&GatewayResponse{}, &GatewayResponseList{})
}
