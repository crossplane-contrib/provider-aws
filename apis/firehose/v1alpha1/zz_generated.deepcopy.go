//go:build !ignore_autogenerated

/*
Copyright 2021 The Crossplane Authors.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by controller-gen. DO NOT EDIT.

package v1alpha1

import (
	v1 "github.com/crossplane/crossplane-runtime/apis/common/v1"
	runtime "k8s.io/apimachinery/pkg/runtime"
)

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AmazonOpenSearchServerlessBufferingHints) DeepCopyInto(out *AmazonOpenSearchServerlessBufferingHints) {
	*out = *in
	if in.IntervalInSeconds != nil {
		in, out := &in.IntervalInSeconds, &out.IntervalInSeconds
		*out = new(int64)
		**out = **in
	}
	if in.SizeInMBs != nil {
		in, out := &in.SizeInMBs, &out.SizeInMBs
		*out = new(int64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AmazonOpenSearchServerlessBufferingHints.
func (in *AmazonOpenSearchServerlessBufferingHints) DeepCopy() *AmazonOpenSearchServerlessBufferingHints {
	if in == nil {
		return nil
	}
	out := new(AmazonOpenSearchServerlessBufferingHints)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AmazonOpenSearchServerlessDestinationConfiguration) DeepCopyInto(out *AmazonOpenSearchServerlessDestinationConfiguration) {
	*out = *in
	if in.BufferingHints != nil {
		in, out := &in.BufferingHints, &out.BufferingHints
		*out = new(AmazonOpenSearchServerlessBufferingHints)
		(*in).DeepCopyInto(*out)
	}
	if in.CloudWatchLoggingOptions != nil {
		in, out := &in.CloudWatchLoggingOptions, &out.CloudWatchLoggingOptions
		*out = new(CloudWatchLoggingOptions)
		(*in).DeepCopyInto(*out)
	}
	if in.CollectionEndpoint != nil {
		in, out := &in.CollectionEndpoint, &out.CollectionEndpoint
		*out = new(string)
		**out = **in
	}
	if in.IndexName != nil {
		in, out := &in.IndexName, &out.IndexName
		*out = new(string)
		**out = **in
	}
	if in.ProcessingConfiguration != nil {
		in, out := &in.ProcessingConfiguration, &out.ProcessingConfiguration
		*out = new(ProcessingConfiguration)
		(*in).DeepCopyInto(*out)
	}
	if in.RetryOptions != nil {
		in, out := &in.RetryOptions, &out.RetryOptions
		*out = new(AmazonOpenSearchServerlessRetryOptions)
		(*in).DeepCopyInto(*out)
	}
	if in.RoleARN != nil {
		in, out := &in.RoleARN, &out.RoleARN
		*out = new(string)
		**out = **in
	}
	if in.S3BackupMode != nil {
		in, out := &in.S3BackupMode, &out.S3BackupMode
		*out = new(string)
		**out = **in
	}
	if in.S3Configuration != nil {
		in, out := &in.S3Configuration, &out.S3Configuration
		*out = new(S3DestinationConfiguration)
		(*in).DeepCopyInto(*out)
	}
	if in.VPCConfiguration != nil {
		in, out := &in.VPCConfiguration, &out.VPCConfiguration
		*out = new(VPCConfiguration)
		(*in).DeepCopyInto(*out)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AmazonOpenSearchServerlessDestinationConfiguration.
func (in *AmazonOpenSearchServerlessDestinationConfiguration) DeepCopy() *AmazonOpenSearchServerlessDestinationConfiguration {
	if in == nil {
		return nil
	}
	out := new(AmazonOpenSearchServerlessDestinationConfiguration)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AmazonOpenSearchServerlessDestinationDescription) DeepCopyInto(out *AmazonOpenSearchServerlessDestinationDescription) {
	*out = *in
	if in.BufferingHints != nil {
		in, out := &in.BufferingHints, &out.BufferingHints
		*out = new(AmazonOpenSearchServerlessBufferingHints)
		(*in).DeepCopyInto(*out)
	}
	if in.CloudWatchLoggingOptions != nil {
		in, out := &in.CloudWatchLoggingOptions, &out.CloudWatchLoggingOptions
		*out = new(CloudWatchLoggingOptions)
		(*in).DeepCopyInto(*out)
	}
	if in.CollectionEndpoint != nil {
		in, out := &in.CollectionEndpoint, &out.CollectionEndpoint
		*out = new(string)
		**out = **in
	}
	if in.IndexName != nil {
		in, out := &in.IndexName, &out.IndexName
		*out = new(string)
		**out = **in
	}
	if in.ProcessingConfiguration != nil {
		in, out := &in.ProcessingConfiguration, &out.ProcessingConfiguration
		*out = new(ProcessingConfiguration)
		(*in).DeepCopyInto(*out)
	}
	if in.RetryOptions != nil {
		in, out := &in.RetryOptions, &out.RetryOptions
		*out = new(AmazonOpenSearchServerlessRetryOptions)
		(*in).DeepCopyInto(*out)
	}
	if in.RoleARN != nil {
		in, out := &in.RoleARN, &out.RoleARN
		*out = new(string)
		**out = **in
	}
	if in.S3BackupMode != nil {
		in, out := &in.S3BackupMode, &out.S3BackupMode
		*out = new(string)
		**out = **in
	}
	if in.S3DestinationDescription != nil {
		in, out := &in.S3DestinationDescription, &out.S3DestinationDescription
		*out = new(S3DestinationDescription)
		(*in).DeepCopyInto(*out)
	}
	if in.VPCConfigurationDescription != nil {
		in, out := &in.VPCConfigurationDescription, &out.VPCConfigurationDescription
		*out = new(VPCConfigurationDescription)
		(*in).DeepCopyInto(*out)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AmazonOpenSearchServerlessDestinationDescription.
func (in *AmazonOpenSearchServerlessDestinationDescription) DeepCopy() *AmazonOpenSearchServerlessDestinationDescription {
	if in == nil {
		return nil
	}
	out := new(AmazonOpenSearchServerlessDestinationDescription)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AmazonOpenSearchServerlessDestinationUpdate) DeepCopyInto(out *AmazonOpenSearchServerlessDestinationUpdate) {
	*out = *in
	if in.BufferingHints != nil {
		in, out := &in.BufferingHints, &out.BufferingHints
		*out = new(AmazonOpenSearchServerlessBufferingHints)
		(*in).DeepCopyInto(*out)
	}
	if in.CloudWatchLoggingOptions != nil {
		in, out := &in.CloudWatchLoggingOptions, &out.CloudWatchLoggingOptions
		*out = new(CloudWatchLoggingOptions)
		(*in).DeepCopyInto(*out)
	}
	if in.CollectionEndpoint != nil {
		in, out := &in.CollectionEndpoint, &out.CollectionEndpoint
		*out = new(string)
		**out = **in
	}
	if in.IndexName != nil {
		in, out := &in.IndexName, &out.IndexName
		*out = new(string)
		**out = **in
	}
	if in.ProcessingConfiguration != nil {
		in, out := &in.ProcessingConfiguration, &out.ProcessingConfiguration
		*out = new(ProcessingConfiguration)
		(*in).DeepCopyInto(*out)
	}
	if in.RetryOptions != nil {
		in, out := &in.RetryOptions, &out.RetryOptions
		*out = new(AmazonOpenSearchServerlessRetryOptions)
		(*in).DeepCopyInto(*out)
	}
	if in.RoleARN != nil {
		in, out := &in.RoleARN, &out.RoleARN
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AmazonOpenSearchServerlessDestinationUpdate.
func (in *AmazonOpenSearchServerlessDestinationUpdate) DeepCopy() *AmazonOpenSearchServerlessDestinationUpdate {
	if in == nil {
		return nil
	}
	out := new(AmazonOpenSearchServerlessDestinationUpdate)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AmazonOpenSearchServerlessRetryOptions) DeepCopyInto(out *AmazonOpenSearchServerlessRetryOptions) {
	*out = *in
	if in.DurationInSeconds != nil {
		in, out := &in.DurationInSeconds, &out.DurationInSeconds
		*out = new(int64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AmazonOpenSearchServerlessRetryOptions.
func (in *AmazonOpenSearchServerlessRetryOptions) DeepCopy() *AmazonOpenSearchServerlessRetryOptions {
	if in == nil {
		return nil
	}
	out := new(AmazonOpenSearchServerlessRetryOptions)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AmazonopensearchserviceBufferingHints) DeepCopyInto(out *AmazonopensearchserviceBufferingHints) {
	*out = *in
	if in.IntervalInSeconds != nil {
		in, out := &in.IntervalInSeconds, &out.IntervalInSeconds
		*out = new(int64)
		**out = **in
	}
	if in.SizeInMBs != nil {
		in, out := &in.SizeInMBs, &out.SizeInMBs
		*out = new(int64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AmazonopensearchserviceBufferingHints.
func (in *AmazonopensearchserviceBufferingHints) DeepCopy() *AmazonopensearchserviceBufferingHints {
	if in == nil {
		return nil
	}
	out := new(AmazonopensearchserviceBufferingHints)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AmazonopensearchserviceDestinationConfiguration) DeepCopyInto(out *AmazonopensearchserviceDestinationConfiguration) {
	*out = *in
	if in.BufferingHints != nil {
		in, out := &in.BufferingHints, &out.BufferingHints
		*out = new(AmazonopensearchserviceBufferingHints)
		(*in).DeepCopyInto(*out)
	}
	if in.CloudWatchLoggingOptions != nil {
		in, out := &in.CloudWatchLoggingOptions, &out.CloudWatchLoggingOptions
		*out = new(CloudWatchLoggingOptions)
		(*in).DeepCopyInto(*out)
	}
	if in.ClusterEndpoint != nil {
		in, out := &in.ClusterEndpoint, &out.ClusterEndpoint
		*out = new(string)
		**out = **in
	}
	if in.DocumentIDOptions != nil {
		in, out := &in.DocumentIDOptions, &out.DocumentIDOptions
		*out = new(DocumentIDOptions)
		(*in).DeepCopyInto(*out)
	}
	if in.DomainARN != nil {
		in, out := &in.DomainARN, &out.DomainARN
		*out = new(string)
		**out = **in
	}
	if in.IndexName != nil {
		in, out := &in.IndexName, &out.IndexName
		*out = new(string)
		**out = **in
	}
	if in.IndexRotationPeriod != nil {
		in, out := &in.IndexRotationPeriod, &out.IndexRotationPeriod
		*out = new(string)
		**out = **in
	}
	if in.ProcessingConfiguration != nil {
		in, out := &in.ProcessingConfiguration, &out.ProcessingConfiguration
		*out = new(ProcessingConfiguration)
		(*in).DeepCopyInto(*out)
	}
	if in.RetryOptions != nil {
		in, out := &in.RetryOptions, &out.RetryOptions
		*out = new(AmazonopensearchserviceRetryOptions)
		(*in).DeepCopyInto(*out)
	}
	if in.RoleARN != nil {
		in, out := &in.RoleARN, &out.RoleARN
		*out = new(string)
		**out = **in
	}
	if in.S3BackupMode != nil {
		in, out := &in.S3BackupMode, &out.S3BackupMode
		*out = new(string)
		**out = **in
	}
	if in.S3Configuration != nil {
		in, out := &in.S3Configuration, &out.S3Configuration
		*out = new(S3DestinationConfiguration)
		(*in).DeepCopyInto(*out)
	}
	if in.TypeName != nil {
		in, out := &in.TypeName, &out.TypeName
		*out = new(string)
		**out = **in
	}
	if in.VPCConfiguration != nil {
		in, out := &in.VPCConfiguration, &out.VPCConfiguration
		*out = new(VPCConfiguration)
		(*in).DeepCopyInto(*out)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AmazonopensearchserviceDestinationConfiguration.
func (in *AmazonopensearchserviceDestinationConfiguration) DeepCopy() *AmazonopensearchserviceDestinationConfiguration {
	if in == nil {
		return nil
	}
	out := new(AmazonopensearchserviceDestinationConfiguration)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AmazonopensearchserviceDestinationDescription) DeepCopyInto(out *AmazonopensearchserviceDestinationDescription) {
	*out = *in
	if in.BufferingHints != nil {
		in, out := &in.BufferingHints, &out.BufferingHints
		*out = new(AmazonopensearchserviceBufferingHints)
		(*in).DeepCopyInto(*out)
	}
	if in.CloudWatchLoggingOptions != nil {
		in, out := &in.CloudWatchLoggingOptions, &out.CloudWatchLoggingOptions
		*out = new(CloudWatchLoggingOptions)
		(*in).DeepCopyInto(*out)
	}
	if in.ClusterEndpoint != nil {
		in, out := &in.ClusterEndpoint, &out.ClusterEndpoint
		*out = new(string)
		**out = **in
	}
	if in.DocumentIDOptions != nil {
		in, out := &in.DocumentIDOptions, &out.DocumentIDOptions
		*out = new(DocumentIDOptions)
		(*in).DeepCopyInto(*out)
	}
	if in.DomainARN != nil {
		in, out := &in.DomainARN, &out.DomainARN
		*out = new(string)
		**out = **in
	}
	if in.IndexName != nil {
		in, out := &in.IndexName, &out.IndexName
		*out = new(string)
		**out = **in
	}
	if in.IndexRotationPeriod != nil {
		in, out := &in.IndexRotationPeriod, &out.IndexRotationPeriod
		*out = new(string)
		**out = **in
	}
	if in.ProcessingConfiguration != nil {
		in, out := &in.ProcessingConfiguration, &out.ProcessingConfiguration
		*out = new(ProcessingConfiguration)
		(*in).DeepCopyInto(*out)
	}
	if in.RetryOptions != nil {
		in, out := &in.RetryOptions, &out.RetryOptions
		*out = new(AmazonopensearchserviceRetryOptions)
		(*in).DeepCopyInto(*out)
	}
	if in.RoleARN != nil {
		in, out := &in.RoleARN, &out.RoleARN
		*out = new(string)
		**out = **in
	}
	if in.S3BackupMode != nil {
		in, out := &in.S3BackupMode, &out.S3BackupMode
		*out = new(string)
		**out = **in
	}
	if in.S3DestinationDescription != nil {
		in, out := &in.S3DestinationDescription, &out.S3DestinationDescription
		*out = new(S3DestinationDescription)
		(*in).DeepCopyInto(*out)
	}
	if in.TypeName != nil {
		in, out := &in.TypeName, &out.TypeName
		*out = new(string)
		**out = **in
	}
	if in.VPCConfigurationDescription != nil {
		in, out := &in.VPCConfigurationDescription, &out.VPCConfigurationDescription
		*out = new(VPCConfigurationDescription)
		(*in).DeepCopyInto(*out)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AmazonopensearchserviceDestinationDescription.
func (in *AmazonopensearchserviceDestinationDescription) DeepCopy() *AmazonopensearchserviceDestinationDescription {
	if in == nil {
		return nil
	}
	out := new(AmazonopensearchserviceDestinationDescription)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AmazonopensearchserviceDestinationUpdate) DeepCopyInto(out *AmazonopensearchserviceDestinationUpdate) {
	*out = *in
	if in.BufferingHints != nil {
		in, out := &in.BufferingHints, &out.BufferingHints
		*out = new(AmazonopensearchserviceBufferingHints)
		(*in).DeepCopyInto(*out)
	}
	if in.CloudWatchLoggingOptions != nil {
		in, out := &in.CloudWatchLoggingOptions, &out.CloudWatchLoggingOptions
		*out = new(CloudWatchLoggingOptions)
		(*in).DeepCopyInto(*out)
	}
	if in.ClusterEndpoint != nil {
		in, out := &in.ClusterEndpoint, &out.ClusterEndpoint
		*out = new(string)
		**out = **in
	}
	if in.DocumentIDOptions != nil {
		in, out := &in.DocumentIDOptions, &out.DocumentIDOptions
		*out = new(DocumentIDOptions)
		(*in).DeepCopyInto(*out)
	}
	if in.DomainARN != nil {
		in, out := &in.DomainARN, &out.DomainARN
		*out = new(string)
		**out = **in
	}
	if in.IndexName != nil {
		in, out := &in.IndexName, &out.IndexName
		*out = new(string)
		**out = **in
	}
	if in.IndexRotationPeriod != nil {
		in, out := &in.IndexRotationPeriod, &out.IndexRotationPeriod
		*out = new(string)
		**out = **in
	}
	if in.ProcessingConfiguration != nil {
		in, out := &in.ProcessingConfiguration, &out.ProcessingConfiguration
		*out = new(ProcessingConfiguration)
		(*in).DeepCopyInto(*out)
	}
	if in.RetryOptions != nil {
		in, out := &in.RetryOptions, &out.RetryOptions
		*out = new(AmazonopensearchserviceRetryOptions)
		(*in).DeepCopyInto(*out)
	}
	if in.RoleARN != nil {
		in, out := &in.RoleARN, &out.RoleARN
		*out = new(string)
		**out = **in
	}
	if in.TypeName != nil {
		in, out := &in.TypeName, &out.TypeName
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AmazonopensearchserviceDestinationUpdate.
func (in *AmazonopensearchserviceDestinationUpdate) DeepCopy() *AmazonopensearchserviceDestinationUpdate {
	if in == nil {
		return nil
	}
	out := new(AmazonopensearchserviceDestinationUpdate)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AmazonopensearchserviceRetryOptions) DeepCopyInto(out *AmazonopensearchserviceRetryOptions) {
	*out = *in
	if in.DurationInSeconds != nil {
		in, out := &in.DurationInSeconds, &out.DurationInSeconds
		*out = new(int64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AmazonopensearchserviceRetryOptions.
func (in *AmazonopensearchserviceRetryOptions) DeepCopy() *AmazonopensearchserviceRetryOptions {
	if in == nil {
		return nil
	}
	out := new(AmazonopensearchserviceRetryOptions)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AuthenticationConfiguration) DeepCopyInto(out *AuthenticationConfiguration) {
	*out = *in
	if in.Connectivity != nil {
		in, out := &in.Connectivity, &out.Connectivity
		*out = new(string)
		**out = **in
	}
	if in.RoleARN != nil {
		in, out := &in.RoleARN, &out.RoleARN
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AuthenticationConfiguration.
func (in *AuthenticationConfiguration) DeepCopy() *AuthenticationConfiguration {
	if in == nil {
		return nil
	}
	out := new(AuthenticationConfiguration)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *BufferingHints) DeepCopyInto(out *BufferingHints) {
	*out = *in
	if in.IntervalInSeconds != nil {
		in, out := &in.IntervalInSeconds, &out.IntervalInSeconds
		*out = new(int64)
		**out = **in
	}
	if in.SizeInMBs != nil {
		in, out := &in.SizeInMBs, &out.SizeInMBs
		*out = new(int64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new BufferingHints.
func (in *BufferingHints) DeepCopy() *BufferingHints {
	if in == nil {
		return nil
	}
	out := new(BufferingHints)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CloudWatchLoggingOptions) DeepCopyInto(out *CloudWatchLoggingOptions) {
	*out = *in
	if in.Enabled != nil {
		in, out := &in.Enabled, &out.Enabled
		*out = new(bool)
		**out = **in
	}
	if in.LogGroupName != nil {
		in, out := &in.LogGroupName, &out.LogGroupName
		*out = new(string)
		**out = **in
	}
	if in.LogStreamName != nil {
		in, out := &in.LogStreamName, &out.LogStreamName
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CloudWatchLoggingOptions.
func (in *CloudWatchLoggingOptions) DeepCopy() *CloudWatchLoggingOptions {
	if in == nil {
		return nil
	}
	out := new(CloudWatchLoggingOptions)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CopyCommand) DeepCopyInto(out *CopyCommand) {
	*out = *in
	if in.CopyOptions != nil {
		in, out := &in.CopyOptions, &out.CopyOptions
		*out = new(string)
		**out = **in
	}
	if in.DataTableColumns != nil {
		in, out := &in.DataTableColumns, &out.DataTableColumns
		*out = new(string)
		**out = **in
	}
	if in.DataTableName != nil {
		in, out := &in.DataTableName, &out.DataTableName
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CopyCommand.
func (in *CopyCommand) DeepCopy() *CopyCommand {
	if in == nil {
		return nil
	}
	out := new(CopyCommand)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CustomDeliveryStreamObservation) DeepCopyInto(out *CustomDeliveryStreamObservation) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CustomDeliveryStreamObservation.
func (in *CustomDeliveryStreamObservation) DeepCopy() *CustomDeliveryStreamObservation {
	if in == nil {
		return nil
	}
	out := new(CustomDeliveryStreamObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CustomDeliveryStreamParameters) DeepCopyInto(out *CustomDeliveryStreamParameters) {
	*out = *in
	if in.KMSKeyARN != nil {
		in, out := &in.KMSKeyARN, &out.KMSKeyARN
		*out = new(string)
		**out = **in
	}
	if in.KMSKeyARNRef != nil {
		in, out := &in.KMSKeyARNRef, &out.KMSKeyARNRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.KMSKeyARNSelector != nil {
		in, out := &in.KMSKeyARNSelector, &out.KMSKeyARNSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CustomDeliveryStreamParameters.
func (in *CustomDeliveryStreamParameters) DeepCopy() *CustomDeliveryStreamParameters {
	if in == nil {
		return nil
	}
	out := new(CustomDeliveryStreamParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DataFormatConversionConfiguration) DeepCopyInto(out *DataFormatConversionConfiguration) {
	*out = *in
	if in.Enabled != nil {
		in, out := &in.Enabled, &out.Enabled
		*out = new(bool)
		**out = **in
	}
	if in.InputFormatConfiguration != nil {
		in, out := &in.InputFormatConfiguration, &out.InputFormatConfiguration
		*out = new(InputFormatConfiguration)
		(*in).DeepCopyInto(*out)
	}
	if in.OutputFormatConfiguration != nil {
		in, out := &in.OutputFormatConfiguration, &out.OutputFormatConfiguration
		*out = new(OutputFormatConfiguration)
		(*in).DeepCopyInto(*out)
	}
	if in.SchemaConfiguration != nil {
		in, out := &in.SchemaConfiguration, &out.SchemaConfiguration
		*out = new(SchemaConfiguration)
		(*in).DeepCopyInto(*out)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DataFormatConversionConfiguration.
func (in *DataFormatConversionConfiguration) DeepCopy() *DataFormatConversionConfiguration {
	if in == nil {
		return nil
	}
	out := new(DataFormatConversionConfiguration)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DeliveryStream) DeepCopyInto(out *DeliveryStream) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DeliveryStream.
func (in *DeliveryStream) DeepCopy() *DeliveryStream {
	if in == nil {
		return nil
	}
	out := new(DeliveryStream)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *DeliveryStream) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DeliveryStreamDescription) DeepCopyInto(out *DeliveryStreamDescription) {
	*out = *in
	if in.CreateTimestamp != nil {
		in, out := &in.CreateTimestamp, &out.CreateTimestamp
		*out = (*in).DeepCopy()
	}
	if in.DeliveryStreamARN != nil {
		in, out := &in.DeliveryStreamARN, &out.DeliveryStreamARN
		*out = new(string)
		**out = **in
	}
	if in.DeliveryStreamEncryptionConfiguration != nil {
		in, out := &in.DeliveryStreamEncryptionConfiguration, &out.DeliveryStreamEncryptionConfiguration
		*out = new(DeliveryStreamEncryptionConfiguration)
		(*in).DeepCopyInto(*out)
	}
	if in.DeliveryStreamName != nil {
		in, out := &in.DeliveryStreamName, &out.DeliveryStreamName
		*out = new(string)
		**out = **in
	}
	if in.DeliveryStreamStatus != nil {
		in, out := &in.DeliveryStreamStatus, &out.DeliveryStreamStatus
		*out = new(string)
		**out = **in
	}
	if in.DeliveryStreamType != nil {
		in, out := &in.DeliveryStreamType, &out.DeliveryStreamType
		*out = new(string)
		**out = **in
	}
	if in.Destinations != nil {
		in, out := &in.Destinations, &out.Destinations
		*out = make([]*DestinationDescription, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(DestinationDescription)
				(*in).DeepCopyInto(*out)
			}
		}
	}
	if in.FailureDescription != nil {
		in, out := &in.FailureDescription, &out.FailureDescription
		*out = new(FailureDescription)
		(*in).DeepCopyInto(*out)
	}
	if in.HasMoreDestinations != nil {
		in, out := &in.HasMoreDestinations, &out.HasMoreDestinations
		*out = new(bool)
		**out = **in
	}
	if in.LastUpdateTimestamp != nil {
		in, out := &in.LastUpdateTimestamp, &out.LastUpdateTimestamp
		*out = (*in).DeepCopy()
	}
	if in.Source != nil {
		in, out := &in.Source, &out.Source
		*out = new(SourceDescription)
		(*in).DeepCopyInto(*out)
	}
	if in.VersionID != nil {
		in, out := &in.VersionID, &out.VersionID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DeliveryStreamDescription.
func (in *DeliveryStreamDescription) DeepCopy() *DeliveryStreamDescription {
	if in == nil {
		return nil
	}
	out := new(DeliveryStreamDescription)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DeliveryStreamEncryptionConfiguration) DeepCopyInto(out *DeliveryStreamEncryptionConfiguration) {
	*out = *in
	if in.FailureDescription != nil {
		in, out := &in.FailureDescription, &out.FailureDescription
		*out = new(FailureDescription)
		(*in).DeepCopyInto(*out)
	}
	if in.KeyARN != nil {
		in, out := &in.KeyARN, &out.KeyARN
		*out = new(string)
		**out = **in
	}
	if in.KeyType != nil {
		in, out := &in.KeyType, &out.KeyType
		*out = new(string)
		**out = **in
	}
	if in.Status != nil {
		in, out := &in.Status, &out.Status
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DeliveryStreamEncryptionConfiguration.
func (in *DeliveryStreamEncryptionConfiguration) DeepCopy() *DeliveryStreamEncryptionConfiguration {
	if in == nil {
		return nil
	}
	out := new(DeliveryStreamEncryptionConfiguration)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DeliveryStreamEncryptionConfigurationInput) DeepCopyInto(out *DeliveryStreamEncryptionConfigurationInput) {
	*out = *in
	if in.KeyARN != nil {
		in, out := &in.KeyARN, &out.KeyARN
		*out = new(string)
		**out = **in
	}
	if in.KeyType != nil {
		in, out := &in.KeyType, &out.KeyType
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DeliveryStreamEncryptionConfigurationInput.
func (in *DeliveryStreamEncryptionConfigurationInput) DeepCopy() *DeliveryStreamEncryptionConfigurationInput {
	if in == nil {
		return nil
	}
	out := new(DeliveryStreamEncryptionConfigurationInput)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DeliveryStreamList) DeepCopyInto(out *DeliveryStreamList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]DeliveryStream, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DeliveryStreamList.
func (in *DeliveryStreamList) DeepCopy() *DeliveryStreamList {
	if in == nil {
		return nil
	}
	out := new(DeliveryStreamList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *DeliveryStreamList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DeliveryStreamObservation) DeepCopyInto(out *DeliveryStreamObservation) {
	*out = *in
	if in.DeliveryStreamARN != nil {
		in, out := &in.DeliveryStreamARN, &out.DeliveryStreamARN
		*out = new(string)
		**out = **in
	}
	if in.DeliveryStreamStatus != nil {
		in, out := &in.DeliveryStreamStatus, &out.DeliveryStreamStatus
		*out = new(string)
		**out = **in
	}
	out.CustomDeliveryStreamObservation = in.CustomDeliveryStreamObservation
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DeliveryStreamObservation.
func (in *DeliveryStreamObservation) DeepCopy() *DeliveryStreamObservation {
	if in == nil {
		return nil
	}
	out := new(DeliveryStreamObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DeliveryStreamParameters) DeepCopyInto(out *DeliveryStreamParameters) {
	*out = *in
	if in.AmazonOpenSearchServerlessDestinationConfiguration != nil {
		in, out := &in.AmazonOpenSearchServerlessDestinationConfiguration, &out.AmazonOpenSearchServerlessDestinationConfiguration
		*out = new(AmazonOpenSearchServerlessDestinationConfiguration)
		(*in).DeepCopyInto(*out)
	}
	if in.AmazonopensearchserviceDestinationConfiguration != nil {
		in, out := &in.AmazonopensearchserviceDestinationConfiguration, &out.AmazonopensearchserviceDestinationConfiguration
		*out = new(AmazonopensearchserviceDestinationConfiguration)
		(*in).DeepCopyInto(*out)
	}
	if in.DeliveryStreamEncryptionConfigurationInput != nil {
		in, out := &in.DeliveryStreamEncryptionConfigurationInput, &out.DeliveryStreamEncryptionConfigurationInput
		*out = new(DeliveryStreamEncryptionConfigurationInput)
		(*in).DeepCopyInto(*out)
	}
	if in.DeliveryStreamName != nil {
		in, out := &in.DeliveryStreamName, &out.DeliveryStreamName
		*out = new(string)
		**out = **in
	}
	if in.DeliveryStreamType != nil {
		in, out := &in.DeliveryStreamType, &out.DeliveryStreamType
		*out = new(string)
		**out = **in
	}
	if in.ElasticsearchDestinationConfiguration != nil {
		in, out := &in.ElasticsearchDestinationConfiguration, &out.ElasticsearchDestinationConfiguration
		*out = new(ElasticsearchDestinationConfiguration)
		(*in).DeepCopyInto(*out)
	}
	if in.ExtendedS3DestinationConfiguration != nil {
		in, out := &in.ExtendedS3DestinationConfiguration, &out.ExtendedS3DestinationConfiguration
		*out = new(ExtendedS3DestinationConfiguration)
		(*in).DeepCopyInto(*out)
	}
	if in.HTTPEndpointDestinationConfiguration != nil {
		in, out := &in.HTTPEndpointDestinationConfiguration, &out.HTTPEndpointDestinationConfiguration
		*out = new(HTTPEndpointDestinationConfiguration)
		(*in).DeepCopyInto(*out)
	}
	if in.KinesisStreamSourceConfiguration != nil {
		in, out := &in.KinesisStreamSourceConfiguration, &out.KinesisStreamSourceConfiguration
		*out = new(KinesisStreamSourceConfiguration)
		(*in).DeepCopyInto(*out)
	}
	if in.MSKSourceConfiguration != nil {
		in, out := &in.MSKSourceConfiguration, &out.MSKSourceConfiguration
		*out = new(MSKSourceConfiguration)
		(*in).DeepCopyInto(*out)
	}
	if in.RedshiftDestinationConfiguration != nil {
		in, out := &in.RedshiftDestinationConfiguration, &out.RedshiftDestinationConfiguration
		*out = new(RedshiftDestinationConfiguration)
		(*in).DeepCopyInto(*out)
	}
	if in.S3DestinationConfiguration != nil {
		in, out := &in.S3DestinationConfiguration, &out.S3DestinationConfiguration
		*out = new(S3DestinationConfiguration)
		(*in).DeepCopyInto(*out)
	}
	if in.SplunkDestinationConfiguration != nil {
		in, out := &in.SplunkDestinationConfiguration, &out.SplunkDestinationConfiguration
		*out = new(SplunkDestinationConfiguration)
		(*in).DeepCopyInto(*out)
	}
	if in.Tags != nil {
		in, out := &in.Tags, &out.Tags
		*out = make([]*Tag, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(Tag)
				(*in).DeepCopyInto(*out)
			}
		}
	}
	in.CustomDeliveryStreamParameters.DeepCopyInto(&out.CustomDeliveryStreamParameters)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DeliveryStreamParameters.
func (in *DeliveryStreamParameters) DeepCopy() *DeliveryStreamParameters {
	if in == nil {
		return nil
	}
	out := new(DeliveryStreamParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DeliveryStreamSpec) DeepCopyInto(out *DeliveryStreamSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DeliveryStreamSpec.
func (in *DeliveryStreamSpec) DeepCopy() *DeliveryStreamSpec {
	if in == nil {
		return nil
	}
	out := new(DeliveryStreamSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DeliveryStreamStatus) DeepCopyInto(out *DeliveryStreamStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DeliveryStreamStatus.
func (in *DeliveryStreamStatus) DeepCopy() *DeliveryStreamStatus {
	if in == nil {
		return nil
	}
	out := new(DeliveryStreamStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Deserializer) DeepCopyInto(out *Deserializer) {
	*out = *in
	if in.HiveJSONSerDe != nil {
		in, out := &in.HiveJSONSerDe, &out.HiveJSONSerDe
		*out = new(HiveJSONSerDe)
		(*in).DeepCopyInto(*out)
	}
	if in.OpenXJSONSerDe != nil {
		in, out := &in.OpenXJSONSerDe, &out.OpenXJSONSerDe
		*out = new(OpenXJSONSerDe)
		(*in).DeepCopyInto(*out)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Deserializer.
func (in *Deserializer) DeepCopy() *Deserializer {
	if in == nil {
		return nil
	}
	out := new(Deserializer)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DestinationDescription) DeepCopyInto(out *DestinationDescription) {
	*out = *in
	if in.AmazonOpenSearchServerlessDestinationDescription != nil {
		in, out := &in.AmazonOpenSearchServerlessDestinationDescription, &out.AmazonOpenSearchServerlessDestinationDescription
		*out = new(AmazonOpenSearchServerlessDestinationDescription)
		(*in).DeepCopyInto(*out)
	}
	if in.AmazonopensearchserviceDestinationDescription != nil {
		in, out := &in.AmazonopensearchserviceDestinationDescription, &out.AmazonopensearchserviceDestinationDescription
		*out = new(AmazonopensearchserviceDestinationDescription)
		(*in).DeepCopyInto(*out)
	}
	if in.DestinationID != nil {
		in, out := &in.DestinationID, &out.DestinationID
		*out = new(string)
		**out = **in
	}
	if in.ElasticsearchDestinationDescription != nil {
		in, out := &in.ElasticsearchDestinationDescription, &out.ElasticsearchDestinationDescription
		*out = new(ElasticsearchDestinationDescription)
		(*in).DeepCopyInto(*out)
	}
	if in.ExtendedS3DestinationDescription != nil {
		in, out := &in.ExtendedS3DestinationDescription, &out.ExtendedS3DestinationDescription
		*out = new(ExtendedS3DestinationDescription)
		(*in).DeepCopyInto(*out)
	}
	if in.HTTPEndpointDestinationDescription != nil {
		in, out := &in.HTTPEndpointDestinationDescription, &out.HTTPEndpointDestinationDescription
		*out = new(HTTPEndpointDestinationDescription)
		(*in).DeepCopyInto(*out)
	}
	if in.RedshiftDestinationDescription != nil {
		in, out := &in.RedshiftDestinationDescription, &out.RedshiftDestinationDescription
		*out = new(RedshiftDestinationDescription)
		(*in).DeepCopyInto(*out)
	}
	if in.S3DestinationDescription != nil {
		in, out := &in.S3DestinationDescription, &out.S3DestinationDescription
		*out = new(S3DestinationDescription)
		(*in).DeepCopyInto(*out)
	}
	if in.SplunkDestinationDescription != nil {
		in, out := &in.SplunkDestinationDescription, &out.SplunkDestinationDescription
		*out = new(SplunkDestinationDescription)
		(*in).DeepCopyInto(*out)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DestinationDescription.
func (in *DestinationDescription) DeepCopy() *DestinationDescription {
	if in == nil {
		return nil
	}
	out := new(DestinationDescription)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DocumentIDOptions) DeepCopyInto(out *DocumentIDOptions) {
	*out = *in
	if in.DefaultDocumentIDFormat != nil {
		in, out := &in.DefaultDocumentIDFormat, &out.DefaultDocumentIDFormat
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DocumentIDOptions.
func (in *DocumentIDOptions) DeepCopy() *DocumentIDOptions {
	if in == nil {
		return nil
	}
	out := new(DocumentIDOptions)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DynamicPartitioningConfiguration) DeepCopyInto(out *DynamicPartitioningConfiguration) {
	*out = *in
	if in.Enabled != nil {
		in, out := &in.Enabled, &out.Enabled
		*out = new(bool)
		**out = **in
	}
	if in.RetryOptions != nil {
		in, out := &in.RetryOptions, &out.RetryOptions
		*out = new(RetryOptions)
		(*in).DeepCopyInto(*out)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DynamicPartitioningConfiguration.
func (in *DynamicPartitioningConfiguration) DeepCopy() *DynamicPartitioningConfiguration {
	if in == nil {
		return nil
	}
	out := new(DynamicPartitioningConfiguration)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ElasticsearchBufferingHints) DeepCopyInto(out *ElasticsearchBufferingHints) {
	*out = *in
	if in.IntervalInSeconds != nil {
		in, out := &in.IntervalInSeconds, &out.IntervalInSeconds
		*out = new(int64)
		**out = **in
	}
	if in.SizeInMBs != nil {
		in, out := &in.SizeInMBs, &out.SizeInMBs
		*out = new(int64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ElasticsearchBufferingHints.
func (in *ElasticsearchBufferingHints) DeepCopy() *ElasticsearchBufferingHints {
	if in == nil {
		return nil
	}
	out := new(ElasticsearchBufferingHints)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ElasticsearchDestinationConfiguration) DeepCopyInto(out *ElasticsearchDestinationConfiguration) {
	*out = *in
	if in.BufferingHints != nil {
		in, out := &in.BufferingHints, &out.BufferingHints
		*out = new(ElasticsearchBufferingHints)
		(*in).DeepCopyInto(*out)
	}
	if in.CloudWatchLoggingOptions != nil {
		in, out := &in.CloudWatchLoggingOptions, &out.CloudWatchLoggingOptions
		*out = new(CloudWatchLoggingOptions)
		(*in).DeepCopyInto(*out)
	}
	if in.ClusterEndpoint != nil {
		in, out := &in.ClusterEndpoint, &out.ClusterEndpoint
		*out = new(string)
		**out = **in
	}
	if in.DocumentIDOptions != nil {
		in, out := &in.DocumentIDOptions, &out.DocumentIDOptions
		*out = new(DocumentIDOptions)
		(*in).DeepCopyInto(*out)
	}
	if in.DomainARN != nil {
		in, out := &in.DomainARN, &out.DomainARN
		*out = new(string)
		**out = **in
	}
	if in.IndexName != nil {
		in, out := &in.IndexName, &out.IndexName
		*out = new(string)
		**out = **in
	}
	if in.IndexRotationPeriod != nil {
		in, out := &in.IndexRotationPeriod, &out.IndexRotationPeriod
		*out = new(string)
		**out = **in
	}
	if in.ProcessingConfiguration != nil {
		in, out := &in.ProcessingConfiguration, &out.ProcessingConfiguration
		*out = new(ProcessingConfiguration)
		(*in).DeepCopyInto(*out)
	}
	if in.RetryOptions != nil {
		in, out := &in.RetryOptions, &out.RetryOptions
		*out = new(ElasticsearchRetryOptions)
		(*in).DeepCopyInto(*out)
	}
	if in.RoleARN != nil {
		in, out := &in.RoleARN, &out.RoleARN
		*out = new(string)
		**out = **in
	}
	if in.S3BackupMode != nil {
		in, out := &in.S3BackupMode, &out.S3BackupMode
		*out = new(string)
		**out = **in
	}
	if in.S3Configuration != nil {
		in, out := &in.S3Configuration, &out.S3Configuration
		*out = new(S3DestinationConfiguration)
		(*in).DeepCopyInto(*out)
	}
	if in.TypeName != nil {
		in, out := &in.TypeName, &out.TypeName
		*out = new(string)
		**out = **in
	}
	if in.VPCConfiguration != nil {
		in, out := &in.VPCConfiguration, &out.VPCConfiguration
		*out = new(VPCConfiguration)
		(*in).DeepCopyInto(*out)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ElasticsearchDestinationConfiguration.
func (in *ElasticsearchDestinationConfiguration) DeepCopy() *ElasticsearchDestinationConfiguration {
	if in == nil {
		return nil
	}
	out := new(ElasticsearchDestinationConfiguration)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ElasticsearchDestinationDescription) DeepCopyInto(out *ElasticsearchDestinationDescription) {
	*out = *in
	if in.BufferingHints != nil {
		in, out := &in.BufferingHints, &out.BufferingHints
		*out = new(ElasticsearchBufferingHints)
		(*in).DeepCopyInto(*out)
	}
	if in.CloudWatchLoggingOptions != nil {
		in, out := &in.CloudWatchLoggingOptions, &out.CloudWatchLoggingOptions
		*out = new(CloudWatchLoggingOptions)
		(*in).DeepCopyInto(*out)
	}
	if in.ClusterEndpoint != nil {
		in, out := &in.ClusterEndpoint, &out.ClusterEndpoint
		*out = new(string)
		**out = **in
	}
	if in.DocumentIDOptions != nil {
		in, out := &in.DocumentIDOptions, &out.DocumentIDOptions
		*out = new(DocumentIDOptions)
		(*in).DeepCopyInto(*out)
	}
	if in.DomainARN != nil {
		in, out := &in.DomainARN, &out.DomainARN
		*out = new(string)
		**out = **in
	}
	if in.IndexName != nil {
		in, out := &in.IndexName, &out.IndexName
		*out = new(string)
		**out = **in
	}
	if in.IndexRotationPeriod != nil {
		in, out := &in.IndexRotationPeriod, &out.IndexRotationPeriod
		*out = new(string)
		**out = **in
	}
	if in.ProcessingConfiguration != nil {
		in, out := &in.ProcessingConfiguration, &out.ProcessingConfiguration
		*out = new(ProcessingConfiguration)
		(*in).DeepCopyInto(*out)
	}
	if in.RetryOptions != nil {
		in, out := &in.RetryOptions, &out.RetryOptions
		*out = new(ElasticsearchRetryOptions)
		(*in).DeepCopyInto(*out)
	}
	if in.RoleARN != nil {
		in, out := &in.RoleARN, &out.RoleARN
		*out = new(string)
		**out = **in
	}
	if in.S3BackupMode != nil {
		in, out := &in.S3BackupMode, &out.S3BackupMode
		*out = new(string)
		**out = **in
	}
	if in.S3DestinationDescription != nil {
		in, out := &in.S3DestinationDescription, &out.S3DestinationDescription
		*out = new(S3DestinationDescription)
		(*in).DeepCopyInto(*out)
	}
	if in.TypeName != nil {
		in, out := &in.TypeName, &out.TypeName
		*out = new(string)
		**out = **in
	}
	if in.VPCConfigurationDescription != nil {
		in, out := &in.VPCConfigurationDescription, &out.VPCConfigurationDescription
		*out = new(VPCConfigurationDescription)
		(*in).DeepCopyInto(*out)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ElasticsearchDestinationDescription.
func (in *ElasticsearchDestinationDescription) DeepCopy() *ElasticsearchDestinationDescription {
	if in == nil {
		return nil
	}
	out := new(ElasticsearchDestinationDescription)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ElasticsearchDestinationUpdate) DeepCopyInto(out *ElasticsearchDestinationUpdate) {
	*out = *in
	if in.BufferingHints != nil {
		in, out := &in.BufferingHints, &out.BufferingHints
		*out = new(ElasticsearchBufferingHints)
		(*in).DeepCopyInto(*out)
	}
	if in.CloudWatchLoggingOptions != nil {
		in, out := &in.CloudWatchLoggingOptions, &out.CloudWatchLoggingOptions
		*out = new(CloudWatchLoggingOptions)
		(*in).DeepCopyInto(*out)
	}
	if in.ClusterEndpoint != nil {
		in, out := &in.ClusterEndpoint, &out.ClusterEndpoint
		*out = new(string)
		**out = **in
	}
	if in.DocumentIDOptions != nil {
		in, out := &in.DocumentIDOptions, &out.DocumentIDOptions
		*out = new(DocumentIDOptions)
		(*in).DeepCopyInto(*out)
	}
	if in.DomainARN != nil {
		in, out := &in.DomainARN, &out.DomainARN
		*out = new(string)
		**out = **in
	}
	if in.IndexName != nil {
		in, out := &in.IndexName, &out.IndexName
		*out = new(string)
		**out = **in
	}
	if in.IndexRotationPeriod != nil {
		in, out := &in.IndexRotationPeriod, &out.IndexRotationPeriod
		*out = new(string)
		**out = **in
	}
	if in.ProcessingConfiguration != nil {
		in, out := &in.ProcessingConfiguration, &out.ProcessingConfiguration
		*out = new(ProcessingConfiguration)
		(*in).DeepCopyInto(*out)
	}
	if in.RetryOptions != nil {
		in, out := &in.RetryOptions, &out.RetryOptions
		*out = new(ElasticsearchRetryOptions)
		(*in).DeepCopyInto(*out)
	}
	if in.RoleARN != nil {
		in, out := &in.RoleARN, &out.RoleARN
		*out = new(string)
		**out = **in
	}
	if in.TypeName != nil {
		in, out := &in.TypeName, &out.TypeName
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ElasticsearchDestinationUpdate.
func (in *ElasticsearchDestinationUpdate) DeepCopy() *ElasticsearchDestinationUpdate {
	if in == nil {
		return nil
	}
	out := new(ElasticsearchDestinationUpdate)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ElasticsearchRetryOptions) DeepCopyInto(out *ElasticsearchRetryOptions) {
	*out = *in
	if in.DurationInSeconds != nil {
		in, out := &in.DurationInSeconds, &out.DurationInSeconds
		*out = new(int64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ElasticsearchRetryOptions.
func (in *ElasticsearchRetryOptions) DeepCopy() *ElasticsearchRetryOptions {
	if in == nil {
		return nil
	}
	out := new(ElasticsearchRetryOptions)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *EncryptionConfiguration) DeepCopyInto(out *EncryptionConfiguration) {
	*out = *in
	if in.KMSEncryptionConfig != nil {
		in, out := &in.KMSEncryptionConfig, &out.KMSEncryptionConfig
		*out = new(KMSEncryptionConfig)
		(*in).DeepCopyInto(*out)
	}
	if in.NoEncryptionConfig != nil {
		in, out := &in.NoEncryptionConfig, &out.NoEncryptionConfig
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new EncryptionConfiguration.
func (in *EncryptionConfiguration) DeepCopy() *EncryptionConfiguration {
	if in == nil {
		return nil
	}
	out := new(EncryptionConfiguration)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ExtendedS3DestinationConfiguration) DeepCopyInto(out *ExtendedS3DestinationConfiguration) {
	*out = *in
	if in.BucketARN != nil {
		in, out := &in.BucketARN, &out.BucketARN
		*out = new(string)
		**out = **in
	}
	if in.BufferingHints != nil {
		in, out := &in.BufferingHints, &out.BufferingHints
		*out = new(BufferingHints)
		(*in).DeepCopyInto(*out)
	}
	if in.CloudWatchLoggingOptions != nil {
		in, out := &in.CloudWatchLoggingOptions, &out.CloudWatchLoggingOptions
		*out = new(CloudWatchLoggingOptions)
		(*in).DeepCopyInto(*out)
	}
	if in.CompressionFormat != nil {
		in, out := &in.CompressionFormat, &out.CompressionFormat
		*out = new(string)
		**out = **in
	}
	if in.DataFormatConversionConfiguration != nil {
		in, out := &in.DataFormatConversionConfiguration, &out.DataFormatConversionConfiguration
		*out = new(DataFormatConversionConfiguration)
		(*in).DeepCopyInto(*out)
	}
	if in.DynamicPartitioningConfiguration != nil {
		in, out := &in.DynamicPartitioningConfiguration, &out.DynamicPartitioningConfiguration
		*out = new(DynamicPartitioningConfiguration)
		(*in).DeepCopyInto(*out)
	}
	if in.EncryptionConfiguration != nil {
		in, out := &in.EncryptionConfiguration, &out.EncryptionConfiguration
		*out = new(EncryptionConfiguration)
		(*in).DeepCopyInto(*out)
	}
	if in.ErrorOutputPrefix != nil {
		in, out := &in.ErrorOutputPrefix, &out.ErrorOutputPrefix
		*out = new(string)
		**out = **in
	}
	if in.Prefix != nil {
		in, out := &in.Prefix, &out.Prefix
		*out = new(string)
		**out = **in
	}
	if in.ProcessingConfiguration != nil {
		in, out := &in.ProcessingConfiguration, &out.ProcessingConfiguration
		*out = new(ProcessingConfiguration)
		(*in).DeepCopyInto(*out)
	}
	if in.RoleARN != nil {
		in, out := &in.RoleARN, &out.RoleARN
		*out = new(string)
		**out = **in
	}
	if in.S3BackupConfiguration != nil {
		in, out := &in.S3BackupConfiguration, &out.S3BackupConfiguration
		*out = new(S3DestinationConfiguration)
		(*in).DeepCopyInto(*out)
	}
	if in.S3BackupMode != nil {
		in, out := &in.S3BackupMode, &out.S3BackupMode
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ExtendedS3DestinationConfiguration.
func (in *ExtendedS3DestinationConfiguration) DeepCopy() *ExtendedS3DestinationConfiguration {
	if in == nil {
		return nil
	}
	out := new(ExtendedS3DestinationConfiguration)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ExtendedS3DestinationDescription) DeepCopyInto(out *ExtendedS3DestinationDescription) {
	*out = *in
	if in.BucketARN != nil {
		in, out := &in.BucketARN, &out.BucketARN
		*out = new(string)
		**out = **in
	}
	if in.BufferingHints != nil {
		in, out := &in.BufferingHints, &out.BufferingHints
		*out = new(BufferingHints)
		(*in).DeepCopyInto(*out)
	}
	if in.CloudWatchLoggingOptions != nil {
		in, out := &in.CloudWatchLoggingOptions, &out.CloudWatchLoggingOptions
		*out = new(CloudWatchLoggingOptions)
		(*in).DeepCopyInto(*out)
	}
	if in.CompressionFormat != nil {
		in, out := &in.CompressionFormat, &out.CompressionFormat
		*out = new(string)
		**out = **in
	}
	if in.DataFormatConversionConfiguration != nil {
		in, out := &in.DataFormatConversionConfiguration, &out.DataFormatConversionConfiguration
		*out = new(DataFormatConversionConfiguration)
		(*in).DeepCopyInto(*out)
	}
	if in.DynamicPartitioningConfiguration != nil {
		in, out := &in.DynamicPartitioningConfiguration, &out.DynamicPartitioningConfiguration
		*out = new(DynamicPartitioningConfiguration)
		(*in).DeepCopyInto(*out)
	}
	if in.EncryptionConfiguration != nil {
		in, out := &in.EncryptionConfiguration, &out.EncryptionConfiguration
		*out = new(EncryptionConfiguration)
		(*in).DeepCopyInto(*out)
	}
	if in.ErrorOutputPrefix != nil {
		in, out := &in.ErrorOutputPrefix, &out.ErrorOutputPrefix
		*out = new(string)
		**out = **in
	}
	if in.Prefix != nil {
		in, out := &in.Prefix, &out.Prefix
		*out = new(string)
		**out = **in
	}
	if in.ProcessingConfiguration != nil {
		in, out := &in.ProcessingConfiguration, &out.ProcessingConfiguration
		*out = new(ProcessingConfiguration)
		(*in).DeepCopyInto(*out)
	}
	if in.RoleARN != nil {
		in, out := &in.RoleARN, &out.RoleARN
		*out = new(string)
		**out = **in
	}
	if in.S3BackupDescription != nil {
		in, out := &in.S3BackupDescription, &out.S3BackupDescription
		*out = new(S3DestinationDescription)
		(*in).DeepCopyInto(*out)
	}
	if in.S3BackupMode != nil {
		in, out := &in.S3BackupMode, &out.S3BackupMode
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ExtendedS3DestinationDescription.
func (in *ExtendedS3DestinationDescription) DeepCopy() *ExtendedS3DestinationDescription {
	if in == nil {
		return nil
	}
	out := new(ExtendedS3DestinationDescription)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ExtendedS3DestinationUpdate) DeepCopyInto(out *ExtendedS3DestinationUpdate) {
	*out = *in
	if in.BucketARN != nil {
		in, out := &in.BucketARN, &out.BucketARN
		*out = new(string)
		**out = **in
	}
	if in.BufferingHints != nil {
		in, out := &in.BufferingHints, &out.BufferingHints
		*out = new(BufferingHints)
		(*in).DeepCopyInto(*out)
	}
	if in.CloudWatchLoggingOptions != nil {
		in, out := &in.CloudWatchLoggingOptions, &out.CloudWatchLoggingOptions
		*out = new(CloudWatchLoggingOptions)
		(*in).DeepCopyInto(*out)
	}
	if in.CompressionFormat != nil {
		in, out := &in.CompressionFormat, &out.CompressionFormat
		*out = new(string)
		**out = **in
	}
	if in.DataFormatConversionConfiguration != nil {
		in, out := &in.DataFormatConversionConfiguration, &out.DataFormatConversionConfiguration
		*out = new(DataFormatConversionConfiguration)
		(*in).DeepCopyInto(*out)
	}
	if in.DynamicPartitioningConfiguration != nil {
		in, out := &in.DynamicPartitioningConfiguration, &out.DynamicPartitioningConfiguration
		*out = new(DynamicPartitioningConfiguration)
		(*in).DeepCopyInto(*out)
	}
	if in.EncryptionConfiguration != nil {
		in, out := &in.EncryptionConfiguration, &out.EncryptionConfiguration
		*out = new(EncryptionConfiguration)
		(*in).DeepCopyInto(*out)
	}
	if in.ErrorOutputPrefix != nil {
		in, out := &in.ErrorOutputPrefix, &out.ErrorOutputPrefix
		*out = new(string)
		**out = **in
	}
	if in.Prefix != nil {
		in, out := &in.Prefix, &out.Prefix
		*out = new(string)
		**out = **in
	}
	if in.ProcessingConfiguration != nil {
		in, out := &in.ProcessingConfiguration, &out.ProcessingConfiguration
		*out = new(ProcessingConfiguration)
		(*in).DeepCopyInto(*out)
	}
	if in.RoleARN != nil {
		in, out := &in.RoleARN, &out.RoleARN
		*out = new(string)
		**out = **in
	}
	if in.S3BackupMode != nil {
		in, out := &in.S3BackupMode, &out.S3BackupMode
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ExtendedS3DestinationUpdate.
func (in *ExtendedS3DestinationUpdate) DeepCopy() *ExtendedS3DestinationUpdate {
	if in == nil {
		return nil
	}
	out := new(ExtendedS3DestinationUpdate)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *FailureDescription) DeepCopyInto(out *FailureDescription) {
	*out = *in
	if in.Details != nil {
		in, out := &in.Details, &out.Details
		*out = new(string)
		**out = **in
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new FailureDescription.
func (in *FailureDescription) DeepCopy() *FailureDescription {
	if in == nil {
		return nil
	}
	out := new(FailureDescription)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *HTTPEndpointBufferingHints) DeepCopyInto(out *HTTPEndpointBufferingHints) {
	*out = *in
	if in.IntervalInSeconds != nil {
		in, out := &in.IntervalInSeconds, &out.IntervalInSeconds
		*out = new(int64)
		**out = **in
	}
	if in.SizeInMBs != nil {
		in, out := &in.SizeInMBs, &out.SizeInMBs
		*out = new(int64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new HTTPEndpointBufferingHints.
func (in *HTTPEndpointBufferingHints) DeepCopy() *HTTPEndpointBufferingHints {
	if in == nil {
		return nil
	}
	out := new(HTTPEndpointBufferingHints)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *HTTPEndpointCommonAttribute) DeepCopyInto(out *HTTPEndpointCommonAttribute) {
	*out = *in
	if in.AttributeName != nil {
		in, out := &in.AttributeName, &out.AttributeName
		*out = new(string)
		**out = **in
	}
	if in.AttributeValue != nil {
		in, out := &in.AttributeValue, &out.AttributeValue
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new HTTPEndpointCommonAttribute.
func (in *HTTPEndpointCommonAttribute) DeepCopy() *HTTPEndpointCommonAttribute {
	if in == nil {
		return nil
	}
	out := new(HTTPEndpointCommonAttribute)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *HTTPEndpointConfiguration) DeepCopyInto(out *HTTPEndpointConfiguration) {
	*out = *in
	if in.AccessKey != nil {
		in, out := &in.AccessKey, &out.AccessKey
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.URL != nil {
		in, out := &in.URL, &out.URL
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new HTTPEndpointConfiguration.
func (in *HTTPEndpointConfiguration) DeepCopy() *HTTPEndpointConfiguration {
	if in == nil {
		return nil
	}
	out := new(HTTPEndpointConfiguration)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *HTTPEndpointDescription) DeepCopyInto(out *HTTPEndpointDescription) {
	*out = *in
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.URL != nil {
		in, out := &in.URL, &out.URL
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new HTTPEndpointDescription.
func (in *HTTPEndpointDescription) DeepCopy() *HTTPEndpointDescription {
	if in == nil {
		return nil
	}
	out := new(HTTPEndpointDescription)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *HTTPEndpointDestinationConfiguration) DeepCopyInto(out *HTTPEndpointDestinationConfiguration) {
	*out = *in
	if in.BufferingHints != nil {
		in, out := &in.BufferingHints, &out.BufferingHints
		*out = new(HTTPEndpointBufferingHints)
		(*in).DeepCopyInto(*out)
	}
	if in.CloudWatchLoggingOptions != nil {
		in, out := &in.CloudWatchLoggingOptions, &out.CloudWatchLoggingOptions
		*out = new(CloudWatchLoggingOptions)
		(*in).DeepCopyInto(*out)
	}
	if in.EndpointConfiguration != nil {
		in, out := &in.EndpointConfiguration, &out.EndpointConfiguration
		*out = new(HTTPEndpointConfiguration)
		(*in).DeepCopyInto(*out)
	}
	if in.ProcessingConfiguration != nil {
		in, out := &in.ProcessingConfiguration, &out.ProcessingConfiguration
		*out = new(ProcessingConfiguration)
		(*in).DeepCopyInto(*out)
	}
	if in.RequestConfiguration != nil {
		in, out := &in.RequestConfiguration, &out.RequestConfiguration
		*out = new(HTTPEndpointRequestConfiguration)
		(*in).DeepCopyInto(*out)
	}
	if in.RetryOptions != nil {
		in, out := &in.RetryOptions, &out.RetryOptions
		*out = new(HTTPEndpointRetryOptions)
		(*in).DeepCopyInto(*out)
	}
	if in.RoleARN != nil {
		in, out := &in.RoleARN, &out.RoleARN
		*out = new(string)
		**out = **in
	}
	if in.S3BackupMode != nil {
		in, out := &in.S3BackupMode, &out.S3BackupMode
		*out = new(string)
		**out = **in
	}
	if in.S3Configuration != nil {
		in, out := &in.S3Configuration, &out.S3Configuration
		*out = new(S3DestinationConfiguration)
		(*in).DeepCopyInto(*out)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new HTTPEndpointDestinationConfiguration.
func (in *HTTPEndpointDestinationConfiguration) DeepCopy() *HTTPEndpointDestinationConfiguration {
	if in == nil {
		return nil
	}
	out := new(HTTPEndpointDestinationConfiguration)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *HTTPEndpointDestinationDescription) DeepCopyInto(out *HTTPEndpointDestinationDescription) {
	*out = *in
	if in.BufferingHints != nil {
		in, out := &in.BufferingHints, &out.BufferingHints
		*out = new(HTTPEndpointBufferingHints)
		(*in).DeepCopyInto(*out)
	}
	if in.CloudWatchLoggingOptions != nil {
		in, out := &in.CloudWatchLoggingOptions, &out.CloudWatchLoggingOptions
		*out = new(CloudWatchLoggingOptions)
		(*in).DeepCopyInto(*out)
	}
	if in.EndpointConfiguration != nil {
		in, out := &in.EndpointConfiguration, &out.EndpointConfiguration
		*out = new(HTTPEndpointDescription)
		(*in).DeepCopyInto(*out)
	}
	if in.ProcessingConfiguration != nil {
		in, out := &in.ProcessingConfiguration, &out.ProcessingConfiguration
		*out = new(ProcessingConfiguration)
		(*in).DeepCopyInto(*out)
	}
	if in.RequestConfiguration != nil {
		in, out := &in.RequestConfiguration, &out.RequestConfiguration
		*out = new(HTTPEndpointRequestConfiguration)
		(*in).DeepCopyInto(*out)
	}
	if in.RetryOptions != nil {
		in, out := &in.RetryOptions, &out.RetryOptions
		*out = new(HTTPEndpointRetryOptions)
		(*in).DeepCopyInto(*out)
	}
	if in.RoleARN != nil {
		in, out := &in.RoleARN, &out.RoleARN
		*out = new(string)
		**out = **in
	}
	if in.S3BackupMode != nil {
		in, out := &in.S3BackupMode, &out.S3BackupMode
		*out = new(string)
		**out = **in
	}
	if in.S3DestinationDescription != nil {
		in, out := &in.S3DestinationDescription, &out.S3DestinationDescription
		*out = new(S3DestinationDescription)
		(*in).DeepCopyInto(*out)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new HTTPEndpointDestinationDescription.
func (in *HTTPEndpointDestinationDescription) DeepCopy() *HTTPEndpointDestinationDescription {
	if in == nil {
		return nil
	}
	out := new(HTTPEndpointDestinationDescription)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *HTTPEndpointDestinationUpdate) DeepCopyInto(out *HTTPEndpointDestinationUpdate) {
	*out = *in
	if in.BufferingHints != nil {
		in, out := &in.BufferingHints, &out.BufferingHints
		*out = new(HTTPEndpointBufferingHints)
		(*in).DeepCopyInto(*out)
	}
	if in.CloudWatchLoggingOptions != nil {
		in, out := &in.CloudWatchLoggingOptions, &out.CloudWatchLoggingOptions
		*out = new(CloudWatchLoggingOptions)
		(*in).DeepCopyInto(*out)
	}
	if in.EndpointConfiguration != nil {
		in, out := &in.EndpointConfiguration, &out.EndpointConfiguration
		*out = new(HTTPEndpointConfiguration)
		(*in).DeepCopyInto(*out)
	}
	if in.ProcessingConfiguration != nil {
		in, out := &in.ProcessingConfiguration, &out.ProcessingConfiguration
		*out = new(ProcessingConfiguration)
		(*in).DeepCopyInto(*out)
	}
	if in.RequestConfiguration != nil {
		in, out := &in.RequestConfiguration, &out.RequestConfiguration
		*out = new(HTTPEndpointRequestConfiguration)
		(*in).DeepCopyInto(*out)
	}
	if in.RetryOptions != nil {
		in, out := &in.RetryOptions, &out.RetryOptions
		*out = new(HTTPEndpointRetryOptions)
		(*in).DeepCopyInto(*out)
	}
	if in.RoleARN != nil {
		in, out := &in.RoleARN, &out.RoleARN
		*out = new(string)
		**out = **in
	}
	if in.S3BackupMode != nil {
		in, out := &in.S3BackupMode, &out.S3BackupMode
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new HTTPEndpointDestinationUpdate.
func (in *HTTPEndpointDestinationUpdate) DeepCopy() *HTTPEndpointDestinationUpdate {
	if in == nil {
		return nil
	}
	out := new(HTTPEndpointDestinationUpdate)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *HTTPEndpointRequestConfiguration) DeepCopyInto(out *HTTPEndpointRequestConfiguration) {
	*out = *in
	if in.CommonAttributes != nil {
		in, out := &in.CommonAttributes, &out.CommonAttributes
		*out = make([]*HTTPEndpointCommonAttribute, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(HTTPEndpointCommonAttribute)
				(*in).DeepCopyInto(*out)
			}
		}
	}
	if in.ContentEncoding != nil {
		in, out := &in.ContentEncoding, &out.ContentEncoding
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new HTTPEndpointRequestConfiguration.
func (in *HTTPEndpointRequestConfiguration) DeepCopy() *HTTPEndpointRequestConfiguration {
	if in == nil {
		return nil
	}
	out := new(HTTPEndpointRequestConfiguration)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *HTTPEndpointRetryOptions) DeepCopyInto(out *HTTPEndpointRetryOptions) {
	*out = *in
	if in.DurationInSeconds != nil {
		in, out := &in.DurationInSeconds, &out.DurationInSeconds
		*out = new(int64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new HTTPEndpointRetryOptions.
func (in *HTTPEndpointRetryOptions) DeepCopy() *HTTPEndpointRetryOptions {
	if in == nil {
		return nil
	}
	out := new(HTTPEndpointRetryOptions)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *HiveJSONSerDe) DeepCopyInto(out *HiveJSONSerDe) {
	*out = *in
	if in.TimestampFormats != nil {
		in, out := &in.TimestampFormats, &out.TimestampFormats
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new HiveJSONSerDe.
func (in *HiveJSONSerDe) DeepCopy() *HiveJSONSerDe {
	if in == nil {
		return nil
	}
	out := new(HiveJSONSerDe)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *InputFormatConfiguration) DeepCopyInto(out *InputFormatConfiguration) {
	*out = *in
	if in.Deserializer != nil {
		in, out := &in.Deserializer, &out.Deserializer
		*out = new(Deserializer)
		(*in).DeepCopyInto(*out)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new InputFormatConfiguration.
func (in *InputFormatConfiguration) DeepCopy() *InputFormatConfiguration {
	if in == nil {
		return nil
	}
	out := new(InputFormatConfiguration)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *KMSEncryptionConfig) DeepCopyInto(out *KMSEncryptionConfig) {
	*out = *in
	if in.AWSKMSKeyARN != nil {
		in, out := &in.AWSKMSKeyARN, &out.AWSKMSKeyARN
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new KMSEncryptionConfig.
func (in *KMSEncryptionConfig) DeepCopy() *KMSEncryptionConfig {
	if in == nil {
		return nil
	}
	out := new(KMSEncryptionConfig)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *KinesisStreamSourceConfiguration) DeepCopyInto(out *KinesisStreamSourceConfiguration) {
	*out = *in
	if in.KinesisStreamARN != nil {
		in, out := &in.KinesisStreamARN, &out.KinesisStreamARN
		*out = new(string)
		**out = **in
	}
	if in.RoleARN != nil {
		in, out := &in.RoleARN, &out.RoleARN
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new KinesisStreamSourceConfiguration.
func (in *KinesisStreamSourceConfiguration) DeepCopy() *KinesisStreamSourceConfiguration {
	if in == nil {
		return nil
	}
	out := new(KinesisStreamSourceConfiguration)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *KinesisStreamSourceDescription) DeepCopyInto(out *KinesisStreamSourceDescription) {
	*out = *in
	if in.DeliveryStartTimestamp != nil {
		in, out := &in.DeliveryStartTimestamp, &out.DeliveryStartTimestamp
		*out = (*in).DeepCopy()
	}
	if in.KinesisStreamARN != nil {
		in, out := &in.KinesisStreamARN, &out.KinesisStreamARN
		*out = new(string)
		**out = **in
	}
	if in.RoleARN != nil {
		in, out := &in.RoleARN, &out.RoleARN
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new KinesisStreamSourceDescription.
func (in *KinesisStreamSourceDescription) DeepCopy() *KinesisStreamSourceDescription {
	if in == nil {
		return nil
	}
	out := new(KinesisStreamSourceDescription)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MSKSourceConfiguration) DeepCopyInto(out *MSKSourceConfiguration) {
	*out = *in
	if in.AuthenticationConfiguration != nil {
		in, out := &in.AuthenticationConfiguration, &out.AuthenticationConfiguration
		*out = new(AuthenticationConfiguration)
		(*in).DeepCopyInto(*out)
	}
	if in.MSKClusterARN != nil {
		in, out := &in.MSKClusterARN, &out.MSKClusterARN
		*out = new(string)
		**out = **in
	}
	if in.TopicName != nil {
		in, out := &in.TopicName, &out.TopicName
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MSKSourceConfiguration.
func (in *MSKSourceConfiguration) DeepCopy() *MSKSourceConfiguration {
	if in == nil {
		return nil
	}
	out := new(MSKSourceConfiguration)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MSKSourceDescription) DeepCopyInto(out *MSKSourceDescription) {
	*out = *in
	if in.AuthenticationConfiguration != nil {
		in, out := &in.AuthenticationConfiguration, &out.AuthenticationConfiguration
		*out = new(AuthenticationConfiguration)
		(*in).DeepCopyInto(*out)
	}
	if in.DeliveryStartTimestamp != nil {
		in, out := &in.DeliveryStartTimestamp, &out.DeliveryStartTimestamp
		*out = (*in).DeepCopy()
	}
	if in.MSKClusterARN != nil {
		in, out := &in.MSKClusterARN, &out.MSKClusterARN
		*out = new(string)
		**out = **in
	}
	if in.TopicName != nil {
		in, out := &in.TopicName, &out.TopicName
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MSKSourceDescription.
func (in *MSKSourceDescription) DeepCopy() *MSKSourceDescription {
	if in == nil {
		return nil
	}
	out := new(MSKSourceDescription)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *OpenXJSONSerDe) DeepCopyInto(out *OpenXJSONSerDe) {
	*out = *in
	if in.CaseInsensitive != nil {
		in, out := &in.CaseInsensitive, &out.CaseInsensitive
		*out = new(bool)
		**out = **in
	}
	if in.ColumnToJSONKeyMappings != nil {
		in, out := &in.ColumnToJSONKeyMappings, &out.ColumnToJSONKeyMappings
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.ConvertDotsInJSONKeysToUnderscores != nil {
		in, out := &in.ConvertDotsInJSONKeysToUnderscores, &out.ConvertDotsInJSONKeysToUnderscores
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new OpenXJSONSerDe.
func (in *OpenXJSONSerDe) DeepCopy() *OpenXJSONSerDe {
	if in == nil {
		return nil
	}
	out := new(OpenXJSONSerDe)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *OrcSerDe) DeepCopyInto(out *OrcSerDe) {
	*out = *in
	if in.BlockSizeBytes != nil {
		in, out := &in.BlockSizeBytes, &out.BlockSizeBytes
		*out = new(int64)
		**out = **in
	}
	if in.BloomFilterColumns != nil {
		in, out := &in.BloomFilterColumns, &out.BloomFilterColumns
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.BloomFilterFalsePositiveProbability != nil {
		in, out := &in.BloomFilterFalsePositiveProbability, &out.BloomFilterFalsePositiveProbability
		*out = new(float64)
		**out = **in
	}
	if in.Compression != nil {
		in, out := &in.Compression, &out.Compression
		*out = new(string)
		**out = **in
	}
	if in.DictionaryKeyThreshold != nil {
		in, out := &in.DictionaryKeyThreshold, &out.DictionaryKeyThreshold
		*out = new(float64)
		**out = **in
	}
	if in.EnablePadding != nil {
		in, out := &in.EnablePadding, &out.EnablePadding
		*out = new(bool)
		**out = **in
	}
	if in.FormatVersion != nil {
		in, out := &in.FormatVersion, &out.FormatVersion
		*out = new(string)
		**out = **in
	}
	if in.PaddingTolerance != nil {
		in, out := &in.PaddingTolerance, &out.PaddingTolerance
		*out = new(float64)
		**out = **in
	}
	if in.RowIndexStride != nil {
		in, out := &in.RowIndexStride, &out.RowIndexStride
		*out = new(int64)
		**out = **in
	}
	if in.StripeSizeBytes != nil {
		in, out := &in.StripeSizeBytes, &out.StripeSizeBytes
		*out = new(int64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new OrcSerDe.
func (in *OrcSerDe) DeepCopy() *OrcSerDe {
	if in == nil {
		return nil
	}
	out := new(OrcSerDe)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *OutputFormatConfiguration) DeepCopyInto(out *OutputFormatConfiguration) {
	*out = *in
	if in.Serializer != nil {
		in, out := &in.Serializer, &out.Serializer
		*out = new(Serializer)
		(*in).DeepCopyInto(*out)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new OutputFormatConfiguration.
func (in *OutputFormatConfiguration) DeepCopy() *OutputFormatConfiguration {
	if in == nil {
		return nil
	}
	out := new(OutputFormatConfiguration)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ParquetSerDe) DeepCopyInto(out *ParquetSerDe) {
	*out = *in
	if in.BlockSizeBytes != nil {
		in, out := &in.BlockSizeBytes, &out.BlockSizeBytes
		*out = new(int64)
		**out = **in
	}
	if in.Compression != nil {
		in, out := &in.Compression, &out.Compression
		*out = new(string)
		**out = **in
	}
	if in.EnableDictionaryCompression != nil {
		in, out := &in.EnableDictionaryCompression, &out.EnableDictionaryCompression
		*out = new(bool)
		**out = **in
	}
	if in.MaxPaddingBytes != nil {
		in, out := &in.MaxPaddingBytes, &out.MaxPaddingBytes
		*out = new(int64)
		**out = **in
	}
	if in.PageSizeBytes != nil {
		in, out := &in.PageSizeBytes, &out.PageSizeBytes
		*out = new(int64)
		**out = **in
	}
	if in.WriterVersion != nil {
		in, out := &in.WriterVersion, &out.WriterVersion
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ParquetSerDe.
func (in *ParquetSerDe) DeepCopy() *ParquetSerDe {
	if in == nil {
		return nil
	}
	out := new(ParquetSerDe)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ProcessingConfiguration) DeepCopyInto(out *ProcessingConfiguration) {
	*out = *in
	if in.Enabled != nil {
		in, out := &in.Enabled, &out.Enabled
		*out = new(bool)
		**out = **in
	}
	if in.Processors != nil {
		in, out := &in.Processors, &out.Processors
		*out = make([]*Processor, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(Processor)
				(*in).DeepCopyInto(*out)
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ProcessingConfiguration.
func (in *ProcessingConfiguration) DeepCopy() *ProcessingConfiguration {
	if in == nil {
		return nil
	}
	out := new(ProcessingConfiguration)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Processor) DeepCopyInto(out *Processor) {
	*out = *in
	if in.Parameters != nil {
		in, out := &in.Parameters, &out.Parameters
		*out = make([]*ProcessorParameter, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(ProcessorParameter)
				(*in).DeepCopyInto(*out)
			}
		}
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Processor.
func (in *Processor) DeepCopy() *Processor {
	if in == nil {
		return nil
	}
	out := new(Processor)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ProcessorParameter) DeepCopyInto(out *ProcessorParameter) {
	*out = *in
	if in.ParameterName != nil {
		in, out := &in.ParameterName, &out.ParameterName
		*out = new(string)
		**out = **in
	}
	if in.ParameterValue != nil {
		in, out := &in.ParameterValue, &out.ParameterValue
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ProcessorParameter.
func (in *ProcessorParameter) DeepCopy() *ProcessorParameter {
	if in == nil {
		return nil
	}
	out := new(ProcessorParameter)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RedshiftDestinationConfiguration) DeepCopyInto(out *RedshiftDestinationConfiguration) {
	*out = *in
	if in.CloudWatchLoggingOptions != nil {
		in, out := &in.CloudWatchLoggingOptions, &out.CloudWatchLoggingOptions
		*out = new(CloudWatchLoggingOptions)
		(*in).DeepCopyInto(*out)
	}
	if in.ClusterJDBCURL != nil {
		in, out := &in.ClusterJDBCURL, &out.ClusterJDBCURL
		*out = new(string)
		**out = **in
	}
	if in.CopyCommand != nil {
		in, out := &in.CopyCommand, &out.CopyCommand
		*out = new(CopyCommand)
		(*in).DeepCopyInto(*out)
	}
	if in.Password != nil {
		in, out := &in.Password, &out.Password
		*out = new(string)
		**out = **in
	}
	if in.ProcessingConfiguration != nil {
		in, out := &in.ProcessingConfiguration, &out.ProcessingConfiguration
		*out = new(ProcessingConfiguration)
		(*in).DeepCopyInto(*out)
	}
	if in.RetryOptions != nil {
		in, out := &in.RetryOptions, &out.RetryOptions
		*out = new(RedshiftRetryOptions)
		(*in).DeepCopyInto(*out)
	}
	if in.RoleARN != nil {
		in, out := &in.RoleARN, &out.RoleARN
		*out = new(string)
		**out = **in
	}
	if in.S3BackupConfiguration != nil {
		in, out := &in.S3BackupConfiguration, &out.S3BackupConfiguration
		*out = new(S3DestinationConfiguration)
		(*in).DeepCopyInto(*out)
	}
	if in.S3BackupMode != nil {
		in, out := &in.S3BackupMode, &out.S3BackupMode
		*out = new(string)
		**out = **in
	}
	if in.S3Configuration != nil {
		in, out := &in.S3Configuration, &out.S3Configuration
		*out = new(S3DestinationConfiguration)
		(*in).DeepCopyInto(*out)
	}
	if in.Username != nil {
		in, out := &in.Username, &out.Username
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RedshiftDestinationConfiguration.
func (in *RedshiftDestinationConfiguration) DeepCopy() *RedshiftDestinationConfiguration {
	if in == nil {
		return nil
	}
	out := new(RedshiftDestinationConfiguration)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RedshiftDestinationDescription) DeepCopyInto(out *RedshiftDestinationDescription) {
	*out = *in
	if in.CloudWatchLoggingOptions != nil {
		in, out := &in.CloudWatchLoggingOptions, &out.CloudWatchLoggingOptions
		*out = new(CloudWatchLoggingOptions)
		(*in).DeepCopyInto(*out)
	}
	if in.ClusterJDBCURL != nil {
		in, out := &in.ClusterJDBCURL, &out.ClusterJDBCURL
		*out = new(string)
		**out = **in
	}
	if in.CopyCommand != nil {
		in, out := &in.CopyCommand, &out.CopyCommand
		*out = new(CopyCommand)
		(*in).DeepCopyInto(*out)
	}
	if in.ProcessingConfiguration != nil {
		in, out := &in.ProcessingConfiguration, &out.ProcessingConfiguration
		*out = new(ProcessingConfiguration)
		(*in).DeepCopyInto(*out)
	}
	if in.RetryOptions != nil {
		in, out := &in.RetryOptions, &out.RetryOptions
		*out = new(RedshiftRetryOptions)
		(*in).DeepCopyInto(*out)
	}
	if in.RoleARN != nil {
		in, out := &in.RoleARN, &out.RoleARN
		*out = new(string)
		**out = **in
	}
	if in.S3BackupDescription != nil {
		in, out := &in.S3BackupDescription, &out.S3BackupDescription
		*out = new(S3DestinationDescription)
		(*in).DeepCopyInto(*out)
	}
	if in.S3BackupMode != nil {
		in, out := &in.S3BackupMode, &out.S3BackupMode
		*out = new(string)
		**out = **in
	}
	if in.S3DestinationDescription != nil {
		in, out := &in.S3DestinationDescription, &out.S3DestinationDescription
		*out = new(S3DestinationDescription)
		(*in).DeepCopyInto(*out)
	}
	if in.Username != nil {
		in, out := &in.Username, &out.Username
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RedshiftDestinationDescription.
func (in *RedshiftDestinationDescription) DeepCopy() *RedshiftDestinationDescription {
	if in == nil {
		return nil
	}
	out := new(RedshiftDestinationDescription)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RedshiftDestinationUpdate) DeepCopyInto(out *RedshiftDestinationUpdate) {
	*out = *in
	if in.CloudWatchLoggingOptions != nil {
		in, out := &in.CloudWatchLoggingOptions, &out.CloudWatchLoggingOptions
		*out = new(CloudWatchLoggingOptions)
		(*in).DeepCopyInto(*out)
	}
	if in.ClusterJDBCURL != nil {
		in, out := &in.ClusterJDBCURL, &out.ClusterJDBCURL
		*out = new(string)
		**out = **in
	}
	if in.CopyCommand != nil {
		in, out := &in.CopyCommand, &out.CopyCommand
		*out = new(CopyCommand)
		(*in).DeepCopyInto(*out)
	}
	if in.Password != nil {
		in, out := &in.Password, &out.Password
		*out = new(string)
		**out = **in
	}
	if in.ProcessingConfiguration != nil {
		in, out := &in.ProcessingConfiguration, &out.ProcessingConfiguration
		*out = new(ProcessingConfiguration)
		(*in).DeepCopyInto(*out)
	}
	if in.RetryOptions != nil {
		in, out := &in.RetryOptions, &out.RetryOptions
		*out = new(RedshiftRetryOptions)
		(*in).DeepCopyInto(*out)
	}
	if in.RoleARN != nil {
		in, out := &in.RoleARN, &out.RoleARN
		*out = new(string)
		**out = **in
	}
	if in.S3BackupMode != nil {
		in, out := &in.S3BackupMode, &out.S3BackupMode
		*out = new(string)
		**out = **in
	}
	if in.Username != nil {
		in, out := &in.Username, &out.Username
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RedshiftDestinationUpdate.
func (in *RedshiftDestinationUpdate) DeepCopy() *RedshiftDestinationUpdate {
	if in == nil {
		return nil
	}
	out := new(RedshiftDestinationUpdate)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RedshiftRetryOptions) DeepCopyInto(out *RedshiftRetryOptions) {
	*out = *in
	if in.DurationInSeconds != nil {
		in, out := &in.DurationInSeconds, &out.DurationInSeconds
		*out = new(int64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RedshiftRetryOptions.
func (in *RedshiftRetryOptions) DeepCopy() *RedshiftRetryOptions {
	if in == nil {
		return nil
	}
	out := new(RedshiftRetryOptions)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RetryOptions) DeepCopyInto(out *RetryOptions) {
	*out = *in
	if in.DurationInSeconds != nil {
		in, out := &in.DurationInSeconds, &out.DurationInSeconds
		*out = new(int64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RetryOptions.
func (in *RetryOptions) DeepCopy() *RetryOptions {
	if in == nil {
		return nil
	}
	out := new(RetryOptions)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *S3DestinationConfiguration) DeepCopyInto(out *S3DestinationConfiguration) {
	*out = *in
	if in.BucketARN != nil {
		in, out := &in.BucketARN, &out.BucketARN
		*out = new(string)
		**out = **in
	}
	if in.BufferingHints != nil {
		in, out := &in.BufferingHints, &out.BufferingHints
		*out = new(BufferingHints)
		(*in).DeepCopyInto(*out)
	}
	if in.CloudWatchLoggingOptions != nil {
		in, out := &in.CloudWatchLoggingOptions, &out.CloudWatchLoggingOptions
		*out = new(CloudWatchLoggingOptions)
		(*in).DeepCopyInto(*out)
	}
	if in.CompressionFormat != nil {
		in, out := &in.CompressionFormat, &out.CompressionFormat
		*out = new(string)
		**out = **in
	}
	if in.EncryptionConfiguration != nil {
		in, out := &in.EncryptionConfiguration, &out.EncryptionConfiguration
		*out = new(EncryptionConfiguration)
		(*in).DeepCopyInto(*out)
	}
	if in.ErrorOutputPrefix != nil {
		in, out := &in.ErrorOutputPrefix, &out.ErrorOutputPrefix
		*out = new(string)
		**out = **in
	}
	if in.Prefix != nil {
		in, out := &in.Prefix, &out.Prefix
		*out = new(string)
		**out = **in
	}
	if in.RoleARN != nil {
		in, out := &in.RoleARN, &out.RoleARN
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new S3DestinationConfiguration.
func (in *S3DestinationConfiguration) DeepCopy() *S3DestinationConfiguration {
	if in == nil {
		return nil
	}
	out := new(S3DestinationConfiguration)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *S3DestinationDescription) DeepCopyInto(out *S3DestinationDescription) {
	*out = *in
	if in.BucketARN != nil {
		in, out := &in.BucketARN, &out.BucketARN
		*out = new(string)
		**out = **in
	}
	if in.BufferingHints != nil {
		in, out := &in.BufferingHints, &out.BufferingHints
		*out = new(BufferingHints)
		(*in).DeepCopyInto(*out)
	}
	if in.CloudWatchLoggingOptions != nil {
		in, out := &in.CloudWatchLoggingOptions, &out.CloudWatchLoggingOptions
		*out = new(CloudWatchLoggingOptions)
		(*in).DeepCopyInto(*out)
	}
	if in.CompressionFormat != nil {
		in, out := &in.CompressionFormat, &out.CompressionFormat
		*out = new(string)
		**out = **in
	}
	if in.EncryptionConfiguration != nil {
		in, out := &in.EncryptionConfiguration, &out.EncryptionConfiguration
		*out = new(EncryptionConfiguration)
		(*in).DeepCopyInto(*out)
	}
	if in.ErrorOutputPrefix != nil {
		in, out := &in.ErrorOutputPrefix, &out.ErrorOutputPrefix
		*out = new(string)
		**out = **in
	}
	if in.Prefix != nil {
		in, out := &in.Prefix, &out.Prefix
		*out = new(string)
		**out = **in
	}
	if in.RoleARN != nil {
		in, out := &in.RoleARN, &out.RoleARN
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new S3DestinationDescription.
func (in *S3DestinationDescription) DeepCopy() *S3DestinationDescription {
	if in == nil {
		return nil
	}
	out := new(S3DestinationDescription)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *S3DestinationUpdate) DeepCopyInto(out *S3DestinationUpdate) {
	*out = *in
	if in.BucketARN != nil {
		in, out := &in.BucketARN, &out.BucketARN
		*out = new(string)
		**out = **in
	}
	if in.BufferingHints != nil {
		in, out := &in.BufferingHints, &out.BufferingHints
		*out = new(BufferingHints)
		(*in).DeepCopyInto(*out)
	}
	if in.CloudWatchLoggingOptions != nil {
		in, out := &in.CloudWatchLoggingOptions, &out.CloudWatchLoggingOptions
		*out = new(CloudWatchLoggingOptions)
		(*in).DeepCopyInto(*out)
	}
	if in.CompressionFormat != nil {
		in, out := &in.CompressionFormat, &out.CompressionFormat
		*out = new(string)
		**out = **in
	}
	if in.EncryptionConfiguration != nil {
		in, out := &in.EncryptionConfiguration, &out.EncryptionConfiguration
		*out = new(EncryptionConfiguration)
		(*in).DeepCopyInto(*out)
	}
	if in.ErrorOutputPrefix != nil {
		in, out := &in.ErrorOutputPrefix, &out.ErrorOutputPrefix
		*out = new(string)
		**out = **in
	}
	if in.Prefix != nil {
		in, out := &in.Prefix, &out.Prefix
		*out = new(string)
		**out = **in
	}
	if in.RoleARN != nil {
		in, out := &in.RoleARN, &out.RoleARN
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new S3DestinationUpdate.
func (in *S3DestinationUpdate) DeepCopy() *S3DestinationUpdate {
	if in == nil {
		return nil
	}
	out := new(S3DestinationUpdate)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SchemaConfiguration) DeepCopyInto(out *SchemaConfiguration) {
	*out = *in
	if in.CatalogID != nil {
		in, out := &in.CatalogID, &out.CatalogID
		*out = new(string)
		**out = **in
	}
	if in.DatabaseName != nil {
		in, out := &in.DatabaseName, &out.DatabaseName
		*out = new(string)
		**out = **in
	}
	if in.Region != nil {
		in, out := &in.Region, &out.Region
		*out = new(string)
		**out = **in
	}
	if in.RoleARN != nil {
		in, out := &in.RoleARN, &out.RoleARN
		*out = new(string)
		**out = **in
	}
	if in.TableName != nil {
		in, out := &in.TableName, &out.TableName
		*out = new(string)
		**out = **in
	}
	if in.VersionID != nil {
		in, out := &in.VersionID, &out.VersionID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SchemaConfiguration.
func (in *SchemaConfiguration) DeepCopy() *SchemaConfiguration {
	if in == nil {
		return nil
	}
	out := new(SchemaConfiguration)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Serializer) DeepCopyInto(out *Serializer) {
	*out = *in
	if in.OrcSerDe != nil {
		in, out := &in.OrcSerDe, &out.OrcSerDe
		*out = new(OrcSerDe)
		(*in).DeepCopyInto(*out)
	}
	if in.ParquetSerDe != nil {
		in, out := &in.ParquetSerDe, &out.ParquetSerDe
		*out = new(ParquetSerDe)
		(*in).DeepCopyInto(*out)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Serializer.
func (in *Serializer) DeepCopy() *Serializer {
	if in == nil {
		return nil
	}
	out := new(Serializer)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SourceDescription) DeepCopyInto(out *SourceDescription) {
	*out = *in
	if in.KinesisStreamSourceDescription != nil {
		in, out := &in.KinesisStreamSourceDescription, &out.KinesisStreamSourceDescription
		*out = new(KinesisStreamSourceDescription)
		(*in).DeepCopyInto(*out)
	}
	if in.MSKSourceDescription != nil {
		in, out := &in.MSKSourceDescription, &out.MSKSourceDescription
		*out = new(MSKSourceDescription)
		(*in).DeepCopyInto(*out)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SourceDescription.
func (in *SourceDescription) DeepCopy() *SourceDescription {
	if in == nil {
		return nil
	}
	out := new(SourceDescription)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SplunkDestinationConfiguration) DeepCopyInto(out *SplunkDestinationConfiguration) {
	*out = *in
	if in.CloudWatchLoggingOptions != nil {
		in, out := &in.CloudWatchLoggingOptions, &out.CloudWatchLoggingOptions
		*out = new(CloudWatchLoggingOptions)
		(*in).DeepCopyInto(*out)
	}
	if in.HECAcknowledgmentTimeoutInSeconds != nil {
		in, out := &in.HECAcknowledgmentTimeoutInSeconds, &out.HECAcknowledgmentTimeoutInSeconds
		*out = new(int64)
		**out = **in
	}
	if in.HECEndpoint != nil {
		in, out := &in.HECEndpoint, &out.HECEndpoint
		*out = new(string)
		**out = **in
	}
	if in.HECEndpointType != nil {
		in, out := &in.HECEndpointType, &out.HECEndpointType
		*out = new(string)
		**out = **in
	}
	if in.HECToken != nil {
		in, out := &in.HECToken, &out.HECToken
		*out = new(string)
		**out = **in
	}
	if in.ProcessingConfiguration != nil {
		in, out := &in.ProcessingConfiguration, &out.ProcessingConfiguration
		*out = new(ProcessingConfiguration)
		(*in).DeepCopyInto(*out)
	}
	if in.RetryOptions != nil {
		in, out := &in.RetryOptions, &out.RetryOptions
		*out = new(SplunkRetryOptions)
		(*in).DeepCopyInto(*out)
	}
	if in.S3BackupMode != nil {
		in, out := &in.S3BackupMode, &out.S3BackupMode
		*out = new(string)
		**out = **in
	}
	if in.S3Configuration != nil {
		in, out := &in.S3Configuration, &out.S3Configuration
		*out = new(S3DestinationConfiguration)
		(*in).DeepCopyInto(*out)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SplunkDestinationConfiguration.
func (in *SplunkDestinationConfiguration) DeepCopy() *SplunkDestinationConfiguration {
	if in == nil {
		return nil
	}
	out := new(SplunkDestinationConfiguration)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SplunkDestinationDescription) DeepCopyInto(out *SplunkDestinationDescription) {
	*out = *in
	if in.CloudWatchLoggingOptions != nil {
		in, out := &in.CloudWatchLoggingOptions, &out.CloudWatchLoggingOptions
		*out = new(CloudWatchLoggingOptions)
		(*in).DeepCopyInto(*out)
	}
	if in.HECAcknowledgmentTimeoutInSeconds != nil {
		in, out := &in.HECAcknowledgmentTimeoutInSeconds, &out.HECAcknowledgmentTimeoutInSeconds
		*out = new(int64)
		**out = **in
	}
	if in.HECEndpoint != nil {
		in, out := &in.HECEndpoint, &out.HECEndpoint
		*out = new(string)
		**out = **in
	}
	if in.HECEndpointType != nil {
		in, out := &in.HECEndpointType, &out.HECEndpointType
		*out = new(string)
		**out = **in
	}
	if in.HECToken != nil {
		in, out := &in.HECToken, &out.HECToken
		*out = new(string)
		**out = **in
	}
	if in.ProcessingConfiguration != nil {
		in, out := &in.ProcessingConfiguration, &out.ProcessingConfiguration
		*out = new(ProcessingConfiguration)
		(*in).DeepCopyInto(*out)
	}
	if in.RetryOptions != nil {
		in, out := &in.RetryOptions, &out.RetryOptions
		*out = new(SplunkRetryOptions)
		(*in).DeepCopyInto(*out)
	}
	if in.S3BackupMode != nil {
		in, out := &in.S3BackupMode, &out.S3BackupMode
		*out = new(string)
		**out = **in
	}
	if in.S3DestinationDescription != nil {
		in, out := &in.S3DestinationDescription, &out.S3DestinationDescription
		*out = new(S3DestinationDescription)
		(*in).DeepCopyInto(*out)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SplunkDestinationDescription.
func (in *SplunkDestinationDescription) DeepCopy() *SplunkDestinationDescription {
	if in == nil {
		return nil
	}
	out := new(SplunkDestinationDescription)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SplunkDestinationUpdate) DeepCopyInto(out *SplunkDestinationUpdate) {
	*out = *in
	if in.CloudWatchLoggingOptions != nil {
		in, out := &in.CloudWatchLoggingOptions, &out.CloudWatchLoggingOptions
		*out = new(CloudWatchLoggingOptions)
		(*in).DeepCopyInto(*out)
	}
	if in.HECAcknowledgmentTimeoutInSeconds != nil {
		in, out := &in.HECAcknowledgmentTimeoutInSeconds, &out.HECAcknowledgmentTimeoutInSeconds
		*out = new(int64)
		**out = **in
	}
	if in.HECEndpoint != nil {
		in, out := &in.HECEndpoint, &out.HECEndpoint
		*out = new(string)
		**out = **in
	}
	if in.HECEndpointType != nil {
		in, out := &in.HECEndpointType, &out.HECEndpointType
		*out = new(string)
		**out = **in
	}
	if in.HECToken != nil {
		in, out := &in.HECToken, &out.HECToken
		*out = new(string)
		**out = **in
	}
	if in.ProcessingConfiguration != nil {
		in, out := &in.ProcessingConfiguration, &out.ProcessingConfiguration
		*out = new(ProcessingConfiguration)
		(*in).DeepCopyInto(*out)
	}
	if in.RetryOptions != nil {
		in, out := &in.RetryOptions, &out.RetryOptions
		*out = new(SplunkRetryOptions)
		(*in).DeepCopyInto(*out)
	}
	if in.S3BackupMode != nil {
		in, out := &in.S3BackupMode, &out.S3BackupMode
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SplunkDestinationUpdate.
func (in *SplunkDestinationUpdate) DeepCopy() *SplunkDestinationUpdate {
	if in == nil {
		return nil
	}
	out := new(SplunkDestinationUpdate)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SplunkRetryOptions) DeepCopyInto(out *SplunkRetryOptions) {
	*out = *in
	if in.DurationInSeconds != nil {
		in, out := &in.DurationInSeconds, &out.DurationInSeconds
		*out = new(int64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SplunkRetryOptions.
func (in *SplunkRetryOptions) DeepCopy() *SplunkRetryOptions {
	if in == nil {
		return nil
	}
	out := new(SplunkRetryOptions)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Tag) DeepCopyInto(out *Tag) {
	*out = *in
	if in.Key != nil {
		in, out := &in.Key, &out.Key
		*out = new(string)
		**out = **in
	}
	if in.Value != nil {
		in, out := &in.Value, &out.Value
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Tag.
func (in *Tag) DeepCopy() *Tag {
	if in == nil {
		return nil
	}
	out := new(Tag)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VPCConfiguration) DeepCopyInto(out *VPCConfiguration) {
	*out = *in
	if in.RoleARN != nil {
		in, out := &in.RoleARN, &out.RoleARN
		*out = new(string)
		**out = **in
	}
	if in.SecurityGroupIDs != nil {
		in, out := &in.SecurityGroupIDs, &out.SecurityGroupIDs
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.SubnetIDs != nil {
		in, out := &in.SubnetIDs, &out.SubnetIDs
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VPCConfiguration.
func (in *VPCConfiguration) DeepCopy() *VPCConfiguration {
	if in == nil {
		return nil
	}
	out := new(VPCConfiguration)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VPCConfigurationDescription) DeepCopyInto(out *VPCConfigurationDescription) {
	*out = *in
	if in.RoleARN != nil {
		in, out := &in.RoleARN, &out.RoleARN
		*out = new(string)
		**out = **in
	}
	if in.SecurityGroupIDs != nil {
		in, out := &in.SecurityGroupIDs, &out.SecurityGroupIDs
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.SubnetIDs != nil {
		in, out := &in.SubnetIDs, &out.SubnetIDs
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.VPCID != nil {
		in, out := &in.VPCID, &out.VPCID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VPCConfigurationDescription.
func (in *VPCConfigurationDescription) DeepCopy() *VPCConfigurationDescription {
	if in == nil {
		return nil
	}
	out := new(VPCConfigurationDescription)
	in.DeepCopyInto(out)
	return out
}
