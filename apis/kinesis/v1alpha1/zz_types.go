/*
Copyright 2021 The Crossplane Authors.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by ack-generate. DO NOT EDIT.

package v1alpha1

import (
	metav1 "k8s.io/apimachinery/pkg/apis/meta/v1"
)

// Hack to avoid import errors during build...
var (
	_ = &metav1.Time{}
)

// +kubebuilder:skipversion
type ChildShard struct {
	// The range of possible hash key values for the shard, which is a set of ordered
	// contiguous positive integers.
	HashKeyRange *HashKeyRange `json:"hashKeyRange,omitempty"`

	ShardID *string `json:"shardID,omitempty"`
}

// +kubebuilder:skipversion
type Consumer struct {
	ConsumerCreationTimestamp *metav1.Time `json:"consumerCreationTimestamp,omitempty"`
}

// +kubebuilder:skipversion
type ConsumerDescription struct {
	ConsumerCreationTimestamp *metav1.Time `json:"consumerCreationTimestamp,omitempty"`

	StreamARN *string `json:"streamARN,omitempty"`
}

// +kubebuilder:skipversion
type EnhancedMetrics struct {
	ShardLevelMetrics []*string `json:"shardLevelMetrics,omitempty"`
}

// +kubebuilder:skipversion
type HashKeyRange struct {
	EndingHashKey *string `json:"endingHashKey,omitempty"`

	StartingHashKey *string `json:"startingHashKey,omitempty"`
}

// +kubebuilder:skipversion
type PutRecordsRequestEntry struct {
	ExplicitHashKey *string `json:"explicitHashKey,omitempty"`
}

// +kubebuilder:skipversion
type PutRecordsResultEntry struct {
	SequenceNumber *string `json:"sequenceNumber,omitempty"`

	ShardID *string `json:"shardID,omitempty"`
}

// +kubebuilder:skipversion
type Record struct {
	ApproximateArrivalTimestamp *metav1.Time `json:"approximateArrivalTimestamp,omitempty"`

	EncryptionType *string `json:"encryptionType,omitempty"`

	SequenceNumber *string `json:"sequenceNumber,omitempty"`
}

// +kubebuilder:skipversion
type SequenceNumberRange struct {
	EndingSequenceNumber *string `json:"endingSequenceNumber,omitempty"`

	StartingSequenceNumber *string `json:"startingSequenceNumber,omitempty"`
}

// +kubebuilder:skipversion
type Shard struct {
	AdjacentParentShardID *string `json:"adjacentParentShardID,omitempty"`
	// The range of possible hash key values for the shard, which is a set of ordered
	// contiguous positive integers.
	HashKeyRange *HashKeyRange `json:"hashKeyRange,omitempty"`

	ParentShardID *string `json:"parentShardID,omitempty"`
	// The range of possible sequence numbers for the shard.
	SequenceNumberRange *SequenceNumberRange `json:"sequenceNumberRange,omitempty"`

	ShardID *string `json:"shardID,omitempty"`
}

// +kubebuilder:skipversion
type ShardFilter struct {
	ShardID *string `json:"shardID,omitempty"`

	Timestamp *metav1.Time `json:"timestamp,omitempty"`
}

// +kubebuilder:skipversion
type StartingPosition struct {
	SequenceNumber *string `json:"sequenceNumber,omitempty"`

	Timestamp *metav1.Time `json:"timestamp,omitempty"`
}

// +kubebuilder:skipversion
type StreamDescription struct {
	EncryptionType *string `json:"encryptionType,omitempty"`

	EnhancedMonitoring []*EnhancedMetrics `json:"enhancedMonitoring,omitempty"`

	HasMoreShards *bool `json:"hasMoreShards,omitempty"`

	KeyID *string `json:"keyID,omitempty"`

	RetentionPeriodHours *int64 `json:"retentionPeriodHours,omitempty"`

	Shards []*Shard `json:"shards,omitempty"`

	StreamARN *string `json:"streamARN,omitempty"`

	StreamCreationTimestamp *metav1.Time `json:"streamCreationTimestamp,omitempty"`

	StreamName *string `json:"streamName,omitempty"`

	StreamStatus *string `json:"streamStatus,omitempty"`
}

// +kubebuilder:skipversion
type StreamDescriptionSummary struct {
	EncryptionType *string `json:"encryptionType,omitempty"`

	EnhancedMonitoring []*EnhancedMetrics `json:"enhancedMonitoring,omitempty"`

	KeyID *string `json:"keyID,omitempty"`

	RetentionPeriodHours *int64 `json:"retentionPeriodHours,omitempty"`

	StreamARN *string `json:"streamARN,omitempty"`

	StreamCreationTimestamp *metav1.Time `json:"streamCreationTimestamp,omitempty"`

	StreamName *string `json:"streamName,omitempty"`

	StreamStatus *string `json:"streamStatus,omitempty"`
}

// +kubebuilder:skipversion
type SubscribeToShardEvent struct {
	ContinuationSequenceNumber *string `json:"continuationSequenceNumber,omitempty"`
}
