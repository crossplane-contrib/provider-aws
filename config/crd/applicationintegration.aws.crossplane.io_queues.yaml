
---
apiVersion: apiextensions.k8s.io/v1beta1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.2.4
  creationTimestamp: null
  name: queues.applicationintegration.aws.crossplane.io
spec:
  additionalPrinterColumns:
  - JSONPath: .metadata.annotations.crossplane\.io/external-name
    name: QUEUENAME
    type: string
  - JSONPath: .status.atProvider.arn
    name: ARN
    type: string
  - JSONPath: .status.conditions[?(@.type=='Ready')].status
    name: READY
    type: string
  - JSONPath: .status.conditions[?(@.type=='Synced')].status
    name: SYNCED
    type: string
  - JSONPath: .metadata.creationTimestamp
    name: AGE
    type: date
  group: applicationintegration.aws.crossplane.io
  names:
    categories:
    - crossplane
    - managed
    - aws
    kind: Queue
    listKind: QueueList
    plural: queues
    singular: queue
  scope: Cluster
  subresources:
    status: {}
  validation:
    openAPIV3Schema:
      description: A Queue is a managed resource that represents a AWS Simple Queue
      properties:
        apiVersion:
          description: 'APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
          type: string
        kind:
          description: 'Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
          type: string
        metadata:
          type: object
        spec:
          description: QueueSpec defines the desired state of a Queue.
          properties:
            deletionPolicy:
              description: DeletionPolicy specifies what will happen to the underlying external when this managed resource is deleted - either "Delete" or "Orphan" the external resource. The "Delete" policy is the default when no policy is specified.
              enum:
              - Orphan
              - Delete
              type: string
            forProvider:
              description: QueueParameters define the desired state of an AWS Queue
              properties:
                delaySeconds:
                  description: The length of time, in seconds, for which the delivery of all messages in the queue is delayed.
                  format: int64
                  type: integer
                fifoQueue:
                  description: Designates a queue as FIFO.
                  type: boolean
                kmsDataKeyReusePeriodSeconds:
                  description: The length of time, in seconds, for which Amazon SQS can reuse a data key to encrypt or decrypt messages before calling AWS KMS again.
                  format: int64
                  type: integer
                kmsMasterKeyId:
                  description: The ID of an AWS-managed customer master key (CMK) for Amazon SQS or a custom CMK.
                  type: string
                maximumMessageSize:
                  description: The limit of how many bytes a message can contain before Amazon SQS rejects it.
                  format: int64
                  type: integer
                messageRetentionPeriod:
                  description: The length of time, in seconds, for which Amazon SQS retains a message.
                  format: int64
                  type: integer
                receiveMessageWaitTimeSeconds:
                  description: The length of time, in seconds, for which a ReceiveMessage action waits for a message to arrive.
                  format: int64
                  type: integer
                redrivePolicy:
                  description: RedrivePolicy includes the parameters for the dead-letter queue functionality of the source queue.
                  properties:
                    deadLetterQueueARN:
                      description: The Amazon Resource Name (ARN) of the dead-letter queue to which Amazon SQS moves messages after the value of maxReceiveCount is exceeded.
                      type: string
                    maxReceiveCount:
                      description: The number of times a message is delivered to the source queue before being moved to the dead-letter queue.
                      format: int64
                      type: integer
                  type: object
                region:
                  description: Region is the region you'd like your Queue to be created in.
                  type: string
                tags:
                  description: Tags add cost allocation tags to the specified Amazon SQS queue.
                  items:
                    description: Tag is a key value pairs attached to a Amazon SQS queue.
                    properties:
                      key:
                        description: The key name that can be used to look up or retrieve the associated value.
                        type: string
                      value:
                        description: The value associated with a key in a tag.
                        type: string
                    required:
                    - key
                    type: object
                  type: array
                visibilityTimeout:
                  description: The visibility timeout for the queue, in seconds.
                  format: int64
                  type: integer
              required:
              - region
              type: object
            providerConfigRef:
              description: ProviderConfigReference specifies how the provider that will be used to create, observe, update, and delete this managed resource should be configured.
              properties:
                name:
                  description: Name of the referenced object.
                  type: string
              required:
              - name
              type: object
            providerRef:
              description: 'ProviderReference specifies the provider that will be used to create, observe, update, and delete this managed resource. Deprecated: Please use ProviderConfigReference, i.e. `providerConfigRef`'
              properties:
                name:
                  description: Name of the referenced object.
                  type: string
              required:
              - name
              type: object
            writeConnectionSecretToRef:
              description: WriteConnectionSecretToReference specifies the namespace and name of a Secret to which any connection details for this managed resource should be written. Connection details frequently include the endpoint, username, and password required to connect to the managed resource.
              properties:
                name:
                  description: Name of the secret.
                  type: string
                namespace:
                  description: Namespace of the secret.
                  type: string
              required:
              - name
              - namespace
              type: object
          required:
          - forProvider
          type: object
        status:
          description: QueueStatus represents the observed state of a Queue.
          properties:
            atProvider:
              description: QueueObservation is the representation of the current state that is observed
              properties:
                arn:
                  description: The Amazon resource name (ARN) of the queue.
                  type: string
                url:
                  description: The URL of the created Amazon SQS queue.
                  type: string
              type: object
            conditions:
              description: Conditions of the resource.
              items:
                description: A Condition that may apply to a resource.
                properties:
                  lastTransitionTime:
                    description: LastTransitionTime is the last time this condition transitioned from one status to another.
                    format: date-time
                    type: string
                  message:
                    description: A Message containing details about this condition's last transition from one status to another, if any.
                    type: string
                  reason:
                    description: A Reason for this condition's last transition from one status to another.
                    type: string
                  status:
                    description: Status of this condition; is it currently True, False, or Unknown?
                    type: string
                  type:
                    description: Type of this condition. At most one of each condition type may apply to a resource at any point in time.
                    type: string
                required:
                - lastTransitionTime
                - reason
                - status
                - type
                type: object
              type: array
          required:
          - atProvider
          type: object
      required:
      - spec
      type: object
  version: v1alpha1
  versions:
  - name: v1alpha1
    served: true
    storage: true
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []
