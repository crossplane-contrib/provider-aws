
---
apiVersion: apiextensions.k8s.io/v1beta1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.2.4
  creationTimestamp: null
  name: vpcs.ec2.aws.crossplane.io
spec:
  additionalPrinterColumns:
  - JSONPath: .status.conditions[?(@.type=='Ready')].status
    name: READY
    type: string
  - JSONPath: .status.conditions[?(@.type=='Synced')].status
    name: SYNCED
    type: string
  - JSONPath: .metadata.annotations.crossplane\.io/external-name
    name: ID
    type: string
  - JSONPath: .spec.forProvider.cidrBlock
    name: CIDR
    type: string
  - JSONPath: .metadata.creationTimestamp
    name: AGE
    type: date
  group: ec2.aws.crossplane.io
  names:
    categories:
    - crossplane
    - managed
    - aws
    kind: VPC
    listKind: VPCList
    plural: vpcs
    singular: vpc
  scope: Cluster
  subresources:
    status: {}
  validation:
    openAPIV3Schema:
      description: A VPC is a managed resource that represents an AWS Virtual Private
        Cloud.
      properties:
        apiVersion:
          description: 'APIVersion defines the versioned schema of this representation
            of an object. Servers should convert recognized schemas to the latest
            internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
          type: string
        kind:
          description: 'Kind is a string value representing the REST resource this
            object represents. Servers may infer this from the endpoint the client
            submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
          type: string
        metadata:
          type: object
        spec:
          description: A VPCSpec defines the desired state of a VPC.
          properties:
            claimRef:
              description: ClaimReference specifies the resource claim to which this
                managed resource will be bound. ClaimReference is set automatically
                during dynamic provisioning. Crossplane does not currently support
                setting this field manually, per https://github.com/crossplane/crossplane-runtime/issues/19
              properties:
                apiVersion:
                  description: API version of the referent.
                  type: string
                fieldPath:
                  description: 'If referring to a piece of an object instead of an
                    entire object, this string should contain a valid JSON/Go field
                    access statement, such as desiredState.manifest.containers[2].
                    For example, if the object reference is to a container within
                    a pod, this would take on a value like: "spec.containers{name}"
                    (where "name" refers to the name of the container that triggered
                    the event) or if no container name is specified "spec.containers[2]"
                    (container with index 2 in this pod). This syntax is chosen only
                    to have some well-defined way of referencing a part of an object.
                    TODO: this design is not final and this field is subject to change
                    in the future.'
                  type: string
                kind:
                  description: 'Kind of the referent. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
                  type: string
                name:
                  description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                  type: string
                namespace:
                  description: 'Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/'
                  type: string
                resourceVersion:
                  description: 'Specific resourceVersion to which this reference is
                    made, if any. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency'
                  type: string
                uid:
                  description: 'UID of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#uids'
                  type: string
              type: object
            classRef:
              description: ClassReference specifies the resource class that was used
                to dynamically provision this managed resource, if any. Crossplane
                does not currently support setting this field manually, per https://github.com/crossplane/crossplane-runtime/issues/20
              properties:
                apiVersion:
                  description: API version of the referent.
                  type: string
                fieldPath:
                  description: 'If referring to a piece of an object instead of an
                    entire object, this string should contain a valid JSON/Go field
                    access statement, such as desiredState.manifest.containers[2].
                    For example, if the object reference is to a container within
                    a pod, this would take on a value like: "spec.containers{name}"
                    (where "name" refers to the name of the container that triggered
                    the event) or if no container name is specified "spec.containers[2]"
                    (container with index 2 in this pod). This syntax is chosen only
                    to have some well-defined way of referencing a part of an object.
                    TODO: this design is not final and this field is subject to change
                    in the future.'
                  type: string
                kind:
                  description: 'Kind of the referent. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
                  type: string
                name:
                  description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                  type: string
                namespace:
                  description: 'Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/'
                  type: string
                resourceVersion:
                  description: 'Specific resourceVersion to which this reference is
                    made, if any. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency'
                  type: string
                uid:
                  description: 'UID of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#uids'
                  type: string
              type: object
            forProvider:
              description: VPCParameters define the desired state of an AWS Virtual
                Private Cloud.
              properties:
                cidrBlock:
                  description: CIDRBlock is the IPv4 network range for the VPC, in
                    CIDR notation. For example, 10.0.0.0/16.
                  type: string
                enableDnsHostNames:
                  description: Indicates whether the instances launched in the VPC
                    get DNS hostnames.
                  type: boolean
                enableDnsSupport:
                  description: A boolean flag to enable/disable DNS support in the
                    VPC
                  type: boolean
                instanceTenancy:
                  description: The allowed tenancy of instances launched into the
                    VPC.
                  type: string
                tags:
                  description: Tags are used as identification helpers between AWS
                    resources.
                  items:
                    description: Tag defines a tag
                    properties:
                      key:
                        description: Key is the name of the tag.
                        type: string
                      value:
                        description: Value is the value of the tag.
                        type: string
                    required:
                    - key
                    - value
                    type: object
                  type: array
              required:
              - cidrBlock
              type: object
            providerRef:
              description: ProviderReference specifies the provider that will be used
                to create, observe, update, and delete this managed resource.
              properties:
                name:
                  description: Name of the referenced object.
                  type: string
              required:
              - name
              type: object
            reclaimPolicy:
              description: ReclaimPolicy specifies what will happen to this managed
                resource when its resource claim is deleted, and what will happen
                to the underlying external resource when the managed resource is deleted.
                The "Delete" policy causes the managed resource to be deleted when
                its bound resource claim is deleted, and in turn causes the external
                resource to be deleted when its managed resource is deleted. The "Retain"
                policy causes the managed resource to be retained, in binding phase
                "Released", when its resource claim is deleted, and in turn causes
                the external resource to be retained when its managed resource is
                deleted. The "Retain" policy is used when no policy is specified.
              enum:
              - Retain
              - Delete
              type: string
            writeConnectionSecretToRef:
              description: WriteConnectionSecretToReference specifies the namespace
                and name of a Secret to which any connection details for this managed
                resource should be written. Connection details frequently include
                the endpoint, username, and password required to connect to the managed
                resource.
              properties:
                name:
                  description: Name of the secret.
                  type: string
                namespace:
                  description: Namespace of the secret.
                  type: string
              required:
              - name
              - namespace
              type: object
          required:
          - forProvider
          - providerRef
          type: object
        status:
          description: A VPCStatus represents the observed state of a VPC.
          properties:
            atProvider:
              description: VPCObservation keeps the state for the external resource
              properties:
                cidrBlockAssociationSet:
                  description: Information about the IPv4 CIDR blocks associated with
                    the VPC.
                  items:
                    description: VPCCIDRBlockAssociation represents the association
                      of IPv4 CIDR blocks with the VPC.
                    properties:
                      associationId:
                        description: The association ID for the IPv4 CIDR block.
                        type: string
                      cidrBlock:
                        description: The IPv4 CIDR block.
                        type: string
                      cidrBlockState:
                        description: Information about the state of the CIDR block.
                        properties:
                          state:
                            description: The state of the CIDR block.
                            type: string
                          statusMessage:
                            description: A message about the status of the CIDR block,
                              if applicable.
                            type: string
                        type: object
                    type: object
                  type: array
                dhcpOptionsId:
                  description: The ID of the set of DHCP options you've associated
                    with the VPC.
                  type: string
                ipv6CidrBlockAssociationSet:
                  description: Information about the IPv6 CIDR blocks associated with
                    the VPC.
                  items:
                    description: VPCIPv6CidrBlockAssociation represents the association
                      of IPv6 CIDR blocks with the VPC.
                    properties:
                      associationId:
                        description: The association ID for the IPv6 CIDR block.
                        type: string
                      ipv6CidrBlock:
                        description: The IPv6 CIDR block.
                        type: string
                      ipv6CidrBlockState:
                        description: Information about the state of the CIDR block.
                        properties:
                          state:
                            description: The state of the CIDR block.
                            type: string
                          statusMessage:
                            description: A message about the status of the CIDR block,
                              if applicable.
                            type: string
                        type: object
                      ipv6Pool:
                        description: The ID of the IPv6 address pool from which the
                          IPv6 CIDR block is allocated.
                        type: string
                      networkBorderGroup:
                        description: The name of the location from which we advertise
                          the IPV6 CIDR block.
                        type: string
                    type: object
                  type: array
                isDefault:
                  description: Indicates whether the VPC is the default VPC.
                  type: boolean
                ownerId:
                  description: The ID of the AWS account that owns the VPC.
                  type: string
                vpcState:
                  description: VPCState is the current state of the VPC.
                  type: string
              type: object
            bindingPhase:
              description: Phase represents the binding phase of a managed resource
                or claim. Unbindable resources cannot be bound, typically because
                they are currently unavailable, or still being created. Unbound resource
                are available for binding, and Bound resources have successfully bound
                to another resource.
              enum:
              - Unbindable
              - Unbound
              - Bound
              - Released
              type: string
            conditions:
              description: Conditions of the resource.
              items:
                description: A Condition that may apply to a resource.
                properties:
                  lastTransitionTime:
                    description: LastTransitionTime is the last time this condition
                      transitioned from one status to another.
                    format: date-time
                    type: string
                  message:
                    description: A Message containing details about this condition's
                      last transition from one status to another, if any.
                    type: string
                  reason:
                    description: A Reason for this condition's last transition from
                      one status to another.
                    type: string
                  status:
                    description: Status of this condition; is it currently True, False,
                      or Unknown?
                    type: string
                  type:
                    description: Type of this condition. At most one of each condition
                      type may apply to a resource at any point in time.
                    type: string
                required:
                - lastTransitionTime
                - reason
                - status
                - type
                type: object
              type: array
          required:
          - atProvider
          type: object
      required:
      - spec
      type: object
  version: v1beta1
  versions:
  - name: v1beta1
    served: true
    storage: true
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []
