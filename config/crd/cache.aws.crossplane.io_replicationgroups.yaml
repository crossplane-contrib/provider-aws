
---
apiVersion: apiextensions.k8s.io/v1beta1
kind: CustomResourceDefinition
metadata:
  creationTimestamp: null
  name: replicationgroups.cache.aws.crossplane.io
spec:
  additionalPrinterColumns:
  - JSONPath: .status.state
    name: STATUS
    type: string
  - JSONPath: .spec.classRef.name
    name: CLASS
    type: string
  - JSONPath: .spec.engineVersion
    name: VERSION
    type: string
  - JSONPath: .metadata.creationTimestamp
    name: AGE
    type: date
  group: cache.aws.crossplane.io
  names:
    kind: ReplicationGroup
    listKind: ReplicationGroupList
    plural: replicationgroups
    singular: replicationgroup
  scope: ""
  subresources:
    status: {}
  validation:
    openAPIV3Schema:
      description: ReplicationGroup is the Schema for the instances API
      properties:
        apiVersion:
          description: 'APIVersion defines the versioned schema of this representation
            of an object. Servers should convert recognized schemas to the latest
            internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#resources'
          type: string
        kind:
          description: 'Kind is a string value representing the REST resource this
            object represents. Servers may infer this from the endpoint the client
            submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds'
          type: string
        metadata:
          type: object
        spec:
          description: ReplicationGroupSpec defines the desired state of ReplicationGroup
          properties:
            atRestEncryptionEnabled:
              description: "AtRestEncryptionEnabled enables encryption at rest when
                set to true. \n You cannot modify the value of AtRestEncryptionEnabled
                after the replication group is created. To enable encryption at rest
                on a replication group you must set AtRestEncryptionEnabled to true
                when you create the replication group."
              type: boolean
            authEnabled:
              description: "AuthEnabled enables mandatory authentication when connecting
                to the managed replication group. AuthEnabled requires TransitEncryptionEnabled
                to be true. \n While ReplicationGroupSpec mirrors the fields of the
                upstream replication group object as closely as possible, we expose
                a boolean here rather than requiring the operator pass in a string
                authentication token. Crossplane will generate a token automatically
                and expose it via a Secret."
              type: boolean
            automaticFailoverEnabled:
              description: "AutomaticFailoverEnabled specifies whether a read-only
                replica is automatically promoted to read/write primary if the existing
                primary fails. If true, Multi-AZ is enabled for this replication group.
                If false, Multi-AZ is disabled for this replication group. \n AutomaticFailoverEnabled
                must be enabled for Redis (cluster mode enabled) replication groups."
              type: boolean
            cacheNodeType:
              description: CacheNodeType specifies the compute and memory capacity
                of the nodes in the node group (shard).
              type: string
            cacheParameterGroupName:
              description: CacheParameterGroupName specifies the name of the parameter
                group to associate with this replication group. If this argument is
                omitted, the default cache parameter group for the specified engine
                is used.
              type: string
            cacheSecurityGroupNames:
              description: CacheSecurityGroupNames specifies a list of cache security
                group names to associate with this replication group.
              items:
                type: string
              type: array
            cacheSubnetGroupName:
              description: CacheSubnetGroupName specifies the name of the cache subnet
                group to be used for the replication group. If you're going to launch
                your cluster in an Amazon VPC, you need to create a subnet group before
                you start creating a cluster.
              type: string
            claimRef:
              description: ClaimReference specifies the resource claim to which this
                managed resource will be bound. ClaimReference is set automatically
                during dynamic provisioning. Crossplane does not currently support
                setting this field manually, per https://github.com/crossplaneio/crossplane-runtime/issues/19
              properties:
                apiVersion:
                  description: API version of the referent.
                  type: string
                fieldPath:
                  description: 'If referring to a piece of an object instead of an
                    entire object, this string should contain a valid JSON/Go field
                    access statement, such as desiredState.manifest.containers[2].
                    For example, if the object reference is to a container within
                    a pod, this would take on a value like: "spec.containers{name}"
                    (where "name" refers to the name of the container that triggered
                    the event) or if no container name is specified "spec.containers[2]"
                    (container with index 2 in this pod). This syntax is chosen only
                    to have some well-defined way of referencing a part of an object.
                    TODO: this design is not final and this field is subject to change
                    in the future.'
                  type: string
                kind:
                  description: 'Kind of the referent. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds'
                  type: string
                name:
                  description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                  type: string
                namespace:
                  description: 'Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/'
                  type: string
                resourceVersion:
                  description: 'Specific resourceVersion to which this reference is
                    made, if any. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#concurrency-control-and-consistency'
                  type: string
                uid:
                  description: 'UID of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#uids'
                  type: string
              type: object
            classRef:
              description: NonPortableClassReference specifies the non-portable resource
                class that was used to dynamically provision this managed resource,
                if any. Crossplane does not currently support setting this field manually,
                per https://github.com/crossplaneio/crossplane-runtime/issues/20
              properties:
                apiVersion:
                  description: API version of the referent.
                  type: string
                fieldPath:
                  description: 'If referring to a piece of an object instead of an
                    entire object, this string should contain a valid JSON/Go field
                    access statement, such as desiredState.manifest.containers[2].
                    For example, if the object reference is to a container within
                    a pod, this would take on a value like: "spec.containers{name}"
                    (where "name" refers to the name of the container that triggered
                    the event) or if no container name is specified "spec.containers[2]"
                    (container with index 2 in this pod). This syntax is chosen only
                    to have some well-defined way of referencing a part of an object.
                    TODO: this design is not final and this field is subject to change
                    in the future.'
                  type: string
                kind:
                  description: 'Kind of the referent. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds'
                  type: string
                name:
                  description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                  type: string
                namespace:
                  description: 'Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/'
                  type: string
                resourceVersion:
                  description: 'Specific resourceVersion to which this reference is
                    made, if any. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#concurrency-control-and-consistency'
                  type: string
                uid:
                  description: 'UID of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#uids'
                  type: string
              type: object
            engineVersion:
              description: EngineVersion specifies the version number of the cache
                engine to be used for the clusters in this replication group. To view
                the supported cache engine versions, use the DescribeCacheEngineVersions
                operation.
              type: string
            nodeGroupConfiguration:
              description: NodeGroupConfiguration specifies a list of node group (shard)
                configuration options.
              items:
                description: NodeGroupConfigurationSpec specifies the configuration
                  of a node group within a replication group.
                properties:
                  primaryAvailabilityZone:
                    description: PrimaryAvailabilityZone specifies the Availability
                      Zone where the primary node of this node group (shard) is launched.
                    type: string
                  replicaAvailabilityZones:
                    description: ReplicaAvailabilityZones specifies a list of Availability
                      Zones to be used for the read replicas. The number of Availability
                      Zones in this list must match the value of ReplicaCount or ReplicasPerNodeGroup
                      if not specified.
                    items:
                      type: string
                    type: array
                  replicaCount:
                    description: ReplicaCount specifies the number of read replica
                      nodes in this node group (shard).
                    type: integer
                  slots:
                    description: "Slots specifies the keyspace for a particular node
                      group. Keyspaces range from 0 to 16,383. The string is in the
                      format startkey-endkey. \n Example: \"0-3999\""
                    type: string
                type: object
              type: array
            notificationTopicArn:
              description: NotificationTopicARN specifies the Amazon Resource Name
                (ARN) of the Amazon Simple Notification Service (SNS) topic to which
                notifications are sent. The Amazon SNS topic owner must be the same
                as the cluster owner.
              type: string
            numCacheClusters:
              description: "NumCacheClusters specifies the number of clusters this
                replication group initially has. This parameter is not used if there
                is more than one node group (shard). You should use ReplicasPerNodeGroup
                instead. \n If AutomaticFailoverEnabled is true, the value of this
                parameter must be at least 2. If AutomaticFailoverEnabled is false
                you can omit this parameter (it will default to 1), or you can explicitly
                set it to a value between 2 and 6."
              type: integer
            numNodeGroups:
              description: NumNodeGroups specifies the number of node groups (shards)
                for this Redis (cluster mode enabled) replication group. For Redis
                (cluster mode disabled) either omit this parameter or set it to 1.
              type: integer
            port:
              description: Port number on which each member of the replication group
                accepts connections.
              type: integer
            preferredCacheClusterAzs:
              description: "PreferredCacheClusterAZs specifies a list of EC2 Availability
                Zones in which the replication group's clusters are created. The order
                of the Availability Zones in the list is the order in which clusters
                are allocated. The primary cluster is created in the first AZ in the
                list. \n This parameter is not used if there is more than one node
                group (shard). You should use NodeGroupConfiguration instead. \n The
                number of Availability Zones listed must equal the value of NumCacheClusters."
              items:
                type: string
              type: array
            preferredMaintenanceWindow:
              description: "PreferredMaintenanceWindow specifies the weekly time range
                during which maintenance on the cluster is performed. It is specified
                as a range in the format ddd:hh24:mi-ddd:hh24:mi (24H Clock UTC).
                The minimum maintenance window is a 60 minute period. \n Example:
                sun:23:00-mon:01:30"
              type: string
            providerRef:
              description: ProviderReference specifies the provider that will be used
                to create, observe, update, and delete this managed resource.
              properties:
                apiVersion:
                  description: API version of the referent.
                  type: string
                fieldPath:
                  description: 'If referring to a piece of an object instead of an
                    entire object, this string should contain a valid JSON/Go field
                    access statement, such as desiredState.manifest.containers[2].
                    For example, if the object reference is to a container within
                    a pod, this would take on a value like: "spec.containers{name}"
                    (where "name" refers to the name of the container that triggered
                    the event) or if no container name is specified "spec.containers[2]"
                    (container with index 2 in this pod). This syntax is chosen only
                    to have some well-defined way of referencing a part of an object.
                    TODO: this design is not final and this field is subject to change
                    in the future.'
                  type: string
                kind:
                  description: 'Kind of the referent. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds'
                  type: string
                name:
                  description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                  type: string
                namespace:
                  description: 'Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/'
                  type: string
                resourceVersion:
                  description: 'Specific resourceVersion to which this reference is
                    made, if any. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#concurrency-control-and-consistency'
                  type: string
                uid:
                  description: 'UID of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#uids'
                  type: string
              type: object
            reclaimPolicy:
              description: ReclaimPolicy specifies what will happen to the external
                resource this managed resource manages when the managed resource is
                deleted. "Delete" deletes the external resource, while "Retain" (the
                default) does not. Note this behaviour is subtly different from other
                uses of the ReclaimPolicy concept within the Kubernetes ecosystem
                per https://github.com/crossplaneio/crossplane-runtime/issues/21
              type: string
            replicasPerNodeGroup:
              description: ReplicasPerNodeGroup specifies the number of replica nodes
                in each node group (shard). Valid values are 0 to 5.
              type: integer
            securityGroupIds:
              description: SecurityGroupIDs specifies one or more Amazon VPC security
                groups associated with this replication group. Use this parameter
                only when you are creating a replication group in an Amazon VPC.
              items:
                type: string
              type: array
            snapshotArns:
              description: 'SnapshotARNs specifies a list of Amazon Resource Names
                (ARN) that uniquely identify the Redis RDB snapshot files stored in
                Amazon S3. The snapshot files are used to populate the new replication
                group. The Amazon S3 object name in the ARN cannot contain any commas.
                The new replication group will have the number of node groups (console:
                shards) specified by the parameter NumNodeGroups or the number of
                node groups configured by NodeGroupConfiguration regardless of the
                number of ARNs specified here.'
              items:
                type: string
              type: array
            snapshotName:
              description: SnapshotName specifies the name of a snapshot from which
                to restore data into the new replication group. The snapshot status
                changes to restoring while the new replication group is being created.
              type: string
            snapshotRetentionLimit:
              description: SnapshotRetentionLimit specifies the number of days for
                which ElastiCache retains automatic snapshots before deleting them.
                For example, if you set SnapshotRetentionLimit to 5, a snapshot that
                was taken today is retained for 5 days before being deleted.
              type: integer
            snapshotWindow:
              description: "SnapshotWindow specifies the daily time range (in UTC)
                during which ElastiCache begins taking a daily snapshot of your node
                group (shard). \n Example: 05:00-09:00 \n If you do not specify this
                parameter, ElastiCache automatically chooses an appropriate time range."
              type: string
            transitEncryptionEnabled:
              description: "TransitEncryptionEnabled enables in-transit encryption
                when set to true. \n You cannot modify the value of TransitEncryptionEnabled
                after the cluster is created. To enable in-transit encryption on a
                cluster you must TransitEncryptionEnabled to true when you create
                a cluster."
              type: boolean
            writeConnectionSecretToRef:
              description: WriteConnectionSecretToReference specifies the name of
                a Secret, in the same namespace as this managed resource, to which
                any connection details for this managed resource should be written.
                Connection details frequently include the endpoint, username, and
                password required to connect to the managed resource.
              properties:
                name:
                  description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                    TODO: Add other useful fields. apiVersion, kind, uid?'
                  type: string
              type: object
          required:
          - cacheNodeType
          - providerRef
          type: object
        status:
          description: ReplicationGroupStatus defines the observed state of ReplicationGroup
          properties:
            bindingPhase:
              description: Phase represents the binding phase of a managed resource
                or claim. Unbindable resources cannot be bound, typically because
                they are currently unavailable, or still being created. Unbound resource
                are available for binding, and Bound resources have successfully bound
                to another resource.
              enum:
              - Unbindable
              - Unbound
              - Bound
              type: string
            clusterEnabled:
              description: ClusterEnabled indicates whether cluster mode is enabled,
                i.e. whether this replication group's data can be partitioned across
                multiple shards.
              type: boolean
            conditions:
              description: Conditions of the resource.
              items:
                description: A Condition that may apply to a managed resource.
                properties:
                  lastTransitionTime:
                    description: LastTransitionTime is the last time this condition
                      transitioned from one status to another.
                    format: date-time
                    type: string
                  message:
                    description: A Message containing details about this condition's
                      last transition from one status to another, if any.
                    type: string
                  reason:
                    description: A Reason for this condition's last transition from
                      one status to another.
                    type: string
                  status:
                    description: Status of this condition; is it currently True, False,
                      or Unknown?
                    type: string
                  type:
                    description: Type of this condition. At most one of each condition
                      type may apply to a resource at any point in time.
                    type: string
                required:
                - lastTransitionTime
                - reason
                - status
                - type
                type: object
              type: array
            endpoint:
              description: Endpoint of the Replication Group used in connection strings.
              type: string
            groupName:
              description: Groupname of the Replication Group.
              type: string
            memberClusters:
              description: MemberClusters that are part of this replication group.
              items:
                type: string
              type: array
            message:
              type: string
            port:
              description: Port at which the Replication Group endpoint is listening.
              type: integer
            providerID:
              description: ProviderID is the external ID to identify this resource
                in the cloud provider
              type: string
            state:
              type: string
          type: object
      type: object
  version: v1alpha2
  versions:
  - name: v1alpha2
    served: true
    storage: true
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []
