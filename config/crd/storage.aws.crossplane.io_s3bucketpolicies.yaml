
---
apiVersion: apiextensions.k8s.io/v1beta1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.2.4
  creationTimestamp: null
  name: s3bucketpolicies.storage.aws.crossplane.io
spec:
  additionalPrinterColumns:
  - JSONPath: .spec.forProvider.userName
    name: USERNAME
    type: string
  - JSONPath: .spec.forProvider.bucketName
    name: BUCKETNAME
    type: string
  - JSONPath: .status.conditions[?(@.type=='Ready')].status
    name: READY
    type: string
  - JSONPath: .status.conditions[?(@.type=='Synced')].status
    name: SYNCED
    type: string
  - JSONPath: .metadata.creationTimestamp
    name: AGE
    type: date
  group: storage.aws.crossplane.io
  names:
    categories:
    - crossplane
    - managed
    - aws
    kind: S3BucketPolicy
    listKind: S3BucketPolicyList
    plural: s3bucketpolicies
    singular: s3bucketpolicy
  scope: Cluster
  subresources:
    status: {}
  validation:
    openAPIV3Schema:
      description: An S3BucketPolicy is a managed resource that represents an AWS
        Bucket policy.
      properties:
        apiVersion:
          description: 'APIVersion defines the versioned schema of this representation
            of an object. Servers should convert recognized schemas to the latest
            internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
          type: string
        kind:
          description: 'Kind is a string value representing the REST resource this
            object represents. Servers may infer this from the endpoint the client
            submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
          type: string
        metadata:
          type: object
        spec:
          description: An S3BucketPolicySpec defines the desired state of an S3BucketPolicy.
          properties:
            claimRef:
              description: ClaimReference specifies the resource claim to which this
                managed resource will be bound. ClaimReference is set automatically
                during dynamic provisioning. Deprecated. See https://github.com/crossplane/crossplane/issues/1670
              properties:
                apiVersion:
                  description: API version of the referent.
                  type: string
                fieldPath:
                  description: 'If referring to a piece of an object instead of an
                    entire object, this string should contain a valid JSON/Go field
                    access statement, such as desiredState.manifest.containers[2].
                    For example, if the object reference is to a container within
                    a pod, this would take on a value like: "spec.containers{name}"
                    (where "name" refers to the name of the container that triggered
                    the event) or if no container name is specified "spec.containers[2]"
                    (container with index 2 in this pod). This syntax is chosen only
                    to have some well-defined way of referencing a part of an object.
                    TODO: this design is not final and this field is subject to change
                    in the future.'
                  type: string
                kind:
                  description: 'Kind of the referent. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
                  type: string
                name:
                  description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                  type: string
                namespace:
                  description: 'Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/'
                  type: string
                resourceVersion:
                  description: 'Specific resourceVersion to which this reference is
                    made, if any. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency'
                  type: string
                uid:
                  description: 'UID of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#uids'
                  type: string
              type: object
            classRef:
              description: ClassReference specifies the resource class that was used
                to dynamically provision this managed resource, if any. Deprecated.
                See https://github.com/crossplane/crossplane/issues/1670
              properties:
                apiVersion:
                  description: API version of the referent.
                  type: string
                fieldPath:
                  description: 'If referring to a piece of an object instead of an
                    entire object, this string should contain a valid JSON/Go field
                    access statement, such as desiredState.manifest.containers[2].
                    For example, if the object reference is to a container within
                    a pod, this would take on a value like: "spec.containers{name}"
                    (where "name" refers to the name of the container that triggered
                    the event) or if no container name is specified "spec.containers[2]"
                    (container with index 2 in this pod). This syntax is chosen only
                    to have some well-defined way of referencing a part of an object.
                    TODO: this design is not final and this field is subject to change
                    in the future.'
                  type: string
                kind:
                  description: 'Kind of the referent. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
                  type: string
                name:
                  description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                  type: string
                namespace:
                  description: 'Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/'
                  type: string
                resourceVersion:
                  description: 'Specific resourceVersion to which this reference is
                    made, if any. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency'
                  type: string
                uid:
                  description: 'UID of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#uids'
                  type: string
              type: object
            deletionPolicy:
              description: DeletionPolicy specifies what will happen to the underlying
                external when this managed resource is deleted - either "Delete" or
                "Orphan" the external resource. The "Delete" policy is the default
                when no policy is specified.
              enum:
              - Orphan
              - Delete
              type: string
            forProvider:
              description: S3BucketPolicyParameters define the desired state of an
                AWS S3BucketPolicy.
              properties:
                bucketName:
                  description: BucketName presents the name of the bucket.
                  type: string
                bucketNameRef:
                  description: BucketNameRef references to an S3Bucket to retrieve
                    its bucketName
                  properties:
                    name:
                      description: Name of the referenced object.
                      type: string
                  required:
                  - name
                  type: object
                bucketNameSelector:
                  description: BucketNameSelector selects a reference to an S3Bucket
                    to retrieve its bucketName
                  properties:
                    matchControllerRef:
                      description: MatchControllerRef ensures an object with the same
                        controller reference as the selecting object is selected.
                      type: boolean
                    matchLabels:
                      additionalProperties:
                        type: string
                      description: MatchLabels ensures an object with matching labels
                        is selected.
                      type: object
                  type: object
                id:
                  description: This is the policy's optional identifier
                  type: string
                statement:
                  description: This is the list of statement this policy applies
                  items:
                    description: S3BucketPolicyStatement defines an individual statement
                      within the S3BucketPolicyBody
                    properties:
                      action:
                        description: Each element of the PolicyAction array describes
                          the specific action or actions that will be allowed or denied
                          with this PolicyStatement.
                        items:
                          type: string
                        type: array
                      effect:
                        description: The effect is required and specifies whether
                          the statement results in an allow or an explicit deny. Valid
                          values for Effect are Allow and Deny.
                        type: string
                      effectIAMUser:
                        description: This flag indicates that this policy should apply
                          to the IAMUsername that was either passed in or created
                          for this bucket, this user will added to the action array
                        type: boolean
                      notAction:
                        description: Each element of the NotPolicyAction array will
                          allow the property to match all but the listed actions.
                        items:
                          type: string
                        type: array
                      notPrincipal:
                        description: Used with the S3 policy to specify the users
                          which are not included in this policy
                        properties:
                          allowAnon:
                            description: This flag indicates if the policy should
                              be made available to all anonymous users.
                            type: boolean
                          aws:
                            description: This list contains the all of the AWS IAM
                              users which are affected by the policy statement
                            items:
                              type: string
                            type: array
                        type: object
                      notResource:
                        description: This will explicitly match all resource paths
                          except the ones specified in this array
                        items:
                          type: string
                        type: array
                      principal:
                        description: Used with the S3 policy to specify the principal
                          that is allowed or denied access to a resource.
                        properties:
                          allowAnon:
                            description: This flag indicates if the policy should
                              be made available to all anonymous users.
                            type: boolean
                          aws:
                            description: This list contains the all of the AWS IAM
                              users which are affected by the policy statement
                            items:
                              type: string
                            type: array
                        type: object
                      resource:
                        description: The paths on which this resource will apply
                        items:
                          type: string
                        type: array
                      sid:
                        description: Optional identifier for this statement, must
                          be unique within the policy if provided.
                        type: string
                    required:
                    - effect
                    type: object
                  type: array
                userName:
                  description: UserName presents the name of the bucket.
                  type: string
                userNameRef:
                  description: UserNameRef references to an S3Bucket to retrieve its
                    userName
                  properties:
                    name:
                      description: Name of the referenced object.
                      type: string
                  required:
                  - name
                  type: object
                userNameSelector:
                  description: UserNameSelector selects a reference to an S3Bucket
                    to retrieve its userName
                  properties:
                    matchControllerRef:
                      description: MatchControllerRef ensures an object with the same
                        controller reference as the selecting object is selected.
                      type: boolean
                    matchLabels:
                      additionalProperties:
                        type: string
                      description: MatchLabels ensures an object with matching labels
                        is selected.
                      type: object
                  type: object
                version:
                  description: This is the current IAM policy version
                  type: string
              required:
              - statement
              - version
              type: object
            providerConfigRef:
              description: ProviderConfigReference specifies how the provider that
                will be used to create, observe, update, and delete this managed resource
                should be configured.
              properties:
                name:
                  description: Name of the referenced object.
                  type: string
              required:
              - name
              type: object
            providerRef:
              description: 'ProviderReference specifies the provider that will be
                used to create, observe, update, and delete this managed resource.
                Deprecated: Please use ProviderConfigReference, i.e. `providerConfigRef`'
              properties:
                name:
                  description: Name of the referenced object.
                  type: string
              required:
              - name
              type: object
            reclaimPolicy:
              description: "ReclaimPolicy specifies what will happen to this managed
                resource when its resource claim is deleted, and what will happen
                to the underlying external resource when the managed resource is deleted.
                The \"Delete\" policy causes the managed resource to be deleted when
                its bound resource claim is deleted, and in turn causes the external
                resource to be deleted when its managed resource is deleted. The \"Retain\"
                policy causes the managed resource to be retained, in binding phase
                \"Released\", when its resource claim is deleted, and in turn causes
                the external resource to be retained when its managed resource is
                deleted. The \"Delete\" policy is used when no policy is specified.
                \n Deprecated. DeletionPolicy takes precedence when both are set.
                See https://github.com/crossplane/crossplane-runtime/issues/179."
              enum:
              - Retain
              - Delete
              type: string
            writeConnectionSecretToRef:
              description: WriteConnectionSecretToReference specifies the namespace
                and name of a Secret to which any connection details for this managed
                resource should be written. Connection details frequently include
                the endpoint, username, and password required to connect to the managed
                resource.
              properties:
                name:
                  description: Name of the secret.
                  type: string
                namespace:
                  description: Namespace of the secret.
                  type: string
              required:
              - name
              - namespace
              type: object
          required:
          - forProvider
          type: object
        status:
          description: An S3BucketPolicyStatus represents the observed state of an
            S3BucketPolicy.
          properties:
            bindingPhase:
              description: Phase represents the binding phase of a managed resource
                or claim. Unbindable resources cannot be bound, typically because
                they are currently unavailable, or still being created. Unbound resource
                are available for binding, and Bound resources have successfully bound
                to another resource. Deprecated. See https://github.com/crossplane/crossplane/issues/1670
              enum:
              - Unbindable
              - Unbound
              - Bound
              - Released
              type: string
            conditions:
              description: Conditions of the resource.
              items:
                description: A Condition that may apply to a resource.
                properties:
                  lastTransitionTime:
                    description: LastTransitionTime is the last time this condition
                      transitioned from one status to another.
                    format: date-time
                    type: string
                  message:
                    description: A Message containing details about this condition's
                      last transition from one status to another, if any.
                    type: string
                  reason:
                    description: A Reason for this condition's last transition from
                      one status to another.
                    type: string
                  status:
                    description: Status of this condition; is it currently True, False,
                      or Unknown?
                    type: string
                  type:
                    description: Type of this condition. At most one of each condition
                      type may apply to a resource at any point in time.
                    type: string
                required:
                - lastTransitionTime
                - reason
                - status
                - type
                type: object
              type: array
          type: object
      required:
      - spec
      type: object
  version: v1alpha1
  versions:
  - name: v1alpha1
    served: true
    storage: true
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []
