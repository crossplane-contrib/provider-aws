
---
apiVersion: apiextensions.k8s.io/v1beta1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.2.4
  creationTimestamp: null
  name: cacheclusters.cache.aws.crossplane.io
spec:
  additionalPrinterColumns:
  - JSONPath: .status.atProvider.cacheClusterStatus
    name: STATUS
    type: string
  - JSONPath: .status.conditions[?(@.type=='Ready')].status
    name: READY
    type: string
  - JSONPath: .status.conditions[?(@.type=='Synced')].status
    name: SYNCED
    type: string
  - JSONPath: .metadata.creationTimestamp
    name: AGE
    type: date
  group: cache.aws.crossplane.io
  names:
    categories:
    - crossplane
    - managed
    - aws
    kind: CacheCluster
    listKind: CacheClusterList
    plural: cacheclusters
    singular: cachecluster
  scope: Cluster
  subresources:
    status: {}
  validation:
    openAPIV3Schema:
      description: A CacheCluster is a managed resource that represents an AWS ElastiCache
        Cache Cluster.
      properties:
        apiVersion:
          description: 'APIVersion defines the versioned schema of this representation
            of an object. Servers should convert recognized schemas to the latest
            internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
          type: string
        kind:
          description: 'Kind is a string value representing the REST resource this
            object represents. Servers may infer this from the endpoint the client
            submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
          type: string
        metadata:
          type: object
        spec:
          description: A CacheClusterSpec defines the desired state of a CacheCluster.
          properties:
            claimRef:
              description: ClaimReference specifies the resource claim to which this
                managed resource will be bound. ClaimReference is set automatically
                during dynamic provisioning. Deprecated. See https://github.com/crossplane/crossplane/issues/1670
              properties:
                apiVersion:
                  description: API version of the referent.
                  type: string
                fieldPath:
                  description: 'If referring to a piece of an object instead of an
                    entire object, this string should contain a valid JSON/Go field
                    access statement, such as desiredState.manifest.containers[2].
                    For example, if the object reference is to a container within
                    a pod, this would take on a value like: "spec.containers{name}"
                    (where "name" refers to the name of the container that triggered
                    the event) or if no container name is specified "spec.containers[2]"
                    (container with index 2 in this pod). This syntax is chosen only
                    to have some well-defined way of referencing a part of an object.
                    TODO: this design is not final and this field is subject to change
                    in the future.'
                  type: string
                kind:
                  description: 'Kind of the referent. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
                  type: string
                name:
                  description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                  type: string
                namespace:
                  description: 'Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/'
                  type: string
                resourceVersion:
                  description: 'Specific resourceVersion to which this reference is
                    made, if any. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency'
                  type: string
                uid:
                  description: 'UID of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#uids'
                  type: string
              type: object
            classRef:
              description: ClassReference specifies the resource class that was used
                to dynamically provision this managed resource, if any. Deprecated.
                See https://github.com/crossplane/crossplane/issues/1670
              properties:
                apiVersion:
                  description: API version of the referent.
                  type: string
                fieldPath:
                  description: 'If referring to a piece of an object instead of an
                    entire object, this string should contain a valid JSON/Go field
                    access statement, such as desiredState.manifest.containers[2].
                    For example, if the object reference is to a container within
                    a pod, this would take on a value like: "spec.containers{name}"
                    (where "name" refers to the name of the container that triggered
                    the event) or if no container name is specified "spec.containers[2]"
                    (container with index 2 in this pod). This syntax is chosen only
                    to have some well-defined way of referencing a part of an object.
                    TODO: this design is not final and this field is subject to change
                    in the future.'
                  type: string
                kind:
                  description: 'Kind of the referent. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
                  type: string
                name:
                  description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                  type: string
                namespace:
                  description: 'Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/'
                  type: string
                resourceVersion:
                  description: 'Specific resourceVersion to which this reference is
                    made, if any. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency'
                  type: string
                uid:
                  description: 'UID of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#uids'
                  type: string
              type: object
            deletionPolicy:
              description: DeletionPolicy specifies what will happen to the underlying
                external when this managed resource is deleted - either "Delete" or
                "Orphan" the external resource. The "Delete" policy is the default
                when no policy is specified.
              enum:
              - Orphan
              - Delete
              type: string
            forProvider:
              description: 'CacheClusterParameters define the desired state of an
                AWS ElastiCache Cache Cluster. Most fields map directly to an AWS
                ReplicationGroup: https://docs.aws.amazon.com/AmazonElastiCache/latest/APIReference/API_CreateReplicationGroup.html#API_CreateReplicationGroup_RequestParameters'
              properties:
                applyImmediately:
                  description: If true, this parameter causes the modifications in
                    this request and any pending modifications to be applied, asynchronously
                    and as soon as possible, regardless of the PreferredMaintenanceWindow
                    setting for the cluster. If false, changes to the cluster are
                    applied on the next maintenance reboot, or the next failure reboot,
                    whichever occurs first.
                  type: boolean
                authToken:
                  description: The password used to access a password protected server.
                  type: string
                authTokenUpdateStrategy:
                  description: 'Specifies the strategy to use to update the AUTH token.
                    This parameter must be specified with the auth-token parameter.
                    Possible values:'
                  type: string
                azMode:
                  description: Specifies whether the nodes in this Memcached cluster
                    are created in a single Availability Zone or created across multiple
                    Availability Zones in the cluster's region. This parameter is
                    only supported for Memcached clusters.
                  type: string
                cacheNodeIdsToRemove:
                  description: A list of cache node IDs to be removed.
                  items:
                    type: string
                  type: array
                cacheNodeType:
                  description: The compute and memory capacity of the nodes in the
                    node group (shard).
                  type: string
                cacheParameterGroupName:
                  description: The name of the parameter group to associate with this
                    cluster. If this argument is omitted, the default parameter group
                    for the specified engine is used.
                  type: string
                cacheSecurityGroupNames:
                  description: A list of security group names to associate with this
                    cluster.
                  items:
                    type: string
                  type: array
                cacheSubnetGroupName:
                  description: The name of the subnet group to be used for the cluster.
                  type: string
                cacheSubnetGroupNameRef:
                  description: A referencer to retrieve the name of a CacheSubnetGroup
                  properties:
                    name:
                      description: Name of the referenced object.
                      type: string
                  required:
                  - name
                  type: object
                cacheSubnetGroupNameSelector:
                  description: A selector to select a referencer to retrieve the name
                    of a CacheSubnetGroup
                  properties:
                    matchControllerRef:
                      description: MatchControllerRef ensures an object with the same
                        controller reference as the selecting object is selected.
                      type: boolean
                    matchLabels:
                      additionalProperties:
                        type: string
                      description: MatchLabels ensures an object with matching labels
                        is selected.
                      type: object
                  type: object
                engine:
                  description: The name of the cache engine to be used for this cluster.
                  type: string
                engineVersion:
                  description: The version number of the cache engine to be used for
                    this cluster.
                  type: string
                notificationTopicArn:
                  description: The Amazon Resource Name (ARN) of the Amazon Simple
                    Notification Service (SNS) topic to which notifications are sent.
                  type: string
                numCacheNodes:
                  description: The initial number of cache nodes that the cluster
                    has.
                  format: int64
                  type: integer
                port:
                  description: The port number on which each of the cache nodes accepts
                    connections.
                  format: int64
                  type: integer
                preferredAvailabilityZone:
                  description: 'The EC2 Availability Zone in which the cluster is
                    created. Default: System chosen Availability Zone.'
                  type: string
                preferredAvailabilityZones:
                  description: A list of the Availability Zones in which cache nodes
                    are created.
                  items:
                    type: string
                  type: array
                preferredMaintenanceWindow:
                  description: Specifies the weekly time range during which maintenance
                    on the cluster is performed.
                  type: string
                region:
                  description: Region is the region you'd like your CacheSubnetGroup
                    to be created in.
                  type: string
                replicationGroupId:
                  description: The ID of the replication group to which this cluster
                    should belong.
                  type: string
                securityGroupIDRefs:
                  description: A referencer to retrieve the ID of a Security group
                  items:
                    description: A Reference to a named object.
                    properties:
                      name:
                        description: Name of the referenced object.
                        type: string
                    required:
                    - name
                    type: object
                  type: array
                securityGroupIDSelector:
                  description: A selector to select a referencer to retrieve the ID
                    of a Security Group
                  properties:
                    matchControllerRef:
                      description: MatchControllerRef ensures an object with the same
                        controller reference as the selecting object is selected.
                      type: boolean
                    matchLabels:
                      additionalProperties:
                        type: string
                      description: MatchLabels ensures an object with matching labels
                        is selected.
                      type: object
                  type: object
                securityGroupIds:
                  description: One or more VPC security groups associated with the
                    cluster.
                  items:
                    type: string
                  type: array
                snapshotArns:
                  description: A single-element string list containing an Amazon Resource
                    Name (ARN) that uniquely identifies a Redis RDB snapshot file
                    stored in Amazon S3.
                  items:
                    type: string
                  type: array
                snapshotName:
                  description: The name of a Redis snapshot from which to restore
                    data into the new node group (shard).
                  type: string
                snapshotRetentionLimit:
                  description: The number of days for which ElastiCache retains automatic
                    snapshots before deleting them.
                  format: int64
                  type: integer
                snapshotWindow:
                  description: The daily time range (in UTC) during which ElastiCache
                    begins taking a daily snapshot of your node group (shard).
                  type: string
                tags:
                  description: A list of cost allocation tags to be added to this
                    resource.
                  items:
                    description: A Tag is used to tag the ElastiCache resources in
                      AWS.
                    properties:
                      key:
                        description: Key for the tag.
                        type: string
                      value:
                        description: Value of the tag.
                        type: string
                    required:
                    - key
                    type: object
                  type: array
              required:
              - cacheNodeType
              - numCacheNodes
              - region
              type: object
            providerConfigRef:
              description: ProviderConfigReference specifies how the provider that
                will be used to create, observe, update, and delete this managed resource
                should be configured.
              properties:
                name:
                  description: Name of the referenced object.
                  type: string
              required:
              - name
              type: object
            providerRef:
              description: 'ProviderReference specifies the provider that will be
                used to create, observe, update, and delete this managed resource.
                Deprecated: Please use ProviderConfigReference, i.e. `providerConfigRef`'
              properties:
                name:
                  description: Name of the referenced object.
                  type: string
              required:
              - name
              type: object
            reclaimPolicy:
              description: "ReclaimPolicy specifies what will happen to this managed
                resource when its resource claim is deleted, and what will happen
                to the underlying external resource when the managed resource is deleted.
                The \"Delete\" policy causes the managed resource to be deleted when
                its bound resource claim is deleted, and in turn causes the external
                resource to be deleted when its managed resource is deleted. The \"Retain\"
                policy causes the managed resource to be retained, in binding phase
                \"Released\", when its resource claim is deleted, and in turn causes
                the external resource to be retained when its managed resource is
                deleted. The \"Delete\" policy is used when no policy is specified.
                \n Deprecated. DeletionPolicy takes precedence when both are set.
                See https://github.com/crossplane/crossplane-runtime/issues/179."
              enum:
              - Retain
              - Delete
              type: string
            writeConnectionSecretToRef:
              description: WriteConnectionSecretToReference specifies the namespace
                and name of a Secret to which any connection details for this managed
                resource should be written. Connection details frequently include
                the endpoint, username, and password required to connect to the managed
                resource.
              properties:
                name:
                  description: Name of the secret.
                  type: string
                namespace:
                  description: Namespace of the secret.
                  type: string
              required:
              - name
              - namespace
              type: object
          required:
          - forProvider
          type: object
        status:
          description: A CacheClusterStatus defines the observed state of a CacheCluster.
          properties:
            atProvider:
              description: CacheClusterObservation contains the observation of the
                status of the given Cache Cluster.
              properties:
                atRestEncryptionEnabled:
                  description: 'A flag that enables encryption at-rest when set to
                    true. Default: false'
                  type: boolean
                authTokenEnabled:
                  description: 'A flag that enables using an AuthToken (password)
                    when issuing Redis commands. Default: false'
                  type: boolean
                cacheClusterStatus:
                  description: The current state of this cluster.
                  type: string
                cacheNodes:
                  description: A list of cache nodes that are members of the cluster.
                  items:
                    description: CacheNode represents a node in the cluster
                    properties:
                      cacheNodeId:
                        description: The cache node identifier.
                        type: string
                      cacheNodeStatus:
                        description: 'The current state of this cache node, one of
                          the following values:  available, creating, deleted, deleting,
                          incompatible-network, modifying, rebooting cluster nodes,
                          restore-failed, or snapshotting.'
                        type: string
                      customerAvailabilityZone:
                        description: The Availability Zone where this node was created
                          and now resides.
                        type: string
                      endpoint:
                        description: The hostname for connecting to this cache node.
                        properties:
                          address:
                            description: Address is the DNS hostname of the cache
                              node.
                            type: string
                          port:
                            description: Port number that the cache engine is listening
                              on.
                            type: integer
                        type: object
                      parameterGroupStatus:
                        description: The status of the parameter group applied to
                          this cache node.
                        type: string
                      sourceCacheNodeId:
                        description: The ID of the primary node to which this read
                          replica node is synchronized.
                        type: string
                    type: object
                  type: array
                cacheParameterGroup:
                  description: Status of the cache parameter group.
                  properties:
                    cacheNodeIdsToReboot:
                      description: A list of the cache node IDs which need to be rebooted
                        for parameter changes to be applied.
                      items:
                        type: string
                      type: array
                    cacheParameterGroupName:
                      description: The name of the cache parameter group.
                      type: string
                    parameterApplyStatus:
                      description: The status of parameter updates.
                      type: string
                  type: object
                clientDownloadLandingPage:
                  description: The URL of the web page where you can download the
                    latest ElastiCache client library.
                  type: string
                configurationEndpoint:
                  description: Represents a Memcached cluster endpoint which, if Automatic
                    Discovery is enabled on the cluster, can be used by an application
                    to connect to any node in the cluster. The configuration endpoint
                    will always have .cfg in it.
                  properties:
                    address:
                      description: Address is the DNS hostname of the cache node.
                      type: string
                    port:
                      description: Port number that the cache engine is listening
                        on.
                      type: integer
                  type: object
                notificationConfiguration:
                  description: Describes a notification topic and its status. Notification
                    topics are used for publishing ElastiCache events to subscribers
                    using Amazon Simple Notification Service (SNS).
                  properties:
                    topicArn:
                      description: The Amazon Resource Name (ARN) that identifies
                        the topic.
                      type: string
                    topicStatus:
                      description: The current state of the topic.
                      type: string
                  type: object
                pendingModifiedValues:
                  description: A group of settings that are applied to the cluster
                    in the future, or that are currently being applied.
                  properties:
                    authTokenStatus:
                      description: The auth token status
                      type: string
                    cacheNodeIdsToRemove:
                      description: A list of cache node IDs that are being removed
                        (or will be removed) from the cluster.
                      items:
                        type: string
                      type: array
                    cacheNodeType:
                      description: The cache node type that this cluster or replication
                        group is scaled to.
                      type: string
                    engineVersion:
                      description: The new cache engine version that the cluster runs.
                      type: string
                    numCacheNodes:
                      description: The new number of cache nodes for the cluster.
                      format: int64
                      type: integer
                  type: object
                transitEncryptionEnabled:
                  description: A flag that enables in-transit encryption when set
                    to true.
                  type: boolean
              type: object
            bindingPhase:
              description: Phase represents the binding phase of a managed resource
                or claim. Unbindable resources cannot be bound, typically because
                they are currently unavailable, or still being created. Unbound resource
                are available for binding, and Bound resources have successfully bound
                to another resource. Deprecated. See https://github.com/crossplane/crossplane/issues/1670
              enum:
              - Unbindable
              - Unbound
              - Bound
              - Released
              type: string
            conditions:
              description: Conditions of the resource.
              items:
                description: A Condition that may apply to a resource.
                properties:
                  lastTransitionTime:
                    description: LastTransitionTime is the last time this condition
                      transitioned from one status to another.
                    format: date-time
                    type: string
                  message:
                    description: A Message containing details about this condition's
                      last transition from one status to another, if any.
                    type: string
                  reason:
                    description: A Reason for this condition's last transition from
                      one status to another.
                    type: string
                  status:
                    description: Status of this condition; is it currently True, False,
                      or Unknown?
                    type: string
                  type:
                    description: Type of this condition. At most one of each condition
                      type may apply to a resource at any point in time.
                    type: string
                required:
                - lastTransitionTime
                - reason
                - status
                - type
                type: object
              type: array
          type: object
      required:
      - spec
      type: object
  version: v1alpha1
  versions:
  - name: v1alpha1
    served: true
    storage: true
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []
