
---
apiVersion: apiextensions.k8s.io/v1beta1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.2.4
  creationTimestamp: null
  name: securitygroups.network.aws.crossplane.io
spec:
  additionalPrinterColumns:
  - JSONPath: .spec.groupName
    name: GROUPNAME
    type: string
  - JSONPath: .spec.vpcId
    name: VPCID
    type: string
  - JSONPath: .spec.description
    name: DESCRIPTION
    type: string
  - JSONPath: .status.conditions[?(@.type=='Ready')].status
    name: READY
    type: string
  - JSONPath: .status.conditions[?(@.type=='Synced')].status
    name: SYNCED
    type: string
  - JSONPath: .metadata.creationTimestamp
    name: AGE
    type: date
  group: network.aws.crossplane.io
  names:
    kind: SecurityGroup
    listKind: SecurityGroupList
    plural: securitygroups
    singular: securitygroup
  scope: Cluster
  subresources:
    status: {}
  validation:
    openAPIV3Schema:
      description: A SecurityGroup is a managed resource that represents an AWS VPC
        Security Group.
      properties:
        apiVersion:
          description: 'APIVersion defines the versioned schema of this representation
            of an object. Servers should convert recognized schemas to the latest
            internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
          type: string
        kind:
          description: 'Kind is a string value representing the REST resource this
            object represents. Servers may infer this from the endpoint the client
            submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
          type: string
        metadata:
          type: object
        spec:
          description: A SecurityGroupSpec defines the desired state of a SecurityGroup.
          properties:
            claimRef:
              description: ClaimReference specifies the resource claim to which this
                managed resource will be bound. ClaimReference is set automatically
                during dynamic provisioning. Crossplane does not currently support
                setting this field manually, per https://github.com/crossplane/crossplane-runtime/issues/19
              properties:
                apiVersion:
                  description: API version of the referent.
                  type: string
                fieldPath:
                  description: 'If referring to a piece of an object instead of an
                    entire object, this string should contain a valid JSON/Go field
                    access statement, such as desiredState.manifest.containers[2].
                    For example, if the object reference is to a container within
                    a pod, this would take on a value like: "spec.containers{name}"
                    (where "name" refers to the name of the container that triggered
                    the event) or if no container name is specified "spec.containers[2]"
                    (container with index 2 in this pod). This syntax is chosen only
                    to have some well-defined way of referencing a part of an object.
                    TODO: this design is not final and this field is subject to change
                    in the future.'
                  type: string
                kind:
                  description: 'Kind of the referent. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
                  type: string
                name:
                  description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                  type: string
                namespace:
                  description: 'Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/'
                  type: string
                resourceVersion:
                  description: 'Specific resourceVersion to which this reference is
                    made, if any. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency'
                  type: string
                uid:
                  description: 'UID of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#uids'
                  type: string
              type: object
            classRef:
              description: ClassReference specifies the resource class that was used
                to dynamically provision this managed resource, if any. Crossplane
                does not currently support setting this field manually, per https://github.com/crossplane/crossplane-runtime/issues/20
              properties:
                apiVersion:
                  description: API version of the referent.
                  type: string
                fieldPath:
                  description: 'If referring to a piece of an object instead of an
                    entire object, this string should contain a valid JSON/Go field
                    access statement, such as desiredState.manifest.containers[2].
                    For example, if the object reference is to a container within
                    a pod, this would take on a value like: "spec.containers{name}"
                    (where "name" refers to the name of the container that triggered
                    the event) or if no container name is specified "spec.containers[2]"
                    (container with index 2 in this pod). This syntax is chosen only
                    to have some well-defined way of referencing a part of an object.
                    TODO: this design is not final and this field is subject to change
                    in the future.'
                  type: string
                kind:
                  description: 'Kind of the referent. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
                  type: string
                name:
                  description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                  type: string
                namespace:
                  description: 'Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/'
                  type: string
                resourceVersion:
                  description: 'Specific resourceVersion to which this reference is
                    made, if any. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency'
                  type: string
                uid:
                  description: 'UID of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#uids'
                  type: string
              type: object
            description:
              description: A description of the security group.
              type: string
            egress:
              description: '[EC2-VPC] One or more outbound rules associated with the
                security group.'
              items:
                description: IPPermission Describes a set of permissions for a security
                  group rule.
                properties:
                  cidrBlocks:
                    description: The IPv4 ranges.
                    items:
                      description: IPRange describes an IPv4 range.
                      properties:
                        cidrIp:
                          description: The IPv4 CIDR range. You can either specify
                            a CIDR range or a source security group, not both. To
                            specify a single IPv4 address, use the /32 prefix length.
                          type: string
                        description:
                          description: "A description for the security group rule
                            that references this IPv4 address range. \n Constraints:
                            Up to 255 characters in length. Allowed characters are
                            a-z, A-Z, 0-9, spaces, and ._-:/()#,@[]+=&;{}!$*"
                          type: string
                      required:
                      - cidrIp
                      type: object
                    type: array
                  fromPort:
                    description: The start of port range for the TCP and UDP protocols,
                      or an ICMP/ICMPv6 type number. A value of -1 indicates all ICMP/ICMPv6
                      types. If you specify all ICMP/ICMPv6 types, you must specify
                      all codes.
                    format: int64
                    type: integer
                  ipv6Ranges:
                    description: "The IPv6 ranges. \n [VPC only]"
                    items:
                      description: IPv6Range describes an IPv6 range.
                      properties:
                        cidrIPv6:
                          description: The IPv6 CIDR range. You can either specify
                            a CIDR range or a source security group, not both. To
                            specify a single IPv6 address, use the /128 prefix length.
                          type: string
                        description:
                          description: "A description for the security group rule
                            that references this IPv6 address range. \n Constraints:
                            Up to 255 characters in length. Allowed characters are
                            a-z, A-Z, 0-9, spaces, and ._-:/()#,@[]+=&;{}!$*"
                          type: string
                      required:
                      - cidrIPv6
                      type: object
                    type: array
                  prefixListIds:
                    description: "PrefixListIDs for an AWS service. With outbound
                      rules, this is the AWS service to access through a VPC endpoint
                      from instances associated with the security group. \n [VPC only]"
                    items:
                      description: PrefixListID describes a prefix list ID.
                      properties:
                        description:
                          description: "A description for the security group rule
                            that references this prefix list ID. \n Constraints: Up
                            to 255 characters in length. Allowed characters are a-z,
                            A-Z, 0-9, spaces, and ._-:/()#,@[]+=;{}!$*"
                          type: string
                        prefixListId:
                          description: The ID of the prefix.
                          type: string
                      required:
                      - prefixListId
                      type: object
                    type: array
                  protocol:
                    description: "The IP protocol name (tcp, udp, icmp, icmpv6) or
                      number (see Protocol Numbers (http://www.iana.org/assignments/protocol-numbers/protocol-numbers.xhtml)).
                      \n [VPC only] Use -1 to specify all protocols. When authorizing
                      security group rules, specifying -1 or a protocol number other
                      than tcp, udp, icmp, or icmpv6 allows traffic on all ports,
                      regardless of any port range you specify. For tcp, udp, and
                      icmp, you must specify a port range. For icmpv6, the port range
                      is optional; if you omit the port range, traffic for all types
                      and codes is allowed."
                    type: string
                  toPort:
                    description: The end of port range for the TCP and UDP protocols,
                      or an ICMP/ICMPv6 code. A value of -1 indicates all ICMP/ICMPv6
                      codes. If you specify all ICMP/ICMPv6 types, you must specify
                      all codes.
                    format: int64
                    type: integer
                  userIdGroupPairs:
                    description: UserIDGroupPairs are the source security group and
                      AWS account ID pairs. It contains one or more accounts and security
                      groups to allow flows from security groups of other accounts.
                    items:
                      description: UserIDGroupPair describes a security group and
                        AWS account ID pair.
                      properties:
                        description:
                          description: "A description for the security group rule
                            that references this user ID group pair. \n Constraints:
                            Up to 255 characters in length. Allowed characters are
                            a-z, A-Z, 0-9, spaces, and ._-:/()#,@[]+=;{}!$*"
                          type: string
                        groupId:
                          description: The ID of the security group.
                          type: string
                        groupName:
                          description: "The name of the security group. In a request,
                            use this parameter for a security group in EC2-Classic
                            or a default VPC only. For a security group in a nondefault
                            VPC, use the security group ID. \n For a referenced security
                            group in another VPC, this value is not returned if the
                            referenced security group is deleted."
                          type: string
                        userId:
                          description: "The ID of an AWS account. \n For a referenced
                            security group in another VPC, the account ID of the referenced
                            security group is returned in the response. If the referenced
                            security group is deleted, this value is not returned.
                            \n [EC2-Classic] Required when adding or removing rules
                            that reference a security group in another AWS account."
                          type: string
                        vpcId:
                          description: The ID of the VPC for the referenced security
                            group, if applicable.
                          type: string
                        vpcPeeringConnectionId:
                          description: The ID of the VPC peering connection, if applicable.
                          type: string
                      type: object
                    type: array
                required:
                - protocol
                type: object
              type: array
            groupName:
              description: The name of the security group.
              type: string
            ingress:
              description: One or more inbound rules associated with the security
                group.
              items:
                description: IPPermission Describes a set of permissions for a security
                  group rule.
                properties:
                  cidrBlocks:
                    description: The IPv4 ranges.
                    items:
                      description: IPRange describes an IPv4 range.
                      properties:
                        cidrIp:
                          description: The IPv4 CIDR range. You can either specify
                            a CIDR range or a source security group, not both. To
                            specify a single IPv4 address, use the /32 prefix length.
                          type: string
                        description:
                          description: "A description for the security group rule
                            that references this IPv4 address range. \n Constraints:
                            Up to 255 characters in length. Allowed characters are
                            a-z, A-Z, 0-9, spaces, and ._-:/()#,@[]+=&;{}!$*"
                          type: string
                      required:
                      - cidrIp
                      type: object
                    type: array
                  fromPort:
                    description: The start of port range for the TCP and UDP protocols,
                      or an ICMP/ICMPv6 type number. A value of -1 indicates all ICMP/ICMPv6
                      types. If you specify all ICMP/ICMPv6 types, you must specify
                      all codes.
                    format: int64
                    type: integer
                  ipv6Ranges:
                    description: "The IPv6 ranges. \n [VPC only]"
                    items:
                      description: IPv6Range describes an IPv6 range.
                      properties:
                        cidrIPv6:
                          description: The IPv6 CIDR range. You can either specify
                            a CIDR range or a source security group, not both. To
                            specify a single IPv6 address, use the /128 prefix length.
                          type: string
                        description:
                          description: "A description for the security group rule
                            that references this IPv6 address range. \n Constraints:
                            Up to 255 characters in length. Allowed characters are
                            a-z, A-Z, 0-9, spaces, and ._-:/()#,@[]+=&;{}!$*"
                          type: string
                      required:
                      - cidrIPv6
                      type: object
                    type: array
                  prefixListIds:
                    description: "PrefixListIDs for an AWS service. With outbound
                      rules, this is the AWS service to access through a VPC endpoint
                      from instances associated with the security group. \n [VPC only]"
                    items:
                      description: PrefixListID describes a prefix list ID.
                      properties:
                        description:
                          description: "A description for the security group rule
                            that references this prefix list ID. \n Constraints: Up
                            to 255 characters in length. Allowed characters are a-z,
                            A-Z, 0-9, spaces, and ._-:/()#,@[]+=;{}!$*"
                          type: string
                        prefixListId:
                          description: The ID of the prefix.
                          type: string
                      required:
                      - prefixListId
                      type: object
                    type: array
                  protocol:
                    description: "The IP protocol name (tcp, udp, icmp, icmpv6) or
                      number (see Protocol Numbers (http://www.iana.org/assignments/protocol-numbers/protocol-numbers.xhtml)).
                      \n [VPC only] Use -1 to specify all protocols. When authorizing
                      security group rules, specifying -1 or a protocol number other
                      than tcp, udp, icmp, or icmpv6 allows traffic on all ports,
                      regardless of any port range you specify. For tcp, udp, and
                      icmp, you must specify a port range. For icmpv6, the port range
                      is optional; if you omit the port range, traffic for all types
                      and codes is allowed."
                    type: string
                  toPort:
                    description: The end of port range for the TCP and UDP protocols,
                      or an ICMP/ICMPv6 code. A value of -1 indicates all ICMP/ICMPv6
                      codes. If you specify all ICMP/ICMPv6 types, you must specify
                      all codes.
                    format: int64
                    type: integer
                  userIdGroupPairs:
                    description: UserIDGroupPairs are the source security group and
                      AWS account ID pairs. It contains one or more accounts and security
                      groups to allow flows from security groups of other accounts.
                    items:
                      description: UserIDGroupPair describes a security group and
                        AWS account ID pair.
                      properties:
                        description:
                          description: "A description for the security group rule
                            that references this user ID group pair. \n Constraints:
                            Up to 255 characters in length. Allowed characters are
                            a-z, A-Z, 0-9, spaces, and ._-:/()#,@[]+=;{}!$*"
                          type: string
                        groupId:
                          description: The ID of the security group.
                          type: string
                        groupName:
                          description: "The name of the security group. In a request,
                            use this parameter for a security group in EC2-Classic
                            or a default VPC only. For a security group in a nondefault
                            VPC, use the security group ID. \n For a referenced security
                            group in another VPC, this value is not returned if the
                            referenced security group is deleted."
                          type: string
                        userId:
                          description: "The ID of an AWS account. \n For a referenced
                            security group in another VPC, the account ID of the referenced
                            security group is returned in the response. If the referenced
                            security group is deleted, this value is not returned.
                            \n [EC2-Classic] Required when adding or removing rules
                            that reference a security group in another AWS account."
                          type: string
                        vpcId:
                          description: The ID of the VPC for the referenced security
                            group, if applicable.
                          type: string
                        vpcPeeringConnectionId:
                          description: The ID of the VPC peering connection, if applicable.
                          type: string
                      type: object
                    type: array
                required:
                - protocol
                type: object
              type: array
            providerRef:
              description: ProviderReference specifies the provider that will be used
                to create, observe, update, and delete this managed resource.
              properties:
                apiVersion:
                  description: API version of the referent.
                  type: string
                fieldPath:
                  description: 'If referring to a piece of an object instead of an
                    entire object, this string should contain a valid JSON/Go field
                    access statement, such as desiredState.manifest.containers[2].
                    For example, if the object reference is to a container within
                    a pod, this would take on a value like: "spec.containers{name}"
                    (where "name" refers to the name of the container that triggered
                    the event) or if no container name is specified "spec.containers[2]"
                    (container with index 2 in this pod). This syntax is chosen only
                    to have some well-defined way of referencing a part of an object.
                    TODO: this design is not final and this field is subject to change
                    in the future.'
                  type: string
                kind:
                  description: 'Kind of the referent. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
                  type: string
                name:
                  description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                  type: string
                namespace:
                  description: 'Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/'
                  type: string
                resourceVersion:
                  description: 'Specific resourceVersion to which this reference is
                    made, if any. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency'
                  type: string
                uid:
                  description: 'UID of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#uids'
                  type: string
              type: object
            reclaimPolicy:
              description: ReclaimPolicy specifies what will happen to this managed
                resource when its resource claim is deleted, and what will happen
                to the underlying external resource when the managed resource is deleted.
                The "Delete" policy causes the managed resource to be deleted when
                its bound resource claim is deleted, and in turn causes the external
                resource to be deleted when its managed resource is deleted. The "Retain"
                policy causes the managed resource to be retained, in binding phase
                "Released", when its resource claim is deleted, and in turn causes
                the external resource to be retained when its managed resource is
                deleted. The "Retain" policy is used when no policy is specified.
              enum:
              - Retain
              - Delete
              type: string
            vpcId:
              description: VPCID is the ID of the VPC.
              type: string
            vpcIdRef:
              description: VPCIDRef references a VPC to and retrieves its vpcId
              properties:
                name:
                  description: Name of the referenced object.
                  type: string
              required:
              - name
              type: object
            vpcIdSelector:
              description: VPCIDSelector selects a reference to a VPC to and retrieves
                its vpcId
              properties:
                matchControllerRef:
                  description: MatchControllerRef ensures an object with the same
                    controller reference as the selecting object is selected.
                  type: boolean
                matchLabels:
                  additionalProperties:
                    type: string
                  description: MatchLabels ensures an object with matching labels
                    is selected.
                  type: object
              type: object
            writeConnectionSecretToRef:
              description: WriteConnectionSecretToReference specifies the namespace
                and name of a Secret to which any connection details for this managed
                resource should be written. Connection details frequently include
                the endpoint, username, and password required to connect to the managed
                resource.
              properties:
                name:
                  description: Name of the secret.
                  type: string
                namespace:
                  description: Namespace of the secret.
                  type: string
              required:
              - name
              - namespace
              type: object
          required:
          - description
          - groupName
          - providerRef
          type: object
        status:
          description: A SecurityGroupStatus represents the observed state of a SecurityGroup.
          properties:
            bindingPhase:
              description: Phase represents the binding phase of a managed resource
                or claim. Unbindable resources cannot be bound, typically because
                they are currently unavailable, or still being created. Unbound resource
                are available for binding, and Bound resources have successfully bound
                to another resource.
              enum:
              - Unbindable
              - Unbound
              - Bound
              - Released
              type: string
            conditions:
              description: Conditions of the resource.
              items:
                description: A Condition that may apply to a resource.
                properties:
                  lastTransitionTime:
                    description: LastTransitionTime is the last time this condition
                      transitioned from one status to another.
                    format: date-time
                    type: string
                  message:
                    description: A Message containing details about this condition's
                      last transition from one status to another, if any.
                    type: string
                  reason:
                    description: A Reason for this condition's last transition from
                      one status to another.
                    type: string
                  status:
                    description: Status of this condition; is it currently True, False,
                      or Unknown?
                    type: string
                  type:
                    description: Type of this condition. At most one of each condition
                      type may apply to a resource at any point in time.
                    type: string
                required:
                - lastTransitionTime
                - reason
                - status
                - type
                type: object
              type: array
            tags:
              description: Tags represents to current ec2 tags.
              items:
                description: Tag defines a tag
                properties:
                  key:
                    description: Key is the name of the tag.
                    type: string
                  value:
                    description: Value is the value of the tag.
                    type: string
                required:
                - key
                - value
                type: object
              type: array
          type: object
      required:
      - spec
      type: object
  version: v1alpha3
  versions:
  - name: v1alpha3
    served: true
    storage: true
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []
