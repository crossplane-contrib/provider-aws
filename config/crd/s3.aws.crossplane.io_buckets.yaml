
---
apiVersion: apiextensions.k8s.io/v1beta1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.2.4
  creationTimestamp: null
  name: buckets.s3.aws.crossplane.io
spec:
  additionalPrinterColumns:
  - JSONPath: .status.conditions[?(@.type=='Ready')].status
    name: READY
    type: string
  - JSONPath: .status.conditions[?(@.type=='Synced')].status
    name: SYNCED
    type: string
  - JSONPath: .metadata.creationTimestamp
    name: AGE
    type: date
  group: s3.aws.crossplane.io
  names:
    categories:
    - crossplane
    - managed
    - aws
    kind: Bucket
    listKind: BucketList
    plural: buckets
    singular: bucket
  scope: Cluster
  subresources: {}
  validation:
    openAPIV3Schema:
      description: An Bucket is a managed resource that represents an AWS S3 Bucket.
      properties:
        apiVersion:
          description: 'APIVersion defines the versioned schema of this representation
            of an object. Servers should convert recognized schemas to the latest
            internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
          type: string
        kind:
          description: 'Kind is a string value representing the REST resource this
            object represents. Servers may infer this from the endpoint the client
            submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
          type: string
        metadata:
          type: object
        spec:
          description: BucketSpec represents the desired state of the Bucket.
          properties:
            claimRef:
              description: ClaimReference specifies the resource claim to which this
                managed resource will be bound. ClaimReference is set automatically
                during dynamic provisioning. Crossplane does not currently support
                setting this field manually, per https://github.com/crossplane/crossplane-runtime/issues/19
              properties:
                apiVersion:
                  description: API version of the referent.
                  type: string
                fieldPath:
                  description: 'If referring to a piece of an object instead of an
                    entire object, this string should contain a valid JSON/Go field
                    access statement, such as desiredState.manifest.containers[2].
                    For example, if the object reference is to a container within
                    a pod, this would take on a value like: "spec.containers{name}"
                    (where "name" refers to the name of the container that triggered
                    the event) or if no container name is specified "spec.containers[2]"
                    (container with index 2 in this pod). This syntax is chosen only
                    to have some well-defined way of referencing a part of an object.
                    TODO: this design is not final and this field is subject to change
                    in the future.'
                  type: string
                kind:
                  description: 'Kind of the referent. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
                  type: string
                name:
                  description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                  type: string
                namespace:
                  description: 'Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/'
                  type: string
                resourceVersion:
                  description: 'Specific resourceVersion to which this reference is
                    made, if any. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency'
                  type: string
                uid:
                  description: 'UID of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#uids'
                  type: string
              type: object
            classRef:
              description: ClassReference specifies the resource class that was used
                to dynamically provision this managed resource, if any. Crossplane
                does not currently support setting this field manually, per https://github.com/crossplane/crossplane-runtime/issues/20
              properties:
                apiVersion:
                  description: API version of the referent.
                  type: string
                fieldPath:
                  description: 'If referring to a piece of an object instead of an
                    entire object, this string should contain a valid JSON/Go field
                    access statement, such as desiredState.manifest.containers[2].
                    For example, if the object reference is to a container within
                    a pod, this would take on a value like: "spec.containers{name}"
                    (where "name" refers to the name of the container that triggered
                    the event) or if no container name is specified "spec.containers[2]"
                    (container with index 2 in this pod). This syntax is chosen only
                    to have some well-defined way of referencing a part of an object.
                    TODO: this design is not final and this field is subject to change
                    in the future.'
                  type: string
                kind:
                  description: 'Kind of the referent. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
                  type: string
                name:
                  description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                  type: string
                namespace:
                  description: 'Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/'
                  type: string
                resourceVersion:
                  description: 'Specific resourceVersion to which this reference is
                    made, if any. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency'
                  type: string
                uid:
                  description: 'UID of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#uids'
                  type: string
              type: object
            forProvider:
              description: BucketParameters are parameters for configuring the calls
                made to AWS Bucket API.
              properties:
                accelerateConfiguration:
                  description: AccelerateConfiguration configures the transfer acceleration
                    state for an Amazon S3 bucket. For more information, see Amazon
                    S3 Transfer Acceleration (https://docs.aws.amazon.com/AmazonS3/latest/dev/transfer-acceleration.html)
                    in the Amazon Simple Storage Service Developer Guide.
                  properties:
                    status:
                      description: Status specifies the transfer acceleration status
                        of the bucket.
                      enum:
                      - Enabled
                      - Suspended
                      type: string
                  required:
                  - status
                  type: object
                acl:
                  description: The canned ACL to apply to the bucket.
                  enum:
                  - private
                  - public-read
                  - public-read-write
                  - authenticated-read
                  type: string
                corsConfiguration:
                  description: Describes the cross-origin access configuration for
                    objects in an Amazon S3 bucket. For more information, see Enabling
                    Cross-Origin Resource Sharing (https://docs.aws.amazon.com/AmazonS3/latest/dev/cors.html)
                    in the Amazon Simple Storage Service Developer Guide.
                  properties:
                    corsRules:
                      description: A set of origins and methods (cross-origin access
                        that you want to allow). You can add up to 100 rules to the
                        configuration.
                      items:
                        description: CORSRule specifies a cross-origin access rule
                          for an Amazon S3 bucket.
                        properties:
                          allowedHeaders:
                            description: Headers that are specified in the Access-Control-Request-Headers
                              header. These headers are allowed in a preflight OPTIONS
                              request. In response to any preflight OPTIONS request,
                              Amazon S3 returns any requested headers that are allowed.
                            items:
                              type: string
                            type: array
                          allowedMethods:
                            description: An HTTP method that you allow the origin
                              to execute. Valid values are GET, PUT, HEAD, POST, and
                              DELETE.
                            items:
                              type: string
                            type: array
                          allowedOrigins:
                            description: One or more origins you want customers to
                              be able to access the bucket from.
                            items:
                              type: string
                            type: array
                          exposeHeaders:
                            description: One or more headers in the response that
                              you want customers to be able to access from their applications
                              (for example, from a JavaScript XMLHttpRequest object).
                            items:
                              type: string
                            type: array
                          maxAgeSeconds:
                            description: The time in seconds that your browser is
                              to cache the preflight response for the specified resource.
                            format: int64
                            type: integer
                        required:
                        - allowedMethods
                        - allowedOrigins
                        type: object
                      type: array
                  required:
                  - corsRules
                  type: object
                grantFullControl:
                  description: Allows grantee the read, write, read ACP, and write
                    ACP permissions on the bucket.
                  type: string
                grantRead:
                  description: Allows grantee to list the objects in the bucket.
                  type: string
                grantReadAcp:
                  description: Allows grantee to read the bucket ACL.
                  type: string
                grantWrite:
                  description: Allows grantee to create, overwrite, and delete any
                    object in the bucket.
                  type: string
                grantWriteAcp:
                  description: Allows grantee to write the ACL for the applicable
                    bucket.
                  type: string
                locationConstraint:
                  description: Specifies the Region where the bucket will be created.
                    If you don't specify a Region, the bucket is created in the US
                    East (N. Virginia) Region (us-east-1).
                  type: string
                loggingConfiguration:
                  description: Specifies logging parameters for an Amazon S3 bucket.
                  properties:
                    targetGrants:
                      description: Container for granting information.
                      items:
                        description: TargetGrant is the container for granting information.
                        properties:
                          bucketLogsPermission:
                            description: Logging permissions assigned to the Grantee
                              for the bucket. Valid values are "FULL_CONTROL", "READ",
                              "WRITE"
                            type: string
                          targetGrantee:
                            description: Container for the person being granted permissions.
                            properties:
                              ID:
                                description: The canonical user ID of the grantee.
                                type: string
                              URI:
                                description: URI of the grantee group.
                                type: string
                              displayName:
                                description: Screen name of the grantee.
                                type: string
                              emailAddress:
                                description: Email address of the grantee. For a list
                                  of all the Amazon S3 supported Regions and endpoints,
                                  see Regions and Endpoints (https://docs.aws.amazon.com/general/latest/gr/rande.html#s3_region)
                                  in the AWS General Reference.
                                type: string
                              type:
                                description: Type of grantee Type is a required field
                                type: string
                            required:
                            - type
                            type: object
                        required:
                        - bucketLogsPermission
                        type: object
                      type: array
                    targetPrefix:
                      description: A prefix for all log object keys.
                      type: string
                  required:
                  - targetGrants
                  - targetPrefix
                  type: object
                objectLockEnabledForBucket:
                  description: Specifies whether you want S3 Object Lock to be enabled
                    for the new bucket.
                  type: boolean
                paymentConfiguration:
                  description: Specifies payer parameters for an Amazon S3 bucket.
                    For more information, see Request Pays buckets (https://docs.aws.amazon.com/AmazonS3/latest/dev/RequesterPaysBuckets.html)
                    in the Amazon Simple Storage Service Developer Guide.
                  properties:
                    payer:
                      description: Payer is a required field, detailing who pays Valid
                        values are "Requester" and "BucketOwner"
                      type: string
                  required:
                  - payer
                  type: object
                serverSideEncryptionConfiguration:
                  description: Specifies default encryption for a bucket using server-side
                    encryption with Amazon S3-managed keys (SSE-S3) or customer master
                    keys stored in AWS KMS (SSE-KMS). For information about the Amazon
                    S3 default encryption feature, see Amazon S3 Default Bucket Encryption
                    (https://docs.aws.amazon.com/AmazonS3/latest/dev/bucket-encryption.html)
                    in the Amazon Simple Storage Service Developer Guide.
                  properties:
                    rules:
                      description: Container for information about a particular server-side
                        encryption configuration rule.
                      items:
                        description: ServerSideEncryptionRule Specifies the default
                          server-side encryption configuration.
                        properties:
                          applyServerSideEncryptionByDefault:
                            description: Specifies the default server-side encryption
                              to apply to new objects in the bucket. If a PUT Object
                              request doesn't specify any server-side encryption,
                              this default encryption will be applied.
                            properties:
                              kmsMasterKeyId:
                                description: "AWS Key Management Service (KMS) customer
                                  master key ID to use for the default encryption.
                                  This parameter is allowed if and only if SSEAlgorithm
                                  is set to aws:kms. \n You can specify the key ID
                                  or the Amazon Resource Name (ARN) of the CMK. However,
                                  if you are using encryption with cross-account operations,
                                  you must use a fully qualified CMK ARN. For more
                                  information, see Using encryption for cross-account
                                  operations (https://docs.aws.amazon.com/AmazonS3/latest/dev/bucket-encryption.html#bucket-encryption-update-bucket-policy).
                                  \n For example: \n    * Key ID: 1234abcd-12ab-34cd-56ef-1234567890ab
                                  \n    * Key ARN: arn:aws:kms:us-east-2:111122223333:key/1234abcd-12ab-34cd-56ef-1234567890ab
                                  \n Amazon S3 only supports symmetric CMKs and not
                                  asymmetric CMKs. For more information, see Using
                                  Symmetric and Asymmetric Keys (https://docs.aws.amazon.com/kms/latest/developerguide/symmetric-asymmetric.html)
                                  in the AWS Key Management Service Developer Guide."
                                type: string
                              sseAlgorithm:
                                description: Server-side encryption algorithm to use
                                  for the default encryption. Options are AES256 or
                                  aws:kms
                                type: string
                            required:
                            - sseAlgorithm
                            type: object
                        required:
                        - applyServerSideEncryptionByDefault
                        type: object
                      type: array
                  required:
                  - rules
                  type: object
                tagging:
                  description: Sets the tags for a bucket. Use tags to organize your
                    AWS bill to reflect your own cost structure. For more information,
                    see Billing and usage reporting for S3 buckets. (https://docs.aws.amazon.com/AmazonS3/latest/dev/BucketBilling.html)
                    in the Amazon Simple Storage Service Developer Guide.
                  properties:
                    tagSet:
                      description: A collection for a set of tags TagSet is a required
                        field
                      items:
                        description: Tag is a container for a key value name pair.
                        properties:
                          key:
                            description: Name of the tag. Key is a required field
                            type: string
                          value:
                            description: Value of the tag. Value is a required field
                            type: string
                        type: object
                      type: array
                  required:
                  - tagSet
                  type: object
                versioningConfiguration:
                  description: VersioningConfiguration describes the versioning state
                    of an Amazon S3 bucket.
                  properties:
                    mfaDelete:
                      description: MFADelete specifies whether MFA delete is enabled
                        in the bucket versioning configuration. This element is only
                        returned if the bucket has been configured with MFA delete.
                        If the bucket has never been so configured, this element is
                        not returned.
                      enum:
                      - Enabled
                      - Disabled
                      type: string
                    status:
                      description: Status is the desired versioning state of the bucket.
                      enum:
                      - Enabled
                      - Suspended
                      type: string
                  required:
                  - mfaDelete
                  - status
                  type: object
                websiteConfiguration:
                  description: Specifies website configuration parameters for an Amazon
                    S3 bucket.
                  properties:
                    errorDocument:
                      description: The name of the error document for the website.
                      properties:
                        key:
                          description: The object key name to use when a 4XX class
                            error occurs.
                          type: string
                      required:
                      - key
                      type: object
                    indexDocument:
                      description: The name of the index document for the website.
                      properties:
                        suffix:
                          description: A suffix that is appended to a request that
                            is for a directory on the website endpoint (for example,if
                            the suffix is index.html and you make a request to samplebucket/images/
                            the data that is returned will be for the object with
                            the key name images/index.html) The suffix must not be
                            empty and must not include a slash character.
                          type: string
                      required:
                      - suffix
                      type: object
                    redirectAllRequestsTo:
                      description: The redirect behavior for every request to this
                        bucket's website endpoint. If you specify this property, you
                        can't specify any other property.
                      properties:
                        hostName:
                          description: Name of the host where requests are redirected.
                          type: string
                        protocol:
                          description: Protocol to use when redirecting requests.
                            The default is the protocol that is used in the original
                            request.
                          enum:
                          - http
                          - https
                          type: string
                      required:
                      - hostName
                      - protocol
                      type: object
                    routingRules:
                      description: Rules that define when a redirect is applied and
                        the redirect behavior.
                      items:
                        description: RoutingRule specifies the redirect behavior and
                          when a redirect is applied.
                        properties:
                          condition:
                            description: A container for describing a condition that
                              must be met for the specified redirect to apply. For
                              example, 1. If request is for pages in the /docs folder,
                              redirect to the /documents folder. 2. If request results
                              in HTTP error 4xx, redirect request to another host
                              where you might process the error.
                            properties:
                              httpErrorCodeReturnedEquals:
                                description: The HTTP error code when the redirect
                                  is applied. In the event of an error, if the error
                                  code equals this value, then the specified redirect
                                  is applied. Required when parent element Condition
                                  is specified and sibling KeyPrefixEquals is not
                                  specified. If both are specified, then both must
                                  be true for the redirect to be applied.
                                type: string
                              keyPrefixEquals:
                                description: The object key name prefix when the redirect
                                  is applied. For example, to redirect requests for
                                  ExamplePage.html, the key prefix will be ExamplePage.html.
                                  To redirect request for all pages with the prefix
                                  docs/, the key prefix will be /docs, which identifies
                                  all objects in the docs/ folder. Required when the
                                  parent element Condition is specified and sibling
                                  HttpErrorCodeReturnedEquals is not specified. If
                                  both conditions are specified, both must be true
                                  for the redirect to be applied.
                                type: string
                            type: object
                          redirect:
                            description: Container for redirect information. You can
                              redirect requests to another host, to another page,
                              or with another protocol. In the event of an error,
                              you can specify a different error code to return.
                            properties:
                              httpRedirectCode:
                                description: The HTTP redirect code to use on the
                                  response. Not required if one of the siblings is
                                  present.
                                type: string
                              keyPrefixEquals:
                                description: The host name to use in the redirect
                                  request.
                                type: string
                              protocol:
                                description: Protocol to use when redirecting requests.
                                  The default is the protocol that is used in the
                                  original request.
                                type: string
                              replaceKeyPrefixWith:
                                description: The object key prefix to use in the redirect
                                  request. For example, to redirect requests for all
                                  pages with prefix docs/ (objects in the docs/ folder)
                                  to documents/, you can set a condition block with
                                  KeyPrefixEquals set to docs/ and in the Redirect
                                  set ReplaceKeyPrefixWith to /documents. Not required
                                  if one of the siblings is present. Can be present
                                  only if ReplaceKeyWith is not provided.
                                type: string
                              replaceKeyWith:
                                description: The specific object key to use in the
                                  redirect request. For example, redirect request
                                  to error.html. Not required if one of the siblings
                                  is present. Can be present only if ReplaceKeyPrefixWith
                                  is not provided.
                                type: string
                            required:
                            - protocol
                            type: object
                        required:
                        - redirect
                        type: object
                      type: array
                  type: object
              type: object
            providerRef:
              description: ProviderReference specifies the provider that will be used
                to create, observe, update, and delete this managed resource.
              properties:
                name:
                  description: Name of the referenced object.
                  type: string
              required:
              - name
              type: object
            reclaimPolicy:
              description: ReclaimPolicy specifies what will happen to this managed
                resource when its resource claim is deleted, and what will happen
                to the underlying external resource when the managed resource is deleted.
                The "Delete" policy causes the managed resource to be deleted when
                its bound resource claim is deleted, and in turn causes the external
                resource to be deleted when its managed resource is deleted. The "Retain"
                policy causes the managed resource to be retained, in binding phase
                "Released", when its resource claim is deleted, and in turn causes
                the external resource to be retained when its managed resource is
                deleted. The "Retain" policy is used when no policy is specified.
              enum:
              - Retain
              - Delete
              type: string
            writeConnectionSecretToRef:
              description: WriteConnectionSecretToReference specifies the namespace
                and name of a Secret to which any connection details for this managed
                resource should be written. Connection details frequently include
                the endpoint, username, and password required to connect to the managed
                resource.
              properties:
                name:
                  description: Name of the secret.
                  type: string
                namespace:
                  description: Namespace of the secret.
                  type: string
              required:
              - name
              - namespace
              type: object
          required:
          - forProvider
          - providerRef
          type: object
        status:
          description: BucketStatus represents the observed state of the Bucket.
          properties:
            atProvider:
              description: BucketObservation is observation of Bucket properties.
              type: object
            bindingPhase:
              description: Phase represents the binding phase of a managed resource
                or claim. Unbindable resources cannot be bound, typically because
                they are currently unavailable, or still being created. Unbound resource
                are available for binding, and Bound resources have successfully bound
                to another resource.
              enum:
              - Unbindable
              - Unbound
              - Bound
              - Released
              type: string
            conditions:
              description: Conditions of the resource.
              items:
                description: A Condition that may apply to a resource.
                properties:
                  lastTransitionTime:
                    description: LastTransitionTime is the last time this condition
                      transitioned from one status to another.
                    format: date-time
                    type: string
                  message:
                    description: A Message containing details about this condition's
                      last transition from one status to another, if any.
                    type: string
                  reason:
                    description: A Reason for this condition's last transition from
                      one status to another.
                    type: string
                  status:
                    description: Status of this condition; is it currently True, False,
                      or Unknown?
                    type: string
                  type:
                    description: Type of this condition. At most one of each condition
                      type may apply to a resource at any point in time.
                    type: string
                required:
                - lastTransitionTime
                - reason
                - status
                - type
                type: object
              type: array
          required:
          - atProvider
          type: object
      required:
      - spec
      type: object
  version: v1beta1
  versions:
  - name: v1beta1
    served: true
    storage: true
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []
