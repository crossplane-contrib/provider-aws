
---
apiVersion: apiextensions.k8s.io/v1beta1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.2.4
  creationTimestamp: null
  name: s3bucketclasses.storage.aws.crossplane.io
spec:
  additionalPrinterColumns:
  - JSONPath: .specTemplate.providerRef.name
    name: PROVIDER-REF
    type: string
  - JSONPath: .specTemplate.reclaimPolicy
    name: RECLAIM-POLICY
    type: string
  - JSONPath: .metadata.creationTimestamp
    name: AGE
    type: date
  group: storage.aws.crossplane.io
  names:
    categories:
    - crossplane
    - class
    - aws
    kind: S3BucketClass
    listKind: S3BucketClassList
    plural: s3bucketclasses
    singular: s3bucketclass
  scope: Cluster
  subresources: {}
  validation:
    openAPIV3Schema:
      description: An S3BucketClass is a resource class. It defines the desired spec
        of resource claims that use it to dynamically provision a managed resource.
      properties:
        apiVersion:
          description: 'APIVersion defines the versioned schema of this representation
            of an object. Servers should convert recognized schemas to the latest
            internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
          type: string
        kind:
          description: 'Kind is a string value representing the REST resource this
            object represents. Servers may infer this from the endpoint the client
            submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
          type: string
        metadata:
          type: object
        specTemplate:
          description: SpecTemplate is a template for the spec of a dynamically provisioned
            S3Bucket.
          properties:
            cannedACL:
              description: CannedACL applies a standard AWS built-in ACL for common
                bucket use cases.
              enum:
              - private
              - public-read
              - public-read-write
              - authenticated-read
              - log-delivery-write
              - aws-exec-read
              type: string
            iamUsername:
              description: IAMUsername is the name of an IAM user that is automatically
                created and granted access to this bucket by Crossplane at bucket
                creation time.
              type: string
            localPermission:
              description: LocalPermission is the permissions granted on the bucket
                for the provider specific bucket service account that is available
                in a secret after provisioning.
              enum:
              - Read
              - Write
              - ReadWrite
              type: string
            providerRef:
              description: ProviderReference specifies the provider that will be used
                to create, observe, update, and delete managed resources that are
                dynamically provisioned using this resource class.
              properties:
                name:
                  description: Name of the referenced object.
                  type: string
              required:
              - name
              type: object
            reclaimPolicy:
              description: ReclaimPolicy specifies what will happen to managed resources
                dynamically provisioned using this class when their resource claims
                are deleted, and what will happen to their underlying external resource
                when they are deleted. The "Delete" policy causes the managed resource
                to be deleted when its bound resource claim is deleted, and in turn
                causes the external resource to be deleted when its managed resource
                is deleted. The "Retain" policy causes the managed resource to be
                retained, in binding phase "Released", when its resource claim is
                deleted, and in turn causes the external resource to be retained when
                its managed resource is deleted. The "Delete" policy is used when
                no policy is specified.
              enum:
              - Retain
              - Delete
              type: string
            region:
              description: Region of the bucket.
              type: string
            tags:
              description: A list of key-value pairs to label the S3 Bucket
              items:
                description: Tag is a metadata assigned to an Amazon S3 Bucket consisting
                  of a key-value pair. Please also see https://docs.aws.amazon.com/AmazonS3/latest/API/API_Tag.html
                properties:
                  key:
                    description: Name of the object key
                    type: string
                  value:
                    description: Value of the tag
                    type: string
                required:
                - key
                - value
                type: object
              type: array
            versioning:
              description: Versioning enables versioning of objects stored in this
                bucket.
              type: boolean
            writeConnectionSecretsToNamespace:
              description: WriteConnectionSecretsToNamespace specifies the namespace
                in which the connection secrets of managed resources dynamically provisioned
                using this claim will be created.
              type: string
          required:
          - localPermission
          - providerRef
          - region
          - writeConnectionSecretsToNamespace
          type: object
      required:
      - specTemplate
      type: object
  version: v1alpha3
  versions:
  - name: v1alpha3
    served: true
    storage: true
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []
