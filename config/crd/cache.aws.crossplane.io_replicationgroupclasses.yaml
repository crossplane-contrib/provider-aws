
---
apiVersion: apiextensions.k8s.io/v1beta1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.2.4
  creationTimestamp: null
  name: replicationgroupclasses.cache.aws.crossplane.io
spec:
  additionalPrinterColumns:
  - JSONPath: .specTemplate.providerRef.name
    name: PROVIDER-REF
    type: string
  - JSONPath: .specTemplate.reclaimPolicy
    name: RECLAIM-POLICY
    type: string
  - JSONPath: .metadata.creationTimestamp
    name: AGE
    type: date
  group: cache.aws.crossplane.io
  names:
    categories:
    - crossplane
    - class
    - aws
    kind: ReplicationGroupClass
    listKind: ReplicationGroupClassList
    plural: replicationgroupclasses
    singular: replicationgroupclass
  scope: Cluster
  subresources: {}
  validation:
    openAPIV3Schema:
      description: A ReplicationGroupClass is a resource class. It defines the desired
        spec of resource claims that use it to dynamically provision a managed resource.
      properties:
        apiVersion:
          description: 'APIVersion defines the versioned schema of this representation
            of an object. Servers should convert recognized schemas to the latest
            internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
          type: string
        kind:
          description: 'Kind is a string value representing the REST resource this
            object represents. Servers may infer this from the endpoint the client
            submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
          type: string
        metadata:
          type: object
        specTemplate:
          description: SpecTemplate is a template for the spec of a dynamically provisioned
            ReplicationGroup.
          properties:
            forProvider:
              description: 'ReplicationGroupParameters define the desired state of
                an AWS ElastiCache Replication Group. Most fields map directly to
                an AWS ReplicationGroup: https://docs.aws.amazon.com/AmazonElastiCache/latest/APIReference/API_CreateReplicationGroup.html#API_CreateReplicationGroup_RequestParameters'
              properties:
                applyModificationsImmediately:
                  description: "If true, this parameter causes the modifications in
                    this request and any pending modifications to be applied, asynchronously
                    and as soon as possible, regardless of the PreferredMaintenanceWindow
                    setting for the replication group. \n If false, changes to the
                    nodes in the replication group are applied on the next maintenance
                    reboot, or the next failure reboot, whichever occurs first."
                  type: boolean
                atRestEncryptionEnabled:
                  description: "AtRestEncryptionEnabled enables encryption at rest
                    when set to true. \n You cannot modify the value of AtRestEncryptionEnabled
                    after the replication group is created. To enable encryption at
                    rest on a replication group you must set AtRestEncryptionEnabled
                    to true when you create the replication group. \n Only available
                    when creating a replication group in an Amazon VPC using redis
                    version 3.2.6 or 4.x."
                  type: boolean
                authEnabled:
                  description: "AuthEnabled enables mandatory authentication when
                    connecting to the managed replication group. AuthEnabled requires
                    TransitEncryptionEnabled to be true. \n While ReplicationGroupSpec
                    mirrors the fields of the upstream replication group object as
                    closely as possible, we expose a boolean here rather than requiring
                    the operator pass in a string authentication token. Crossplane
                    will generate a token automatically and expose it via a Secret."
                  type: boolean
                automaticFailoverEnabled:
                  description: "AutomaticFailoverEnabled specifies whether a read-only
                    replica is automatically promoted to read/write primary if the
                    existing primary fails. If true, Multi-AZ is enabled for this
                    replication group. If false, Multi-AZ is disabled for this replication
                    group. \n AutomaticFailoverEnabled must be enabled for Redis (cluster
                    mode enabled) replication groups. \n Amazon ElastiCache for Redis
                    does not support Multi-AZ with automatic failover on: * Redis
                    versions earlier than 2.8.6. * Redis (cluster mode disabled):
                    T1 and T2 cache node types. * Redis (cluster mode enabled): T1
                    node types."
                  type: boolean
                cacheNodeType:
                  description: 'CacheNodeType specifies the compute and memory capacity
                    of the nodes in the node group (shard). For a complete listing
                    of node types and specifications, see: * Amazon ElastiCache Product
                    Features and Details (http://aws.amazon.com/elasticache/details)
                    * Cache Node Type-Specific Parameters for Memcached (http://docs.aws.amazon.com/AmazonElastiCache/latest/mem-ug/ParameterGroups.Memcached.html#ParameterGroups.Memcached.NodeSpecific)
                    * Cache Node Type-Specific Parameters for Redis (http://docs.aws.amazon.com/AmazonElastiCache/latest/red-ug/ParameterGroups.Redis.html#ParameterGroups.Redis.NodeSpecific)'
                  type: string
                cacheParameterGroupName:
                  description: "CacheParameterGroupName specifies the name of the
                    parameter group to associate with this replication group. If this
                    argument is omitted, the default cache parameter group for the
                    specified engine is used. \n If you are running Redis version
                    3.2.4 or later, only one node group (shard), and want to use a
                    default parameter group, we recommend that you specify the parameter
                    group by name. * To create a Redis (cluster mode disabled) replication
                    group, use CacheParameterGroupName=default.redis3.2. * To create
                    a Redis (cluster mode enabled) replication group, use CacheParameterGroupName=default.redis3.2.cluster.on."
                  type: string
                cacheSecurityGroupNameRefs:
                  description: CacheSecurityGroupNameRefs are references to SecurityGroups
                    used to set the CacheSecurityGroupNames.
                  items:
                    description: A Reference to a named object.
                    properties:
                      name:
                        description: Name of the referenced object.
                        type: string
                    required:
                    - name
                    type: object
                  type: array
                cacheSecurityGroupNameSelector:
                  description: CacheSecurityGroupNameSelector selects references to
                    SecurityGroups.
                  properties:
                    matchControllerRef:
                      description: MatchControllerRef ensures an object with the same
                        controller reference as the selecting object is selected.
                      type: boolean
                    matchLabels:
                      additionalProperties:
                        type: string
                      description: MatchLabels ensures an object with matching labels
                        is selected.
                      type: object
                  type: object
                cacheSecurityGroupNames:
                  description: CacheSecurityGroupNames specifies a list of cache security
                    group names to associate with this replication group. Only for
                    EC2-Classic mode.
                  items:
                    type: string
                  type: array
                cacheSubnetGroupName:
                  description: CacheSubnetGroupName specifies the name of the cache
                    subnet group to be used for the replication group. If you're going
                    to launch your cluster in an Amazon VPC, you need to create a
                    subnet group before you start creating a cluster. For more information,
                    see Subnets and Subnet Groups (http://docs.aws.amazon.com/AmazonElastiCache/latest/red-ug/SubnetGroups.html).
                  type: string
                engine:
                  description: Engine is the name of the cache engine (memcached or
                    redis) to be used for the clusters in this replication group.
                  type: string
                engineVersion:
                  description: "EngineVersion specifies the version number of the
                    cache engine to be used for the clusters in this replication group.
                    To view the supported cache engine versions, use the DescribeCacheEngineVersions
                    operation. \n Important: You can upgrade to a newer engine version
                    (see Selecting a Cache Engine and Version (http://docs.aws.amazon.com/AmazonElastiCache/latest/red-ug/SelectEngine.html#VersionManagement))
                    in the ElastiCache User Guide, but you cannot downgrade to an
                    earlier engine version. If you want to use an earlier engine version,
                    you must delete the existing cluster or replication group and
                    create it anew with the earlier engine version."
                  type: string
                nodeGroupConfiguration:
                  description: "NodeGroupConfigurationSpec specifies a list of node
                    group (shard) configuration options. \n If you're creating a Redis
                    (cluster mode disabled) or a Redis (cluster mode enabled) replication
                    group, you can use this parameter to individually configure each
                    node group (shard), or you can omit this parameter. However, when
                    seeding a Redis (cluster mode enabled) cluster from a S3 rdb file,
                    you must configure each node group (shard) using this parameter
                    because you must specify the slots for each node group."
                  items:
                    description: A NodeGroupConfigurationSpec specifies the desired
                      state of a node group.
                    properties:
                      primaryAvailabilityZone:
                        description: PrimaryAvailabilityZone specifies the Availability
                          Zone where the primary node of this node group (shard) is
                          launched.
                        type: string
                      replicaAvailabilityZones:
                        description: ReplicaAvailabilityZones specifies a list of
                          Availability Zones to be used for the read replicas. The
                          number of Availability Zones in this list must match the
                          value of ReplicaCount or ReplicasPerNodeGroup if not specified.
                        items:
                          type: string
                        type: array
                      replicaCount:
                        description: ReplicaCount specifies the number of read replica
                          nodes in this node group (shard).
                        type: integer
                      slots:
                        description: "Slots specifies the keyspace for a particular
                          node group. Keyspaces range from 0 to 16,383. The string
                          is in the format startkey-endkey. \n Example: \"0-3999\""
                        type: string
                    type: object
                  type: array
                notificationTopicArn:
                  description: NotificationTopicARN specifies the Amazon Resource
                    Name (ARN) of the Amazon Simple Notification Service (SNS) topic
                    to which notifications are sent. The Amazon SNS topic owner must
                    be the same as the cluster owner.
                  type: string
                notificationTopicStatus:
                  description: "NotificationTopicStatus is the status of the Amazon
                    SNS notification topic for the replication group. Notifications
                    are sent only if the status is active. \n Valid values: active
                    | inactive"
                  type: string
                numCacheClusters:
                  description: "NumCacheClusters specifies the number of clusters
                    this replication group initially has. This parameter is not used
                    if there is more than one node group (shard). You should use ReplicasPerNodeGroup
                    instead. \n If AutomaticFailoverEnabled is true, the value of
                    this parameter must be at least 2. If AutomaticFailoverEnabled
                    is false you can omit this parameter (it will default to 1), or
                    you can explicitly set it to a value between 2 and 6. \n The maximum
                    permitted value for NumCacheClusters is 6 (1 primary plus 5 replicas)."
                  type: integer
                numNodeGroups:
                  description: "NumNodeGroups specifies the number of node groups
                    (shards) for this Redis (cluster mode enabled) replication group.
                    For Redis (cluster mode disabled) either omit this parameter or
                    set it to 1. \n Default: 1"
                  type: integer
                port:
                  description: Port number on which each member of the replication
                    group accepts connections.
                  type: integer
                preferredCacheClusterAzs:
                  description: "PreferredCacheClusterAZs specifies a list of EC2 Availability
                    Zones in which the replication group's clusters are created. The
                    order of the Availability Zones in the list is the order in which
                    clusters are allocated. The primary cluster is created in the
                    first AZ in the list. \n This parameter is not used if there is
                    more than one node group (shard). You should use NodeGroupConfigurationSpec
                    instead. \n If you are creating your replication group in an Amazon
                    VPC (recommended), you can only locate clusters in Availability
                    Zones associated with the subnets in the selected subnet group.
                    \n The number of Availability Zones listed must equal the value
                    of NumCacheClusters. \n Default: system chosen Availability Zones."
                  items:
                    type: string
                  type: array
                preferredMaintenanceWindow:
                  description: "PreferredMaintenanceWindow specifies the weekly time
                    range during which maintenance on the cluster is performed. It
                    is specified as a range in the format ddd:hh24:mi-ddd:hh24:mi
                    (24H Clock UTC). The minimum maintenance window is a 60 minute
                    period. \n Example: sun:23:00-mon:01:30"
                  type: string
                primaryClusterId:
                  description: "PrimaryClusterId is the identifier of the cluster
                    that serves as the primary for this replication group. This cluster
                    must already exist and have a status of available. \n This parameter
                    is not required if NumCacheClusters, NumNodeGroups or ReplicasPerNodeGroup
                    is specified."
                  type: string
                replicasPerNodeGroup:
                  description: ReplicasPerNodeGroup specifies the number of replica
                    nodes in each node group (shard). Valid values are 0 to 5.
                  type: integer
                replicationGroupDescription:
                  description: ReplicationGroupDescription is the description for
                    the replication group.
                  type: string
                securityGroupIdRefs:
                  description: SecurityGroupIDRefs are references to SecurityGroups
                    used to set the SecurityGroupIDs.
                  items:
                    description: A Reference to a named object.
                    properties:
                      name:
                        description: Name of the referenced object.
                        type: string
                    required:
                    - name
                    type: object
                  type: array
                securityGroupIdSelector:
                  description: SecurityGroupIDSelector selects references to SecurityGroups
                    used to set the SecurityGroupIDs.
                  properties:
                    matchControllerRef:
                      description: MatchControllerRef ensures an object with the same
                        controller reference as the selecting object is selected.
                      type: boolean
                    matchLabels:
                      additionalProperties:
                        type: string
                      description: MatchLabels ensures an object with matching labels
                        is selected.
                      type: object
                  type: object
                securityGroupIds:
                  description: SecurityGroupIDs specifies one or more Amazon VPC security
                    groups associated with this replication group. Use this parameter
                    only when you are creating a replication group in an Amazon VPC.
                  items:
                    type: string
                  type: array
                snapshotArns:
                  description: 'SnapshotARNs specifies a list of Amazon Resource Names
                    (ARN) that uniquely identify the Redis RDB snapshot files stored
                    in Amazon S3. The snapshot files are used to populate the new
                    replication group. The Amazon S3 object name in the ARN cannot
                    contain any commas. The new replication group will have the number
                    of node groups (console: shards) specified by the parameter NumNodeGroups
                    or the number of node groups configured by NodeGroupConfigurationSpec
                    regardless of the number of ARNs specified here.'
                  items:
                    type: string
                  type: array
                snapshotName:
                  description: SnapshotName specifies the name of a snapshot from
                    which to restore data into the new replication group. The snapshot
                    status changes to restoring while the new replication group is
                    being created.
                  type: string
                snapshotRetentionLimit:
                  description: 'SnapshotRetentionLimit specifies the number of days
                    for which ElastiCache retains automatic snapshots before deleting
                    them. For example, if you set SnapshotRetentionLimit to 5, a snapshot
                    that was taken today is retained for 5 days before being deleted.
                    Default: 0 (i.e., automatic backups are disabled for this cluster).'
                  type: integer
                snapshotWindow:
                  description: "SnapshotWindow specifies the daily time range (in
                    UTC) during which ElastiCache begins taking a daily snapshot of
                    your node group (shard). \n Example: 05:00-09:00 \n If you do
                    not specify this parameter, ElastiCache automatically chooses
                    an appropriate time range."
                  type: string
                snapshottingClusterID:
                  description: SnapshottingClusterID is used as the daily snapshot
                    source for the replication group. This parameter cannot be set
                    for Redis (cluster mode enabled) replication groups.
                  type: string
                tags:
                  description: A list of cost allocation tags to be added to this
                    resource. A tag is a key-value pair.
                  items:
                    description: A Tag is used to tag the ElastiCache resources in
                      AWS.
                    properties:
                      key:
                        description: Key for the tag.
                        type: string
                      value:
                        description: Value of the tag.
                        type: string
                    required:
                    - key
                    - value
                    type: object
                  type: array
                transitEncryptionEnabled:
                  description: "TransitEncryptionEnabled enables in-transit encryption
                    when set to true. \n You cannot modify the value of TransitEncryptionEnabled
                    after the cluster is created. To enable in-transit encryption
                    on a cluster you must TransitEncryptionEnabled to true when you
                    create a cluster. \n This parameter is valid only if the Engine
                    parameter is redis, the EngineVersion parameter is 3.2.6 or 4.x,
                    and the cluster is being created in an Amazon VPC. \n If you enable
                    in-transit encryption, you must also specify a value for CacheSubnetGroup.
                    \n Required: Only available when creating a replication group
                    in an Amazon VPC using redis version 3.2.6 or 4.x. \n Default:
                    false \n For HIPAA compliance, you must specify TransitEncryptionEnabled
                    as true, an AuthToken, and a CacheSubnetGroup."
                  type: boolean
              required:
              - applyModificationsImmediately
              - cacheNodeType
              - engine
              - replicationGroupDescription
              type: object
            providerRef:
              description: ProviderReference specifies the provider that will be used
                to create, observe, update, and delete managed resources that are
                dynamically provisioned using this resource class.
              properties:
                apiVersion:
                  description: API version of the referent.
                  type: string
                fieldPath:
                  description: 'If referring to a piece of an object instead of an
                    entire object, this string should contain a valid JSON/Go field
                    access statement, such as desiredState.manifest.containers[2].
                    For example, if the object reference is to a container within
                    a pod, this would take on a value like: "spec.containers{name}"
                    (where "name" refers to the name of the container that triggered
                    the event) or if no container name is specified "spec.containers[2]"
                    (container with index 2 in this pod). This syntax is chosen only
                    to have some well-defined way of referencing a part of an object.
                    TODO: this design is not final and this field is subject to change
                    in the future.'
                  type: string
                kind:
                  description: 'Kind of the referent. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
                  type: string
                name:
                  description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                  type: string
                namespace:
                  description: 'Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/'
                  type: string
                resourceVersion:
                  description: 'Specific resourceVersion to which this reference is
                    made, if any. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency'
                  type: string
                uid:
                  description: 'UID of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#uids'
                  type: string
              type: object
            reclaimPolicy:
              description: ReclaimPolicy specifies what will happen to managed resources
                dynamically provisioned using this class when their resource claims
                are deleted, and what will happen to their underlying external resource
                when they are deleted. The "Delete" policy causes the managed resource
                to be deleted when its bound resource claim is deleted, and in turn
                causes the external resource to be deleted when its managed resource
                is deleted. The "Retain" policy causes the managed resource to be
                retained, in binding phase "Released", when its resource claim is
                deleted, and in turn causes the external resource to be retained when
                its managed resource is deleted. The "Retain" policy is used when
                no policy is specified, however the "Delete" policy is set at dynamic
                provisioning time if no policy is set.
              enum:
              - Retain
              - Delete
              type: string
            writeConnectionSecretsToNamespace:
              description: WriteConnectionSecretsToNamespace specifies the namespace
                in which the connection secrets of managed resources dynamically provisioned
                using this claim will be created.
              type: string
          required:
          - forProvider
          - providerRef
          - writeConnectionSecretsToNamespace
          type: object
      required:
      - specTemplate
      type: object
  version: v1beta1
  versions:
  - name: v1beta1
    served: true
    storage: true
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []
