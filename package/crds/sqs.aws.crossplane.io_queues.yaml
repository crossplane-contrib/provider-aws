---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.8.0
  creationTimestamp: null
  name: queues.sqs.aws.crossplane.io
spec:
  group: sqs.aws.crossplane.io
  names:
    categories:
    - crossplane
    - managed
    - aws
    kind: Queue
    listKind: QueueList
    plural: queues
    singular: queue
  scope: Cluster
  versions:
  - additionalPrinterColumns:
    - jsonPath: .status.atProvider.arn
      name: ARN
      type: string
    - jsonPath: .status.conditions[?(@.type=='Ready')].status
      name: READY
      type: string
    - jsonPath: .status.conditions[?(@.type=='Synced')].status
      name: SYNCED
      type: string
    - jsonPath: .metadata.creationTimestamp
      name: AGE
      type: date
    name: v1beta1
    schema:
      openAPIV3Schema:
        description: A Queue is a managed resource that represents a AWS Simple Queue
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: QueueSpec defines the desired state of a Queue.
            properties:
              deletionPolicy:
                default: Delete
                description: DeletionPolicy specifies what will happen to the underlying
                  external when this managed resource is deleted - either "Delete"
                  or "Orphan" the external resource.
                enum:
                - Orphan
                - Delete
                type: string
              forProvider:
                description: QueueParameters define the desired state of an AWS Queue
                properties:
                  contentBasedDeduplication:
                    description: 'ContentBasedDeduplication - Enables content-based
                      deduplication. Valid values: true, false. For more information,
                      see Exactly-Once Processing (https://docs.aws.amazon.com/AWSSimpleQueueService/latest/SQSDeveloperGuide/FIFO-queues.html#FIFO-queues-exactly-once-processing)
                      in the Amazon Simple Queue Service Developer Guide. Every message
                      must have a unique MessageDeduplicationId, You may provide a
                      MessageDeduplicationId explicitly. If you aren''t able to provide
                      a MessageDeduplicationId and you enable ContentBasedDeduplication
                      for your queue, Amazon SQS uses a SHA-256 hash to generate the
                      MessageDeduplicationId using the body of the message (but not
                      the attributes of the message). If you don''t provide a MessageDeduplicationId
                      and the queue doesn''t have ContentBasedDeduplication set, the
                      action fails with an error. If the queue has ContentBasedDeduplication
                      set, your MessageDeduplicationId overrides the generated one.
                      When ContentBasedDeduplication is in effect, messages with identical
                      content sent within the deduplication interval are treated as
                      duplicates and only one copy of the message is delivered. If
                      you send one message with ContentBasedDeduplication enabled
                      and then another message with a MessageDeduplicationId that
                      is the same as the one generated for the first MessageDeduplicationId,
                      the two messages are treated as duplicates and only one copy
                      of the message is delivered.'
                    type: boolean
                  delaySeconds:
                    description: 'DelaySeconds - The length of time, in seconds, for
                      which the delivery of all messages in the queue is delayed.
                      Valid values: An integer from 0 to 900 (15 minutes). Default:
                      0.'
                    format: int64
                    type: integer
                  fifoQueue:
                    description: 'FIFOQueue - Designates a queue as FIFO. Valid values:
                      true, false. If you don''t specify the FifoQueue attribute,
                      Amazon SQS creates a standard queue. You can provide this attribute
                      only during queue creation. You can''t change it for an existing
                      queue. When you set this attribute, you must also provide the
                      MessageGroupId for your messages explicitly. For more information,
                      see FIFO Queue Logic (https://docs.aws.amazon.com/AWSSimpleQueueService/latest/SQSDeveloperGuide/FIFO-queues.html#FIFO-queues-understanding-logic)
                      in the Amazon Simple Queue Service Developer Guide.'
                    type: boolean
                  kmsDataKeyReusePeriodSeconds:
                    description: 'KMSDataKeyReusePeriodSeconds - The length of time,
                      in seconds, for which Amazon SQS can reuse a data key (https://docs.aws.amazon.com/kms/latest/developerguide/concepts.html#data-keys)
                      to encrypt or decrypt messages before calling AWS KMS again.
                      An integer representing seconds, between 60 seconds (1 minute)
                      and 86,400 seconds (24 hours). Default: 300 (5 minutes). A shorter
                      time period provides better security but results in more calls
                      to KMS which might incur charges after Free Tier. For more information,
                      see How Does the Data Key Reuse Period Work? (https://docs.aws.amazon.com/AWSSimpleQueueService/latest/SQSDeveloperGuide/sqs-server-side-encryption.html#sqs-how-does-the-data-key-reuse-period-work).
                      Applies only to server-side-encryption (https://docs.aws.amazon.com/AWSSimpleQueueService/latest/SQSDeveloperGuide/sqs-server-side-encryption.html):'
                    format: int64
                    type: integer
                  kmsMasterKeyId:
                    description: 'KMSMasterKeyID - The ID of an AWS-managed customer
                      master key (CMK) for Amazon SQS or a custom CMK. For more information,
                      see Key Terms (https://docs.aws.amazon.com/AWSSimpleQueueService/latest/SQSDeveloperGuide/sqs-server-side-encryption.html#sqs-sse-key-terms).
                      While the alias of the AWS-managed CMK for Amazon SQS is always
                      alias/aws/sqs, the alias of a custom CMK can, for example, be
                      alias/MyAlias . For more examples, see KeyId (https://docs.aws.amazon.com/kms/latest/APIReference/API_DescribeKey.html#API_DescribeKey_RequestParameters)
                      in the AWS Key Management Service API Reference. Applies only
                      to server-side-encryption (https://docs.aws.amazon.com/AWSSimpleQueueService/latest/SQSDeveloperGuide/sqs-server-side-encryption.html):'
                    type: string
                  kmsMasterKeyIdRef:
                    description: A Reference to a named object.
                    properties:
                      name:
                        description: Name of the referenced object.
                        type: string
                      policy:
                        description: Policies for referencing.
                        properties:
                          resolution:
                            default: Required
                            description: Resolution specifies whether resolution of
                              this reference is required. The default is 'Required',
                              which means the reconcile will fail if the reference
                              cannot be resolved. 'Optional' means this reference
                              will be a no-op if it cannot be resolved.
                            enum:
                            - Required
                            - Optional
                            type: string
                          resolve:
                            description: Resolve specifies when this reference should
                              be resolved. The default is 'IfNotPresent', which will
                              attempt to resolve the reference only when the corresponding
                              field is not present. Use 'Always' to resolve the reference
                              on every reconcile.
                            enum:
                            - Always
                            - IfNotPresent
                            type: string
                        type: object
                    required:
                    - name
                    type: object
                  kmsMasterKeyIdSelector:
                    description: A Selector selects an object.
                    properties:
                      matchControllerRef:
                        description: MatchControllerRef ensures an object with the
                          same controller reference as the selecting object is selected.
                        type: boolean
                      matchLabels:
                        additionalProperties:
                          type: string
                        description: MatchLabels ensures an object with matching labels
                          is selected.
                        type: object
                      policy:
                        description: Policies for selection.
                        properties:
                          resolution:
                            default: Required
                            description: Resolution specifies whether resolution of
                              this reference is required. The default is 'Required',
                              which means the reconcile will fail if the reference
                              cannot be resolved. 'Optional' means this reference
                              will be a no-op if it cannot be resolved.
                            enum:
                            - Required
                            - Optional
                            type: string
                          resolve:
                            description: Resolve specifies when this reference should
                              be resolved. The default is 'IfNotPresent', which will
                              attempt to resolve the reference only when the corresponding
                              field is not present. Use 'Always' to resolve the reference
                              on every reconcile.
                            enum:
                            - Always
                            - IfNotPresent
                            type: string
                        type: object
                    type: object
                  maximumMessageSize:
                    description: 'MaximumMessageSize is the limit of how many bytes
                      a message can contain before Amazon SQS rejects it. Valid values:
                      An integer from 1,024 bytes (1 KiB) up to 262,144 bytes (256
                      KiB). Default: 262,144 (256 KiB).'
                    format: int64
                    type: integer
                  messageRetentionPeriod:
                    description: 'MessageRetentionPeriod - The length of time, in
                      seconds, for which Amazon SQS retains a message. Valid values:
                      An integer representing seconds, from 60 (1 minute) to 1,209,600
                      (14 days). Default: 345,600 (4 days).'
                    format: int64
                    type: integer
                  policy:
                    description: The queue's policy. A valid AWS policy. For more
                      information about policy structure, see Overview of AWS IAM
                      Policies (https://docs.aws.amazon.com/IAM/latest/UserGuide/PoliciesOverview.html)
                      in the Amazon IAM User Guide.
                    type: string
                  receiveMessageWaitTimeSeconds:
                    description: 'ReceiveMessageWaitTimeSeconds - The length of time,
                      in seconds, for which a ReceiveMessage action waits for a message
                      to arrive. Valid values: an integer from 0 to 20 (seconds).
                      Default: 0.'
                    format: int64
                    type: integer
                  redrivePolicy:
                    description: RedrivePolicy includes the parameters for the dead-letter
                      queue functionality of the source queue. For more information
                      about the redrive policy and dead-letter queues, see Using Amazon
                      SQS Dead-Letter Queues (https://docs.aws.amazon.com/AWSSimpleQueueService/latest/SQSDeveloperGuide/sqs-dead-letter-queues.html)
                      in the Amazon Simple Queue Service Developer Guide
                    properties:
                      deadLetterTargetArn:
                        description: The Amazon Resource Name (ARN) of the dead-letter
                          queue to which Amazon SQS moves messages after the value
                          of maxReceiveCount is exceeded.
                        type: string
                      deadLetterTargetArnRef:
                        description: DeadLetterTargetARNRef reference a Queue to retrieve
                          its ARN.
                        properties:
                          name:
                            description: Name of the referenced object.
                            type: string
                          policy:
                            description: Policies for referencing.
                            properties:
                              resolution:
                                default: Required
                                description: Resolution specifies whether resolution
                                  of this reference is required. The default is 'Required',
                                  which means the reconcile will fail if the reference
                                  cannot be resolved. 'Optional' means this reference
                                  will be a no-op if it cannot be resolved.
                                enum:
                                - Required
                                - Optional
                                type: string
                              resolve:
                                description: Resolve specifies when this reference
                                  should be resolved. The default is 'IfNotPresent',
                                  which will attempt to resolve the reference only
                                  when the corresponding field is not present. Use
                                  'Always' to resolve the reference on every reconcile.
                                enum:
                                - Always
                                - IfNotPresent
                                type: string
                            type: object
                        required:
                        - name
                        type: object
                      deadLetterTargetArnSelector:
                        description: DeadLetterTargetARNSelector selects reference
                          to a Queue to retrieve its ARN
                        properties:
                          matchControllerRef:
                            description: MatchControllerRef ensures an object with
                              the same controller reference as the selecting object
                              is selected.
                            type: boolean
                          matchLabels:
                            additionalProperties:
                              type: string
                            description: MatchLabels ensures an object with matching
                              labels is selected.
                            type: object
                          policy:
                            description: Policies for selection.
                            properties:
                              resolution:
                                default: Required
                                description: Resolution specifies whether resolution
                                  of this reference is required. The default is 'Required',
                                  which means the reconcile will fail if the reference
                                  cannot be resolved. 'Optional' means this reference
                                  will be a no-op if it cannot be resolved.
                                enum:
                                - Required
                                - Optional
                                type: string
                              resolve:
                                description: Resolve specifies when this reference
                                  should be resolved. The default is 'IfNotPresent',
                                  which will attempt to resolve the reference only
                                  when the corresponding field is not present. Use
                                  'Always' to resolve the reference on every reconcile.
                                enum:
                                - Always
                                - IfNotPresent
                                type: string
                            type: object
                        type: object
                      maxReceiveCount:
                        description: The number of times a message is delivered to
                          the source queue before being moved to the dead-letter queue.
                        format: int64
                        type: integer
                    required:
                    - maxReceiveCount
                    type: object
                  region:
                    description: Region is the region you'd like your Queue to be
                      created in.
                    type: string
                  tags:
                    additionalProperties:
                      type: string
                    description: Tags add cost allocation tags to the specified Amazon
                      SQS queue.
                    type: object
                  visibilityTimeout:
                    description: 'VisibilityTimeout - The visibility timeout for the
                      queue, in seconds. Valid values: an integer from 0 to 43,200
                      (12 hours). Default: 30. For more information about the visibility
                      timeout, see Visibility Timeout (https://docs.aws.amazon.com/AWSSimpleQueueService/latest/SQSDeveloperGuide/sqs-visibility-timeout.html)
                      in the Amazon Simple Queue Service Developer Guide.'
                    format: int64
                    type: integer
                required:
                - region
                type: object
              providerConfigRef:
                default:
                  name: default
                description: ProviderConfigReference specifies how the provider that
                  will be used to create, observe, update, and delete this managed
                  resource should be configured.
                properties:
                  name:
                    description: Name of the referenced object.
                    type: string
                  policy:
                    description: Policies for referencing.
                    properties:
                      resolution:
                        default: Required
                        description: Resolution specifies whether resolution of this
                          reference is required. The default is 'Required', which
                          means the reconcile will fail if the reference cannot be
                          resolved. 'Optional' means this reference will be a no-op
                          if it cannot be resolved.
                        enum:
                        - Required
                        - Optional
                        type: string
                      resolve:
                        description: Resolve specifies when this reference should
                          be resolved. The default is 'IfNotPresent', which will attempt
                          to resolve the reference only when the corresponding field
                          is not present. Use 'Always' to resolve the reference on
                          every reconcile.
                        enum:
                        - Always
                        - IfNotPresent
                        type: string
                    type: object
                required:
                - name
                type: object
              providerRef:
                description: 'ProviderReference specifies the provider that will be
                  used to create, observe, update, and delete this managed resource.
                  Deprecated: Please use ProviderConfigReference, i.e. `providerConfigRef`'
                properties:
                  name:
                    description: Name of the referenced object.
                    type: string
                  policy:
                    description: Policies for referencing.
                    properties:
                      resolution:
                        default: Required
                        description: Resolution specifies whether resolution of this
                          reference is required. The default is 'Required', which
                          means the reconcile will fail if the reference cannot be
                          resolved. 'Optional' means this reference will be a no-op
                          if it cannot be resolved.
                        enum:
                        - Required
                        - Optional
                        type: string
                      resolve:
                        description: Resolve specifies when this reference should
                          be resolved. The default is 'IfNotPresent', which will attempt
                          to resolve the reference only when the corresponding field
                          is not present. Use 'Always' to resolve the reference on
                          every reconcile.
                        enum:
                        - Always
                        - IfNotPresent
                        type: string
                    type: object
                required:
                - name
                type: object
              publishConnectionDetailsTo:
                description: PublishConnectionDetailsTo specifies the connection secret
                  config which contains a name, metadata and a reference to secret
                  store config to which any connection details for this managed resource
                  should be written. Connection details frequently include the endpoint,
                  username, and password required to connect to the managed resource.
                properties:
                  configRef:
                    default:
                      name: default
                    description: SecretStoreConfigRef specifies which secret store
                      config should be used for this ConnectionSecret.
                    properties:
                      name:
                        description: Name of the referenced object.
                        type: string
                      policy:
                        description: Policies for referencing.
                        properties:
                          resolution:
                            default: Required
                            description: Resolution specifies whether resolution of
                              this reference is required. The default is 'Required',
                              which means the reconcile will fail if the reference
                              cannot be resolved. 'Optional' means this reference
                              will be a no-op if it cannot be resolved.
                            enum:
                            - Required
                            - Optional
                            type: string
                          resolve:
                            description: Resolve specifies when this reference should
                              be resolved. The default is 'IfNotPresent', which will
                              attempt to resolve the reference only when the corresponding
                              field is not present. Use 'Always' to resolve the reference
                              on every reconcile.
                            enum:
                            - Always
                            - IfNotPresent
                            type: string
                        type: object
                    required:
                    - name
                    type: object
                  metadata:
                    description: Metadata is the metadata for connection secret.
                    properties:
                      annotations:
                        additionalProperties:
                          type: string
                        description: Annotations are the annotations to be added to
                          connection secret. - For Kubernetes secrets, this will be
                          used as "metadata.annotations". - It is up to Secret Store
                          implementation for others store types.
                        type: object
                      labels:
                        additionalProperties:
                          type: string
                        description: Labels are the labels/tags to be added to connection
                          secret. - For Kubernetes secrets, this will be used as "metadata.labels".
                          - It is up to Secret Store implementation for others store
                          types.
                        type: object
                      type:
                        description: Type is the SecretType for the connection secret.
                          - Only valid for Kubernetes Secret Stores.
                        type: string
                    type: object
                  name:
                    description: Name is the name of the connection secret.
                    type: string
                required:
                - name
                type: object
              writeConnectionSecretToRef:
                description: WriteConnectionSecretToReference specifies the namespace
                  and name of a Secret to which any connection details for this managed
                  resource should be written. Connection details frequently include
                  the endpoint, username, and password required to connect to the
                  managed resource. This field is planned to be replaced in a future
                  release in favor of PublishConnectionDetailsTo. Currently, both
                  could be set independently and connection details would be published
                  to both without affecting each other.
                properties:
                  name:
                    description: Name of the secret.
                    type: string
                  namespace:
                    description: Namespace of the secret.
                    type: string
                required:
                - name
                - namespace
                type: object
            required:
            - forProvider
            type: object
          status:
            description: QueueStatus represents the observed state of a Queue.
            properties:
              atProvider:
                description: QueueObservation is the representation of the current
                  state that is observed
                properties:
                  approximateNumberOfMessages:
                    description: ApproximateNumberOfMessages - The approximate number
                      of messages available for retrieval from the queue.
                    format: int64
                    type: integer
                  approximateNumberOfMessagesDelayed:
                    description: ApproximateNumberOfMessagesDelayed - The approximate
                      number of messages in the queue that are delayed and not available
                      for reading immediately. This can happen when the queue is configured
                      as a delay queue or when a message has been sent with a delay
                      parameter.
                    format: int64
                    type: integer
                  approximateNumberOfMessagesNotVisible:
                    description: ApproximateNumberOfMessagesNotVisible - The approximate
                      number of messages that are in flight. Messages are considered
                      to be in flight if they have been sent to a client but have
                      not yet been deleted or have not yet reached the end of their
                      visibility window.
                    format: int64
                    type: integer
                  arn:
                    description: The Amazon resource name (ARN) of the queue.
                    type: string
                  createdTimestamp:
                    description: CreatedTimestamp is the time when the queue was created
                    format: date-time
                    type: string
                  lastModifiedTimestamp:
                    description: LastModifiedTimestamp - Returns the time when the
                      queue was last changed.
                    format: date-time
                    type: string
                  url:
                    description: The URL of the created Amazon SQS queue.
                    type: string
                type: object
              conditions:
                description: Conditions of the resource.
                items:
                  description: A Condition that may apply to a resource.
                  properties:
                    lastTransitionTime:
                      description: LastTransitionTime is the last time this condition
                        transitioned from one status to another.
                      format: date-time
                      type: string
                    message:
                      description: A Message containing details about this condition's
                        last transition from one status to another, if any.
                      type: string
                    reason:
                      description: A Reason for this condition's last transition from
                        one status to another.
                      type: string
                    status:
                      description: Status of this condition; is it currently True,
                        False, or Unknown?
                      type: string
                    type:
                      description: Type of this condition. At most one of each condition
                        type may apply to a resource at any point in time.
                      type: string
                  required:
                  - lastTransitionTime
                  - reason
                  - status
                  - type
                  type: object
                type: array
            type: object
        required:
        - spec
        type: object
    served: true
    storage: true
    subresources:
      status: {}
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []
