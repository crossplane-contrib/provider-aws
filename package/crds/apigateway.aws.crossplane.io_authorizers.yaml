---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.8.0
  creationTimestamp: null
  name: authorizers.apigateway.aws.crossplane.io
spec:
  group: apigateway.aws.crossplane.io
  names:
    categories:
    - crossplane
    - managed
    - aws
    kind: Authorizer
    listKind: AuthorizerList
    plural: authorizers
    singular: authorizer
  scope: Cluster
  versions:
  - additionalPrinterColumns:
    - jsonPath: .status.conditions[?(@.type=='Ready')].status
      name: READY
      type: string
    - jsonPath: .status.conditions[?(@.type=='Synced')].status
      name: SYNCED
      type: string
    - jsonPath: .metadata.annotations.crossplane\.io/external-name
      name: EXTERNAL-NAME
      type: string
    name: v1alpha1
    schema:
      openAPIV3Schema:
        description: Authorizer is the Schema for the Authorizers API
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: AuthorizerSpec defines the desired state of Authorizer
            properties:
              deletionPolicy:
                default: Delete
                description: DeletionPolicy specifies what will happen to the underlying
                  external when this managed resource is deleted - either "Delete"
                  or "Orphan" the external resource.
                enum:
                - Orphan
                - Delete
                type: string
              forProvider:
                description: AuthorizerParameters defines the desired state of Authorizer
                properties:
                  authType:
                    description: Optional customer-defined field, used in OpenAPI
                      imports and exports without functional impact.
                    type: string
                  authorizerCredentials:
                    description: Specifies the required credentials as an IAM role
                      for API Gateway to invoke the authorizer. To specify an IAM
                      role for API Gateway to assume, use the role's Amazon Resource
                      Name (ARN). To use resource-based permissions on the Lambda
                      function, specify null.
                    type: string
                  authorizerResultTtlInSeconds:
                    description: The TTL in seconds of cached authorizer results.
                      If it equals 0, authorization caching is disabled. If it is
                      greater than 0, API Gateway will cache authorizer responses.
                      If this field is not set, the default value is 300. The maximum
                      value is 3600, or 1 hour.
                    format: int64
                    type: integer
                  authorizerURI:
                    description: Specifies the authorizer's Uniform Resource Identifier
                      (URI). For TOKEN or REQUEST authorizers, this must be a well-formed
                      Lambda function URI, for example, arn:aws:apigateway:us-west-2:lambda:path/2015-03-31/functions/arn:aws:lambda:us-west-2:{account_id}:function:{lambda_function_name}/invocations.
                      In general, the URI has this form arn:aws:apigateway:{region}:lambda:path/{service_api},
                      where {region} is the same as the region hosting the Lambda
                      function, path indicates that the remaining substring in the
                      URI should be treated as the path to the resource, including
                      the initial /. For Lambda functions, this is usually of the
                      form /2015-03-31/functions/[FunctionARN]/invocations.
                    type: string
                  identitySource:
                    description: "The identity source for which authorization is requested.
                      * For a TOKEN or COGNITO_USER_POOLS authorizer, this is required
                      and specifies the request header mapping expression for the
                      custom header holding the authorization token submitted by the
                      client. For example, if the token header name is Auth, the header
                      mapping expression is method.request.header.Auth. \n * For the
                      REQUEST authorizer, this is required when authorization caching
                      is enabled. The value is a comma-separated string of one or
                      more mapping expressions of the specified request parameters.
                      For example, if an Auth header, a Name query string parameter
                      are defined as identity sources, this value is method.request.header.Auth,
                      method.request.querystring.Name. These parameters will be used
                      to derive the authorization caching key and to perform runtime
                      validation of the REQUEST authorizer by verifying all of the
                      identity-related request parameters are present, not null and
                      non-empty. Only when this is true does the authorizer invoke
                      the authorizer Lambda function, otherwise, it returns a 401
                      Unauthorized response without calling the Lambda function. The
                      valid value is a string of comma-separated mapping expressions
                      of the specified request parameters. When the authorization
                      caching is not enabled, this property is optional."
                    type: string
                  identityValidationExpression:
                    description: A validation expression for the incoming identity
                      token. For TOKEN authorizers, this value is a regular expression.
                      For COGNITO_USER_POOLS authorizers, API Gateway will match the
                      aud field of the incoming token from the client against the
                      specified regular expression. It will invoke the authorizer's
                      Lambda function when there is a match. Otherwise, it will return
                      a 401 Unauthorized response without calling the Lambda function.
                      The validation expression does not apply to the REQUEST authorizer.
                    type: string
                  name:
                    description: '[Required] The name of the authorizer.'
                    type: string
                  region:
                    description: Region is which region the Authorizer will be created.
                    type: string
                  restApiId:
                    description: RestAPIID is the ID for the RestAPI.
                    type: string
                  restApiIdRef:
                    description: RestAPIIDRef is a reference to an RestAPI used to
                      set the RestAPIID.
                    properties:
                      name:
                        description: Name of the referenced object.
                        type: string
                      policy:
                        description: Policies for referencing.
                        properties:
                          resolution:
                            default: Required
                            description: Resolution specifies whether resolution of
                              this reference is required. The default is 'Required',
                              which means the reconcile will fail if the reference
                              cannot be resolved. 'Optional' means this reference
                              will be a no-op if it cannot be resolved.
                            enum:
                            - Required
                            - Optional
                            type: string
                          resolve:
                            description: Resolve specifies when this reference should
                              be resolved. The default is 'IfNotPresent', which will
                              attempt to resolve the reference only when the corresponding
                              field is not present. Use 'Always' to resolve the reference
                              on every reconcile.
                            enum:
                            - Always
                            - IfNotPresent
                            type: string
                        type: object
                    required:
                    - name
                    type: object
                  restApiIdSelector:
                    description: RestApiIdSelector selects references to RestAPI used
                      to set the RestAPIID.
                    properties:
                      matchControllerRef:
                        description: MatchControllerRef ensures an object with the
                          same controller reference as the selecting object is selected.
                        type: boolean
                      matchLabels:
                        additionalProperties:
                          type: string
                        description: MatchLabels ensures an object with matching labels
                          is selected.
                        type: object
                      policy:
                        description: Policies for selection.
                        properties:
                          resolution:
                            default: Required
                            description: Resolution specifies whether resolution of
                              this reference is required. The default is 'Required',
                              which means the reconcile will fail if the reference
                              cannot be resolved. 'Optional' means this reference
                              will be a no-op if it cannot be resolved.
                            enum:
                            - Required
                            - Optional
                            type: string
                          resolve:
                            description: Resolve specifies when this reference should
                              be resolved. The default is 'IfNotPresent', which will
                              attempt to resolve the reference only when the corresponding
                              field is not present. Use 'Always' to resolve the reference
                              on every reconcile.
                            enum:
                            - Always
                            - IfNotPresent
                            type: string
                        type: object
                    type: object
                  type_:
                    description: '[Required] The authorizer type. Valid values are
                      TOKEN for a Lambda function using a single authorization token
                      submitted in a custom header, REQUEST for a Lambda function
                      using incoming request parameters, and COGNITO_USER_POOLS for
                      using an Amazon Cognito user pool.'
                    type: string
                required:
                - name
                - region
                - type_
                type: object
              providerConfigRef:
                default:
                  name: default
                description: ProviderConfigReference specifies how the provider that
                  will be used to create, observe, update, and delete this managed
                  resource should be configured.
                properties:
                  name:
                    description: Name of the referenced object.
                    type: string
                  policy:
                    description: Policies for referencing.
                    properties:
                      resolution:
                        default: Required
                        description: Resolution specifies whether resolution of this
                          reference is required. The default is 'Required', which
                          means the reconcile will fail if the reference cannot be
                          resolved. 'Optional' means this reference will be a no-op
                          if it cannot be resolved.
                        enum:
                        - Required
                        - Optional
                        type: string
                      resolve:
                        description: Resolve specifies when this reference should
                          be resolved. The default is 'IfNotPresent', which will attempt
                          to resolve the reference only when the corresponding field
                          is not present. Use 'Always' to resolve the reference on
                          every reconcile.
                        enum:
                        - Always
                        - IfNotPresent
                        type: string
                    type: object
                required:
                - name
                type: object
              providerRef:
                description: 'ProviderReference specifies the provider that will be
                  used to create, observe, update, and delete this managed resource.
                  Deprecated: Please use ProviderConfigReference, i.e. `providerConfigRef`'
                properties:
                  name:
                    description: Name of the referenced object.
                    type: string
                  policy:
                    description: Policies for referencing.
                    properties:
                      resolution:
                        default: Required
                        description: Resolution specifies whether resolution of this
                          reference is required. The default is 'Required', which
                          means the reconcile will fail if the reference cannot be
                          resolved. 'Optional' means this reference will be a no-op
                          if it cannot be resolved.
                        enum:
                        - Required
                        - Optional
                        type: string
                      resolve:
                        description: Resolve specifies when this reference should
                          be resolved. The default is 'IfNotPresent', which will attempt
                          to resolve the reference only when the corresponding field
                          is not present. Use 'Always' to resolve the reference on
                          every reconcile.
                        enum:
                        - Always
                        - IfNotPresent
                        type: string
                    type: object
                required:
                - name
                type: object
              publishConnectionDetailsTo:
                description: PublishConnectionDetailsTo specifies the connection secret
                  config which contains a name, metadata and a reference to secret
                  store config to which any connection details for this managed resource
                  should be written. Connection details frequently include the endpoint,
                  username, and password required to connect to the managed resource.
                properties:
                  configRef:
                    default:
                      name: default
                    description: SecretStoreConfigRef specifies which secret store
                      config should be used for this ConnectionSecret.
                    properties:
                      name:
                        description: Name of the referenced object.
                        type: string
                      policy:
                        description: Policies for referencing.
                        properties:
                          resolution:
                            default: Required
                            description: Resolution specifies whether resolution of
                              this reference is required. The default is 'Required',
                              which means the reconcile will fail if the reference
                              cannot be resolved. 'Optional' means this reference
                              will be a no-op if it cannot be resolved.
                            enum:
                            - Required
                            - Optional
                            type: string
                          resolve:
                            description: Resolve specifies when this reference should
                              be resolved. The default is 'IfNotPresent', which will
                              attempt to resolve the reference only when the corresponding
                              field is not present. Use 'Always' to resolve the reference
                              on every reconcile.
                            enum:
                            - Always
                            - IfNotPresent
                            type: string
                        type: object
                    required:
                    - name
                    type: object
                  metadata:
                    description: Metadata is the metadata for connection secret.
                    properties:
                      annotations:
                        additionalProperties:
                          type: string
                        description: Annotations are the annotations to be added to
                          connection secret. - For Kubernetes secrets, this will be
                          used as "metadata.annotations". - It is up to Secret Store
                          implementation for others store types.
                        type: object
                      labels:
                        additionalProperties:
                          type: string
                        description: Labels are the labels/tags to be added to connection
                          secret. - For Kubernetes secrets, this will be used as "metadata.labels".
                          - It is up to Secret Store implementation for others store
                          types.
                        type: object
                      type:
                        description: Type is the SecretType for the connection secret.
                          - Only valid for Kubernetes Secret Stores.
                        type: string
                    type: object
                  name:
                    description: Name is the name of the connection secret.
                    type: string
                required:
                - name
                type: object
              writeConnectionSecretToRef:
                description: WriteConnectionSecretToReference specifies the namespace
                  and name of a Secret to which any connection details for this managed
                  resource should be written. Connection details frequently include
                  the endpoint, username, and password required to connect to the
                  managed resource. This field is planned to be replaced in a future
                  release in favor of PublishConnectionDetailsTo. Currently, both
                  could be set independently and connection details would be published
                  to both without affecting each other.
                properties:
                  name:
                    description: Name of the secret.
                    type: string
                  namespace:
                    description: Namespace of the secret.
                    type: string
                required:
                - name
                - namespace
                type: object
            required:
            - forProvider
            type: object
          status:
            description: AuthorizerStatus defines the observed state of Authorizer.
            properties:
              atProvider:
                description: AuthorizerObservation defines the observed state of Authorizer
                properties:
                  id:
                    description: The identifier for the authorizer resource.
                    type: string
                  providerARNs:
                    description: 'A list of the Amazon Cognito user pool ARNs for
                      the COGNITO_USER_POOLS authorizer. Each element is of this format:
                      arn:aws:cognito-idp:{region}:{account_id}:userpool/{user_pool_id}.
                      For a TOKEN or REQUEST authorizer, this is not defined.'
                    items:
                      type: string
                    type: array
                type: object
              conditions:
                description: Conditions of the resource.
                items:
                  description: A Condition that may apply to a resource.
                  properties:
                    lastTransitionTime:
                      description: LastTransitionTime is the last time this condition
                        transitioned from one status to another.
                      format: date-time
                      type: string
                    message:
                      description: A Message containing details about this condition's
                        last transition from one status to another, if any.
                      type: string
                    reason:
                      description: A Reason for this condition's last transition from
                        one status to another.
                      type: string
                    status:
                      description: Status of this condition; is it currently True,
                        False, or Unknown?
                      type: string
                    type:
                      description: Type of this condition. At most one of each condition
                        type may apply to a resource at any point in time.
                      type: string
                  required:
                  - lastTransitionTime
                  - reason
                  - status
                  - type
                  type: object
                type: array
            type: object
        required:
        - spec
        type: object
    served: true
    storage: true
    subresources:
      status: {}
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []
