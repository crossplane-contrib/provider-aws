apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.4.0
  creationTimestamp: null
  name: stages.apigatewayv2.aws.crossplane.io
spec:
  group: apigatewayv2.aws.crossplane.io
  names:
    categories:
    - crossplane
    - managed
    - aws
    kind: Stage
    listKind: StageList
    plural: stages
    singular: stage
  scope: Cluster
  versions:
  - additionalPrinterColumns:
    - jsonPath: .status.conditions[?(@.type=='Ready')].status
      name: READY
      type: string
    - jsonPath: .status.conditions[?(@.type=='Synced')].status
      name: SYNCED
      type: string
    - jsonPath: .metadata.annotations.crossplane\.io/external-name
      name: EXTERNAL-NAME
      type: string
    name: v1alpha1
    schema:
      openAPIV3Schema:
        description: Stage is the Schema for the Stages API
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: StageSpec defines the desired state of Stage
            properties:
              deletionPolicy:
                description: DeletionPolicy specifies what will happen to the underlying external when this managed resource is deleted - either "Delete" or "Orphan" the external resource. The "Delete" policy is the default when no policy is specified.
                enum:
                - Orphan
                - Delete
                type: string
              forProvider:
                description: StageParameters defines the desired state of Stage
                properties:
                  accessLogSettings:
                    properties:
                      destinationARN:
                        description: The ARN of the CloudWatch Logs log group to receive access logs.
                        type: string
                      format:
                        description: A single line format of the access logs of data, as specified by selected $context variables. The format must include at least $context.requestId.
                        type: string
                    type: object
                  apiID:
                    type: string
                  autoDeploy:
                    type: boolean
                  clientCertificateID:
                    type: string
                  defaultRouteSettings:
                    properties:
                      dataTraceEnabled:
                        description: Specifies whether a Lambda authorizer returns a response in a simple format. If enabled, the Lambda authorizer can return a boolean value instead of an IAM policy. Supported only for HTTP APIs. To learn more, see Working with AWS Lambda authorizers for HTTP APIs (https://docs.aws.amazon.com/apigateway/latest/developerguide/http-api-lambda-authorizer.html)
                        type: boolean
                      detailedMetricsEnabled:
                        description: Specifies whether a Lambda authorizer returns a response in a simple format. If enabled, the Lambda authorizer can return a boolean value instead of an IAM policy. Supported only for HTTP APIs. To learn more, see Working with AWS Lambda authorizers for HTTP APIs (https://docs.aws.amazon.com/apigateway/latest/developerguide/http-api-lambda-authorizer.html)
                        type: boolean
                      loggingLevel:
                        description: 'Specifies the logging level for this route: INFO, ERROR, or OFF. This property affects the log entries pushed to Amazon CloudWatch Logs. Supported only for WebSocket APIs.'
                        type: string
                      throttlingBurstLimit:
                        description: Specifies the throttling burst limit.
                        format: int64
                        type: integer
                      throttlingRateLimit:
                        description: Specifies the throttling rate limit.
                        type: number
                    type: object
                  deploymentID:
                    type: string
                  description:
                    type: string
                  region:
                    description: Region is which region the Stage will be created.
                    type: string
                  routeSettings:
                    additionalProperties:
                      properties:
                        dataTraceEnabled:
                          description: Specifies whether a Lambda authorizer returns a response in a simple format. If enabled, the Lambda authorizer can return a boolean value instead of an IAM policy. Supported only for HTTP APIs. To learn more, see Working with AWS Lambda authorizers for HTTP APIs (https://docs.aws.amazon.com/apigateway/latest/developerguide/http-api-lambda-authorizer.html)
                          type: boolean
                        detailedMetricsEnabled:
                          description: Specifies whether a Lambda authorizer returns a response in a simple format. If enabled, the Lambda authorizer can return a boolean value instead of an IAM policy. Supported only for HTTP APIs. To learn more, see Working with AWS Lambda authorizers for HTTP APIs (https://docs.aws.amazon.com/apigateway/latest/developerguide/http-api-lambda-authorizer.html)
                          type: boolean
                        loggingLevel:
                          description: 'Specifies the logging level for this route: INFO, ERROR, or OFF. This property affects the log entries pushed to Amazon CloudWatch Logs. Supported only for WebSocket APIs.'
                          type: string
                        throttlingBurstLimit:
                          description: Specifies the throttling burst limit.
                          format: int64
                          type: integer
                        throttlingRateLimit:
                          description: Specifies the throttling rate limit.
                          type: number
                      type: object
                    type: object
                  stageName:
                    type: string
                  stageVariables:
                    additionalProperties:
                      type: string
                    type: object
                  tags:
                    additionalProperties:
                      type: string
                    type: object
                required:
                - apiID
                - stageName
                type: object
              providerConfigRef:
                description: ProviderConfigReference specifies how the provider that will be used to create, observe, update, and delete this managed resource should be configured.
                properties:
                  name:
                    description: Name of the referenced object.
                    type: string
                required:
                - name
                type: object
              providerRef:
                description: 'ProviderReference specifies the provider that will be used to create, observe, update, and delete this managed resource. Deprecated: Please use ProviderConfigReference, i.e. `providerConfigRef`'
                properties:
                  name:
                    description: Name of the referenced object.
                    type: string
                required:
                - name
                type: object
              writeConnectionSecretToRef:
                description: WriteConnectionSecretToReference specifies the namespace and name of a Secret to which any connection details for this managed resource should be written. Connection details frequently include the endpoint, username, and password required to connect to the managed resource.
                properties:
                  name:
                    description: Name of the secret.
                    type: string
                  namespace:
                    description: Namespace of the secret.
                    type: string
                required:
                - name
                - namespace
                type: object
            required:
            - forProvider
            type: object
          status:
            description: StageStatus defines the observed state of Stage.
            properties:
              atProvider:
                description: StageObservation defines the observed state of Stage
                properties:
                  apiGatewayManaged:
                    type: boolean
                  createdDate:
                    format: date-time
                    type: string
                  lastDeploymentStatusMessage:
                    type: string
                  lastUpdatedDate:
                    format: date-time
                    type: string
                type: object
              conditions:
                description: Conditions of the resource.
                items:
                  description: A Condition that may apply to a resource.
                  properties:
                    lastTransitionTime:
                      description: LastTransitionTime is the last time this condition transitioned from one status to another.
                      format: date-time
                      type: string
                    message:
                      description: A Message containing details about this condition's last transition from one status to another, if any.
                      type: string
                    reason:
                      description: A Reason for this condition's last transition from one status to another.
                      type: string
                    status:
                      description: Status of this condition; is it currently True, False, or Unknown?
                      type: string
                    type:
                      description: Type of this condition. At most one of each condition type may apply to a resource at any point in time.
                      type: string
                  required:
                  - lastTransitionTime
                  - reason
                  - status
                  - type
                  type: object
                type: array
            required:
            - atProvider
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []
