---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.8.0
  creationTimestamp: null
  name: loadbalancers.elbv2.aws.crossplane.io
spec:
  group: elbv2.aws.crossplane.io
  names:
    categories:
    - crossplane
    - managed
    - aws
    kind: LoadBalancer
    listKind: LoadBalancerList
    plural: loadbalancers
    singular: loadbalancer
  scope: Cluster
  versions:
  - additionalPrinterColumns:
    - jsonPath: .status.conditions[?(@.type=='Ready')].status
      name: READY
      type: string
    - jsonPath: .status.conditions[?(@.type=='Synced')].status
      name: SYNCED
      type: string
    - jsonPath: .metadata.annotations.crossplane\.io/external-name
      name: EXTERNAL-NAME
      type: string
    name: v1alpha1
    schema:
      openAPIV3Schema:
        description: LoadBalancer is the Schema for the LoadBalancers API
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: LoadBalancerSpec defines the desired state of LoadBalancer
            properties:
              deletionPolicy:
                default: Delete
                description: DeletionPolicy specifies what will happen to the underlying
                  external when this managed resource is deleted - either "Delete"
                  or "Orphan" the external resource.
                enum:
                - Orphan
                - Delete
                type: string
              forProvider:
                description: LoadBalancerParameters defines the desired state of LoadBalancer
                properties:
                  customerOwnedIPv4Pool:
                    description: '[Application Load Balancers on Outposts] The ID
                      of the customer-owned address pool (CoIP pool).'
                    type: string
                  ipAddressType:
                    description: The type of IP addresses used by the subnets for
                      your load balancer. The possible values are ipv4 (for IPv4 addresses)
                      and dualstack (for IPv4 and IPv6 addresses). Internal load balancers
                      must use ipv4.
                    type: string
                  loadBalancerType:
                    description: The type of load balancer. The default is application.
                    type: string
                  name:
                    description: "The name of the load balancer. \n This name must
                      be unique per region per account, can have a maximum of 32 characters,
                      must contain only alphanumeric characters or hyphens, must not
                      begin or end with a hyphen, and must not begin with \"internal-\"."
                    type: string
                  region:
                    description: Region is which region the LoadBalancer will be created.
                    type: string
                  scheme:
                    description: "The nodes of an Internet-facing load balancer have
                      public IP addresses. The DNS name of an Internet-facing load
                      balancer is publicly resolvable to the public IP addresses of
                      the nodes. Therefore, Internet-facing load balancers can route
                      requests from clients over the internet. \n The nodes of an
                      internal load balancer have only private IP addresses. The DNS
                      name of an internal load balancer is publicly resolvable to
                      the private IP addresses of the nodes. Therefore, internal load
                      balancers can route requests only from clients with access to
                      the VPC for the load balancer. \n The default is an Internet-facing
                      load balancer. \n You cannot specify a scheme for a Gateway
                      Load Balancer."
                    type: string
                  securityGroupRefs:
                    description: Reference to Security Groups for SecurityGroups field
                    items:
                      description: A Reference to a named object.
                      properties:
                        name:
                          description: Name of the referenced object.
                          type: string
                        policy:
                          description: Policies for referencing.
                          properties:
                            resolution:
                              default: Required
                              description: Resolution specifies whether resolution
                                of this reference is required. The default is 'Required',
                                which means the reconcile will fail if the reference
                                cannot be resolved. 'Optional' means this reference
                                will be a no-op if it cannot be resolved.
                              enum:
                              - Required
                              - Optional
                              type: string
                            resolve:
                              description: Resolve specifies when this reference should
                                be resolved. The default is 'IfNotPresent', which
                                will attempt to resolve the reference only when the
                                corresponding field is not present. Use 'Always' to
                                resolve the reference on every reconcile.
                              enum:
                              - Always
                              - IfNotPresent
                              type: string
                          type: object
                      required:
                      - name
                      type: object
                    type: array
                  securityGroupSelector:
                    description: Selector for references to SecurityGroups
                    properties:
                      matchControllerRef:
                        description: MatchControllerRef ensures an object with the
                          same controller reference as the selecting object is selected.
                        type: boolean
                      matchLabels:
                        additionalProperties:
                          type: string
                        description: MatchLabels ensures an object with matching labels
                          is selected.
                        type: object
                      policy:
                        description: Policies for selection.
                        properties:
                          resolution:
                            default: Required
                            description: Resolution specifies whether resolution of
                              this reference is required. The default is 'Required',
                              which means the reconcile will fail if the reference
                              cannot be resolved. 'Optional' means this reference
                              will be a no-op if it cannot be resolved.
                            enum:
                            - Required
                            - Optional
                            type: string
                          resolve:
                            description: Resolve specifies when this reference should
                              be resolved. The default is 'IfNotPresent', which will
                              attempt to resolve the reference only when the corresponding
                              field is not present. Use 'Always' to resolve the reference
                              on every reconcile.
                            enum:
                            - Always
                            - IfNotPresent
                            type: string
                        type: object
                    type: object
                  securityGroups:
                    description: '[Application Load Balancers] The IDs of the security
                      groups for the load balancer.'
                    items:
                      type: string
                    type: array
                  subnetMappings:
                    description: "The IDs of the public subnets. You can specify only
                      one subnet per Availability Zone. You must specify either subnets
                      or subnet mappings. \n [Application Load Balancers] You must
                      specify subnets from at least two Availability Zones. You cannot
                      specify Elastic IP addresses for your subnets. \n [Application
                      Load Balancers on Outposts] You must specify one Outpost subnet.
                      \n [Application Load Balancers on Local Zones] You can specify
                      subnets from one or more Local Zones. \n [Network Load Balancers]
                      You can specify subnets from one or more Availability Zones.
                      You can specify one Elastic IP address per subnet if you need
                      static IP addresses for your internet-facing load balancer.
                      For internal load balancers, you can specify one private IP
                      address per subnet from the IPv4 range of the subnet. For internet-facing
                      load balancer, you can specify one IPv6 address per subnet.
                      \n [Gateway Load Balancers] You can specify subnets from one
                      or more Availability Zones. You cannot specify Elastic IP addresses
                      for your subnets."
                    items:
                      properties:
                        allocationID:
                          type: string
                        iPv6Address:
                          type: string
                        privateIPv4Address:
                          type: string
                        subnetID:
                          type: string
                      type: object
                    type: array
                  subnetRefs:
                    description: Reference to Subnets for Subnets field
                    items:
                      description: A Reference to a named object.
                      properties:
                        name:
                          description: Name of the referenced object.
                          type: string
                        policy:
                          description: Policies for referencing.
                          properties:
                            resolution:
                              default: Required
                              description: Resolution specifies whether resolution
                                of this reference is required. The default is 'Required',
                                which means the reconcile will fail if the reference
                                cannot be resolved. 'Optional' means this reference
                                will be a no-op if it cannot be resolved.
                              enum:
                              - Required
                              - Optional
                              type: string
                            resolve:
                              description: Resolve specifies when this reference should
                                be resolved. The default is 'IfNotPresent', which
                                will attempt to resolve the reference only when the
                                corresponding field is not present. Use 'Always' to
                                resolve the reference on every reconcile.
                              enum:
                              - Always
                              - IfNotPresent
                              type: string
                          type: object
                      required:
                      - name
                      type: object
                    type: array
                  subnetSelector:
                    description: Selector for references to Subnets
                    properties:
                      matchControllerRef:
                        description: MatchControllerRef ensures an object with the
                          same controller reference as the selecting object is selected.
                        type: boolean
                      matchLabels:
                        additionalProperties:
                          type: string
                        description: MatchLabels ensures an object with matching labels
                          is selected.
                        type: object
                      policy:
                        description: Policies for selection.
                        properties:
                          resolution:
                            default: Required
                            description: Resolution specifies whether resolution of
                              this reference is required. The default is 'Required',
                              which means the reconcile will fail if the reference
                              cannot be resolved. 'Optional' means this reference
                              will be a no-op if it cannot be resolved.
                            enum:
                            - Required
                            - Optional
                            type: string
                          resolve:
                            description: Resolve specifies when this reference should
                              be resolved. The default is 'IfNotPresent', which will
                              attempt to resolve the reference only when the corresponding
                              field is not present. Use 'Always' to resolve the reference
                              on every reconcile.
                            enum:
                            - Always
                            - IfNotPresent
                            type: string
                        type: object
                    type: object
                  subnets:
                    description: "The IDs of the public subnets. You can specify only
                      one subnet per Availability Zone. You must specify either subnets
                      or subnet mappings. \n [Application Load Balancers] You must
                      specify subnets from at least two Availability Zones. \n [Application
                      Load Balancers on Outposts] You must specify one Outpost subnet.
                      \n [Application Load Balancers on Local Zones] You can specify
                      subnets from one or more Local Zones. \n [Network Load Balancers]
                      You can specify subnets from one or more Availability Zones.
                      \n [Gateway Load Balancers] You can specify subnets from one
                      or more Availability Zones."
                    items:
                      type: string
                    type: array
                  tags:
                    description: The tags to assign to the load balancer.
                    items:
                      properties:
                        key:
                          type: string
                        value:
                          type: string
                      type: object
                    type: array
                required:
                - name
                - region
                type: object
              providerConfigRef:
                default:
                  name: default
                description: ProviderConfigReference specifies how the provider that
                  will be used to create, observe, update, and delete this managed
                  resource should be configured.
                properties:
                  name:
                    description: Name of the referenced object.
                    type: string
                  policy:
                    description: Policies for referencing.
                    properties:
                      resolution:
                        default: Required
                        description: Resolution specifies whether resolution of this
                          reference is required. The default is 'Required', which
                          means the reconcile will fail if the reference cannot be
                          resolved. 'Optional' means this reference will be a no-op
                          if it cannot be resolved.
                        enum:
                        - Required
                        - Optional
                        type: string
                      resolve:
                        description: Resolve specifies when this reference should
                          be resolved. The default is 'IfNotPresent', which will attempt
                          to resolve the reference only when the corresponding field
                          is not present. Use 'Always' to resolve the reference on
                          every reconcile.
                        enum:
                        - Always
                        - IfNotPresent
                        type: string
                    type: object
                required:
                - name
                type: object
              providerRef:
                description: 'ProviderReference specifies the provider that will be
                  used to create, observe, update, and delete this managed resource.
                  Deprecated: Please use ProviderConfigReference, i.e. `providerConfigRef`'
                properties:
                  name:
                    description: Name of the referenced object.
                    type: string
                  policy:
                    description: Policies for referencing.
                    properties:
                      resolution:
                        default: Required
                        description: Resolution specifies whether resolution of this
                          reference is required. The default is 'Required', which
                          means the reconcile will fail if the reference cannot be
                          resolved. 'Optional' means this reference will be a no-op
                          if it cannot be resolved.
                        enum:
                        - Required
                        - Optional
                        type: string
                      resolve:
                        description: Resolve specifies when this reference should
                          be resolved. The default is 'IfNotPresent', which will attempt
                          to resolve the reference only when the corresponding field
                          is not present. Use 'Always' to resolve the reference on
                          every reconcile.
                        enum:
                        - Always
                        - IfNotPresent
                        type: string
                    type: object
                required:
                - name
                type: object
              publishConnectionDetailsTo:
                description: PublishConnectionDetailsTo specifies the connection secret
                  config which contains a name, metadata and a reference to secret
                  store config to which any connection details for this managed resource
                  should be written. Connection details frequently include the endpoint,
                  username, and password required to connect to the managed resource.
                properties:
                  configRef:
                    default:
                      name: default
                    description: SecretStoreConfigRef specifies which secret store
                      config should be used for this ConnectionSecret.
                    properties:
                      name:
                        description: Name of the referenced object.
                        type: string
                      policy:
                        description: Policies for referencing.
                        properties:
                          resolution:
                            default: Required
                            description: Resolution specifies whether resolution of
                              this reference is required. The default is 'Required',
                              which means the reconcile will fail if the reference
                              cannot be resolved. 'Optional' means this reference
                              will be a no-op if it cannot be resolved.
                            enum:
                            - Required
                            - Optional
                            type: string
                          resolve:
                            description: Resolve specifies when this reference should
                              be resolved. The default is 'IfNotPresent', which will
                              attempt to resolve the reference only when the corresponding
                              field is not present. Use 'Always' to resolve the reference
                              on every reconcile.
                            enum:
                            - Always
                            - IfNotPresent
                            type: string
                        type: object
                    required:
                    - name
                    type: object
                  metadata:
                    description: Metadata is the metadata for connection secret.
                    properties:
                      annotations:
                        additionalProperties:
                          type: string
                        description: Annotations are the annotations to be added to
                          connection secret. - For Kubernetes secrets, this will be
                          used as "metadata.annotations". - It is up to Secret Store
                          implementation for others store types.
                        type: object
                      labels:
                        additionalProperties:
                          type: string
                        description: Labels are the labels/tags to be added to connection
                          secret. - For Kubernetes secrets, this will be used as "metadata.labels".
                          - It is up to Secret Store implementation for others store
                          types.
                        type: object
                      type:
                        description: Type is the SecretType for the connection secret.
                          - Only valid for Kubernetes Secret Stores.
                        type: string
                    type: object
                  name:
                    description: Name is the name of the connection secret.
                    type: string
                required:
                - name
                type: object
              writeConnectionSecretToRef:
                description: WriteConnectionSecretToReference specifies the namespace
                  and name of a Secret to which any connection details for this managed
                  resource should be written. Connection details frequently include
                  the endpoint, username, and password required to connect to the
                  managed resource. This field is planned to be replaced in a future
                  release in favor of PublishConnectionDetailsTo. Currently, both
                  could be set independently and connection details would be published
                  to both without affecting each other.
                properties:
                  name:
                    description: Name of the secret.
                    type: string
                  namespace:
                    description: Namespace of the secret.
                    type: string
                required:
                - name
                - namespace
                type: object
            required:
            - forProvider
            type: object
          status:
            description: LoadBalancerStatus defines the observed state of LoadBalancer.
            properties:
              atProvider:
                description: LoadBalancerObservation defines the observed state of
                  LoadBalancer
                properties:
                  availabilityZones:
                    description: The subnets for the load balancer.
                    items:
                      properties:
                        loadBalancerAddresses:
                          items:
                            properties:
                              allocationID:
                                type: string
                              iPv6Address:
                                type: string
                              ipAddress:
                                type: string
                              privateIPv4Address:
                                type: string
                            type: object
                          type: array
                        outpostID:
                          type: string
                        subnetID:
                          type: string
                        zoneName:
                          type: string
                      type: object
                    type: array
                  canonicalHostedZoneID:
                    description: The ID of the Amazon Route 53 hosted zone associated
                      with the load balancer.
                    type: string
                  createdTime:
                    description: The date and time the load balancer was created.
                    format: date-time
                    type: string
                  dnsName:
                    description: The public DNS name of the load balancer.
                    type: string
                  loadBalancerARN:
                    description: The Amazon Resource Name (ARN) of the load balancer.
                    type: string
                  loadBalancerName:
                    description: The name of the load balancer.
                    type: string
                  state:
                    description: The state of the load balancer.
                    properties:
                      code:
                        type: string
                      reason:
                        type: string
                    type: object
                  type_:
                    description: The type of load balancer.
                    type: string
                  vpcID:
                    description: The ID of the VPC for the load balancer.
                    type: string
                type: object
              conditions:
                description: Conditions of the resource.
                items:
                  description: A Condition that may apply to a resource.
                  properties:
                    lastTransitionTime:
                      description: LastTransitionTime is the last time this condition
                        transitioned from one status to another.
                      format: date-time
                      type: string
                    message:
                      description: A Message containing details about this condition's
                        last transition from one status to another, if any.
                      type: string
                    reason:
                      description: A Reason for this condition's last transition from
                        one status to another.
                      type: string
                    status:
                      description: Status of this condition; is it currently True,
                        False, or Unknown?
                      type: string
                    type:
                      description: Type of this condition. At most one of each condition
                        type may apply to a resource at any point in time.
                      type: string
                  required:
                  - lastTransitionTime
                  - reason
                  - status
                  - type
                  type: object
                type: array
            type: object
        required:
        - spec
        type: object
    served: true
    storage: true
    subresources:
      status: {}
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []
