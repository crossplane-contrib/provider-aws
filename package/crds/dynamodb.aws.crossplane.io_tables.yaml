---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.8.0
  creationTimestamp: null
  name: tables.dynamodb.aws.crossplane.io
spec:
  group: dynamodb.aws.crossplane.io
  names:
    categories:
    - crossplane
    - managed
    - aws
    kind: Table
    listKind: TableList
    plural: tables
    singular: table
  scope: Cluster
  versions:
  - additionalPrinterColumns:
    - jsonPath: .status.conditions[?(@.type=='Ready')].status
      name: READY
      type: string
    - jsonPath: .status.conditions[?(@.type=='Synced')].status
      name: SYNCED
      type: string
    - jsonPath: .metadata.annotations.crossplane\.io/external-name
      name: EXTERNAL-NAME
      type: string
    name: v1alpha1
    schema:
      openAPIV3Schema:
        description: Table is the Schema for the Tables API
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: TableSpec defines the desired state of Table
            properties:
              deletionPolicy:
                default: Delete
                description: DeletionPolicy specifies what will happen to the underlying
                  external when this managed resource is deleted - either "Delete"
                  or "Orphan" the external resource.
                enum:
                - Orphan
                - Delete
                type: string
              forProvider:
                description: TableParameters defines the desired state of Table
                properties:
                  attributeDefinitions:
                    description: An array of attributes that describe the key schema
                      for the table and indexes.
                    items:
                      properties:
                        attributeName:
                          type: string
                        attributeType:
                          type: string
                      type: object
                    type: array
                  billingMode:
                    description: "Controls how you are charged for read and write
                      throughput and how you manage capacity. This setting can be
                      changed later. \n * PROVISIONED - We recommend using PROVISIONED
                      for predictable workloads. PROVISIONED sets the billing mode
                      to Provisioned Mode (https://docs.aws.amazon.com/amazondynamodb/latest/developerguide/HowItWorks.ReadWriteCapacityMode.html#HowItWorks.ProvisionedThroughput.Manual).
                      \n * PAY_PER_REQUEST - We recommend using PAY_PER_REQUEST for
                      unpredictable workloads. PAY_PER_REQUEST sets the billing mode
                      to On-Demand Mode (https://docs.aws.amazon.com/amazondynamodb/latest/developerguide/HowItWorks.ReadWriteCapacityMode.html#HowItWorks.OnDemand)."
                    type: string
                  globalSecondaryIndexes:
                    description: "One or more global secondary indexes (the maximum
                      is 20) to be created on the table. Each global secondary index
                      in the array includes the following: \n * IndexName - The name
                      of the global secondary index. Must be unique only for this
                      table. \n * KeySchema - Specifies the key schema for the global
                      secondary index. \n * Projection - Specifies attributes that
                      are copied (projected) from the table into the index. These
                      are in addition to the primary key attributes and index key
                      attributes, which are automatically projected. Each attribute
                      specification is composed of: ProjectionType - One of the following:
                      KEYS_ONLY - Only the index and primary keys are projected into
                      the index. INCLUDE - Only the specified table attributes are
                      projected into the index. The list of projected attributes is
                      in NonKeyAttributes. ALL - All of the table attributes are projected
                      into the index. NonKeyAttributes - A list of one or more non-key
                      attribute names that are projected into the secondary index.
                      The total count of attributes provided in NonKeyAttributes,
                      summed across all of the secondary indexes, must not exceed
                      100. If you project the same attribute into two different indexes,
                      this counts as two distinct attributes when determining the
                      total. \n * ProvisionedThroughput - The provisioned throughput
                      settings for the global secondary index, consisting of read
                      and write capacity units."
                    items:
                      properties:
                        indexName:
                          type: string
                        keySchema:
                          items:
                            properties:
                              attributeName:
                                type: string
                              keyType:
                                type: string
                            type: object
                          type: array
                        projection:
                          description: Represents attributes that are copied (projected)
                            from the table into an index. These are in addition to
                            the primary key attributes and index key attributes, which
                            are automatically projected.
                          properties:
                            nonKeyAttributes:
                              items:
                                type: string
                              type: array
                            projectionType:
                              type: string
                          type: object
                        provisionedThroughput:
                          description: "Represents the provisioned throughput settings
                            for a specified table or index. The settings can be modified
                            using the UpdateTable operation. \n For current minimum
                            and maximum provisioned throughput values, see Service,
                            Account, and Table Quotas (https://docs.aws.amazon.com/amazondynamodb/latest/developerguide/Limits.html)
                            in the Amazon DynamoDB Developer Guide."
                          properties:
                            readCapacityUnits:
                              format: int64
                              type: integer
                            writeCapacityUnits:
                              format: int64
                              type: integer
                          type: object
                      type: object
                    type: array
                  keySchema:
                    description: "Specifies the attributes that make up the primary
                      key for a table or an index. The attributes in KeySchema must
                      also be defined in the AttributeDefinitions array. For more
                      information, see Data Model (https://docs.aws.amazon.com/amazondynamodb/latest/developerguide/DataModel.html)
                      in the Amazon DynamoDB Developer Guide. \n Each KeySchemaElement
                      in the array is composed of: \n * AttributeName - The name of
                      this key attribute. \n * KeyType - The role that the key attribute
                      will assume: HASH - partition key RANGE - sort key \n The partition
                      key of an item is also known as its hash attribute. The term
                      \"hash attribute\" derives from the DynamoDB usage of an internal
                      hash function to evenly distribute data items across partitions,
                      based on their partition key values. \n The sort key of an item
                      is also known as its range attribute. The term \"range attribute\"
                      derives from the way DynamoDB stores items with the same partition
                      key physically close together, in sorted order by the sort key
                      value. \n For a simple primary key (partition key), you must
                      provide exactly one element with a KeyType of HASH. \n For a
                      composite primary key (partition key and sort key), you must
                      provide exactly two elements, in this order: The first element
                      must have a KeyType of HASH, and the second element must have
                      a KeyType of RANGE. \n For more information, see Working with
                      Tables (https://docs.aws.amazon.com/amazondynamodb/latest/developerguide/WorkingWithTables.html#WorkingWithTables.primary.key)
                      in the Amazon DynamoDB Developer Guide."
                    items:
                      properties:
                        attributeName:
                          type: string
                        keyType:
                          type: string
                      type: object
                    type: array
                  localSecondaryIndexes:
                    description: "One or more local secondary indexes (the maximum
                      is 5) to be created on the table. Each index is scoped to a
                      given partition key value. There is a 10 GB size limit per partition
                      key value; otherwise, the size of a local secondary index is
                      unconstrained. \n Each local secondary index in the array includes
                      the following: \n * IndexName - The name of the local secondary
                      index. Must be unique only for this table. \n * KeySchema -
                      Specifies the key schema for the local secondary index. The
                      key schema must begin with the same partition key as the table.
                      \n * Projection - Specifies attributes that are copied (projected)
                      from the table into the index. These are in addition to the
                      primary key attributes and index key attributes, which are automatically
                      projected. Each attribute specification is composed of: ProjectionType
                      - One of the following: KEYS_ONLY - Only the index and primary
                      keys are projected into the index. INCLUDE - Only the specified
                      table attributes are projected into the index. The list of projected
                      attributes is in NonKeyAttributes. ALL - All of the table attributes
                      are projected into the index. NonKeyAttributes - A list of one
                      or more non-key attribute names that are projected into the
                      secondary index. The total count of attributes provided in NonKeyAttributes,
                      summed across all of the secondary indexes, must not exceed
                      100. If you project the same attribute into two different indexes,
                      this counts as two distinct attributes when determining the
                      total."
                    items:
                      properties:
                        indexName:
                          type: string
                        keySchema:
                          items:
                            properties:
                              attributeName:
                                type: string
                              keyType:
                                type: string
                            type: object
                          type: array
                        projection:
                          description: Represents attributes that are copied (projected)
                            from the table into an index. These are in addition to
                            the primary key attributes and index key attributes, which
                            are automatically projected.
                          properties:
                            nonKeyAttributes:
                              items:
                                type: string
                              type: array
                            projectionType:
                              type: string
                          type: object
                      type: object
                    type: array
                  provisionedThroughput:
                    description: "Represents the provisioned throughput settings for
                      a specified table or index. The settings can be modified using
                      the UpdateTable operation. \n If you set BillingMode as PROVISIONED,
                      you must specify this property. If you set BillingMode as PAY_PER_REQUEST,
                      you cannot specify this property. \n For current minimum and
                      maximum provisioned throughput values, see Service, Account,
                      and Table Quotas (https://docs.aws.amazon.com/amazondynamodb/latest/developerguide/Limits.html)
                      in the Amazon DynamoDB Developer Guide."
                    properties:
                      readCapacityUnits:
                        format: int64
                        type: integer
                      writeCapacityUnits:
                        format: int64
                        type: integer
                    type: object
                  region:
                    description: Region is which region the Table will be created.
                    type: string
                  sseSpecification:
                    description: Represents the settings used to enable server-side
                      encryption.
                    properties:
                      enabled:
                        type: boolean
                      kmsMasterKeyID:
                        type: string
                      sseType:
                        type: string
                    type: object
                  streamSpecification:
                    description: "The settings for DynamoDB Streams on the table.
                      These settings consist of: \n * StreamEnabled - Indicates whether
                      DynamoDB Streams is to be enabled (true) or disabled (false).
                      \n * StreamViewType - When an item in the table is modified,
                      StreamViewType determines what information is written to the
                      table's stream. Valid values for StreamViewType are: KEYS_ONLY
                      - Only the key attributes of the modified item are written to
                      the stream. NEW_IMAGE - The entire item, as it appears after
                      it was modified, is written to the stream. OLD_IMAGE - The entire
                      item, as it appeared before it was modified, is written to the
                      stream. NEW_AND_OLD_IMAGES - Both the new and the old item images
                      of the item are written to the stream."
                    properties:
                      streamEnabled:
                        type: boolean
                      streamViewType:
                        type: string
                    type: object
                  tableClass:
                    description: The table class of the new table. Valid values are
                      STANDARD and STANDARD_INFREQUENT_ACCESS.
                    type: string
                  tags:
                    description: A list of key-value pairs to label the table. For
                      more information, see Tagging for DynamoDB (https://docs.aws.amazon.com/amazondynamodb/latest/developerguide/Tagging.html).
                    items:
                      properties:
                        key:
                          type: string
                        value:
                          type: string
                      type: object
                    type: array
                required:
                - attributeDefinitions
                - keySchema
                - region
                type: object
              providerConfigRef:
                default:
                  name: default
                description: ProviderConfigReference specifies how the provider that
                  will be used to create, observe, update, and delete this managed
                  resource should be configured.
                properties:
                  name:
                    description: Name of the referenced object.
                    type: string
                  policy:
                    description: Policies for referencing.
                    properties:
                      resolution:
                        default: Required
                        description: Resolution specifies whether resolution of this
                          reference is required. The default is 'Required', which
                          means the reconcile will fail if the reference cannot be
                          resolved. 'Optional' means this reference will be a no-op
                          if it cannot be resolved.
                        enum:
                        - Required
                        - Optional
                        type: string
                      resolve:
                        description: Resolve specifies when this reference should
                          be resolved. The default is 'IfNotPresent', which will attempt
                          to resolve the reference only when the corresponding field
                          is not present. Use 'Always' to resolve the reference on
                          every reconcile.
                        enum:
                        - Always
                        - IfNotPresent
                        type: string
                    type: object
                required:
                - name
                type: object
              providerRef:
                description: 'ProviderReference specifies the provider that will be
                  used to create, observe, update, and delete this managed resource.
                  Deprecated: Please use ProviderConfigReference, i.e. `providerConfigRef`'
                properties:
                  name:
                    description: Name of the referenced object.
                    type: string
                  policy:
                    description: Policies for referencing.
                    properties:
                      resolution:
                        default: Required
                        description: Resolution specifies whether resolution of this
                          reference is required. The default is 'Required', which
                          means the reconcile will fail if the reference cannot be
                          resolved. 'Optional' means this reference will be a no-op
                          if it cannot be resolved.
                        enum:
                        - Required
                        - Optional
                        type: string
                      resolve:
                        description: Resolve specifies when this reference should
                          be resolved. The default is 'IfNotPresent', which will attempt
                          to resolve the reference only when the corresponding field
                          is not present. Use 'Always' to resolve the reference on
                          every reconcile.
                        enum:
                        - Always
                        - IfNotPresent
                        type: string
                    type: object
                required:
                - name
                type: object
              publishConnectionDetailsTo:
                description: PublishConnectionDetailsTo specifies the connection secret
                  config which contains a name, metadata and a reference to secret
                  store config to which any connection details for this managed resource
                  should be written. Connection details frequently include the endpoint,
                  username, and password required to connect to the managed resource.
                properties:
                  configRef:
                    default:
                      name: default
                    description: SecretStoreConfigRef specifies which secret store
                      config should be used for this ConnectionSecret.
                    properties:
                      name:
                        description: Name of the referenced object.
                        type: string
                      policy:
                        description: Policies for referencing.
                        properties:
                          resolution:
                            default: Required
                            description: Resolution specifies whether resolution of
                              this reference is required. The default is 'Required',
                              which means the reconcile will fail if the reference
                              cannot be resolved. 'Optional' means this reference
                              will be a no-op if it cannot be resolved.
                            enum:
                            - Required
                            - Optional
                            type: string
                          resolve:
                            description: Resolve specifies when this reference should
                              be resolved. The default is 'IfNotPresent', which will
                              attempt to resolve the reference only when the corresponding
                              field is not present. Use 'Always' to resolve the reference
                              on every reconcile.
                            enum:
                            - Always
                            - IfNotPresent
                            type: string
                        type: object
                    required:
                    - name
                    type: object
                  metadata:
                    description: Metadata is the metadata for connection secret.
                    properties:
                      annotations:
                        additionalProperties:
                          type: string
                        description: Annotations are the annotations to be added to
                          connection secret. - For Kubernetes secrets, this will be
                          used as "metadata.annotations". - It is up to Secret Store
                          implementation for others store types.
                        type: object
                      labels:
                        additionalProperties:
                          type: string
                        description: Labels are the labels/tags to be added to connection
                          secret. - For Kubernetes secrets, this will be used as "metadata.labels".
                          - It is up to Secret Store implementation for others store
                          types.
                        type: object
                      type:
                        description: Type is the SecretType for the connection secret.
                          - Only valid for Kubernetes Secret Stores.
                        type: string
                    type: object
                  name:
                    description: Name is the name of the connection secret.
                    type: string
                required:
                - name
                type: object
              writeConnectionSecretToRef:
                description: WriteConnectionSecretToReference specifies the namespace
                  and name of a Secret to which any connection details for this managed
                  resource should be written. Connection details frequently include
                  the endpoint, username, and password required to connect to the
                  managed resource. This field is planned to be replaced in a future
                  release in favor of PublishConnectionDetailsTo. Currently, both
                  could be set independently and connection details would be published
                  to both without affecting each other.
                properties:
                  name:
                    description: Name of the secret.
                    type: string
                  namespace:
                    description: Namespace of the secret.
                    type: string
                required:
                - name
                - namespace
                type: object
            required:
            - forProvider
            type: object
          status:
            description: TableStatus defines the observed state of Table.
            properties:
              atProvider:
                description: TableObservation defines the observed state of Table
                properties:
                  archivalSummary:
                    description: Contains information about the table archive.
                    properties:
                      archivalBackupARN:
                        type: string
                      archivalDateTime:
                        format: date-time
                        type: string
                      archivalReason:
                        type: string
                    type: object
                  billingModeSummary:
                    description: Contains the details for the read/write capacity
                      mode.
                    properties:
                      billingMode:
                        type: string
                      lastUpdateToPayPerRequestDateTime:
                        format: date-time
                        type: string
                    type: object
                  creationDateTime:
                    description: The date and time when the table was created, in
                      UNIX epoch time (http://www.epochconverter.com/) format.
                    format: date-time
                    type: string
                  globalTableVersion:
                    description: Represents the version of global tables (https://docs.aws.amazon.com/amazondynamodb/latest/developerguide/GlobalTables.html)
                      in use, if the table is replicated across Amazon Web Services
                      Regions.
                    type: string
                  itemCount:
                    description: The number of items in the specified table. DynamoDB
                      updates this value approximately every six hours. Recent changes
                      might not be reflected in this value.
                    format: int64
                    type: integer
                  latestStreamARN:
                    description: The Amazon Resource Name (ARN) that uniquely identifies
                      the latest stream for this table.
                    type: string
                  latestStreamLabel:
                    description: "A timestamp, in ISO 8601 format, for this stream.
                      \n Note that LatestStreamLabel is not a unique identifier for
                      the stream, because it is possible that a stream from another
                      table might have the same timestamp. However, the combination
                      of the following three elements is guaranteed to be unique:
                      \n * Amazon Web Services customer ID \n * Table name \n * StreamLabel"
                    type: string
                  replicas:
                    description: Represents replicas of the table.
                    items:
                      properties:
                        globalSecondaryIndexes:
                          items:
                            properties:
                              indexName:
                                type: string
                              provisionedThroughputOverride:
                                description: Replica-specific provisioned throughput
                                  settings. If not specified, uses the source table's
                                  provisioned throughput settings.
                                properties:
                                  readCapacityUnits:
                                    format: int64
                                    type: integer
                                type: object
                            type: object
                          type: array
                        kmsMasterKeyID:
                          type: string
                        provisionedThroughputOverride:
                          description: Replica-specific provisioned throughput settings.
                            If not specified, uses the source table's provisioned
                            throughput settings.
                          properties:
                            readCapacityUnits:
                              format: int64
                              type: integer
                          type: object
                        regionName:
                          type: string
                        replicaInaccessibleDateTime:
                          format: date-time
                          type: string
                        replicaStatus:
                          type: string
                        replicaStatusDescription:
                          type: string
                        replicaStatusPercentProgress:
                          type: string
                        replicaTableClassSummary:
                          description: Contains details of the table class.
                          properties:
                            lastUpdateDateTime:
                              format: date-time
                              type: string
                            tableClass:
                              type: string
                          type: object
                      type: object
                    type: array
                  restoreSummary:
                    description: Contains details for the restore.
                    properties:
                      restoreDateTime:
                        format: date-time
                        type: string
                      restoreInProgress:
                        type: boolean
                      sourceBackupARN:
                        type: string
                      sourceTableARN:
                        type: string
                    type: object
                  sseDescription:
                    description: The description of the server-side encryption status
                      on the specified table.
                    properties:
                      inaccessibleEncryptionDateTime:
                        format: date-time
                        type: string
                      kmsMasterKeyARN:
                        type: string
                      sseType:
                        type: string
                      status:
                        type: string
                    type: object
                  tableARN:
                    description: The Amazon Resource Name (ARN) that uniquely identifies
                      the table.
                    type: string
                  tableClassSummary:
                    description: Contains details of the table class.
                    properties:
                      lastUpdateDateTime:
                        format: date-time
                        type: string
                      tableClass:
                        type: string
                    type: object
                  tableID:
                    description: Unique identifier for the table for which the backup
                      was created.
                    type: string
                  tableName:
                    description: The name of the table.
                    type: string
                  tableSizeBytes:
                    description: The total size of the specified table, in bytes.
                      DynamoDB updates this value approximately every six hours. Recent
                      changes might not be reflected in this value.
                    format: int64
                    type: integer
                  tableStatus:
                    description: "The current state of the table: \n * CREATING -
                      The table is being created. \n * UPDATING - The table is being
                      updated. \n * DELETING - The table is being deleted. \n * ACTIVE
                      - The table is ready for use. \n * INACCESSIBLE_ENCRYPTION_CREDENTIALS
                      - The KMS key used to encrypt the table in inaccessible. Table
                      operations may fail due to failure to use the KMS key. DynamoDB
                      will initiate the table archival process when a table's KMS
                      key remains inaccessible for more than seven days. \n * ARCHIVING
                      - The table is being archived. Operations are not allowed until
                      archival is complete. \n * ARCHIVED - The table has been archived.
                      See the ArchivalReason for more information."
                    type: string
                type: object
              conditions:
                description: Conditions of the resource.
                items:
                  description: A Condition that may apply to a resource.
                  properties:
                    lastTransitionTime:
                      description: LastTransitionTime is the last time this condition
                        transitioned from one status to another.
                      format: date-time
                      type: string
                    message:
                      description: A Message containing details about this condition's
                        last transition from one status to another, if any.
                      type: string
                    reason:
                      description: A Reason for this condition's last transition from
                        one status to another.
                      type: string
                    status:
                      description: Status of this condition; is it currently True,
                        False, or Unknown?
                      type: string
                    type:
                      description: Type of this condition. At most one of each condition
                        type may apply to a resource at any point in time.
                      type: string
                  required:
                  - lastTransitionTime
                  - reason
                  - status
                  - type
                  type: object
                type: array
            type: object
        required:
        - spec
        type: object
    served: true
    storage: true
    subresources:
      status: {}
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []
