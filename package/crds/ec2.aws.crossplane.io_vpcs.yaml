---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.8.0
  creationTimestamp: null
  name: vpcs.ec2.aws.crossplane.io
spec:
  group: ec2.aws.crossplane.io
  names:
    categories:
    - crossplane
    - managed
    - aws
    kind: VPC
    listKind: VPCList
    plural: vpcs
    singular: vpc
  scope: Cluster
  versions:
  - additionalPrinterColumns:
    - jsonPath: .status.conditions[?(@.type=='Ready')].status
      name: READY
      type: string
    - jsonPath: .status.conditions[?(@.type=='Synced')].status
      name: SYNCED
      type: string
    - jsonPath: .metadata.annotations.crossplane\.io/external-name
      name: ID
      type: string
    - jsonPath: .spec.forProvider.cidrBlock
      name: CIDR
      type: string
    - jsonPath: .spec.forProvider.ipv6CidrBlock
      name: IPV6CIDR
      type: string
    - jsonPath: .metadata.creationTimestamp
      name: AGE
      type: date
    name: v1beta1
    schema:
      openAPIV3Schema:
        description: A VPC is a managed resource that represents an AWS Virtual Private
          Cloud.
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: A VPCSpec defines the desired state of a VPC.
            properties:
              deletionPolicy:
                default: Delete
                description: DeletionPolicy specifies what will happen to the underlying
                  external when this managed resource is deleted - either "Delete"
                  or "Orphan" the external resource.
                enum:
                - Orphan
                - Delete
                type: string
              forProvider:
                description: VPCParameters define the desired state of an AWS Virtual
                  Private Cloud.
                properties:
                  amazonProvidedIpv6CidrBlock:
                    description: Requests an Amazon-provided IPv6 CIDR block with
                      a /56 prefix length for the VPC. You cannot specify the range
                      of IP addresses, or the size of the CIDR block.
                    type: boolean
                  cidrBlock:
                    description: CIDRBlock is the IPv4 network range for the VPC,
                      in CIDR notation. For example, 10.0.0.0/16.
                    type: string
                  enableDnsHostNames:
                    description: Indicates whether the instances launched in the VPC
                      get DNS hostnames.
                    type: boolean
                  enableDnsSupport:
                    description: A boolean flag to enable/disable DNS support in the
                      VPC
                    type: boolean
                  instanceTenancy:
                    description: The allowed tenancy of instances launched into the
                      VPC.
                    type: string
                  ipv6CidrBlock:
                    description: The IPv6 CIDR block from the IPv6 address pool. You
                      must also specify Ipv6Pool in the request. To let Amazon choose
                      the IPv6 CIDR block for you, omit this parameter.
                    type: string
                  ipv6Pool:
                    description: The ID of an IPv6 address pool from which to allocate
                      the IPv6 CIDR block.
                    type: string
                  region:
                    description: Region is the region you'd like your VPC to be created
                      in.
                    type: string
                  tags:
                    description: Tags are used as identification helpers between AWS
                      resources.
                    items:
                      description: Tag defines a tag
                      properties:
                        key:
                          description: Key is the name of the tag.
                          type: string
                        value:
                          description: Value is the value of the tag.
                          type: string
                      required:
                      - key
                      - value
                      type: object
                    type: array
                required:
                - cidrBlock
                type: object
              providerConfigRef:
                default:
                  name: default
                description: ProviderConfigReference specifies how the provider that
                  will be used to create, observe, update, and delete this managed
                  resource should be configured.
                properties:
                  name:
                    description: Name of the referenced object.
                    type: string
                  policy:
                    description: Policies for referencing.
                    properties:
                      resolution:
                        default: Required
                        description: Resolution specifies whether resolution of this
                          reference is required. The default is 'Required', which
                          means the reconcile will fail if the reference cannot be
                          resolved. 'Optional' means this reference will be a no-op
                          if it cannot be resolved.
                        enum:
                        - Required
                        - Optional
                        type: string
                      resolve:
                        description: Resolve specifies when this reference should
                          be resolved. The default is 'IfNotPresent', which will attempt
                          to resolve the reference only when the corresponding field
                          is not present. Use 'Always' to resolve the reference on
                          every reconcile.
                        enum:
                        - Always
                        - IfNotPresent
                        type: string
                    type: object
                required:
                - name
                type: object
              providerRef:
                description: 'ProviderReference specifies the provider that will be
                  used to create, observe, update, and delete this managed resource.
                  Deprecated: Please use ProviderConfigReference, i.e. `providerConfigRef`'
                properties:
                  name:
                    description: Name of the referenced object.
                    type: string
                  policy:
                    description: Policies for referencing.
                    properties:
                      resolution:
                        default: Required
                        description: Resolution specifies whether resolution of this
                          reference is required. The default is 'Required', which
                          means the reconcile will fail if the reference cannot be
                          resolved. 'Optional' means this reference will be a no-op
                          if it cannot be resolved.
                        enum:
                        - Required
                        - Optional
                        type: string
                      resolve:
                        description: Resolve specifies when this reference should
                          be resolved. The default is 'IfNotPresent', which will attempt
                          to resolve the reference only when the corresponding field
                          is not present. Use 'Always' to resolve the reference on
                          every reconcile.
                        enum:
                        - Always
                        - IfNotPresent
                        type: string
                    type: object
                required:
                - name
                type: object
              publishConnectionDetailsTo:
                description: PublishConnectionDetailsTo specifies the connection secret
                  config which contains a name, metadata and a reference to secret
                  store config to which any connection details for this managed resource
                  should be written. Connection details frequently include the endpoint,
                  username, and password required to connect to the managed resource.
                properties:
                  configRef:
                    default:
                      name: default
                    description: SecretStoreConfigRef specifies which secret store
                      config should be used for this ConnectionSecret.
                    properties:
                      name:
                        description: Name of the referenced object.
                        type: string
                      policy:
                        description: Policies for referencing.
                        properties:
                          resolution:
                            default: Required
                            description: Resolution specifies whether resolution of
                              this reference is required. The default is 'Required',
                              which means the reconcile will fail if the reference
                              cannot be resolved. 'Optional' means this reference
                              will be a no-op if it cannot be resolved.
                            enum:
                            - Required
                            - Optional
                            type: string
                          resolve:
                            description: Resolve specifies when this reference should
                              be resolved. The default is 'IfNotPresent', which will
                              attempt to resolve the reference only when the corresponding
                              field is not present. Use 'Always' to resolve the reference
                              on every reconcile.
                            enum:
                            - Always
                            - IfNotPresent
                            type: string
                        type: object
                    required:
                    - name
                    type: object
                  metadata:
                    description: Metadata is the metadata for connection secret.
                    properties:
                      annotations:
                        additionalProperties:
                          type: string
                        description: Annotations are the annotations to be added to
                          connection secret. - For Kubernetes secrets, this will be
                          used as "metadata.annotations". - It is up to Secret Store
                          implementation for others store types.
                        type: object
                      labels:
                        additionalProperties:
                          type: string
                        description: Labels are the labels/tags to be added to connection
                          secret. - For Kubernetes secrets, this will be used as "metadata.labels".
                          - It is up to Secret Store implementation for others store
                          types.
                        type: object
                      type:
                        description: Type is the SecretType for the connection secret.
                          - Only valid for Kubernetes Secret Stores.
                        type: string
                    type: object
                  name:
                    description: Name is the name of the connection secret.
                    type: string
                required:
                - name
                type: object
              writeConnectionSecretToRef:
                description: WriteConnectionSecretToReference specifies the namespace
                  and name of a Secret to which any connection details for this managed
                  resource should be written. Connection details frequently include
                  the endpoint, username, and password required to connect to the
                  managed resource. This field is planned to be replaced in a future
                  release in favor of PublishConnectionDetailsTo. Currently, both
                  could be set independently and connection details would be published
                  to both without affecting each other.
                properties:
                  name:
                    description: Name of the secret.
                    type: string
                  namespace:
                    description: Namespace of the secret.
                    type: string
                required:
                - name
                - namespace
                type: object
            required:
            - forProvider
            type: object
          status:
            description: A VPCStatus represents the observed state of a VPC.
            properties:
              atProvider:
                description: VPCObservation keeps the state for the external resource
                properties:
                  cidrBlockAssociationSet:
                    description: Information about the IPv4 CIDR blocks associated
                      with the VPC.
                    items:
                      description: VPCCIDRBlockAssociation represents the association
                        of IPv4 CIDR blocks with the VPC.
                      properties:
                        associationId:
                          description: The association ID for the IPv4 CIDR block.
                          type: string
                        cidrBlock:
                          description: The IPv4 CIDR block.
                          type: string
                        cidrBlockState:
                          description: Information about the state of the CIDR block.
                          properties:
                            state:
                              description: The state of the CIDR block.
                              type: string
                            statusMessage:
                              description: A message about the status of the CIDR
                                block, if applicable.
                              type: string
                          type: object
                      type: object
                    type: array
                  dhcpOptionsId:
                    description: The ID of the set of DHCP options you've associated
                      with the VPC.
                    type: string
                  ipv6CidrBlockAssociationSet:
                    description: Information about the IPv6 CIDR blocks associated
                      with the VPC.
                    items:
                      description: VPCIPv6CidrBlockAssociation represents the association
                        of IPv6 CIDR blocks with the VPC.
                      properties:
                        associationId:
                          description: The association ID for the IPv6 CIDR block.
                          type: string
                        ipv6CidrBlock:
                          description: The IPv6 CIDR block.
                          type: string
                        ipv6CidrBlockState:
                          description: Information about the state of the CIDR block.
                          properties:
                            state:
                              description: The state of the CIDR block.
                              type: string
                            statusMessage:
                              description: A message about the status of the CIDR
                                block, if applicable.
                              type: string
                          type: object
                        ipv6Pool:
                          description: The ID of the IPv6 address pool from which
                            the IPv6 CIDR block is allocated.
                          type: string
                        networkBorderGroup:
                          description: The name of the location from which we advertise
                            the IPV6 CIDR block.
                          type: string
                      type: object
                    type: array
                  isDefault:
                    description: Indicates whether the VPC is the default VPC.
                    type: boolean
                  ownerId:
                    description: The ID of the AWS account that owns the VPC.
                    type: string
                  vpcId:
                    description: The ID of the VPC.
                    type: string
                  vpcState:
                    description: VPCState is the current state of the VPC.
                    type: string
                type: object
              conditions:
                description: Conditions of the resource.
                items:
                  description: A Condition that may apply to a resource.
                  properties:
                    lastTransitionTime:
                      description: LastTransitionTime is the last time this condition
                        transitioned from one status to another.
                      format: date-time
                      type: string
                    message:
                      description: A Message containing details about this condition's
                        last transition from one status to another, if any.
                      type: string
                    reason:
                      description: A Reason for this condition's last transition from
                        one status to another.
                      type: string
                    status:
                      description: Status of this condition; is it currently True,
                        False, or Unknown?
                      type: string
                    type:
                      description: Type of this condition. At most one of each condition
                        type may apply to a resource at any point in time.
                      type: string
                  required:
                  - lastTransitionTime
                  - reason
                  - status
                  - type
                  type: object
                type: array
            type: object
        required:
        - spec
        type: object
    served: true
    storage: true
    subresources:
      status: {}
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []
