apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.4.0
  creationTimestamp: null
  name: functions.lambda.aws.crossplane.io
spec:
  group: lambda.aws.crossplane.io
  names:
    categories:
    - crossplane
    - managed
    - aws
    kind: Function
    listKind: FunctionList
    plural: functions
    singular: function
  scope: Cluster
  versions:
  - additionalPrinterColumns:
    - jsonPath: .status.conditions[?(@.type=='Ready')].status
      name: READY
      type: string
    - jsonPath: .status.conditions[?(@.type=='Synced')].status
      name: SYNCED
      type: string
    - jsonPath: .metadata.annotations.crossplane\.io/external-name
      name: EXTERNAL-NAME
      type: string
    name: v1alpha1
    schema:
      openAPIV3Schema:
        description: Function is the Schema for the Functions API
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: FunctionSpec defines the desired state of Function
            properties:
              deletionPolicy:
                description: DeletionPolicy specifies what will happen to the underlying external when this managed resource is deleted - either "Delete" or "Orphan" the external resource. The "Delete" policy is the default when no policy is specified.
                enum:
                - Orphan
                - Delete
                type: string
              forProvider:
                description: FunctionParameters defines the desired state of Function
                properties:
                  code:
                    description: The code for the function.
                    properties:
                      s3Bucket:
                        type: string
                      s3Key:
                        type: string
                      s3ObjectVersion:
                        type: string
                      zipFile:
                        format: byte
                        type: string
                    type: object
                  deadLetterConfig:
                    description: A dead letter queue configuration that specifies the queue or topic where Lambda sends asynchronous events when they fail processing. For more information, see Dead Letter Queues (https://docs.aws.amazon.com/lambda/latest/dg/invocation-async.html#dlq).
                    properties:
                      targetARN:
                        type: string
                    type: object
                  description:
                    description: A description of the function.
                    type: string
                  environment:
                    description: Environment variables that are accessible from function code during execution.
                    properties:
                      variables:
                        additionalProperties:
                          type: string
                        type: object
                    type: object
                  fileSystemConfigs:
                    description: Connection settings for an Amazon EFS file system.
                    items:
                      properties:
                        arn:
                          type: string
                        localMountPath:
                          type: string
                      type: object
                    type: array
                  functionName:
                    description: "The name of the Lambda function. \n Name formats \n    * Function name - my-function. \n    * Function ARN - arn:aws:lambda:us-west-2:123456789012:function:my-function. \n    * Partial ARN - 123456789012:function:my-function. \n The length constraint applies only to the full ARN. If you specify only the function name, it is limited to 64 characters in length."
                    type: string
                  handler:
                    description: The name of the method within your code that Lambda calls to execute your function. The format includes the file name. It can also include namespaces and other qualifiers, depending on the runtime. For more information, see Programming Model (https://docs.aws.amazon.com/lambda/latest/dg/programming-model-v2.html).
                    type: string
                  kmsKeyARN:
                    description: The ARN of the AWS Key Management Service (AWS KMS) key that's used to encrypt your function's environment variables. If it's not provided, AWS Lambda uses a default service key.
                    type: string
                  layers:
                    description: A list of function layers (https://docs.aws.amazon.com/lambda/latest/dg/configuration-layers.html) to add to the function's execution environment. Specify each layer by its ARN, including the version.
                    items:
                      type: string
                    type: array
                  memorySize:
                    description: The amount of memory that your function has access to. Increasing the function's memory also increases its CPU allocation. The default value is 128 MB. The value must be a multiple of 64 MB.
                    format: int64
                    type: integer
                  publish:
                    description: Set to true to publish the first version of the function during creation.
                    type: boolean
                  region:
                    description: Region is which region the Function will be created.
                    type: string
                  role:
                    description: The Amazon Resource Name (ARN) of the function's execution role.
                    type: string
                  runtime:
                    description: The identifier of the function's runtime (https://docs.aws.amazon.com/lambda/latest/dg/lambda-runtimes.html).
                    type: string
                  tags:
                    additionalProperties:
                      type: string
                    description: A list of tags (https://docs.aws.amazon.com/lambda/latest/dg/tagging.html) to apply to the function.
                    type: object
                  timeout:
                    description: The amount of time that Lambda allows a function to run before stopping it. The default is 3 seconds. The maximum allowed value is 900 seconds.
                    format: int64
                    type: integer
                  tracingConfig:
                    description: Set Mode to Active to sample and trace a subset of incoming requests with AWS X-Ray.
                    properties:
                      mode:
                        type: string
                    type: object
                  vpcConfig:
                    description: For network connectivity to AWS resources in a VPC, specify a list of security groups and subnets in the VPC. When you connect a function to a VPC, it can only access resources and the internet through that VPC. For more information, see VPC Settings (https://docs.aws.amazon.com/lambda/latest/dg/configuration-vpc.html).
                    properties:
                      securityGroupIDs:
                        items:
                          type: string
                        type: array
                      subnetIDs:
                        items:
                          type: string
                        type: array
                    type: object
                required:
                - code
                - functionName
                - handler
                - region
                - role
                - runtime
                type: object
              providerConfigRef:
                description: ProviderConfigReference specifies how the provider that will be used to create, observe, update, and delete this managed resource should be configured.
                properties:
                  name:
                    description: Name of the referenced object.
                    type: string
                required:
                - name
                type: object
              providerRef:
                description: 'ProviderReference specifies the provider that will be used to create, observe, update, and delete this managed resource. Deprecated: Please use ProviderConfigReference, i.e. `providerConfigRef`'
                properties:
                  name:
                    description: Name of the referenced object.
                    type: string
                required:
                - name
                type: object
              writeConnectionSecretToRef:
                description: WriteConnectionSecretToReference specifies the namespace and name of a Secret to which any connection details for this managed resource should be written. Connection details frequently include the endpoint, username, and password required to connect to the managed resource.
                properties:
                  name:
                    description: Name of the secret.
                    type: string
                  namespace:
                    description: Namespace of the secret.
                    type: string
                required:
                - name
                - namespace
                type: object
            required:
            - forProvider
            type: object
          status:
            description: FunctionStatus defines the observed state of Function.
            properties:
              atProvider:
                description: FunctionObservation defines the observed state of Function
                properties:
                  codeSHA256:
                    description: The SHA256 hash of the function's deployment package.
                    type: string
                  codeSize:
                    description: The size of the function's deployment package, in bytes.
                    format: int64
                    type: integer
                  functionARN:
                    description: The function's Amazon Resource Name (ARN).
                    type: string
                  lastModified:
                    description: The date and time that the function was last updated, in ISO-8601 format (https://www.w3.org/TR/NOTE-datetime) (YYYY-MM-DDThh:mm:ss.sTZD).
                    type: string
                  lastUpdateStatus:
                    description: The status of the last update that was performed on the function. This is first set to Successful after function creation completes.
                    type: string
                  lastUpdateStatusReason:
                    description: The reason for the last update that was performed on the function.
                    type: string
                  lastUpdateStatusReasonCode:
                    description: The reason code for the last update that was performed on the function.
                    type: string
                  masterARN:
                    description: For Lambda@Edge functions, the ARN of the master function.
                    type: string
                  revisionID:
                    description: The latest updated revision of the function or alias.
                    type: string
                  state:
                    description: The current state of the function. When the state is Inactive, you can reactivate the function by invoking it.
                    type: string
                  stateReason:
                    description: The reason for the function's current state.
                    type: string
                  stateReasonCode:
                    description: The reason code for the function's current state. When the code is Creating, you can't invoke or modify the function.
                    type: string
                  version:
                    description: The version of the Lambda function.
                    type: string
                type: object
              conditions:
                description: Conditions of the resource.
                items:
                  description: A Condition that may apply to a resource.
                  properties:
                    lastTransitionTime:
                      description: LastTransitionTime is the last time this condition transitioned from one status to another.
                      format: date-time
                      type: string
                    message:
                      description: A Message containing details about this condition's last transition from one status to another, if any.
                      type: string
                    reason:
                      description: A Reason for this condition's last transition from one status to another.
                      type: string
                    status:
                      description: Status of this condition; is it currently True, False, or Unknown?
                      type: string
                    type:
                      description: Type of this condition. At most one of each condition type may apply to a resource at any point in time.
                      type: string
                  required:
                  - lastTransitionTime
                  - reason
                  - status
                  - type
                  type: object
                type: array
            required:
            - atProvider
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []
