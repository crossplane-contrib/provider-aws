---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.8.0
  creationTimestamp: null
  name: dbclusters.neptune.aws.crossplane.io
spec:
  group: neptune.aws.crossplane.io
  names:
    categories:
    - crossplane
    - managed
    - aws
    kind: DBCluster
    listKind: DBClusterList
    plural: dbclusters
    singular: dbcluster
  scope: Cluster
  versions:
  - additionalPrinterColumns:
    - jsonPath: .status.conditions[?(@.type=='Ready')].status
      name: READY
      type: string
    - jsonPath: .status.conditions[?(@.type=='Synced')].status
      name: SYNCED
      type: string
    - jsonPath: .metadata.annotations.crossplane\.io/external-name
      name: EXTERNAL-NAME
      type: string
    name: v1alpha1
    schema:
      openAPIV3Schema:
        description: DBCluster is the Schema for the DBClusters API
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: DBClusterSpec defines the desired state of DBCluster
            properties:
              deletionPolicy:
                default: Delete
                description: DeletionPolicy specifies what will happen to the underlying
                  external when this managed resource is deleted - either "Delete"
                  or "Orphan" the external resource.
                enum:
                - Orphan
                - Delete
                type: string
              forProvider:
                description: DBClusterParameters defines the desired state of DBCluster
                properties:
                  applyImmediately:
                    description: "The ApplyImmediately parameter only affects the
                      NewDBClusterIdentifier and MasterUserPassword values. If you
                      set the ApplyImmediately parameter value to false, then changes
                      to the NewDBClusterIdentifier and MasterUserPassword values
                      are applied during the next maintenance window. All other changes
                      are applied immediately, regardless of the value of the ApplyImmediately
                      parameter. \n Default: false"
                    type: boolean
                  availabilityZones:
                    description: A list of EC2 Availability Zones that instances in
                      the DB cluster can be created in.
                    items:
                      type: string
                    type: array
                  backupRetentionPeriod:
                    description: "The number of days for which automated backups are
                      retained. You must specify a minimum value of 1. \n Default:
                      1 \n Constraints: \n * Must be a value from 1 to 35"
                    format: int64
                    type: integer
                  characterSetName:
                    description: (Not supported by Neptune)
                    type: string
                  copyTagsToSnapshot:
                    description: If set to true, tags are copied to any snapshot of
                      the DB cluster that is created.
                    type: boolean
                  databaseName:
                    description: The name for your database of up to 64 alpha-numeric
                      characters. If you do not provide a name, Amazon Neptune will
                      not create a database in the DB cluster you are creating.
                    type: string
                  dbClusterParameterGroupName:
                    description: "The name of the DB cluster parameter group to associate
                      with this DB cluster. If this argument is omitted, the default
                      is used. \n Constraints: \n * If supplied, must match the name
                      of an existing DBClusterParameterGroup."
                    type: string
                  dbSubnetGroupName:
                    description: "A DB subnet group to associate with this DB cluster.
                      \n Constraints: Must match the name of an existing DBSubnetGroup.
                      Must not be default. \n Example: mySubnetgroup"
                    type: string
                  deletionProtection:
                    description: A value that indicates whether the DB cluster has
                      deletion protection enabled. The database can't be deleted when
                      deletion protection is enabled. By default, deletion protection
                      is enabled.
                    type: boolean
                  destinationRegion:
                    description: DestinationRegion is used for presigning the request
                      to a given region.
                    type: string
                  enableCloudwatchLogsExports:
                    description: The list of log types that need to be enabled for
                      exporting to CloudWatch Logs.
                    items:
                      type: string
                    type: array
                  enableIAMDatabaseAuthentication:
                    description: "If set to true, enables Amazon Identity and Access
                      Management (IAM) authentication for the entire DB cluster (this
                      cannot be set at an instance level). \n Default: false."
                    type: boolean
                  engine:
                    description: "The name of the database engine to be used for this
                      DB cluster. \n Valid Values: neptune"
                    type: string
                  engineVersion:
                    description: "The version number of the database engine to use
                      for the new DB cluster. \n Example: 1.0.2.1"
                    type: string
                  kmsKeyID:
                    description: "The Amazon KMS key identifier for an encrypted DB
                      cluster. \n The KMS key identifier is the Amazon Resource Name
                      (ARN) for the KMS encryption key. If you are creating a DB cluster
                      with the same Amazon account that owns the KMS encryption key
                      used to encrypt the new DB cluster, then you can use the KMS
                      key alias instead of the ARN for the KMS encryption key. \n
                      If an encryption key is not specified in KmsKeyId: \n * If ReplicationSourceIdentifier
                      identifies an encrypted source, then Amazon Neptune will use
                      the encryption key used to encrypt the source. Otherwise, Amazon
                      Neptune will use your default encryption key. \n * If the StorageEncrypted
                      parameter is true and ReplicationSourceIdentifier is not specified,
                      then Amazon Neptune will use your default encryption key. \n
                      Amazon KMS creates the default encryption key for your Amazon
                      account. Your Amazon account has a different default encryption
                      key for each Amazon Region. \n If you create a Read Replica
                      of an encrypted DB cluster in another Amazon Region, you must
                      set KmsKeyId to a KMS key ID that is valid in the destination
                      Amazon Region. This key is used to encrypt the Read Replica
                      in that Amazon Region."
                    type: string
                  masterUserPassword:
                    description: Not supported by Neptune.
                    type: string
                  masterUsername:
                    description: Not supported by Neptune.
                    type: string
                  optionGroupName:
                    description: (Not supported by Neptune)
                    type: string
                  port:
                    description: "The port number on which the instances in the DB
                      cluster accept connections. \n Default: 8182"
                    format: int64
                    type: integer
                  preSignedURL:
                    description: This parameter is not currently supported.
                    type: string
                  preferredBackupWindow:
                    description: "The daily time range during which automated backups
                      are created if automated backups are enabled using the BackupRetentionPeriod
                      parameter. \n The default is a 30-minute window selected at
                      random from an 8-hour block of time for each Amazon Region.
                      To see the time blocks available, see Adjusting the Preferred
                      Maintenance Window (https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/AdjustingTheMaintenanceWindow.html)
                      in the Amazon Neptune User Guide. \n Constraints: \n * Must
                      be in the format hh24:mi-hh24:mi. \n * Must be in Universal
                      Coordinated Time (UTC). \n * Must not conflict with the preferred
                      maintenance window. \n * Must be at least 30 minutes."
                    type: string
                  preferredMaintenanceWindow:
                    description: "The weekly time range during which system maintenance
                      can occur, in Universal Coordinated Time (UTC). \n Format: ddd:hh24:mi-ddd:hh24:mi
                      \n The default is a 30-minute window selected at random from
                      an 8-hour block of time for each Amazon Region, occurring on
                      a random day of the week. To see the time blocks available,
                      see Adjusting the Preferred Maintenance Window (https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/AdjustingTheMaintenanceWindow.html)
                      in the Amazon Neptune User Guide. \n Valid Days: Mon, Tue, Wed,
                      Thu, Fri, Sat, Sun. \n Constraints: Minimum 30-minute window."
                    type: string
                  region:
                    description: Region is which region the DBCluster will be created.
                    type: string
                  replicationSourceIdentifier:
                    description: The Amazon Resource Name (ARN) of the source DB instance
                      or DB cluster if this DB cluster is created as a Read Replica.
                    type: string
                  skipFinalSnapshot:
                    description: "Determines whether a final DB cluster snapshot is
                      created before the DB cluster is deleted. If true is specified,
                      no DB cluster snapshot is created. If false is specified, a
                      DB cluster snapshot is created before the DB cluster is deleted.
                      \n You must specify a FinalDBSnapshotIdentifier parameter if
                      SkipFinalSnapshot is false. \n Default: false"
                    type: boolean
                  sourceRegion:
                    description: SourceRegion is the source region where the resource
                      exists. This is not sent over the wire and is only used for
                      presigning. This value should always have the same region as
                      the source ARN.
                    type: string
                  storageEncrypted:
                    description: Specifies whether the DB cluster is encrypted.
                    type: boolean
                  tags:
                    description: The tags to assign to the new DB cluster.
                    items:
                      properties:
                        key:
                          type: string
                        value:
                          type: string
                      type: object
                    type: array
                  vpcSecurityGroupIDs:
                    description: A list of EC2 VPC security groups to associate with
                      this DB cluster.
                    items:
                      type: string
                    type: array
                required:
                - engine
                - region
                type: object
              providerConfigRef:
                default:
                  name: default
                description: ProviderConfigReference specifies how the provider that
                  will be used to create, observe, update, and delete this managed
                  resource should be configured.
                properties:
                  name:
                    description: Name of the referenced object.
                    type: string
                  policy:
                    description: Policies for referencing.
                    properties:
                      resolution:
                        default: Required
                        description: Resolution specifies whether resolution of this
                          reference is required. The default is 'Required', which
                          means the reconcile will fail if the reference cannot be
                          resolved. 'Optional' means this reference will be a no-op
                          if it cannot be resolved.
                        enum:
                        - Required
                        - Optional
                        type: string
                      resolve:
                        description: Resolve specifies when this reference should
                          be resolved. The default is 'IfNotPresent', which will attempt
                          to resolve the reference only when the corresponding field
                          is not present. Use 'Always' to resolve the reference on
                          every reconcile.
                        enum:
                        - Always
                        - IfNotPresent
                        type: string
                    type: object
                required:
                - name
                type: object
              providerRef:
                description: 'ProviderReference specifies the provider that will be
                  used to create, observe, update, and delete this managed resource.
                  Deprecated: Please use ProviderConfigReference, i.e. `providerConfigRef`'
                properties:
                  name:
                    description: Name of the referenced object.
                    type: string
                  policy:
                    description: Policies for referencing.
                    properties:
                      resolution:
                        default: Required
                        description: Resolution specifies whether resolution of this
                          reference is required. The default is 'Required', which
                          means the reconcile will fail if the reference cannot be
                          resolved. 'Optional' means this reference will be a no-op
                          if it cannot be resolved.
                        enum:
                        - Required
                        - Optional
                        type: string
                      resolve:
                        description: Resolve specifies when this reference should
                          be resolved. The default is 'IfNotPresent', which will attempt
                          to resolve the reference only when the corresponding field
                          is not present. Use 'Always' to resolve the reference on
                          every reconcile.
                        enum:
                        - Always
                        - IfNotPresent
                        type: string
                    type: object
                required:
                - name
                type: object
              publishConnectionDetailsTo:
                description: PublishConnectionDetailsTo specifies the connection secret
                  config which contains a name, metadata and a reference to secret
                  store config to which any connection details for this managed resource
                  should be written. Connection details frequently include the endpoint,
                  username, and password required to connect to the managed resource.
                properties:
                  configRef:
                    default:
                      name: default
                    description: SecretStoreConfigRef specifies which secret store
                      config should be used for this ConnectionSecret.
                    properties:
                      name:
                        description: Name of the referenced object.
                        type: string
                      policy:
                        description: Policies for referencing.
                        properties:
                          resolution:
                            default: Required
                            description: Resolution specifies whether resolution of
                              this reference is required. The default is 'Required',
                              which means the reconcile will fail if the reference
                              cannot be resolved. 'Optional' means this reference
                              will be a no-op if it cannot be resolved.
                            enum:
                            - Required
                            - Optional
                            type: string
                          resolve:
                            description: Resolve specifies when this reference should
                              be resolved. The default is 'IfNotPresent', which will
                              attempt to resolve the reference only when the corresponding
                              field is not present. Use 'Always' to resolve the reference
                              on every reconcile.
                            enum:
                            - Always
                            - IfNotPresent
                            type: string
                        type: object
                    required:
                    - name
                    type: object
                  metadata:
                    description: Metadata is the metadata for connection secret.
                    properties:
                      annotations:
                        additionalProperties:
                          type: string
                        description: Annotations are the annotations to be added to
                          connection secret. - For Kubernetes secrets, this will be
                          used as "metadata.annotations". - It is up to Secret Store
                          implementation for others store types.
                        type: object
                      labels:
                        additionalProperties:
                          type: string
                        description: Labels are the labels/tags to be added to connection
                          secret. - For Kubernetes secrets, this will be used as "metadata.labels".
                          - It is up to Secret Store implementation for others store
                          types.
                        type: object
                      type:
                        description: Type is the SecretType for the connection secret.
                          - Only valid for Kubernetes Secret Stores.
                        type: string
                    type: object
                  name:
                    description: Name is the name of the connection secret.
                    type: string
                required:
                - name
                type: object
              writeConnectionSecretToRef:
                description: WriteConnectionSecretToReference specifies the namespace
                  and name of a Secret to which any connection details for this managed
                  resource should be written. Connection details frequently include
                  the endpoint, username, and password required to connect to the
                  managed resource. This field is planned to be replaced in a future
                  release in favor of PublishConnectionDetailsTo. Currently, both
                  could be set independently and connection details would be published
                  to both without affecting each other.
                properties:
                  name:
                    description: Name of the secret.
                    type: string
                  namespace:
                    description: Namespace of the secret.
                    type: string
                required:
                - name
                - namespace
                type: object
            required:
            - forProvider
            type: object
          status:
            description: DBClusterStatus defines the observed state of DBCluster.
            properties:
              atProvider:
                description: DBClusterObservation defines the observed state of DBCluster
                properties:
                  allocatedStorage:
                    description: AllocatedStorage always returns 1, because Neptune
                      DB cluster storage size is not fixed, but instead automatically
                      adjusts as needed.
                    format: int64
                    type: integer
                  associatedRoles:
                    description: Provides a list of the Amazon Identity and Access
                      Management (IAM) roles that are associated with the DB cluster.
                      IAM roles that are associated with a DB cluster grant permission
                      for the DB cluster to access other Amazon services on your behalf.
                    items:
                      properties:
                        featureName:
                          type: string
                        roleARN:
                          type: string
                        status:
                          type: string
                      type: object
                    type: array
                  automaticRestartTime:
                    description: Time at which the DB cluster will be automatically
                      restarted.
                    format: date-time
                    type: string
                  cloneGroupID:
                    description: Identifies the clone group to which the DB cluster
                      is associated.
                    type: string
                  clusterCreateTime:
                    description: Specifies the time when the DB cluster was created,
                      in Universal Coordinated Time (UTC).
                    format: date-time
                    type: string
                  crossAccountClone:
                    description: If set to true, the DB cluster can be cloned across
                      accounts.
                    type: boolean
                  dbClusterARN:
                    description: The Amazon Resource Name (ARN) for the DB cluster.
                    type: string
                  dbClusterIdentifier:
                    description: Contains a user-supplied DB cluster identifier. This
                      identifier is the unique key that identifies a DB cluster.
                    type: string
                  dbClusterMembers:
                    description: Provides the list of instances that make up the DB
                      cluster.
                    items:
                      properties:
                        dbClusterParameterGroupStatus:
                          type: string
                        dbInstanceIdentifier:
                          type: string
                        isClusterWriter:
                          type: boolean
                        promotionTier:
                          format: int64
                          type: integer
                      type: object
                    type: array
                  dbClusterOptionGroupMemberships:
                    description: Not supported by Neptune.
                    items:
                      properties:
                        dbClusterOptionGroupName:
                          type: string
                        status:
                          type: string
                      type: object
                    type: array
                  dbClusterParameterGroup:
                    description: Specifies the name of the DB cluster parameter group
                      for the DB cluster.
                    type: string
                  dbClusterResourceID:
                    description: The Amazon Region-unique, immutable identifier for
                      the DB cluster. This identifier is found in Amazon CloudTrail
                      log entries whenever the Amazon KMS key for the DB cluster is
                      accessed.
                    type: string
                  dbSubnetGroup:
                    description: Specifies information on the subnet group associated
                      with the DB cluster, including the name, description, and subnets
                      in the subnet group.
                    type: string
                  earliestRestorableTime:
                    description: Specifies the earliest time to which a database can
                      be restored with point-in-time restore.
                    format: date-time
                    type: string
                  enabledCloudwatchLogsExports:
                    description: A list of log types that this DB cluster is configured
                      to export to CloudWatch Logs.
                    items:
                      type: string
                    type: array
                  endpoint:
                    description: Specifies the connection endpoint for the primary
                      instance of the DB cluster.
                    type: string
                  hostedZoneID:
                    description: Specifies the ID that Amazon Route 53 assigns when
                      you create a hosted zone.
                    type: string
                  iamDatabaseAuthenticationEnabled:
                    description: True if mapping of Amazon Identity and Access Management
                      (IAM) accounts to database accounts is enabled, and otherwise
                      false.
                    type: boolean
                  latestRestorableTime:
                    description: Specifies the latest time to which a database can
                      be restored with point-in-time restore.
                    format: date-time
                    type: string
                  multiAZ:
                    description: Specifies whether the DB cluster has instances in
                      multiple Availability Zones.
                    type: boolean
                  percentProgress:
                    description: Specifies the progress of the operation as a percentage.
                    type: string
                  readReplicaIdentifiers:
                    description: Contains one or more identifiers of the Read Replicas
                      associated with this DB cluster.
                    items:
                      type: string
                    type: array
                  readerEndpoint:
                    description: "The reader endpoint for the DB cluster. The reader
                      endpoint for a DB cluster load-balances connections across the
                      Read Replicas that are available in a DB cluster. As clients
                      request new connections to the reader endpoint, Neptune distributes
                      the connection requests among the Read Replicas in the DB cluster.
                      This functionality can help balance your read workload across
                      multiple Read Replicas in your DB cluster. \n If a failover
                      occurs, and the Read Replica that you are connected to is promoted
                      to be the primary instance, your connection is dropped. To continue
                      sending your read workload to other Read Replicas in the cluster,
                      you can then reconnect to the reader endpoint."
                    type: string
                  status:
                    description: Specifies the current state of this DB cluster.
                    type: string
                  vpcSecurityGroups:
                    description: Provides a list of VPC security groups that the DB
                      cluster belongs to.
                    items:
                      properties:
                        status:
                          type: string
                        vpcSecurityGroupID:
                          type: string
                      type: object
                    type: array
                type: object
              conditions:
                description: Conditions of the resource.
                items:
                  description: A Condition that may apply to a resource.
                  properties:
                    lastTransitionTime:
                      description: LastTransitionTime is the last time this condition
                        transitioned from one status to another.
                      format: date-time
                      type: string
                    message:
                      description: A Message containing details about this condition's
                        last transition from one status to another, if any.
                      type: string
                    reason:
                      description: A Reason for this condition's last transition from
                        one status to another.
                      type: string
                    status:
                      description: Status of this condition; is it currently True,
                        False, or Unknown?
                      type: string
                    type:
                      description: Type of this condition. At most one of each condition
                        type may apply to a resource at any point in time.
                      type: string
                  required:
                  - lastTransitionTime
                  - reason
                  - status
                  - type
                  type: object
                type: array
            type: object
        required:
        - spec
        type: object
    served: true
    storage: true
    subresources:
      status: {}
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []
