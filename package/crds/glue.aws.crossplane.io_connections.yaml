---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.8.0
  creationTimestamp: null
  name: connections.glue.aws.crossplane.io
spec:
  group: glue.aws.crossplane.io
  names:
    categories:
    - crossplane
    - managed
    - aws
    kind: Connection
    listKind: ConnectionList
    plural: connections
    singular: connection
  scope: Cluster
  versions:
  - additionalPrinterColumns:
    - jsonPath: .status.conditions[?(@.type=='Ready')].status
      name: READY
      type: string
    - jsonPath: .status.conditions[?(@.type=='Synced')].status
      name: SYNCED
      type: string
    - jsonPath: .metadata.annotations.crossplane\.io/external-name
      name: EXTERNAL-NAME
      type: string
    name: v1alpha1
    schema:
      openAPIV3Schema:
        description: Connection is the Schema for the Connections API
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: ConnectionSpec defines the desired state of Connection
            properties:
              deletionPolicy:
                default: Delete
                description: DeletionPolicy specifies what will happen to the underlying
                  external when this managed resource is deleted - either "Delete"
                  or "Orphan" the external resource.
                enum:
                - Orphan
                - Delete
                type: string
              forProvider:
                description: ConnectionParameters defines the desired state of Connection
                properties:
                  catalogID:
                    description: The ID of the Data Catalog in which to create the
                      connection. If none is provided, the Amazon Web Services account
                      ID is used by default.
                    type: string
                  connectionInput:
                    description: A ConnectionInput object defining the connection
                      to create.
                    properties:
                      connectionProperties:
                        additionalProperties:
                          type: string
                        description: "These key-value pairs define parameters for
                          the connection. Possible keys for connection properties:
                          \"HOST\"|\"PORT\"|\"USERNAME\"|\"PASSWORD\"|\"ENCRYPTED_PASSWORD\"|\"JDBC_DRIVER_JAR_URI\"
                          \"JDBC_DRIVER_CLASS_NAME\"|\"JDBC_ENGINE\"|\"JDBC_ENGINE_VERSION\"|\"CONFIG_FILES\"
                          \"INSTANCE_ID\"|\"JDBC_CONNECTION_URL\"|\"JDBC_ENFORCE_SSL\"|\"CUSTOM_JDBC_CERT\"
                          \"SKIP_CUSTOM_JDBC_CERT_VALIDATION\"|\"CUSTOM_JDBC_CERT_STRING\"|\"CONNECTION_URL\"
                          \"KAFKA_BOOTSTRAP_SERVERS\"|\"KAFKA_SSL_ENABLED\"|\"KAFKA_CUSTOM_CERT\"
                          \"KAFKA_SKIP_CUSTOM_CERT_VALIDATION\"|\"KAFKA_CLIENT_KEYSTORE\"
                          \"KAFKA_CLIENT_KEYSTORE_PASSWORD\"|\"KAFKA_CLIENT_KEY_PASSWORD\"
                          \"ENCRYPTED_KAFKA_CLIENT_KEYSTORE_PASSWORD\"|\"ENCRYPTED_KAFKA_CLIENT_KEY_PASSWORD\"
                          \"SECRET_ID\"|\"CONNECTOR_URL\"|\"CONNECTOR_TYPE\"|\"CONNECTOR_CLASS_NAME\"
                          \n ConnectionProperties is a required field"
                        type: object
                      connectionType:
                        description: "The type of the connection. Currently, these
                          types are supported: \n * JDBC - Designates a connection
                          to a database through Java Database Connectivity (JDBC).
                          \n * KAFKA - Designates a connection to an Apache Kafka
                          streaming platform. \n * MONGODB - Designates a connection
                          to a MongoDB document database. \n * NETWORK - Designates
                          a network connection to a data source within an Amazon Virtual
                          Private Cloud environment (Amazon VPC). \n * MARKETPLACE
                          - Uses configuration settings contained in a connector purchased
                          from Amazon Web Services Marketplace to read from and write
                          to data stores that are not natively supported by Glue.
                          \n * CUSTOM - Uses configuration settings contained in a
                          custom connector to read from and write to data stores that
                          are not natively supported by Glue. \n SFTP is not supported.
                          \n ConnectionType is a required field"
                        enum:
                        - JDBC
                        - KAFKA
                        - MONGODB
                        - NETWORK
                        - MARKETPLACE
                        - CUSTOM
                        type: string
                      description:
                        description: The description of the connection.
                        type: string
                      matchCriteria:
                        description: A list of criteria that can be used in selecting
                          this connection.
                        items:
                          type: string
                        type: array
                      physicalConnectionRequirements:
                        description: Specifies the physical requirements for a connection.
                        properties:
                          availabilityZone:
                            description: The connection's Availability Zone. This
                              field is redundant because the specified subnet implies
                              the Availability Zone to be used. Currently the field
                              must be populated, but it will be removed in the future.
                            type: string
                          securityGroupIdList:
                            description: The security group ID list used by the connection.
                            items:
                              type: string
                            type: array
                          securityGroupIdRefs:
                            description: SecurityGroupIDRefs are references to SecurityGroups
                              used to set the SecurityGroupIDs.
                            items:
                              description: A Reference to a named object.
                              properties:
                                name:
                                  description: Name of the referenced object.
                                  type: string
                                policy:
                                  description: Policies for referencing.
                                  properties:
                                    resolution:
                                      default: Required
                                      description: Resolution specifies whether resolution
                                        of this reference is required. The default
                                        is 'Required', which means the reconcile will
                                        fail if the reference cannot be resolved.
                                        'Optional' means this reference will be a
                                        no-op if it cannot be resolved.
                                      enum:
                                      - Required
                                      - Optional
                                      type: string
                                    resolve:
                                      description: Resolve specifies when this reference
                                        should be resolved. The default is 'IfNotPresent',
                                        which will attempt to resolve the reference
                                        only when the corresponding field is not present.
                                        Use 'Always' to resolve the reference on every
                                        reconcile.
                                      enum:
                                      - Always
                                      - IfNotPresent
                                      type: string
                                  type: object
                              required:
                              - name
                              type: object
                            type: array
                          securityGroupIdSelector:
                            description: SecurityGroupIDSelector selects references
                              to SecurityGroups used to set the SecurityGroupIDs.
                            properties:
                              matchControllerRef:
                                description: MatchControllerRef ensures an object
                                  with the same controller reference as the selecting
                                  object is selected.
                                type: boolean
                              matchLabels:
                                additionalProperties:
                                  type: string
                                description: MatchLabels ensures an object with matching
                                  labels is selected.
                                type: object
                              policy:
                                description: Policies for selection.
                                properties:
                                  resolution:
                                    default: Required
                                    description: Resolution specifies whether resolution
                                      of this reference is required. The default is
                                      'Required', which means the reconcile will fail
                                      if the reference cannot be resolved. 'Optional'
                                      means this reference will be a no-op if it cannot
                                      be resolved.
                                    enum:
                                    - Required
                                    - Optional
                                    type: string
                                  resolve:
                                    description: Resolve specifies when this reference
                                      should be resolved. The default is 'IfNotPresent',
                                      which will attempt to resolve the reference
                                      only when the corresponding field is not present.
                                      Use 'Always' to resolve the reference on every
                                      reconcile.
                                    enum:
                                    - Always
                                    - IfNotPresent
                                    type: string
                                type: object
                            type: object
                          subnetId:
                            description: The subnet ID used by the connection.
                            type: string
                          subnetIdRef:
                            description: SubnetIDRef is a reference to SubnetID used
                              to set the SubnetID.
                            properties:
                              name:
                                description: Name of the referenced object.
                                type: string
                              policy:
                                description: Policies for referencing.
                                properties:
                                  resolution:
                                    default: Required
                                    description: Resolution specifies whether resolution
                                      of this reference is required. The default is
                                      'Required', which means the reconcile will fail
                                      if the reference cannot be resolved. 'Optional'
                                      means this reference will be a no-op if it cannot
                                      be resolved.
                                    enum:
                                    - Required
                                    - Optional
                                    type: string
                                  resolve:
                                    description: Resolve specifies when this reference
                                      should be resolved. The default is 'IfNotPresent',
                                      which will attempt to resolve the reference
                                      only when the corresponding field is not present.
                                      Use 'Always' to resolve the reference on every
                                      reconcile.
                                    enum:
                                    - Always
                                    - IfNotPresent
                                    type: string
                                type: object
                            required:
                            - name
                            type: object
                          subnetIdSelector:
                            description: SubnetIDSelector selects a reference to SubnetID
                              used to set the SubnetID.
                            properties:
                              matchControllerRef:
                                description: MatchControllerRef ensures an object
                                  with the same controller reference as the selecting
                                  object is selected.
                                type: boolean
                              matchLabels:
                                additionalProperties:
                                  type: string
                                description: MatchLabels ensures an object with matching
                                  labels is selected.
                                type: object
                              policy:
                                description: Policies for selection.
                                properties:
                                  resolution:
                                    default: Required
                                    description: Resolution specifies whether resolution
                                      of this reference is required. The default is
                                      'Required', which means the reconcile will fail
                                      if the reference cannot be resolved. 'Optional'
                                      means this reference will be a no-op if it cannot
                                      be resolved.
                                    enum:
                                    - Required
                                    - Optional
                                    type: string
                                  resolve:
                                    description: Resolve specifies when this reference
                                      should be resolved. The default is 'IfNotPresent',
                                      which will attempt to resolve the reference
                                      only when the corresponding field is not present.
                                      Use 'Always' to resolve the reference on every
                                      reconcile.
                                    enum:
                                    - Always
                                    - IfNotPresent
                                    type: string
                                type: object
                            type: object
                        type: object
                    required:
                    - connectionProperties
                    - connectionType
                    type: object
                  region:
                    description: Region is which region the Connection will be created.
                    type: string
                  tags:
                    additionalProperties:
                      type: string
                    description: The tags you assign to the connection.
                    type: object
                required:
                - connectionInput
                - region
                type: object
              providerConfigRef:
                default:
                  name: default
                description: ProviderConfigReference specifies how the provider that
                  will be used to create, observe, update, and delete this managed
                  resource should be configured.
                properties:
                  name:
                    description: Name of the referenced object.
                    type: string
                  policy:
                    description: Policies for referencing.
                    properties:
                      resolution:
                        default: Required
                        description: Resolution specifies whether resolution of this
                          reference is required. The default is 'Required', which
                          means the reconcile will fail if the reference cannot be
                          resolved. 'Optional' means this reference will be a no-op
                          if it cannot be resolved.
                        enum:
                        - Required
                        - Optional
                        type: string
                      resolve:
                        description: Resolve specifies when this reference should
                          be resolved. The default is 'IfNotPresent', which will attempt
                          to resolve the reference only when the corresponding field
                          is not present. Use 'Always' to resolve the reference on
                          every reconcile.
                        enum:
                        - Always
                        - IfNotPresent
                        type: string
                    type: object
                required:
                - name
                type: object
              providerRef:
                description: 'ProviderReference specifies the provider that will be
                  used to create, observe, update, and delete this managed resource.
                  Deprecated: Please use ProviderConfigReference, i.e. `providerConfigRef`'
                properties:
                  name:
                    description: Name of the referenced object.
                    type: string
                  policy:
                    description: Policies for referencing.
                    properties:
                      resolution:
                        default: Required
                        description: Resolution specifies whether resolution of this
                          reference is required. The default is 'Required', which
                          means the reconcile will fail if the reference cannot be
                          resolved. 'Optional' means this reference will be a no-op
                          if it cannot be resolved.
                        enum:
                        - Required
                        - Optional
                        type: string
                      resolve:
                        description: Resolve specifies when this reference should
                          be resolved. The default is 'IfNotPresent', which will attempt
                          to resolve the reference only when the corresponding field
                          is not present. Use 'Always' to resolve the reference on
                          every reconcile.
                        enum:
                        - Always
                        - IfNotPresent
                        type: string
                    type: object
                required:
                - name
                type: object
              publishConnectionDetailsTo:
                description: PublishConnectionDetailsTo specifies the connection secret
                  config which contains a name, metadata and a reference to secret
                  store config to which any connection details for this managed resource
                  should be written. Connection details frequently include the endpoint,
                  username, and password required to connect to the managed resource.
                properties:
                  configRef:
                    default:
                      name: default
                    description: SecretStoreConfigRef specifies which secret store
                      config should be used for this ConnectionSecret.
                    properties:
                      name:
                        description: Name of the referenced object.
                        type: string
                      policy:
                        description: Policies for referencing.
                        properties:
                          resolution:
                            default: Required
                            description: Resolution specifies whether resolution of
                              this reference is required. The default is 'Required',
                              which means the reconcile will fail if the reference
                              cannot be resolved. 'Optional' means this reference
                              will be a no-op if it cannot be resolved.
                            enum:
                            - Required
                            - Optional
                            type: string
                          resolve:
                            description: Resolve specifies when this reference should
                              be resolved. The default is 'IfNotPresent', which will
                              attempt to resolve the reference only when the corresponding
                              field is not present. Use 'Always' to resolve the reference
                              on every reconcile.
                            enum:
                            - Always
                            - IfNotPresent
                            type: string
                        type: object
                    required:
                    - name
                    type: object
                  metadata:
                    description: Metadata is the metadata for connection secret.
                    properties:
                      annotations:
                        additionalProperties:
                          type: string
                        description: Annotations are the annotations to be added to
                          connection secret. - For Kubernetes secrets, this will be
                          used as "metadata.annotations". - It is up to Secret Store
                          implementation for others store types.
                        type: object
                      labels:
                        additionalProperties:
                          type: string
                        description: Labels are the labels/tags to be added to connection
                          secret. - For Kubernetes secrets, this will be used as "metadata.labels".
                          - It is up to Secret Store implementation for others store
                          types.
                        type: object
                      type:
                        description: Type is the SecretType for the connection secret.
                          - Only valid for Kubernetes Secret Stores.
                        type: string
                    type: object
                  name:
                    description: Name is the name of the connection secret.
                    type: string
                required:
                - name
                type: object
              writeConnectionSecretToRef:
                description: WriteConnectionSecretToReference specifies the namespace
                  and name of a Secret to which any connection details for this managed
                  resource should be written. Connection details frequently include
                  the endpoint, username, and password required to connect to the
                  managed resource. This field is planned to be replaced in a future
                  release in favor of PublishConnectionDetailsTo. Currently, both
                  could be set independently and connection details would be published
                  to both without affecting each other.
                properties:
                  name:
                    description: Name of the secret.
                    type: string
                  namespace:
                    description: Namespace of the secret.
                    type: string
                required:
                - name
                - namespace
                type: object
            required:
            - forProvider
            type: object
          status:
            description: ConnectionStatus defines the observed state of Connection.
            properties:
              atProvider:
                description: ConnectionObservation defines the observed state of Connection
                properties:
                  creationTime:
                    description: The time that this connection definition was created.
                    format: date-time
                    type: string
                  lastUpdatedBy:
                    description: The user, group, or role that last updated this connection
                      definition.
                    type: string
                  lastUpdatedTime:
                    description: The last time that this connection definition was
                      updated.
                    format: date-time
                    type: string
                type: object
              conditions:
                description: Conditions of the resource.
                items:
                  description: A Condition that may apply to a resource.
                  properties:
                    lastTransitionTime:
                      description: LastTransitionTime is the last time this condition
                        transitioned from one status to another.
                      format: date-time
                      type: string
                    message:
                      description: A Message containing details about this condition's
                        last transition from one status to another, if any.
                      type: string
                    reason:
                      description: A Reason for this condition's last transition from
                        one status to another.
                      type: string
                    status:
                      description: Status of this condition; is it currently True,
                        False, or Unknown?
                      type: string
                    type:
                      description: Type of this condition. At most one of each condition
                        type may apply to a resource at any point in time.
                      type: string
                  required:
                  - lastTransitionTime
                  - reason
                  - status
                  - type
                  type: object
                type: array
            type: object
        required:
        - spec
        type: object
    served: true
    storage: true
    subresources:
      status: {}
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []
