---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.12.1
  name: optiongroups.rds.aws.crossplane.io
spec:
  group: rds.aws.crossplane.io
  names:
    categories:
    - crossplane
    - managed
    - aws
    kind: OptionGroup
    listKind: OptionGroupList
    plural: optiongroups
    singular: optiongroup
  scope: Cluster
  versions:
  - additionalPrinterColumns:
    - jsonPath: .status.conditions[?(@.type=='Ready')].status
      name: READY
      type: string
    - jsonPath: .status.conditions[?(@.type=='Synced')].status
      name: SYNCED
      type: string
    - jsonPath: .metadata.annotations.crossplane\.io/external-name
      name: EXTERNAL-NAME
      type: string
    - jsonPath: .metadata.creationTimestamp
      name: AGE
      type: date
    name: v1alpha1
    schema:
      openAPIV3Schema:
        description: OptionGroup is the Schema for the OptionGroups API
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: OptionGroupSpec defines the desired state of OptionGroup
            properties:
              deletionPolicy:
                default: Delete
                description: 'DeletionPolicy specifies what will happen to the underlying
                  external when this managed resource is deleted - either "Delete"
                  or "Orphan" the external resource. This field is planned to be deprecated
                  in favor of the ManagementPolicies field in a future release. Currently,
                  both could be set independently and non-default values would be
                  honored if the feature flag is enabled. See the design doc for more
                  information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223'
                enum:
                - Orphan
                - Delete
                type: string
              forProvider:
                description: OptionGroupParameters defines the desired state of OptionGroup
                properties:
                  applyImmediately:
                    description: A value that indicates whether to apply the change
                      immediately or during the next maintenance window for each instance
                      associated with the option group.
                    type: boolean
                  engineName:
                    description: "Specifies the name of the engine that this option
                      group should be associated with. \n Valid Values: \n * mariadb
                      \n * mysql \n * oracle-ee \n * oracle-ee-cdb \n * oracle-se2
                      \n * oracle-se2-cdb \n * postgres \n * sqlserver-ee \n * sqlserver-se
                      \n * sqlserver-ex \n * sqlserver-web"
                    type: string
                  majorEngineVersion:
                    description: Specifies the major version of the engine that this
                      option group should be associated with.
                    type: string
                  option:
                    description: Option in this list are added to the option group
                      or, if already present, the specified configuration is used
                      to update the existing configuration.
                    items:
                      description: CustomOptionConfiguration are custom parameters
                        for the OptionConfiguration
                      properties:
                        dbSecurityGroupMemberships:
                          items:
                            type: string
                          type: array
                        optionName:
                          type: string
                        optionSettings:
                          items:
                            description: CustomOptionGroupOptionSetting are custom
                              parameters for the OptionGroupOptionSetting
                            properties:
                              name:
                                type: string
                              value:
                                type: string
                            type: object
                          type: array
                        optionVersion:
                          type: string
                        port:
                          format: int64
                          type: integer
                        vpcSecurityGroupMemberships:
                          items:
                            type: string
                          type: array
                      type: object
                    type: array
                  optionGroupDescription:
                    description: The description of the option group.
                    type: string
                  region:
                    description: Region is which region the OptionGroup will be created.
                    type: string
                  tags:
                    description: Tags to assign to the option group.
                    items:
                      properties:
                        key:
                          type: string
                        value:
                          type: string
                      type: object
                    type: array
                required:
                - engineName
                - majorEngineVersion
                - optionGroupDescription
                - region
                type: object
              managementPolicies:
                default:
                - '*'
                description: 'THIS IS AN ALPHA FIELD. Do not use it in production.
                  It is not honored unless the relevant Crossplane feature flag is
                  enabled, and may be changed or removed without notice. ManagementPolicies
                  specify the array of actions Crossplane is allowed to take on the
                  managed and external resources. This field is planned to replace
                  the DeletionPolicy field in a future release. Currently, both could
                  be set independently and non-default values would be honored if
                  the feature flag is enabled. If both are custom, the DeletionPolicy
                  field will be ignored. See the design doc for more information:
                  https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223
                  and this one: https://github.com/crossplane/crossplane/blob/444267e84783136daa93568b364a5f01228cacbe/design/one-pager-ignore-changes.md'
                items:
                  description: A ManagementAction represents an action that the Crossplane
                    controllers can take on an external resource.
                  enum:
                  - Observe
                  - Create
                  - Update
                  - Delete
                  - LateInitialize
                  - '*'
                  type: string
                type: array
              providerConfigRef:
                default:
                  name: default
                description: ProviderConfigReference specifies how the provider that
                  will be used to create, observe, update, and delete this managed
                  resource should be configured.
                properties:
                  name:
                    description: Name of the referenced object.
                    type: string
                  policy:
                    description: Policies for referencing.
                    properties:
                      resolution:
                        default: Required
                        description: Resolution specifies whether resolution of this
                          reference is required. The default is 'Required', which
                          means the reconcile will fail if the reference cannot be
                          resolved. 'Optional' means this reference will be a no-op
                          if it cannot be resolved.
                        enum:
                        - Required
                        - Optional
                        type: string
                      resolve:
                        description: Resolve specifies when this reference should
                          be resolved. The default is 'IfNotPresent', which will attempt
                          to resolve the reference only when the corresponding field
                          is not present. Use 'Always' to resolve the reference on
                          every reconcile.
                        enum:
                        - Always
                        - IfNotPresent
                        type: string
                    type: object
                required:
                - name
                type: object
              providerRef:
                description: 'ProviderReference specifies the provider that will be
                  used to create, observe, update, and delete this managed resource.
                  Deprecated: Please use ProviderConfigReference, i.e. `providerConfigRef`'
                properties:
                  name:
                    description: Name of the referenced object.
                    type: string
                  policy:
                    description: Policies for referencing.
                    properties:
                      resolution:
                        default: Required
                        description: Resolution specifies whether resolution of this
                          reference is required. The default is 'Required', which
                          means the reconcile will fail if the reference cannot be
                          resolved. 'Optional' means this reference will be a no-op
                          if it cannot be resolved.
                        enum:
                        - Required
                        - Optional
                        type: string
                      resolve:
                        description: Resolve specifies when this reference should
                          be resolved. The default is 'IfNotPresent', which will attempt
                          to resolve the reference only when the corresponding field
                          is not present. Use 'Always' to resolve the reference on
                          every reconcile.
                        enum:
                        - Always
                        - IfNotPresent
                        type: string
                    type: object
                required:
                - name
                type: object
              publishConnectionDetailsTo:
                description: PublishConnectionDetailsTo specifies the connection secret
                  config which contains a name, metadata and a reference to secret
                  store config to which any connection details for this managed resource
                  should be written. Connection details frequently include the endpoint,
                  username, and password required to connect to the managed resource.
                properties:
                  configRef:
                    default:
                      name: default
                    description: SecretStoreConfigRef specifies which secret store
                      config should be used for this ConnectionSecret.
                    properties:
                      name:
                        description: Name of the referenced object.
                        type: string
                      policy:
                        description: Policies for referencing.
                        properties:
                          resolution:
                            default: Required
                            description: Resolution specifies whether resolution of
                              this reference is required. The default is 'Required',
                              which means the reconcile will fail if the reference
                              cannot be resolved. 'Optional' means this reference
                              will be a no-op if it cannot be resolved.
                            enum:
                            - Required
                            - Optional
                            type: string
                          resolve:
                            description: Resolve specifies when this reference should
                              be resolved. The default is 'IfNotPresent', which will
                              attempt to resolve the reference only when the corresponding
                              field is not present. Use 'Always' to resolve the reference
                              on every reconcile.
                            enum:
                            - Always
                            - IfNotPresent
                            type: string
                        type: object
                    required:
                    - name
                    type: object
                  metadata:
                    description: Metadata is the metadata for connection secret.
                    properties:
                      annotations:
                        additionalProperties:
                          type: string
                        description: Annotations are the annotations to be added to
                          connection secret. - For Kubernetes secrets, this will be
                          used as "metadata.annotations". - It is up to Secret Store
                          implementation for others store types.
                        type: object
                      labels:
                        additionalProperties:
                          type: string
                        description: Labels are the labels/tags to be added to connection
                          secret. - For Kubernetes secrets, this will be used as "metadata.labels".
                          - It is up to Secret Store implementation for others store
                          types.
                        type: object
                      type:
                        description: Type is the SecretType for the connection secret.
                          - Only valid for Kubernetes Secret Stores.
                        type: string
                    type: object
                  name:
                    description: Name is the name of the connection secret.
                    type: string
                required:
                - name
                type: object
              writeConnectionSecretToRef:
                description: WriteConnectionSecretToReference specifies the namespace
                  and name of a Secret to which any connection details for this managed
                  resource should be written. Connection details frequently include
                  the endpoint, username, and password required to connect to the
                  managed resource. This field is planned to be replaced in a future
                  release in favor of PublishConnectionDetailsTo. Currently, both
                  could be set independently and connection details would be published
                  to both without affecting each other.
                properties:
                  name:
                    description: Name of the secret.
                    type: string
                  namespace:
                    description: Namespace of the secret.
                    type: string
                required:
                - name
                - namespace
                type: object
            required:
            - forProvider
            type: object
          status:
            description: OptionGroupStatus defines the observed state of OptionGroup.
            properties:
              atProvider:
                description: OptionGroupObservation defines the observed state of
                  OptionGroup
                properties:
                  allowsVPCAndNonVPCInstanceMemberships:
                    description: Indicates whether this option group can be applied
                      to both VPC and non-VPC instances. The value true indicates
                      the option group can be applied to both VPC and non-VPC instances.
                    type: boolean
                  copyTimestamp:
                    description: Indicates when the option group was copied.
                    format: date-time
                    type: string
                  optionGroupARN:
                    description: Specifies the Amazon Resource Name (ARN) for the
                      option group.
                    type: string
                  optionGroupName:
                    description: Specifies the name of the option group.
                    type: string
                  options:
                    description: Indicates what options are available in the option
                      group.
                    items:
                      properties:
                        dbSecurityGroupMemberships:
                          items:
                            properties:
                              dbSecurityGroupName:
                                type: string
                              status:
                                type: string
                            type: object
                          type: array
                        optionDescription:
                          type: string
                        optionName:
                          type: string
                        optionSettings:
                          items:
                            properties:
                              allowedValues:
                                type: string
                              applyType:
                                type: string
                              dataType:
                                type: string
                              defaultValue:
                                type: string
                              description:
                                type: string
                              isCollection:
                                type: boolean
                              isModifiable:
                                type: boolean
                              name:
                                type: string
                              value:
                                type: string
                            type: object
                          type: array
                        optionVersion:
                          type: string
                        permanent:
                          type: boolean
                        persistent:
                          type: boolean
                        port:
                          format: int64
                          type: integer
                        vpcSecurityGroupMemberships:
                          items:
                            properties:
                              status:
                                type: string
                              vpcSecurityGroupID:
                                type: string
                            type: object
                          type: array
                      type: object
                    type: array
                  sourceAccountID:
                    description: Specifies the Amazon Web Services account ID for
                      the option group from which this option group is copied.
                    type: string
                  sourceOptionGroup:
                    description: Specifies the name of the option group from which
                      this option group is copied.
                    type: string
                  vpcID:
                    description: If AllowsVpcAndNonVpcInstanceMemberships is false,
                      this field is blank. If AllowsVpcAndNonVpcInstanceMemberships
                      is true and this field is blank, then this option group can
                      be applied to both VPC and non-VPC instances. If this field
                      contains a value, then this option group can only be applied
                      to instances that are in the VPC indicated by this field.
                    type: string
                type: object
              conditions:
                description: Conditions of the resource.
                items:
                  description: A Condition that may apply to a resource.
                  properties:
                    lastTransitionTime:
                      description: LastTransitionTime is the last time this condition
                        transitioned from one status to another.
                      format: date-time
                      type: string
                    message:
                      description: A Message containing details about this condition's
                        last transition from one status to another, if any.
                      type: string
                    reason:
                      description: A Reason for this condition's last transition from
                        one status to another.
                      type: string
                    status:
                      description: Status of this condition; is it currently True,
                        False, or Unknown?
                      type: string
                    type:
                      description: Type of this condition. At most one of each condition
                        type may apply to a resource at any point in time.
                      type: string
                  required:
                  - lastTransitionTime
                  - reason
                  - status
                  - type
                  type: object
                type: array
            type: object
        required:
        - spec
        type: object
    served: true
    storage: true
    subresources:
      status: {}
