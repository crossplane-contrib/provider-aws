---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.8.0
  creationTimestamp: null
  name: elbs.elasticloadbalancing.aws.crossplane.io
spec:
  group: elasticloadbalancing.aws.crossplane.io
  names:
    categories:
    - crossplane
    - managed
    - aws
    kind: ELB
    listKind: ELBList
    plural: elbs
    singular: elb
  scope: Cluster
  versions:
  - additionalPrinterColumns:
    - jsonPath: .metadata.annotations.crossplane\.io/external-name
      name: ELBNAME
      type: string
    - jsonPath: .status.atProvider.dnsName
      name: DNSNAME
      type: string
    - jsonPath: .status.atProvider.vpcId
      name: VPCID
      type: string
    - jsonPath: .status.conditions[?(@.type=='Ready')].status
      name: READY
      type: string
    - jsonPath: .status.conditions[?(@.type=='Synced')].status
      name: SYNCED
      type: string
    - jsonPath: .metadata.creationTimestamp
      name: AGE
      type: date
    name: v1alpha1
    schema:
      openAPIV3Schema:
        description: An ELB is a managed resource that represents an AWS Classic Load
          Balancer.
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: An ELBSpec defines the desired state of an ELB.
            properties:
              deletionPolicy:
                default: Delete
                description: DeletionPolicy specifies what will happen to the underlying
                  external when this managed resource is deleted - either "Delete"
                  or "Orphan" the external resource.
                enum:
                - Orphan
                - Delete
                type: string
              forProvider:
                description: ELBParameters define the desired state of an AWS ELB.
                properties:
                  availabilityZones:
                    description: One or more Availability Zones from the same region
                      as the load balancer.
                    items:
                      type: string
                    type: array
                  healthCheck:
                    description: Information about the health checks conducted on
                      the load balancer.
                    properties:
                      healthyThreshold:
                        description: The number of consecutive health checks successes
                          required before moving the instance to the Healthy state.
                        format: int32
                        type: integer
                      interval:
                        description: The approximate interval, in seconds, between
                          health checks of an individual instance.
                        format: int32
                        type: integer
                      target:
                        description: The instance being checked.
                        type: string
                      timeout:
                        description: The amount of time, in seconds, during which
                          no response means a failed health check.
                        format: int32
                        type: integer
                      unhealthyThreshold:
                        description: The number of consecutive health check failures
                          required before moving the instance to the Unhealthy state.
                        format: int32
                        type: integer
                    required:
                    - healthyThreshold
                    - interval
                    - target
                    - timeout
                    - unhealthyThreshold
                    type: object
                  listeners:
                    description: The listeners for this ELB.
                    items:
                      description: Listener represents the port binding(s) between
                        the ELB and EC2 instances.
                      properties:
                        instancePort:
                          description: The port on which the instance is listening.
                          format: int32
                          type: integer
                        instanceProtocol:
                          description: 'The protocol to use for routing traffic to
                            instances: HTTP, HTTPS, TCP, or SSL. If not specified,
                            the value is same as for Protocol.'
                          type: string
                        loadBalancerPort:
                          description: The port on which the load balancer is listening.
                          format: int32
                          type: integer
                        protocol:
                          description: 'The load balancer transport protocol to use
                            for routing: HTTP, HTTPS, TCP, or SSL.'
                          type: string
                        sslCertificateId:
                          description: The Amazon Resource Name (ARN) of the server
                            certificate.
                          type: string
                      required:
                      - instancePort
                      - loadBalancerPort
                      - protocol
                      type: object
                    type: array
                  region:
                    description: Region is the region you'd like your ELB to be created
                      in.
                    type: string
                  scheme:
                    description: The type of a load balancer. Valid only for load
                      balancers in a VPC.
                    type: string
                  securityGroupIdRefs:
                    description: SecurityGroupIDRefs references to a SecurityGroup
                      and retrieves its SecurityGroupID
                    items:
                      description: A Reference to a named object.
                      properties:
                        name:
                          description: Name of the referenced object.
                          type: string
                        policy:
                          description: Policies for referencing.
                          properties:
                            resolution:
                              default: Required
                              description: Resolution specifies whether resolution
                                of this reference is required. The default is 'Required',
                                which means the reconcile will fail if the reference
                                cannot be resolved. 'Optional' means this reference
                                will be a no-op if it cannot be resolved.
                              enum:
                              - Required
                              - Optional
                              type: string
                            resolve:
                              description: Resolve specifies when this reference should
                                be resolved. The default is 'IfNotPresent', which
                                will attempt to resolve the reference only when the
                                corresponding field is not present. Use 'Always' to
                                resolve the reference on every reconcile.
                              enum:
                              - Always
                              - IfNotPresent
                              type: string
                          type: object
                      required:
                      - name
                      type: object
                    type: array
                  securityGroupIdSelector:
                    description: SecurityGroupIDSelector selects a set of references
                      that each retrieve the SecurityGroupID from the referenced SecurityGroup
                    properties:
                      matchControllerRef:
                        description: MatchControllerRef ensures an object with the
                          same controller reference as the selecting object is selected.
                        type: boolean
                      matchLabels:
                        additionalProperties:
                          type: string
                        description: MatchLabels ensures an object with matching labels
                          is selected.
                        type: object
                      policy:
                        description: Policies for selection.
                        properties:
                          resolution:
                            default: Required
                            description: Resolution specifies whether resolution of
                              this reference is required. The default is 'Required',
                              which means the reconcile will fail if the reference
                              cannot be resolved. 'Optional' means this reference
                              will be a no-op if it cannot be resolved.
                            enum:
                            - Required
                            - Optional
                            type: string
                          resolve:
                            description: Resolve specifies when this reference should
                              be resolved. The default is 'IfNotPresent', which will
                              attempt to resolve the reference only when the corresponding
                              field is not present. Use 'Always' to resolve the reference
                              on every reconcile.
                            enum:
                            - Always
                            - IfNotPresent
                            type: string
                        type: object
                    type: object
                  securityGroupIds:
                    description: The IDs of the security groups to assign to the load
                      balancer.
                    items:
                      type: string
                    type: array
                  subnetIdRefs:
                    description: SubnetRefs references to a Subnet to and retrieves
                      its SubnetID
                    items:
                      description: A Reference to a named object.
                      properties:
                        name:
                          description: Name of the referenced object.
                          type: string
                        policy:
                          description: Policies for referencing.
                          properties:
                            resolution:
                              default: Required
                              description: Resolution specifies whether resolution
                                of this reference is required. The default is 'Required',
                                which means the reconcile will fail if the reference
                                cannot be resolved. 'Optional' means this reference
                                will be a no-op if it cannot be resolved.
                              enum:
                              - Required
                              - Optional
                              type: string
                            resolve:
                              description: Resolve specifies when this reference should
                                be resolved. The default is 'IfNotPresent', which
                                will attempt to resolve the reference only when the
                                corresponding field is not present. Use 'Always' to
                                resolve the reference on every reconcile.
                              enum:
                              - Always
                              - IfNotPresent
                              type: string
                          type: object
                      required:
                      - name
                      type: object
                    type: array
                  subnetIdSelector:
                    description: SubnetSelector selects a set of references that each
                      retrieve the subnetID from the referenced Subnet
                    properties:
                      matchControllerRef:
                        description: MatchControllerRef ensures an object with the
                          same controller reference as the selecting object is selected.
                        type: boolean
                      matchLabels:
                        additionalProperties:
                          type: string
                        description: MatchLabels ensures an object with matching labels
                          is selected.
                        type: object
                      policy:
                        description: Policies for selection.
                        properties:
                          resolution:
                            default: Required
                            description: Resolution specifies whether resolution of
                              this reference is required. The default is 'Required',
                              which means the reconcile will fail if the reference
                              cannot be resolved. 'Optional' means this reference
                              will be a no-op if it cannot be resolved.
                            enum:
                            - Required
                            - Optional
                            type: string
                          resolve:
                            description: Resolve specifies when this reference should
                              be resolved. The default is 'IfNotPresent', which will
                              attempt to resolve the reference only when the corresponding
                              field is not present. Use 'Always' to resolve the reference
                              on every reconcile.
                            enum:
                            - Always
                            - IfNotPresent
                            type: string
                        type: object
                    type: object
                  subnetIds:
                    description: The IDs of the subnets in your VPC to attach to the
                      load balancer. Specify one subnet per Availability Zone specified
                      in AvailabilityZones.
                    items:
                      type: string
                    type: array
                  tags:
                    description: A list of tags to assign to the load balancer.
                    items:
                      description: Tag defines a key value pair that can be attached
                        to an ELB
                      properties:
                        key:
                          description: The key of the tag.
                          type: string
                        value:
                          description: The value of the tag.
                          type: string
                      required:
                      - key
                      type: object
                    type: array
                required:
                - listeners
                - region
                type: object
              providerConfigRef:
                default:
                  name: default
                description: ProviderConfigReference specifies how the provider that
                  will be used to create, observe, update, and delete this managed
                  resource should be configured.
                properties:
                  name:
                    description: Name of the referenced object.
                    type: string
                  policy:
                    description: Policies for referencing.
                    properties:
                      resolution:
                        default: Required
                        description: Resolution specifies whether resolution of this
                          reference is required. The default is 'Required', which
                          means the reconcile will fail if the reference cannot be
                          resolved. 'Optional' means this reference will be a no-op
                          if it cannot be resolved.
                        enum:
                        - Required
                        - Optional
                        type: string
                      resolve:
                        description: Resolve specifies when this reference should
                          be resolved. The default is 'IfNotPresent', which will attempt
                          to resolve the reference only when the corresponding field
                          is not present. Use 'Always' to resolve the reference on
                          every reconcile.
                        enum:
                        - Always
                        - IfNotPresent
                        type: string
                    type: object
                required:
                - name
                type: object
              providerRef:
                description: 'ProviderReference specifies the provider that will be
                  used to create, observe, update, and delete this managed resource.
                  Deprecated: Please use ProviderConfigReference, i.e. `providerConfigRef`'
                properties:
                  name:
                    description: Name of the referenced object.
                    type: string
                  policy:
                    description: Policies for referencing.
                    properties:
                      resolution:
                        default: Required
                        description: Resolution specifies whether resolution of this
                          reference is required. The default is 'Required', which
                          means the reconcile will fail if the reference cannot be
                          resolved. 'Optional' means this reference will be a no-op
                          if it cannot be resolved.
                        enum:
                        - Required
                        - Optional
                        type: string
                      resolve:
                        description: Resolve specifies when this reference should
                          be resolved. The default is 'IfNotPresent', which will attempt
                          to resolve the reference only when the corresponding field
                          is not present. Use 'Always' to resolve the reference on
                          every reconcile.
                        enum:
                        - Always
                        - IfNotPresent
                        type: string
                    type: object
                required:
                - name
                type: object
              publishConnectionDetailsTo:
                description: PublishConnectionDetailsTo specifies the connection secret
                  config which contains a name, metadata and a reference to secret
                  store config to which any connection details for this managed resource
                  should be written. Connection details frequently include the endpoint,
                  username, and password required to connect to the managed resource.
                properties:
                  configRef:
                    default:
                      name: default
                    description: SecretStoreConfigRef specifies which secret store
                      config should be used for this ConnectionSecret.
                    properties:
                      name:
                        description: Name of the referenced object.
                        type: string
                      policy:
                        description: Policies for referencing.
                        properties:
                          resolution:
                            default: Required
                            description: Resolution specifies whether resolution of
                              this reference is required. The default is 'Required',
                              which means the reconcile will fail if the reference
                              cannot be resolved. 'Optional' means this reference
                              will be a no-op if it cannot be resolved.
                            enum:
                            - Required
                            - Optional
                            type: string
                          resolve:
                            description: Resolve specifies when this reference should
                              be resolved. The default is 'IfNotPresent', which will
                              attempt to resolve the reference only when the corresponding
                              field is not present. Use 'Always' to resolve the reference
                              on every reconcile.
                            enum:
                            - Always
                            - IfNotPresent
                            type: string
                        type: object
                    required:
                    - name
                    type: object
                  metadata:
                    description: Metadata is the metadata for connection secret.
                    properties:
                      annotations:
                        additionalProperties:
                          type: string
                        description: Annotations are the annotations to be added to
                          connection secret. - For Kubernetes secrets, this will be
                          used as "metadata.annotations". - It is up to Secret Store
                          implementation for others store types.
                        type: object
                      labels:
                        additionalProperties:
                          type: string
                        description: Labels are the labels/tags to be added to connection
                          secret. - For Kubernetes secrets, this will be used as "metadata.labels".
                          - It is up to Secret Store implementation for others store
                          types.
                        type: object
                      type:
                        description: Type is the SecretType for the connection secret.
                          - Only valid for Kubernetes Secret Stores.
                        type: string
                    type: object
                  name:
                    description: Name is the name of the connection secret.
                    type: string
                required:
                - name
                type: object
              writeConnectionSecretToRef:
                description: WriteConnectionSecretToReference specifies the namespace
                  and name of a Secret to which any connection details for this managed
                  resource should be written. Connection details frequently include
                  the endpoint, username, and password required to connect to the
                  managed resource. This field is planned to be replaced in a future
                  release in favor of PublishConnectionDetailsTo. Currently, both
                  could be set independently and connection details would be published
                  to both without affecting each other.
                properties:
                  name:
                    description: Name of the secret.
                    type: string
                  namespace:
                    description: Namespace of the secret.
                    type: string
                required:
                - name
                - namespace
                type: object
            required:
            - forProvider
            type: object
          status:
            description: An ELBStatus represents the observed state of an ELB.
            properties:
              atProvider:
                description: ELBObservation keeps the state for the external resource
                properties:
                  backendServerDescriptions:
                    description: Information about the EC2 instances for this ELB.
                    items:
                      description: BackendServerDescription provides information about
                        the instances attached to the ELB.
                      properties:
                        instancePort:
                          description: The port on which the EC2 instance is listening.
                          format: int32
                          type: integer
                        policyNames:
                          description: The names of the policies enabled for the EC2
                            instance.
                          items:
                            type: string
                          type: array
                      type: object
                    type: array
                  canonicalHostedZoneName:
                    description: The DNS name of the load balancer.
                    type: string
                  canonicalHostedZoneNameId:
                    description: The ID of the Amazon Route 53 hosted zone for the
                      load balancer.
                    type: string
                  dnsName:
                    description: The DNS name of the load balancer.
                    type: string
                  vpcId:
                    description: The ID of the VPC for the load balancer.
                    type: string
                type: object
              conditions:
                description: Conditions of the resource.
                items:
                  description: A Condition that may apply to a resource.
                  properties:
                    lastTransitionTime:
                      description: LastTransitionTime is the last time this condition
                        transitioned from one status to another.
                      format: date-time
                      type: string
                    message:
                      description: A Message containing details about this condition's
                        last transition from one status to another, if any.
                      type: string
                    reason:
                      description: A Reason for this condition's last transition from
                        one status to another.
                      type: string
                    status:
                      description: Status of this condition; is it currently True,
                        False, or Unknown?
                      type: string
                    type:
                      description: Type of this condition. At most one of each condition
                        type may apply to a resource at any point in time.
                      type: string
                  required:
                  - lastTransitionTime
                  - reason
                  - status
                  - type
                  type: object
                type: array
            type: object
        required:
        - spec
        type: object
    served: true
    storage: true
    subresources:
      status: {}
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []
