---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.8.0
  creationTimestamp: null
  name: volumes.ec2.aws.crossplane.io
spec:
  group: ec2.aws.crossplane.io
  names:
    categories:
    - crossplane
    - managed
    - aws
    kind: Volume
    listKind: VolumeList
    plural: volumes
    singular: volume
  scope: Cluster
  versions:
  - additionalPrinterColumns:
    - jsonPath: .status.conditions[?(@.type=='Ready')].status
      name: READY
      type: string
    - jsonPath: .status.conditions[?(@.type=='Synced')].status
      name: SYNCED
      type: string
    - jsonPath: .metadata.annotations.crossplane\.io/external-name
      name: EXTERNAL-NAME
      type: string
    name: v1alpha1
    schema:
      openAPIV3Schema:
        description: Volume is the Schema for the Volumes API
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: VolumeSpec defines the desired state of Volume
            properties:
              deletionPolicy:
                default: Delete
                description: DeletionPolicy specifies what will happen to the underlying
                  external when this managed resource is deleted - either "Delete"
                  or "Orphan" the external resource.
                enum:
                - Orphan
                - Delete
                type: string
              forProvider:
                description: VolumeParameters defines the desired state of Volume
                properties:
                  availabilityZone:
                    description: The Availability Zone in which to create the volume.
                    type: string
                  encrypted:
                    description: "Indicates whether the volume should be encrypted.
                      The effect of setting the encryption state to true depends on
                      the volume origin (new or from a snapshot), starting encryption
                      state, ownership, and whether encryption by default is enabled.
                      For more information, see Encryption by default (https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/EBSEncryption.html#encryption-by-default)
                      in the Amazon Elastic Compute Cloud User Guide. \n Encrypted
                      Amazon EBS volumes must be attached to instances that support
                      Amazon EBS encryption. For more information, see Supported instance
                      types (https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/EBSEncryption.html#EBSEncryption_supported_instances)."
                    type: boolean
                  iops:
                    description: "The number of I/O operations per second (IOPS).
                      For gp3, io1, and io2 volumes, this represents the number of
                      IOPS that are provisioned for the volume. For gp2 volumes, this
                      represents the baseline performance of the volume and the rate
                      at which the volume accumulates I/O credits for bursting. \n
                      The following are the supported values for each volume type:
                      \n * gp3: 3,000-16,000 IOPS \n * io1: 100-64,000 IOPS \n * io2:
                      100-64,000 IOPS \n io1 and io2 volumes support up to 64,000
                      IOPS only on Instances built on the Nitro System (https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/instance-types.html#ec2-nitro-instances).
                      Other instance families support performance up to 32,000 IOPS.
                      \n This parameter is required for io1 and io2 volumes. The default
                      for gp3 volumes is 3,000 IOPS. This parameter is not supported
                      for gp2, st1, sc1, or standard volumes."
                    format: int64
                    type: integer
                  kmsKeyId:
                    description: "The identifier of the AWS Key Management Service
                      (AWS KMS) customer master key (CMK) to use for Amazon EBS encryption.
                      If this parameter is not specified, your AWS managed CMK for
                      EBS is used. If KmsKeyId is specified, the encrypted state must
                      be true. \n You can specify the CMK using any of the following:
                      \n * Key ID. For example, 1234abcd-12ab-34cd-56ef-1234567890ab.
                      \n * Key alias. For example, alias/ExampleAlias. \n * Key ARN.
                      For example, arn:aws:kms:us-east-1:012345678910:key/1234abcd-12ab-34cd-56ef-1234567890ab.
                      \n * Alias ARN. For example, arn:aws:kms:us-east-1:012345678910:alias/ExampleAlias.
                      \n AWS authenticates the CMK asynchronously. Therefore, if you
                      specify an ID, alias, or ARN that is not valid, the action can
                      appear to complete, but eventually fails."
                    type: string
                  kmsKeyIdRef:
                    description: KMSKeyIDRef is a reference to a KMS Key used to set
                      KMSKeyID.
                    properties:
                      name:
                        description: Name of the referenced object.
                        type: string
                      policy:
                        description: Policies for referencing.
                        properties:
                          resolution:
                            default: Required
                            description: Resolution specifies whether resolution of
                              this reference is required. The default is 'Required',
                              which means the reconcile will fail if the reference
                              cannot be resolved. 'Optional' means this reference
                              will be a no-op if it cannot be resolved.
                            enum:
                            - Required
                            - Optional
                            type: string
                          resolve:
                            description: Resolve specifies when this reference should
                              be resolved. The default is 'IfNotPresent', which will
                              attempt to resolve the reference only when the corresponding
                              field is not present. Use 'Always' to resolve the reference
                              on every reconcile.
                            enum:
                            - Always
                            - IfNotPresent
                            type: string
                        type: object
                    required:
                    - name
                    type: object
                  kmsKeyIdSelector:
                    description: KMSKeyIDSelector selects a reference to a KMS Key
                      used to set KMSKeyID.
                    properties:
                      matchControllerRef:
                        description: MatchControllerRef ensures an object with the
                          same controller reference as the selecting object is selected.
                        type: boolean
                      matchLabels:
                        additionalProperties:
                          type: string
                        description: MatchLabels ensures an object with matching labels
                          is selected.
                        type: object
                      policy:
                        description: Policies for selection.
                        properties:
                          resolution:
                            default: Required
                            description: Resolution specifies whether resolution of
                              this reference is required. The default is 'Required',
                              which means the reconcile will fail if the reference
                              cannot be resolved. 'Optional' means this reference
                              will be a no-op if it cannot be resolved.
                            enum:
                            - Required
                            - Optional
                            type: string
                          resolve:
                            description: Resolve specifies when this reference should
                              be resolved. The default is 'IfNotPresent', which will
                              attempt to resolve the reference only when the corresponding
                              field is not present. Use 'Always' to resolve the reference
                              on every reconcile.
                            enum:
                            - Always
                            - IfNotPresent
                            type: string
                        type: object
                    type: object
                  multiAttachEnabled:
                    description: Indicates whether to enable Amazon EBS Multi-Attach.
                      If you enable Multi-Attach, you can attach the volume to up
                      to 16 Instances built on the Nitro System (https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/instance-types.html#ec2-nitro-instances)
                      in the same Availability Zone. This parameter is supported with
                      io1 and io2 volumes only. For more information, see Amazon EBS
                      Multi-Attach (https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/ebs-volumes-multi.html)
                      in the Amazon Elastic Compute Cloud User Guide.
                    type: boolean
                  outpostARN:
                    description: The Amazon Resource Name (ARN) of the Outpost.
                    type: string
                  region:
                    description: Region is which region the Volume will be created.
                    type: string
                  size:
                    description: "The size of the volume, in GiBs. You must specify
                      either a snapshot ID or a volume size. If you specify a snapshot,
                      the default is the snapshot size. You can specify a volume size
                      that is equal to or larger than the snapshot size. \n The following
                      are the supported volumes sizes for each volume type: \n * gp2
                      and gp3: 1-16,384 \n * io1 and io2: 4-16,384 \n * st1 and sc1:
                      125-16,384 \n * standard: 1-1,024"
                    format: int64
                    type: integer
                  snapshotID:
                    description: The snapshot from which to create the volume. You
                      must specify either a snapshot ID or a volume size.
                    type: string
                  tagSpecifications:
                    description: The tags to apply to the volume during creation.
                    items:
                      properties:
                        resourceType:
                          type: string
                        tags:
                          items:
                            properties:
                              key:
                                type: string
                              value:
                                type: string
                            type: object
                          type: array
                      type: object
                    type: array
                  throughput:
                    description: "The throughput to provision for a volume, with a
                      maximum of 1,000 MiB/s. \n This parameter is valid only for
                      gp3 volumes. \n Valid Range: Minimum value of 125. Maximum value
                      of 1000."
                    format: int64
                    type: integer
                  volumeType:
                    description: "The volume type. This parameter can be one of the
                      following values: \n * General Purpose SSD: gp2 | gp3 \n * Provisioned
                      IOPS SSD: io1 | io2 \n * Throughput Optimized HDD: st1 \n *
                      Cold HDD: sc1 \n * Magnetic: standard \n For more information,
                      see Amazon EBS volume types (https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/EBSVolumeTypes.html)
                      in the Amazon Elastic Compute Cloud User Guide. \n Default:
                      gp2"
                    type: string
                required:
                - availabilityZone
                - region
                type: object
              providerConfigRef:
                default:
                  name: default
                description: ProviderConfigReference specifies how the provider that
                  will be used to create, observe, update, and delete this managed
                  resource should be configured.
                properties:
                  name:
                    description: Name of the referenced object.
                    type: string
                  policy:
                    description: Policies for referencing.
                    properties:
                      resolution:
                        default: Required
                        description: Resolution specifies whether resolution of this
                          reference is required. The default is 'Required', which
                          means the reconcile will fail if the reference cannot be
                          resolved. 'Optional' means this reference will be a no-op
                          if it cannot be resolved.
                        enum:
                        - Required
                        - Optional
                        type: string
                      resolve:
                        description: Resolve specifies when this reference should
                          be resolved. The default is 'IfNotPresent', which will attempt
                          to resolve the reference only when the corresponding field
                          is not present. Use 'Always' to resolve the reference on
                          every reconcile.
                        enum:
                        - Always
                        - IfNotPresent
                        type: string
                    type: object
                required:
                - name
                type: object
              providerRef:
                description: 'ProviderReference specifies the provider that will be
                  used to create, observe, update, and delete this managed resource.
                  Deprecated: Please use ProviderConfigReference, i.e. `providerConfigRef`'
                properties:
                  name:
                    description: Name of the referenced object.
                    type: string
                  policy:
                    description: Policies for referencing.
                    properties:
                      resolution:
                        default: Required
                        description: Resolution specifies whether resolution of this
                          reference is required. The default is 'Required', which
                          means the reconcile will fail if the reference cannot be
                          resolved. 'Optional' means this reference will be a no-op
                          if it cannot be resolved.
                        enum:
                        - Required
                        - Optional
                        type: string
                      resolve:
                        description: Resolve specifies when this reference should
                          be resolved. The default is 'IfNotPresent', which will attempt
                          to resolve the reference only when the corresponding field
                          is not present. Use 'Always' to resolve the reference on
                          every reconcile.
                        enum:
                        - Always
                        - IfNotPresent
                        type: string
                    type: object
                required:
                - name
                type: object
              publishConnectionDetailsTo:
                description: PublishConnectionDetailsTo specifies the connection secret
                  config which contains a name, metadata and a reference to secret
                  store config to which any connection details for this managed resource
                  should be written. Connection details frequently include the endpoint,
                  username, and password required to connect to the managed resource.
                properties:
                  configRef:
                    default:
                      name: default
                    description: SecretStoreConfigRef specifies which secret store
                      config should be used for this ConnectionSecret.
                    properties:
                      name:
                        description: Name of the referenced object.
                        type: string
                      policy:
                        description: Policies for referencing.
                        properties:
                          resolution:
                            default: Required
                            description: Resolution specifies whether resolution of
                              this reference is required. The default is 'Required',
                              which means the reconcile will fail if the reference
                              cannot be resolved. 'Optional' means this reference
                              will be a no-op if it cannot be resolved.
                            enum:
                            - Required
                            - Optional
                            type: string
                          resolve:
                            description: Resolve specifies when this reference should
                              be resolved. The default is 'IfNotPresent', which will
                              attempt to resolve the reference only when the corresponding
                              field is not present. Use 'Always' to resolve the reference
                              on every reconcile.
                            enum:
                            - Always
                            - IfNotPresent
                            type: string
                        type: object
                    required:
                    - name
                    type: object
                  metadata:
                    description: Metadata is the metadata for connection secret.
                    properties:
                      annotations:
                        additionalProperties:
                          type: string
                        description: Annotations are the annotations to be added to
                          connection secret. - For Kubernetes secrets, this will be
                          used as "metadata.annotations". - It is up to Secret Store
                          implementation for others store types.
                        type: object
                      labels:
                        additionalProperties:
                          type: string
                        description: Labels are the labels/tags to be added to connection
                          secret. - For Kubernetes secrets, this will be used as "metadata.labels".
                          - It is up to Secret Store implementation for others store
                          types.
                        type: object
                      type:
                        description: Type is the SecretType for the connection secret.
                          - Only valid for Kubernetes Secret Stores.
                        type: string
                    type: object
                  name:
                    description: Name is the name of the connection secret.
                    type: string
                required:
                - name
                type: object
              writeConnectionSecretToRef:
                description: WriteConnectionSecretToReference specifies the namespace
                  and name of a Secret to which any connection details for this managed
                  resource should be written. Connection details frequently include
                  the endpoint, username, and password required to connect to the
                  managed resource. This field is planned to be replaced in a future
                  release in favor of PublishConnectionDetailsTo. Currently, both
                  could be set independently and connection details would be published
                  to both without affecting each other.
                properties:
                  name:
                    description: Name of the secret.
                    type: string
                  namespace:
                    description: Namespace of the secret.
                    type: string
                required:
                - name
                - namespace
                type: object
            required:
            - forProvider
            type: object
          status:
            description: VolumeStatus defines the observed state of Volume.
            properties:
              atProvider:
                description: VolumeObservation defines the observed state of Volume
                properties:
                  attachments:
                    description: Information about the volume attachments.
                    items:
                      properties:
                        attachTime:
                          format: date-time
                          type: string
                        deleteOnTermination:
                          type: boolean
                        device:
                          type: string
                        instanceID:
                          type: string
                        state:
                          type: string
                        volumeID:
                          type: string
                      type: object
                    type: array
                  createTime:
                    description: The time stamp when volume creation was initiated.
                    format: date-time
                    type: string
                  fastRestored:
                    description: Indicates whether the volume was created using fast
                      snapshot restore.
                    type: boolean
                  kmsKeyID:
                    description: The Amazon Resource Name (ARN) of the Key Management
                      Service (KMS) KMS key that was used to protect the volume encryption
                      key for the volume.
                    type: string
                  state:
                    description: The volume state.
                    type: string
                  tags:
                    description: Any tags assigned to the volume.
                    items:
                      properties:
                        key:
                          type: string
                        value:
                          type: string
                      type: object
                    type: array
                  volumeID:
                    description: The ID of the volume.
                    type: string
                type: object
              conditions:
                description: Conditions of the resource.
                items:
                  description: A Condition that may apply to a resource.
                  properties:
                    lastTransitionTime:
                      description: LastTransitionTime is the last time this condition
                        transitioned from one status to another.
                      format: date-time
                      type: string
                    message:
                      description: A Message containing details about this condition's
                        last transition from one status to another, if any.
                      type: string
                    reason:
                      description: A Reason for this condition's last transition from
                        one status to another.
                      type: string
                    status:
                      description: Status of this condition; is it currently True,
                        False, or Unknown?
                      type: string
                    type:
                      description: Type of this condition. At most one of each condition
                        type may apply to a resource at any point in time.
                      type: string
                  required:
                  - lastTransitionTime
                  - reason
                  - status
                  - type
                  type: object
                type: array
            type: object
        required:
        - spec
        type: object
    served: true
    storage: true
    subresources:
      status: {}
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []
