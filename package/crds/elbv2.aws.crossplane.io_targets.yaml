---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.8.0
  creationTimestamp: null
  name: targets.elbv2.aws.crossplane.io
spec:
  group: elbv2.aws.crossplane.io
  names:
    categories:
    - crossplane
    - managed
    - aws
    kind: Target
    listKind: TargetList
    plural: targets
    singular: target
  scope: Cluster
  versions:
  - additionalPrinterColumns:
    - jsonPath: .status.conditions[?(@.type=='Ready')].status
      name: READY
      type: string
    - jsonPath: .status.conditions[?(@.type=='Synced')].status
      name: SYNCED
      type: string
    - jsonPath: .status.atProvider.targetHealth.state
      name: STATE
      type: string
    - jsonPath: .metadata.annotations.crossplane\.io/external-name
      name: TARGET
      type: string
    - jsonPath: .spec.forProvider.targetGroupArn
      name: GROUP
      type: string
    name: v1alpha1
    schema:
      openAPIV3Schema:
        description: Target is the Schema for registering a target to an ELBV2 TargetGroup.
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: TargetSpec defines the desired state of a Target
            properties:
              deletionPolicy:
                default: Delete
                description: DeletionPolicy specifies what will happen to the underlying
                  external when this managed resource is deleted - either "Delete"
                  or "Orphan" the external resource.
                enum:
                - Orphan
                - Delete
                type: string
              forProvider:
                description: TargetParameters defines the desired state of a Target
                properties:
                  availabilityZone:
                    description: "An Availability Zone or all. This determines whether
                      the target receives traffic from the load balancer nodes in
                      the specified Availability Zone or from all enabled Availability
                      Zones for the load balancer. \n This parameter is not supported
                      if the target type of the target group is instance or alb. \n
                      If the target type is ip and the IP address is in a subnet of
                      the VPC for the target group, the Availability Zone is automatically
                      detected and this parameter is optional. If the IP address is
                      outside the VPC, this parameter is required. \n With an Application
                      Load Balancer, if the target type is ip and the IP address is
                      outside the VPC for the target group, the only supported value
                      is all. \n If the target type is lambda, this parameter is optional
                      and the only supported value is all."
                    type: string
                  lambdaArn:
                    description: "The LambdaARN that should be used as target. \n
                      Note: If you want to reference anything else than Lambda you
                      currently have to specify the crossplane.io/external-name annotation
                      directly. If the target type of the target group is instance,
                      specify an instance ID. If the target type is ip, specify an
                      IP address. If the target type is lambda, specify the ARN of
                      the Lambda function. If the target type is alb, specify the
                      ARN of the Application Load Balancer target."
                    type: string
                  lambdaArnRef:
                    description: LambdaARNRef references a Lambda Function to set
                      LambdaARN.
                    properties:
                      name:
                        description: Name of the referenced object.
                        type: string
                      policy:
                        description: Policies for referencing.
                        properties:
                          resolution:
                            default: Required
                            description: Resolution specifies whether resolution of
                              this reference is required. The default is 'Required',
                              which means the reconcile will fail if the reference
                              cannot be resolved. 'Optional' means this reference
                              will be a no-op if it cannot be resolved.
                            enum:
                            - Required
                            - Optional
                            type: string
                          resolve:
                            description: Resolve specifies when this reference should
                              be resolved. The default is 'IfNotPresent', which will
                              attempt to resolve the reference only when the corresponding
                              field is not present. Use 'Always' to resolve the reference
                              on every reconcile.
                            enum:
                            - Always
                            - IfNotPresent
                            type: string
                        type: object
                    required:
                    - name
                    type: object
                  lambdaArnSelector:
                    description: LambdaARNSelector references a Lambda Function to
                      set LambdaARN.
                    properties:
                      matchControllerRef:
                        description: MatchControllerRef ensures an object with the
                          same controller reference as the selecting object is selected.
                        type: boolean
                      matchLabels:
                        additionalProperties:
                          type: string
                        description: MatchLabels ensures an object with matching labels
                          is selected.
                        type: object
                      policy:
                        description: Policies for selection.
                        properties:
                          resolution:
                            default: Required
                            description: Resolution specifies whether resolution of
                              this reference is required. The default is 'Required',
                              which means the reconcile will fail if the reference
                              cannot be resolved. 'Optional' means this reference
                              will be a no-op if it cannot be resolved.
                            enum:
                            - Required
                            - Optional
                            type: string
                          resolve:
                            description: Resolve specifies when this reference should
                              be resolved. The default is 'IfNotPresent', which will
                              attempt to resolve the reference only when the corresponding
                              field is not present. Use 'Always' to resolve the reference
                              on every reconcile.
                            enum:
                            - Always
                            - IfNotPresent
                            type: string
                        type: object
                    type: object
                  port:
                    description: The port on which the target is listening. If the
                      target group protocol is GENEVE, the supported port is 6081.
                      If the target type is alb, the targeted Application Load Balancer
                      must have at least one listener whose port matches the target
                      group port. Not used if the target is a Lambda function.
                    format: int32
                    type: integer
                  region:
                    description: The AWS region the target resides in.
                    type: string
                  targetGroupArn:
                    description: "The Amazon Resource Name (ARN) of the target group.
                      \n One of TargetGroupARN, TargetGroupARNRef or TargetGroupARNSelector
                      is required."
                    type: string
                  targetGroupArnRef:
                    description: TargetGroupARNRef selects a ELBv2 TargetGroupARN
                      with the given name.
                    properties:
                      name:
                        description: Name of the referenced object.
                        type: string
                      policy:
                        description: Policies for referencing.
                        properties:
                          resolution:
                            default: Required
                            description: Resolution specifies whether resolution of
                              this reference is required. The default is 'Required',
                              which means the reconcile will fail if the reference
                              cannot be resolved. 'Optional' means this reference
                              will be a no-op if it cannot be resolved.
                            enum:
                            - Required
                            - Optional
                            type: string
                          resolve:
                            description: Resolve specifies when this reference should
                              be resolved. The default is 'IfNotPresent', which will
                              attempt to resolve the reference only when the corresponding
                              field is not present. Use 'Always' to resolve the reference
                              on every reconcile.
                            enum:
                            - Always
                            - IfNotPresent
                            type: string
                        type: object
                    required:
                    - name
                    type: object
                  targetGroupArnSelector:
                    description: TargetGroupARNSelector selects a ELBv2 TargetGroupARN
                      with the given labels.
                    properties:
                      matchControllerRef:
                        description: MatchControllerRef ensures an object with the
                          same controller reference as the selecting object is selected.
                        type: boolean
                      matchLabels:
                        additionalProperties:
                          type: string
                        description: MatchLabels ensures an object with matching labels
                          is selected.
                        type: object
                      policy:
                        description: Policies for selection.
                        properties:
                          resolution:
                            default: Required
                            description: Resolution specifies whether resolution of
                              this reference is required. The default is 'Required',
                              which means the reconcile will fail if the reference
                              cannot be resolved. 'Optional' means this reference
                              will be a no-op if it cannot be resolved.
                            enum:
                            - Required
                            - Optional
                            type: string
                          resolve:
                            description: Resolve specifies when this reference should
                              be resolved. The default is 'IfNotPresent', which will
                              attempt to resolve the reference only when the corresponding
                              field is not present. Use 'Always' to resolve the reference
                              on every reconcile.
                            enum:
                            - Always
                            - IfNotPresent
                            type: string
                        type: object
                    type: object
                required:
                - region
                type: object
              providerConfigRef:
                default:
                  name: default
                description: ProviderConfigReference specifies how the provider that
                  will be used to create, observe, update, and delete this managed
                  resource should be configured.
                properties:
                  name:
                    description: Name of the referenced object.
                    type: string
                  policy:
                    description: Policies for referencing.
                    properties:
                      resolution:
                        default: Required
                        description: Resolution specifies whether resolution of this
                          reference is required. The default is 'Required', which
                          means the reconcile will fail if the reference cannot be
                          resolved. 'Optional' means this reference will be a no-op
                          if it cannot be resolved.
                        enum:
                        - Required
                        - Optional
                        type: string
                      resolve:
                        description: Resolve specifies when this reference should
                          be resolved. The default is 'IfNotPresent', which will attempt
                          to resolve the reference only when the corresponding field
                          is not present. Use 'Always' to resolve the reference on
                          every reconcile.
                        enum:
                        - Always
                        - IfNotPresent
                        type: string
                    type: object
                required:
                - name
                type: object
              providerRef:
                description: 'ProviderReference specifies the provider that will be
                  used to create, observe, update, and delete this managed resource.
                  Deprecated: Please use ProviderConfigReference, i.e. `providerConfigRef`'
                properties:
                  name:
                    description: Name of the referenced object.
                    type: string
                  policy:
                    description: Policies for referencing.
                    properties:
                      resolution:
                        default: Required
                        description: Resolution specifies whether resolution of this
                          reference is required. The default is 'Required', which
                          means the reconcile will fail if the reference cannot be
                          resolved. 'Optional' means this reference will be a no-op
                          if it cannot be resolved.
                        enum:
                        - Required
                        - Optional
                        type: string
                      resolve:
                        description: Resolve specifies when this reference should
                          be resolved. The default is 'IfNotPresent', which will attempt
                          to resolve the reference only when the corresponding field
                          is not present. Use 'Always' to resolve the reference on
                          every reconcile.
                        enum:
                        - Always
                        - IfNotPresent
                        type: string
                    type: object
                required:
                - name
                type: object
              publishConnectionDetailsTo:
                description: PublishConnectionDetailsTo specifies the connection secret
                  config which contains a name, metadata and a reference to secret
                  store config to which any connection details for this managed resource
                  should be written. Connection details frequently include the endpoint,
                  username, and password required to connect to the managed resource.
                properties:
                  configRef:
                    default:
                      name: default
                    description: SecretStoreConfigRef specifies which secret store
                      config should be used for this ConnectionSecret.
                    properties:
                      name:
                        description: Name of the referenced object.
                        type: string
                      policy:
                        description: Policies for referencing.
                        properties:
                          resolution:
                            default: Required
                            description: Resolution specifies whether resolution of
                              this reference is required. The default is 'Required',
                              which means the reconcile will fail if the reference
                              cannot be resolved. 'Optional' means this reference
                              will be a no-op if it cannot be resolved.
                            enum:
                            - Required
                            - Optional
                            type: string
                          resolve:
                            description: Resolve specifies when this reference should
                              be resolved. The default is 'IfNotPresent', which will
                              attempt to resolve the reference only when the corresponding
                              field is not present. Use 'Always' to resolve the reference
                              on every reconcile.
                            enum:
                            - Always
                            - IfNotPresent
                            type: string
                        type: object
                    required:
                    - name
                    type: object
                  metadata:
                    description: Metadata is the metadata for connection secret.
                    properties:
                      annotations:
                        additionalProperties:
                          type: string
                        description: Annotations are the annotations to be added to
                          connection secret. - For Kubernetes secrets, this will be
                          used as "metadata.annotations". - It is up to Secret Store
                          implementation for others store types.
                        type: object
                      labels:
                        additionalProperties:
                          type: string
                        description: Labels are the labels/tags to be added to connection
                          secret. - For Kubernetes secrets, this will be used as "metadata.labels".
                          - It is up to Secret Store implementation for others store
                          types.
                        type: object
                      type:
                        description: Type is the SecretType for the connection secret.
                          - Only valid for Kubernetes Secret Stores.
                        type: string
                    type: object
                  name:
                    description: Name is the name of the connection secret.
                    type: string
                required:
                - name
                type: object
              writeConnectionSecretToRef:
                description: WriteConnectionSecretToReference specifies the namespace
                  and name of a Secret to which any connection details for this managed
                  resource should be written. Connection details frequently include
                  the endpoint, username, and password required to connect to the
                  managed resource. This field is planned to be replaced in a future
                  release in favor of PublishConnectionDetailsTo. Currently, both
                  could be set independently and connection details would be published
                  to both without affecting each other.
                properties:
                  name:
                    description: Name of the secret.
                    type: string
                  namespace:
                    description: Namespace of the secret.
                    type: string
                required:
                - name
                - namespace
                type: object
            required:
            - forProvider
            type: object
          status:
            description: TargetStatus defines the observed state of a Target
            properties:
              atProvider:
                description: TargetObservation defines the observed state of a Target
                properties:
                  healthCheckPort:
                    description: The port to use to connect with the target.
                    type: string
                  targetHealth:
                    description: The health information for the target.
                    properties:
                      description:
                        description: A description of the target health that provides
                          additional details. If the state is healthy, a description
                          is not provided.
                        type: string
                      reason:
                        description: "The reason code. \n If the target state is healthy,
                          a reason code is not provided. \n If the target state is
                          initial, the reason code can be one of the following values:
                          \n * Elb.RegistrationInProgress - The target is in the process
                          of being registered with the load balancer. \n * Elb.InitialHealthChecking
                          - The load balancer is still sending the target the minimum
                          number of health checks required to determine its health
                          status. \n If the target state is unhealthy, the reason
                          code can be one of the following values: \n * Target.ResponseCodeMismatch
                          - The health checks did not return an expected HTTP code.
                          Applies only to Application Load Balancers and Gateway Load
                          Balancers. \n * Target.Timeout - The health check requests
                          timed out. Applies only to Application Load Balancers and
                          Gateway Load Balancers. \n * Target.FailedHealthChecks -
                          The load balancer received an error while establishing a
                          connection to the target or the target response was malformed.
                          \n * Elb.InternalError - The health checks failed due to
                          an internal error. Applies only to Application Load Balancers.
                          \n If the target state is unused, the reason code can be
                          one of the following values: \n * Target.NotRegistered -
                          The target is not registered with the target group. \n *
                          Target.NotInUse - The target group is not used by any load
                          balancer or the target is in an Availability Zone that is
                          not enabled for its load balancer. \n * Target.InvalidState
                          - The target is in the stopped or terminated state. \n *
                          Target.IpUnusable - The target IP address is reserved for
                          use by a load balancer. \n If the target state is draining,
                          the reason code can be the following value: \n * Target.DeregistrationInProgress
                          - The target is in the process of being deregistered and
                          the deregistration delay period has not expired. \n If the
                          target state is unavailable, the reason code can be the
                          following value: \n * Target.HealthCheckDisabled - Health
                          checks are disabled for the target group. Applies only to
                          Application Load Balancers. \n * Elb.InternalError - Target
                          health is unavailable due to an internal error. Applies
                          only to Network Load Balancers."
                        type: string
                      state:
                        description: The state of the target.
                        type: string
                    type: object
                type: object
              conditions:
                description: Conditions of the resource.
                items:
                  description: A Condition that may apply to a resource.
                  properties:
                    lastTransitionTime:
                      description: LastTransitionTime is the last time this condition
                        transitioned from one status to another.
                      format: date-time
                      type: string
                    message:
                      description: A Message containing details about this condition's
                        last transition from one status to another, if any.
                      type: string
                    reason:
                      description: A Reason for this condition's last transition from
                        one status to another.
                      type: string
                    status:
                      description: Status of this condition; is it currently True,
                        False, or Unknown?
                      type: string
                    type:
                      description: Type of this condition. At most one of each condition
                        type may apply to a resource at any point in time.
                      type: string
                  required:
                  - lastTransitionTime
                  - reason
                  - status
                  - type
                  type: object
                type: array
            type: object
        required:
        - spec
        type: object
    served: true
    storage: true
    subresources:
      status: {}
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []
