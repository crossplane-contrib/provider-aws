apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.4.0
  creationTimestamp: null
  name: jobs.glue.aws.crossplane.io
spec:
  group: glue.aws.crossplane.io
  names:
    categories:
    - crossplane
    - managed
    - aws
    kind: Job
    listKind: JobList
    plural: jobs
    singular: job
  scope: Cluster
  versions:
  - additionalPrinterColumns:
    - jsonPath: .status.conditions[?(@.type=='Ready')].status
      name: READY
      type: string
    - jsonPath: .status.conditions[?(@.type=='Synced')].status
      name: SYNCED
      type: string
    - jsonPath: .metadata.annotations.crossplane\.io/external-name
      name: EXTERNAL-NAME
      type: string
    name: v1alpha1
    schema:
      openAPIV3Schema:
        description: Job is the Schema for the Jobs API
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: JobSpec defines the desired state of Job
            properties:
              deletionPolicy:
                description: DeletionPolicy specifies what will happen to the underlying external when this managed resource is deleted - either "Delete" or "Orphan" the external resource. The "Delete" policy is the default when no policy is specified.
                enum:
                - Orphan
                - Delete
                type: string
              forProvider:
                description: JobParameters defines the desired state of Job
                properties:
                  allocatedCapacity:
                    description: "This parameter is deprecated. Use MaxCapacity instead. \n The number of AWS Glue data processing units (DPUs) to allocate to this Job. You can allocate from 2 to 100 DPUs; the default is 10. A DPU is a relative measure of processing power that consists of 4 vCPUs of compute capacity and 16 GB of memory. For more information, see the AWS Glue pricing page (https://aws.amazon.com/glue/pricing/)."
                    format: int64
                    type: integer
                  command:
                    description: The JobCommand that executes this job.
                    properties:
                      name:
                        type: string
                      pythonVersion:
                        type: string
                      scriptLocation:
                        type: string
                    type: object
                  connections:
                    description: The connections used for this job.
                    properties:
                      connections:
                        items:
                          type: string
                        type: array
                    type: object
                  defaultArguments:
                    additionalProperties:
                      type: string
                    description: "The default arguments for this job. \n You can specify arguments here that your own job-execution script consumes, as well as arguments that AWS Glue itself consumes. \n For information about how to specify and consume your own Job arguments, see the Calling AWS Glue APIs in Python (https://docs.aws.amazon.com/glue/latest/dg/aws-glue-programming-python-calling.html) topic in the developer guide. \n For information about the key-value pairs that AWS Glue consumes to set up your job, see the Special Parameters Used by AWS Glue (https://docs.aws.amazon.com/glue/latest/dg/aws-glue-programming-etl-glue-arguments.html) topic in the developer guide."
                    type: object
                  description:
                    description: Description of the job being defined.
                    type: string
                  executionProperty:
                    description: An ExecutionProperty specifying the maximum number of concurrent runs allowed for this job.
                    properties:
                      maxConcurrentRuns:
                        format: int64
                        type: integer
                    type: object
                  glueVersion:
                    description: "Glue version determines the versions of Apache Spark and Python that AWS Glue supports. The Python version indicates the version supported for jobs of type Spark. \n For more information about the available AWS Glue versions and corresponding Spark and Python versions, see Glue version (https://docs.aws.amazon.com/glue/latest/dg/add-job.html) in the developer guide. \n Jobs that are created without specifying a Glue version default to Glue 0.9."
                    type: string
                  logURI:
                    description: This field is reserved for future use.
                    type: string
                  maxCapacity:
                    description: "The number of AWS Glue data processing units (DPUs) that can be allocated when this job runs. A DPU is a relative measure of processing power that consists of 4 vCPUs of compute capacity and 16 GB of memory. For more information, see the AWS Glue pricing page (https://aws.amazon.com/glue/pricing/). \n Do not set Max Capacity if using WorkerType and NumberOfWorkers. \n The value that can be allocated for MaxCapacity depends on whether you are running a Python shell job or an Apache Spark ETL job: \n    * When you specify a Python shell job (JobCommand.Name=\"pythonshell\"),    you can allocate either 0.0625 or 1 DPU. The default is 0.0625 DPU. \n    * When you specify an Apache Spark ETL job (JobCommand.Name=\"glueetl\")    or Apache Spark streaming ETL job (JobCommand.Name=\"gluestreaming\"), you    can allocate from 2 to 100 DPUs. The default is 10 DPUs. This job type    cannot have a fractional DPU allocation."
                    type: number
                  maxRetries:
                    description: The maximum number of times to retry this job if it fails.
                    format: int64
                    type: integer
                  name:
                    description: The name you assign to this job definition. It must be unique in your account.
                    type: string
                  nonOverridableArguments:
                    additionalProperties:
                      type: string
                    description: Non-overridable arguments for this job, specified as name-value pairs.
                    type: object
                  notificationProperty:
                    description: Specifies configuration properties of a job notification.
                    properties:
                      notifyDelayAfter:
                        format: int64
                        type: integer
                    type: object
                  numberOfWorkers:
                    description: "The number of workers of a defined workerType that are allocated when a job runs. \n The maximum number of workers you can define are 299 for G.1X, and 149 for G.2X."
                    format: int64
                    type: integer
                  region:
                    description: Region is which region the Job will be created.
                    type: string
                  role:
                    description: The name or Amazon Resource Name (ARN) of the IAM role associated with this job.
                    type: string
                  securityConfiguration:
                    description: The name of the SecurityConfiguration structure to be used with this job.
                    type: string
                  tags:
                    additionalProperties:
                      type: string
                    description: The tags to use with this job. You may use tags to limit access to the job. For more information about tags in AWS Glue, see AWS Tags in AWS Glue (https://docs.aws.amazon.com/glue/latest/dg/monitor-tags.html) in the developer guide.
                    type: object
                  timeout:
                    description: The job timeout in minutes. This is the maximum time that a job run can consume resources before it is terminated and enters TIMEOUT status. The default is 2,880 minutes (48 hours).
                    format: int64
                    type: integer
                  workerType:
                    description: "The type of predefined worker that is allocated when a job runs. Accepts a value of Standard, G.1X, or G.2X. \n    * For the Standard worker type, each worker provides 4 vCPU, 16 GB of    memory and a 50GB disk, and 2 executors per worker. \n    * For the G.1X worker type, each worker maps to 1 DPU (4 vCPU, 16 GB of    memory, 64 GB disk), and provides 1 executor per worker. We recommend    this worker type for memory-intensive jobs. \n    * For the G.2X worker type, each worker maps to 2 DPU (8 vCPU, 32 GB of    memory, 128 GB disk), and provides 1 executor per worker. We recommend    this worker type for memory-intensive jobs."
                    type: string
                required:
                - command
                - name
                - region
                - role
                type: object
              providerConfigRef:
                description: ProviderConfigReference specifies how the provider that will be used to create, observe, update, and delete this managed resource should be configured.
                properties:
                  name:
                    description: Name of the referenced object.
                    type: string
                required:
                - name
                type: object
              providerRef:
                description: 'ProviderReference specifies the provider that will be used to create, observe, update, and delete this managed resource. Deprecated: Please use ProviderConfigReference, i.e. `providerConfigRef`'
                properties:
                  name:
                    description: Name of the referenced object.
                    type: string
                required:
                - name
                type: object
              writeConnectionSecretToRef:
                description: WriteConnectionSecretToReference specifies the namespace and name of a Secret to which any connection details for this managed resource should be written. Connection details frequently include the endpoint, username, and password required to connect to the managed resource.
                properties:
                  name:
                    description: Name of the secret.
                    type: string
                  namespace:
                    description: Namespace of the secret.
                    type: string
                required:
                - name
                - namespace
                type: object
            required:
            - forProvider
            type: object
          status:
            description: JobStatus defines the observed state of Job.
            properties:
              atProvider:
                description: JobObservation defines the observed state of Job
                type: object
              conditions:
                description: Conditions of the resource.
                items:
                  description: A Condition that may apply to a resource.
                  properties:
                    lastTransitionTime:
                      description: LastTransitionTime is the last time this condition transitioned from one status to another.
                      format: date-time
                      type: string
                    message:
                      description: A Message containing details about this condition's last transition from one status to another, if any.
                      type: string
                    reason:
                      description: A Reason for this condition's last transition from one status to another.
                      type: string
                    status:
                      description: Status of this condition; is it currently True, False, or Unknown?
                      type: string
                    type:
                      description: Type of this condition. At most one of each condition type may apply to a resource at any point in time.
                      type: string
                  required:
                  - lastTransitionTime
                  - reason
                  - status
                  - type
                  type: object
                type: array
            required:
            - atProvider
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []
