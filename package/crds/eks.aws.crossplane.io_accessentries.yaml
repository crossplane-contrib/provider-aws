---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.16.0
  name: accessentries.eks.aws.crossplane.io
spec:
  group: eks.aws.crossplane.io
  names:
    categories:
    - crossplane
    - managed
    - aws
    kind: AccessEntry
    listKind: AccessEntryList
    plural: accessentries
    singular: accessentry
  scope: Cluster
  versions:
  - additionalPrinterColumns:
    - jsonPath: .status.conditions[?(@.type=='Ready')].status
      name: READY
      type: string
    - jsonPath: .status.conditions[?(@.type=='Synced')].status
      name: SYNCED
      type: string
    - jsonPath: .metadata.annotations.crossplane\.io/external-name
      name: EXTERNAL-NAME
      type: string
    - jsonPath: .metadata.creationTimestamp
      name: AGE
      type: date
    name: v1alpha1
    schema:
      openAPIV3Schema:
        description: AccessEntry is the Schema for the AccessEntries API
        properties:
          apiVersion:
            description: |-
              APIVersion defines the versioned schema of this representation of an object.
              Servers should convert recognized schemas to the latest internal value, and
              may reject unrecognized values.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
            type: string
          kind:
            description: |-
              Kind is a string value representing the REST resource this object represents.
              Servers may infer this from the endpoint the client submits requests to.
              Cannot be updated.
              In CamelCase.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
            type: string
          metadata:
            type: object
          spec:
            description: AccessEntrySpec defines the desired state of AccessEntry
            properties:
              deletionPolicy:
                default: Delete
                description: |-
                  DeletionPolicy specifies what will happen to the underlying external
                  when this managed resource is deleted - either "Delete" or "Orphan" the
                  external resource.
                  This field is planned to be deprecated in favor of the ManagementPolicies
                  field in a future release. Currently, both could be set independently and
                  non-default values would be honored if the feature flag is enabled.
                  See the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223
                enum:
                - Orphan
                - Delete
                type: string
              forProvider:
                description: AccessEntryParameters defines the desired state of AccessEntry
                properties:
                  clientRequestToken:
                    description: |-
                      A unique, case-sensitive identifier that you provide to ensure the idempotency
                      of the request.
                    type: string
                  clusterName:
                    description: The name of your cluster.
                    type: string
                  kubernetesGroups:
                    description: |-
                      The value for name that you've specified for kind: Group as a subject in
                      a Kubernetes RoleBinding or ClusterRoleBinding object. Amazon EKS doesn't
                      confirm that the value for name exists in any bindings on your cluster. You
                      can specify one or more names.

                      Kubernetes authorizes the principalArn of the access entry to access any
                      cluster objects that you've specified in a Kubernetes Role or ClusterRole
                      object that is also specified in a binding's roleRef. For more information
                      about creating Kubernetes RoleBinding, ClusterRoleBinding, Role, or ClusterRole
                      objects, see Using RBAC Authorization in the Kubernetes documentation (https://kubernetes.io/docs/reference/access-authn-authz/rbac/).

                      If you want Amazon EKS to authorize the principalArn (instead of, or in addition
                      to Kubernetes authorizing the principalArn), you can associate one or more
                      access policies to the access entry using AssociateAccessPolicy. If you associate
                      any access policies, the principalARN has all permissions assigned in the
                      associated access policies and all permissions in any Kubernetes Role or
                      ClusterRole objects that the group names are bound to.
                    items:
                      type: string
                    type: array
                  principalARN:
                    description: |-
                      The ARN of the IAM principal for the AccessEntry. You can specify one ARN
                      for each access entry. You can't specify the same ARN in more than one access
                      entry. This value can't be changed after access entry creation.

                      The valid principals differ depending on the type of the access entry in
                      the type field. The only valid ARN is IAM roles for the types of access entries
                      for nodes: . You can use every IAM principal type for STANDARD access entries.
                      You can't use the STS session principal type with access entries because
                      this is a temporary principal for each session and not a permanent identity
                      that can be assigned permissions.

                      IAM best practices (https://docs.aws.amazon.com/IAM/latest/UserGuide/best-practices.html#bp-users-federation-idp)
                      recommend using IAM roles with temporary credentials, rather than IAM users
                      with long-term credentials.
                    type: string
                  region:
                    description: Region is which region the AccessEntry will be created.
                    type: string
                  tags:
                    additionalProperties:
                      type: string
                    description: |-
                      Metadata that assists with categorization and organization. Each tag consists
                      of a key and an optional value. You define both. Tags don't propagate to
                      any other cluster or Amazon Web Services resources.
                    type: object
                  type_:
                    description: |-
                      The type of the new access entry. Valid values are Standard, FARGATE_LINUX,
                      EC2_LINUX, and EC2_WINDOWS.

                      If the principalArn is for an IAM role that's used for self-managed Amazon
                      EC2 nodes, specify EC2_LINUX or EC2_WINDOWS. Amazon EKS grants the necessary
                      permissions to the node for you. If the principalArn is for any other purpose,
                      specify STANDARD. If you don't specify a value, Amazon EKS sets the value
                      to STANDARD. It's unnecessary to create access entries for IAM roles used
                      with Fargate profiles or managed Amazon EC2 nodes, because Amazon EKS creates
                      entries in the aws-auth ConfigMap for the roles. You can't change this value
                      once you've created the access entry.

                      If you set the value to EC2_LINUX or EC2_WINDOWS, you can't specify values
                      for kubernetesGroups, or associate an AccessPolicy to the access entry.
                    type: string
                  username:
                    description: |-
                      The username to authenticate to Kubernetes with. We recommend not specifying
                      a username and letting Amazon EKS specify it for you. For more information
                      about the value Amazon EKS specifies for you, or constraints before specifying
                      your own username, see Creating access entries (https://docs.aws.amazon.com/eks/latest/userguide/access-entries.html#creating-access-entries)
                      in the Amazon EKS User Guide.
                    type: string
                required:
                - clusterName
                - principalARN
                - region
                type: object
              managementPolicies:
                default:
                - '*'
                description: |-
                  THIS IS A BETA FIELD. It is on by default but can be opted out
                  through a Crossplane feature flag.
                  ManagementPolicies specify the array of actions Crossplane is allowed to
                  take on the managed and external resources.
                  This field is planned to replace the DeletionPolicy field in a future
                  release. Currently, both could be set independently and non-default
                  values would be honored if the feature flag is enabled. If both are
                  custom, the DeletionPolicy field will be ignored.
                  See the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223
                  and this one: https://github.com/crossplane/crossplane/blob/444267e84783136daa93568b364a5f01228cacbe/design/one-pager-ignore-changes.md
                items:
                  description: |-
                    A ManagementAction represents an action that the Crossplane controllers
                    can take on an external resource.
                  enum:
                  - Observe
                  - Create
                  - Update
                  - Delete
                  - LateInitialize
                  - '*'
                  type: string
                type: array
              providerConfigRef:
                default:
                  name: default
                description: |-
                  ProviderConfigReference specifies how the provider that will be used to
                  create, observe, update, and delete this managed resource should be
                  configured.
                properties:
                  name:
                    description: Name of the referenced object.
                    type: string
                  policy:
                    description: Policies for referencing.
                    properties:
                      resolution:
                        default: Required
                        description: |-
                          Resolution specifies whether resolution of this reference is required.
                          The default is 'Required', which means the reconcile will fail if the
                          reference cannot be resolved. 'Optional' means this reference will be
                          a no-op if it cannot be resolved.
                        enum:
                        - Required
                        - Optional
                        type: string
                      resolve:
                        description: |-
                          Resolve specifies when this reference should be resolved. The default
                          is 'IfNotPresent', which will attempt to resolve the reference only when
                          the corresponding field is not present. Use 'Always' to resolve the
                          reference on every reconcile.
                        enum:
                        - Always
                        - IfNotPresent
                        type: string
                    type: object
                required:
                - name
                type: object
              publishConnectionDetailsTo:
                description: |-
                  PublishConnectionDetailsTo specifies the connection secret config which
                  contains a name, metadata and a reference to secret store config to
                  which any connection details for this managed resource should be written.
                  Connection details frequently include the endpoint, username,
                  and password required to connect to the managed resource.
                properties:
                  configRef:
                    default:
                      name: default
                    description: |-
                      SecretStoreConfigRef specifies which secret store config should be used
                      for this ConnectionSecret.
                    properties:
                      name:
                        description: Name of the referenced object.
                        type: string
                      policy:
                        description: Policies for referencing.
                        properties:
                          resolution:
                            default: Required
                            description: |-
                              Resolution specifies whether resolution of this reference is required.
                              The default is 'Required', which means the reconcile will fail if the
                              reference cannot be resolved. 'Optional' means this reference will be
                              a no-op if it cannot be resolved.
                            enum:
                            - Required
                            - Optional
                            type: string
                          resolve:
                            description: |-
                              Resolve specifies when this reference should be resolved. The default
                              is 'IfNotPresent', which will attempt to resolve the reference only when
                              the corresponding field is not present. Use 'Always' to resolve the
                              reference on every reconcile.
                            enum:
                            - Always
                            - IfNotPresent
                            type: string
                        type: object
                    required:
                    - name
                    type: object
                  metadata:
                    description: Metadata is the metadata for connection secret.
                    properties:
                      annotations:
                        additionalProperties:
                          type: string
                        description: |-
                          Annotations are the annotations to be added to connection secret.
                          - For Kubernetes secrets, this will be used as "metadata.annotations".
                          - It is up to Secret Store implementation for others store types.
                        type: object
                      labels:
                        additionalProperties:
                          type: string
                        description: |-
                          Labels are the labels/tags to be added to connection secret.
                          - For Kubernetes secrets, this will be used as "metadata.labels".
                          - It is up to Secret Store implementation for others store types.
                        type: object
                      type:
                        description: |-
                          Type is the SecretType for the connection secret.
                          - Only valid for Kubernetes Secret Stores.
                        type: string
                    type: object
                  name:
                    description: Name is the name of the connection secret.
                    type: string
                required:
                - name
                type: object
              writeConnectionSecretToRef:
                description: |-
                  WriteConnectionSecretToReference specifies the namespace and name of a
                  Secret to which any connection details for this managed resource should
                  be written. Connection details frequently include the endpoint, username,
                  and password required to connect to the managed resource.
                  This field is planned to be replaced in a future release in favor of
                  PublishConnectionDetailsTo. Currently, both could be set independently
                  and connection details would be published to both without affecting
                  each other.
                properties:
                  name:
                    description: Name of the secret.
                    type: string
                  namespace:
                    description: Namespace of the secret.
                    type: string
                required:
                - name
                - namespace
                type: object
            required:
            - forProvider
            type: object
          status:
            description: AccessEntryStatus defines the observed state of AccessEntry.
            properties:
              atProvider:
                description: AccessEntryObservation defines the observed state of
                  AccessEntry
                properties:
                  accessEntryARN:
                    description: The ARN of the access entry.
                    type: string
                  createdAt:
                    description: The Unix epoch timestamp at object creation.
                    format: date-time
                    type: string
                  modifiedAt:
                    description: The Unix epoch timestamp for the last modification
                      to the object.
                    format: date-time
                    type: string
                type: object
              conditions:
                description: Conditions of the resource.
                items:
                  description: A Condition that may apply to a resource.
                  properties:
                    lastTransitionTime:
                      description: |-
                        LastTransitionTime is the last time this condition transitioned from one
                        status to another.
                      format: date-time
                      type: string
                    message:
                      description: |-
                        A Message containing details about this condition's last transition from
                        one status to another, if any.
                      type: string
                    observedGeneration:
                      description: |-
                        ObservedGeneration represents the .metadata.generation that the condition was set based upon.
                        For instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date
                        with respect to the current state of the instance.
                      format: int64
                      type: integer
                    reason:
                      description: A Reason for this condition's last transition from
                        one status to another.
                      type: string
                    status:
                      description: Status of this condition; is it currently True,
                        False, or Unknown?
                      type: string
                    type:
                      description: |-
                        Type of this condition. At most one of each condition type may apply to
                        a resource at any point in time.
                      type: string
                  required:
                  - lastTransitionTime
                  - reason
                  - status
                  - type
                  type: object
                type: array
                x-kubernetes-list-map-keys:
                - type
                x-kubernetes-list-type: map
              observedGeneration:
                description: |-
                  ObservedGeneration is the latest metadata.generation
                  which resulted in either a ready state, or stalled due to error
                  it can not recover from without human intervention.
                format: int64
                type: integer
            type: object
        required:
        - spec
        type: object
    served: true
    storage: true
    subresources:
      status: {}
