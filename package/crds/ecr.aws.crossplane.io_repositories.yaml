apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.6.2
  creationTimestamp: null
  name: repositories.ecr.aws.crossplane.io
spec:
  group: ecr.aws.crossplane.io
  names:
    categories:
    - crossplane
    - managed
    - aws
    kind: Repository
    listKind: RepositoryList
    plural: repositories
    singular: repository
  scope: Cluster
  versions:
  - additionalPrinterColumns:
    - jsonPath: .status.conditions[?(@.type=='Ready')].status
      name: READY
      type: string
    - jsonPath: .status.conditions[?(@.type=='Synced')].status
      name: SYNCED
      type: string
    - jsonPath: .metadata.annotations.crossplane\.io/external-name
      name: ID
      type: string
    - jsonPath: .status.atProvider.repositoryUri
      name: URI
      type: string
    name: v1alpha1
    schema:
      openAPIV3Schema:
        description: A Repository is a managed resource that represents an Elastic
          Container Repository
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: A RepositorySpec defines the desired state of a Elastic Container
              Repository.
            properties:
              deletionPolicy:
                default: Delete
                description: DeletionPolicy specifies what will happen to the underlying
                  external when this managed resource is deleted - either "Delete"
                  or "Orphan" the external resource.
                enum:
                - Orphan
                - Delete
                type: string
              forProvider:
                description: RepositoryParameters define the desired state of an AWS
                  Elastic Container Repository
                properties:
                  forceDelete:
                    description: If a repository contains images, forces the deletion.
                    type: boolean
                  imageScanningConfiguration:
                    description: The image scanning configuration for the repository.
                      This determines whether images are scanned for known vulnerabilities
                      after being pushed to the repository.
                    properties:
                      scanOnPush:
                        description: The setting that determines whether images are
                          scanned after being pushed to a repository. If set to true,
                          images will be scanned after being pushed. If this parameter
                          is not specified, it will default to false and images will
                          not be scanned unless a scan is manually started with the
                          StartImageScan API.
                        type: boolean
                    required:
                    - scanOnPush
                    type: object
                  imageTagMutability:
                    description: The tag mutability setting for the repository. If
                      this parameter is omitted, the default setting of MUTABLE will
                      be used which will allow image tags to be overwritten. If IMMUTABLE
                      is specified, all image tags within the repository will be immutable
                      which will prevent them from being overwritten.
                    enum:
                    - MUTABLE
                    - IMMUTABLE
                    type: string
                  lifecyclePolicy:
                    description: LifecyclePolicy contains one or more rules, where
                      each rule defines an action for Amazon ECR. This provides a
                      way to automate the cleaning up of unused images, for example
                      expiring images based on age or count
                    properties:
                      rules:
                        description: Rules are separate lifecycle rules to be applied
                          to the repository.
                        items:
                          description: LifecyclePolicyRule defines the actions on
                            the ECR repsitory https://docs.aws.amazon.com/AmazonECR/latest/userguide/LifecyclePolicies.html
                          properties:
                            action:
                              description: Action defines an action type, where the
                                only sypported value is 'expire'
                              enum:
                              - expire
                              properties:
                                expore:
                                  description: Type is what action to be taken when
                                    Selection matches
                                  enum:
                                  - expire
                                  type: string
                              required:
                              - expore
                              type: object
                            description:
                              description: Description describes the purpose of the
                                rule
                              type: string
                            rulePriority:
                              description: RulePriority is required and represents
                                the order in which the rules are applied
                              type: integer
                            selection:
                              description: Selection provides information about which
                                objects to be handled
                              properties:
                                countNumber:
                                  description: CountNumber is the number of images
                                    or days based on CountType Specify a count number.
                                    Acceptable values are positive integers (0 is
                                    not an accepted value). If the countType used
                                    is imageCountMoreThan, then the value is the maximum
                                    number of images that you want to retain in your
                                    repository. If the countType used is sinceImagePushed,
                                    then the value is the maximum age limit for your
                                    images.
                                  minimum: 1
                                  type: integer
                                countType:
                                  description: CountType selects what type to count
                                    objects on If countType is set to imageCountMoreThan,
                                    you also specify countNumber to create a rule
                                    that sets a limit on the number of images that
                                    exist in your repository. If countType is set
                                    to sinceImagePushed, you also specify countUnit
                                    and countNumber to specify a time limit on the
                                    images that exist in your repository.
                                  enum:
                                  - imageCountMoreThan
                                  - sinceImagePushed
                                  type: string
                                countUnit:
                                  description: 'CountUnit Required: yes, only if countType
                                    is set to sinceImagePushed Specify a count unit
                                    of days to indicate that as the unit of time,
                                    in addition to countNumber, which is the number
                                    of days. This should only be specified when countType
                                    is sinceImagePushed; an error will occur if you
                                    specify a count unit when countType is any other
                                    value.'
                                  enum:
                                  - days
                                  type: string
                                tagPrefixList:
                                  description: 'TagPrefixList specifies a comma-separated
                                    list of image tag prefixes on which to take action
                                    with your lifecycle policy. For example, if your
                                    images are tagged as prod, prod1, prod2, and so
                                    on, you would use the tag prefix prod to specify
                                    all of them. If you specify multiple tags, only
                                    the images with all specified tags are selected.
                                    Required: yes, only if tagStatus is set to tagged'
                                  type: string
                                tagStatus:
                                  description: TagStatus determines whether the lifecycle
                                    policy rule that you are adding specifies a tag
                                    for an image. Acceptable options are tagged, untagged,
                                    or any. If you specify any, then all images have
                                    the rule evaluated against them. If you specify
                                    tagged, then you must also specify a tagPrefixList
                                    value. If you specify untagged, then you must
                                    omit tagPrefixList.
                                  enum:
                                  - tagged
                                  - untagged
                                  - any
                                  type: string
                              required:
                              - countNumber
                              - countType
                              - tagStatus
                              type: object
                          required:
                          - action
                          - rulePriority
                          - selection
                          type: object
                        type: array
                    type: object
                  region:
                    description: Region is the region you'd like your Repository to
                      be created in.
                    type: string
                  tags:
                    description: Metadata tagging key value pairs
                    items:
                      description: Tag defines a tag
                      properties:
                        key:
                          description: Key is the name of the tag.
                          type: string
                        value:
                          description: Value is the value of the tag.
                          type: string
                      required:
                      - key
                      - value
                      type: object
                    type: array
                required:
                - region
                type: object
              providerConfigRef:
                default:
                  name: default
                description: ProviderConfigReference specifies how the provider that
                  will be used to create, observe, update, and delete this managed
                  resource should be configured.
                properties:
                  name:
                    description: Name of the referenced object.
                    type: string
                required:
                - name
                type: object
              providerRef:
                description: 'ProviderReference specifies the provider that will be
                  used to create, observe, update, and delete this managed resource.
                  Deprecated: Please use ProviderConfigReference, i.e. `providerConfigRef`'
                properties:
                  name:
                    description: Name of the referenced object.
                    type: string
                required:
                - name
                type: object
              writeConnectionSecretToRef:
                description: WriteConnectionSecretToReference specifies the namespace
                  and name of a Secret to which any connection details for this managed
                  resource should be written. Connection details frequently include
                  the endpoint, username, and password required to connect to the
                  managed resource.
                properties:
                  name:
                    description: Name of the secret.
                    type: string
                  namespace:
                    description: Namespace of the secret.
                    type: string
                required:
                - name
                - namespace
                type: object
            required:
            - forProvider
            type: object
          status:
            description: A RepositoryStatus represents the observed state of a Elastic
              Container Repository.
            properties:
              atProvider:
                description: RepositoryObservation keeps the state for the external
                  resource
                properties:
                  createdAt:
                    description: The date and time, in JavaScript date format, when
                      the repository was created.
                    format: date-time
                    type: string
                  registryId:
                    description: The AWS account ID associated with the registry that
                      contains the repository.
                    type: string
                  repositoryArn:
                    description: The Amazon Resource Name (ARN) that identifies the
                      repository. The ARN contains the arn:aws:ecr namespace, followed
                      by the region of the repository, AWS account ID of the repository
                      owner, repository namespace, and repository name. For example,
                      arn:aws:ecr:region:012345678910:repository/test.
                    type: string
                  repositoryName:
                    description: The name of the repository.
                    type: string
                  repositoryUri:
                    description: The URI for the repository. You can use this URI
                      for container image push and pull operations.
                    type: string
                required:
                - registryId
                type: object
              conditions:
                description: Conditions of the resource.
                items:
                  description: A Condition that may apply to a resource.
                  properties:
                    lastTransitionTime:
                      description: LastTransitionTime is the last time this condition
                        transitioned from one status to another.
                      format: date-time
                      type: string
                    message:
                      description: A Message containing details about this condition's
                        last transition from one status to another, if any.
                      type: string
                    reason:
                      description: A Reason for this condition's last transition from
                        one status to another.
                      type: string
                    status:
                      description: Status of this condition; is it currently True,
                        False, or Unknown?
                      type: string
                    type:
                      description: Type of this condition. At most one of each condition
                        type may apply to a resource at any point in time.
                      type: string
                  required:
                  - lastTransitionTime
                  - reason
                  - status
                  - type
                  type: object
                type: array
            type: object
        required:
        - spec
        type: object
    served: true
    storage: true
    subresources:
      status: {}
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []
