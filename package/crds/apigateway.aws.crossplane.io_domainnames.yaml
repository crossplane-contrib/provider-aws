---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.8.0
  creationTimestamp: null
  name: domainnames.apigateway.aws.crossplane.io
spec:
  group: apigateway.aws.crossplane.io
  names:
    categories:
    - crossplane
    - managed
    - aws
    kind: DomainName
    listKind: DomainNameList
    plural: domainnames
    singular: domainname
  scope: Cluster
  versions:
  - additionalPrinterColumns:
    - jsonPath: .status.conditions[?(@.type=='Ready')].status
      name: READY
      type: string
    - jsonPath: .status.conditions[?(@.type=='Synced')].status
      name: SYNCED
      type: string
    - jsonPath: .metadata.annotations.crossplane\.io/external-name
      name: EXTERNAL-NAME
      type: string
    name: v1alpha1
    schema:
      openAPIV3Schema:
        description: DomainName is the Schema for the DomainNames API
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: DomainNameSpec defines the desired state of DomainName
            properties:
              deletionPolicy:
                default: Delete
                description: DeletionPolicy specifies what will happen to the underlying
                  external when this managed resource is deleted - either "Delete"
                  or "Orphan" the external resource.
                enum:
                - Orphan
                - Delete
                type: string
              forProvider:
                description: DomainNameParameters defines the desired state of DomainName
                properties:
                  certificateARN:
                    description: The reference to an AWS-managed certificate that
                      will be used by edge-optimized endpoint for this domain name.
                      AWS Certificate Manager is the only supported source.
                    type: string
                  certificateBody:
                    description: '[Deprecated] The body of the server certificate
                      that will be used by edge-optimized endpoint for this domain
                      name provided by your certificate authority.'
                    type: string
                  certificateChain:
                    description: '[Deprecated] The intermediate certificates and optionally
                      the root certificate, one after the other without any blank
                      lines, used by an edge-optimized endpoint for this domain name.
                      If you include the root certificate, your certificate chain
                      must start with intermediate certificates and end with the root
                      certificate. Use the intermediate certificates that were provided
                      by your certificate authority. Do not include any intermediaries
                      that are not in the chain of trust path.'
                    type: string
                  certificateName:
                    description: The user-friendly name of the certificate that will
                      be used by edge-optimized endpoint for this domain name.
                    type: string
                  certificatePrivateKey:
                    description: '[Deprecated] Your edge-optimized endpoint''s domain
                      name certificate''s private key.'
                    type: string
                  domainName:
                    description: '[Required] The name of the DomainName resource.'
                    type: string
                  endpointConfiguration:
                    description: The endpoint configuration of this DomainName showing
                      the endpoint types of the domain name.
                    properties:
                      types:
                        items:
                          type: string
                        type: array
                      vpcEndpointIDs:
                        items:
                          type: string
                        type: array
                    type: object
                  mutualTLSAuthentication:
                    properties:
                      truststoreURI:
                        type: string
                      truststoreVersion:
                        type: string
                    type: object
                  ownershipVerificationCertificateARN:
                    description: The ARN of the public certificate issued by ACM to
                      validate ownership of your custom domain. Only required when
                      configuring mutual TLS and using an ACM imported or private
                      CA certificate ARN as the regionalCertificateArn.
                    type: string
                  region:
                    description: Region is which region the DomainName will be created.
                    type: string
                  regionalCertificateARN:
                    description: The reference to an AWS-managed certificate that
                      will be used by regional endpoint for this domain name. AWS
                      Certificate Manager is the only supported source.
                    type: string
                  regionalCertificateName:
                    description: The user-friendly name of the certificate that will
                      be used by regional endpoint for this domain name.
                    type: string
                  securityPolicy:
                    description: The Transport Layer Security (TLS) version + cipher
                      suite for this DomainName. The valid values are TLS_1_0 and
                      TLS_1_2.
                    type: string
                  tags:
                    additionalProperties:
                      type: string
                    description: The key-value map of strings. The valid character
                      set is [a-zA-Z+-=._:/]. The tag key can be up to 128 characters
                      and must not start with aws:. The tag value can be up to 256
                      characters.
                    type: object
                required:
                - domainName
                - region
                type: object
              providerConfigRef:
                default:
                  name: default
                description: ProviderConfigReference specifies how the provider that
                  will be used to create, observe, update, and delete this managed
                  resource should be configured.
                properties:
                  name:
                    description: Name of the referenced object.
                    type: string
                  policy:
                    description: Policies for referencing.
                    properties:
                      resolution:
                        default: Required
                        description: Resolution specifies whether resolution of this
                          reference is required. The default is 'Required', which
                          means the reconcile will fail if the reference cannot be
                          resolved. 'Optional' means this reference will be a no-op
                          if it cannot be resolved.
                        enum:
                        - Required
                        - Optional
                        type: string
                      resolve:
                        description: Resolve specifies when this reference should
                          be resolved. The default is 'IfNotPresent', which will attempt
                          to resolve the reference only when the corresponding field
                          is not present. Use 'Always' to resolve the reference on
                          every reconcile.
                        enum:
                        - Always
                        - IfNotPresent
                        type: string
                    type: object
                required:
                - name
                type: object
              providerRef:
                description: 'ProviderReference specifies the provider that will be
                  used to create, observe, update, and delete this managed resource.
                  Deprecated: Please use ProviderConfigReference, i.e. `providerConfigRef`'
                properties:
                  name:
                    description: Name of the referenced object.
                    type: string
                  policy:
                    description: Policies for referencing.
                    properties:
                      resolution:
                        default: Required
                        description: Resolution specifies whether resolution of this
                          reference is required. The default is 'Required', which
                          means the reconcile will fail if the reference cannot be
                          resolved. 'Optional' means this reference will be a no-op
                          if it cannot be resolved.
                        enum:
                        - Required
                        - Optional
                        type: string
                      resolve:
                        description: Resolve specifies when this reference should
                          be resolved. The default is 'IfNotPresent', which will attempt
                          to resolve the reference only when the corresponding field
                          is not present. Use 'Always' to resolve the reference on
                          every reconcile.
                        enum:
                        - Always
                        - IfNotPresent
                        type: string
                    type: object
                required:
                - name
                type: object
              publishConnectionDetailsTo:
                description: PublishConnectionDetailsTo specifies the connection secret
                  config which contains a name, metadata and a reference to secret
                  store config to which any connection details for this managed resource
                  should be written. Connection details frequently include the endpoint,
                  username, and password required to connect to the managed resource.
                properties:
                  configRef:
                    default:
                      name: default
                    description: SecretStoreConfigRef specifies which secret store
                      config should be used for this ConnectionSecret.
                    properties:
                      name:
                        description: Name of the referenced object.
                        type: string
                      policy:
                        description: Policies for referencing.
                        properties:
                          resolution:
                            default: Required
                            description: Resolution specifies whether resolution of
                              this reference is required. The default is 'Required',
                              which means the reconcile will fail if the reference
                              cannot be resolved. 'Optional' means this reference
                              will be a no-op if it cannot be resolved.
                            enum:
                            - Required
                            - Optional
                            type: string
                          resolve:
                            description: Resolve specifies when this reference should
                              be resolved. The default is 'IfNotPresent', which will
                              attempt to resolve the reference only when the corresponding
                              field is not present. Use 'Always' to resolve the reference
                              on every reconcile.
                            enum:
                            - Always
                            - IfNotPresent
                            type: string
                        type: object
                    required:
                    - name
                    type: object
                  metadata:
                    description: Metadata is the metadata for connection secret.
                    properties:
                      annotations:
                        additionalProperties:
                          type: string
                        description: Annotations are the annotations to be added to
                          connection secret. - For Kubernetes secrets, this will be
                          used as "metadata.annotations". - It is up to Secret Store
                          implementation for others store types.
                        type: object
                      labels:
                        additionalProperties:
                          type: string
                        description: Labels are the labels/tags to be added to connection
                          secret. - For Kubernetes secrets, this will be used as "metadata.labels".
                          - It is up to Secret Store implementation for others store
                          types.
                        type: object
                      type:
                        description: Type is the SecretType for the connection secret.
                          - Only valid for Kubernetes Secret Stores.
                        type: string
                    type: object
                  name:
                    description: Name is the name of the connection secret.
                    type: string
                required:
                - name
                type: object
              writeConnectionSecretToRef:
                description: WriteConnectionSecretToReference specifies the namespace
                  and name of a Secret to which any connection details for this managed
                  resource should be written. Connection details frequently include
                  the endpoint, username, and password required to connect to the
                  managed resource. This field is planned to be replaced in a future
                  release in favor of PublishConnectionDetailsTo. Currently, both
                  could be set independently and connection details would be published
                  to both without affecting each other.
                properties:
                  name:
                    description: Name of the secret.
                    type: string
                  namespace:
                    description: Namespace of the secret.
                    type: string
                required:
                - name
                - namespace
                type: object
            required:
            - forProvider
            type: object
          status:
            description: DomainNameStatus defines the observed state of DomainName.
            properties:
              atProvider:
                description: DomainNameObservation defines the observed state of DomainName
                properties:
                  certificateUploadDate:
                    description: The timestamp when the certificate that was used
                      by edge-optimized endpoint for this domain name was uploaded.
                    format: date-time
                    type: string
                  distributionDomainName:
                    description: The domain name of the Amazon CloudFront distribution
                      associated with this custom domain name for an edge-optimized
                      endpoint. You set up this association when adding a DNS record
                      pointing the custom domain name to this distribution name. For
                      more information about CloudFront distributions, see the Amazon
                      CloudFront documentation (https://aws.amazon.com/documentation/cloudfront/).
                    type: string
                  distributionHostedZoneID:
                    description: The region-agnostic Amazon Route 53 Hosted Zone ID
                      of the edge-optimized endpoint. The valid value is Z2FDTNDATAQYW2
                      for all the regions. For more information, see Set up a Regional
                      Custom Domain Name (https://docs.aws.amazon.com/apigateway/latest/developerguide/apigateway-regional-api-custom-domain-create.html)
                      and AWS Regions and Endpoints for API Gateway (https://docs.aws.amazon.com/general/latest/gr/rande.html#apigateway_region).
                    type: string
                  domainNameStatus:
                    description: The status of the DomainName migration. The valid
                      values are AVAILABLE, UPDATING, PENDING_CERTIFICATE_REIMPORT,
                      and PENDING_OWNERSHIP_VERIFICATION. If the status is UPDATING,
                      the domain cannot be modified further until the existing operation
                      is complete. If it is AVAILABLE, the domain can be updated.
                    type: string
                  domainNameStatusMessage:
                    description: An optional text message containing detailed information
                      about status of the DomainName migration.
                    type: string
                  regionalDomainName:
                    description: The domain name associated with the regional endpoint
                      for this custom domain name. You set up this association by
                      adding a DNS record that points the custom domain name to this
                      regional domain name. The regional domain name is returned by
                      API Gateway when you create a regional endpoint.
                    type: string
                  regionalHostedZoneID:
                    description: The region-specific Amazon Route 53 Hosted Zone ID
                      of the regional endpoint. For more information, see Set up a
                      Regional Custom Domain Name (https://docs.aws.amazon.com/apigateway/latest/developerguide/apigateway-regional-api-custom-domain-create.html)
                      and AWS Regions and Endpoints for API Gateway (https://docs.aws.amazon.com/general/latest/gr/rande.html#apigateway_region).
                    type: string
                type: object
              conditions:
                description: Conditions of the resource.
                items:
                  description: A Condition that may apply to a resource.
                  properties:
                    lastTransitionTime:
                      description: LastTransitionTime is the last time this condition
                        transitioned from one status to another.
                      format: date-time
                      type: string
                    message:
                      description: A Message containing details about this condition's
                        last transition from one status to another, if any.
                      type: string
                    reason:
                      description: A Reason for this condition's last transition from
                        one status to another.
                      type: string
                    status:
                      description: Status of this condition; is it currently True,
                        False, or Unknown?
                      type: string
                    type:
                      description: Type of this condition. At most one of each condition
                        type may apply to a resource at any point in time.
                      type: string
                  required:
                  - lastTransitionTime
                  - reason
                  - status
                  - type
                  type: object
                type: array
            type: object
        required:
        - spec
        type: object
    served: true
    storage: true
    subresources:
      status: {}
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []
