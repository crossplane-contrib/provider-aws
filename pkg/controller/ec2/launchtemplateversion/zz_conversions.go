/*
Copyright 2021 The Crossplane Authors.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by ack-generate. DO NOT EDIT.

package launchtemplateversion

import (
	"github.com/aws/aws-sdk-go/aws/awserr"
	svcsdk "github.com/aws/aws-sdk-go/service/ec2"
	metav1 "k8s.io/apimachinery/pkg/apis/meta/v1"

	svcapitypes "github.com/crossplane-contrib/provider-aws/apis/ec2/v1alpha1"
)

// NOTE(muvaf): We return pointers in case the function needs to start with an
// empty object, hence need to return a new pointer.

// GenerateDescribeLaunchTemplateVersionsInput returns input for read
// operation.
func GenerateDescribeLaunchTemplateVersionsInput(cr *svcapitypes.LaunchTemplateVersion) *svcsdk.DescribeLaunchTemplateVersionsInput {
	res := &svcsdk.DescribeLaunchTemplateVersionsInput{}

	if cr.Spec.ForProvider.ResolveAlias != nil {
		res.SetResolveAlias(*cr.Spec.ForProvider.ResolveAlias)
	}

	return res
}

// GenerateLaunchTemplateVersion returns the current state in the form of *svcapitypes.LaunchTemplateVersion.
func GenerateLaunchTemplateVersion(resp *svcsdk.DescribeLaunchTemplateVersionsOutput) *svcapitypes.LaunchTemplateVersion {
	cr := &svcapitypes.LaunchTemplateVersion{}

	found := false
	for _, elem := range resp.LaunchTemplateVersions {
		if elem.LaunchTemplateData != nil {
			f3 := &svcapitypes.RequestLaunchTemplateData{}
			if elem.LaunchTemplateData.BlockDeviceMappings != nil {
				f3f0 := []*svcapitypes.LaunchTemplateBlockDeviceMappingRequest{}
				for _, f3f0iter := range elem.LaunchTemplateData.BlockDeviceMappings {
					f3f0elem := &svcapitypes.LaunchTemplateBlockDeviceMappingRequest{}
					if f3f0iter.DeviceName != nil {
						f3f0elem.DeviceName = f3f0iter.DeviceName
					}
					if f3f0iter.Ebs != nil {
						f3f0elemf1 := &svcapitypes.LaunchTemplateEBSBlockDeviceRequest{}
						if f3f0iter.Ebs.DeleteOnTermination != nil {
							f3f0elemf1.DeleteOnTermination = f3f0iter.Ebs.DeleteOnTermination
						}
						if f3f0iter.Ebs.Encrypted != nil {
							f3f0elemf1.Encrypted = f3f0iter.Ebs.Encrypted
						}
						if f3f0iter.Ebs.Iops != nil {
							f3f0elemf1.IOPS = f3f0iter.Ebs.Iops
						}
						if f3f0iter.Ebs.KmsKeyId != nil {
							f3f0elemf1.KMSKeyID = f3f0iter.Ebs.KmsKeyId
						}
						if f3f0iter.Ebs.SnapshotId != nil {
							f3f0elemf1.SnapshotID = f3f0iter.Ebs.SnapshotId
						}
						if f3f0iter.Ebs.Throughput != nil {
							f3f0elemf1.Throughput = f3f0iter.Ebs.Throughput
						}
						if f3f0iter.Ebs.VolumeSize != nil {
							f3f0elemf1.VolumeSize = f3f0iter.Ebs.VolumeSize
						}
						if f3f0iter.Ebs.VolumeType != nil {
							f3f0elemf1.VolumeType = f3f0iter.Ebs.VolumeType
						}
						f3f0elem.EBS = f3f0elemf1
					}
					if f3f0iter.NoDevice != nil {
						f3f0elem.NoDevice = f3f0iter.NoDevice
					}
					if f3f0iter.VirtualName != nil {
						f3f0elem.VirtualName = f3f0iter.VirtualName
					}
					f3f0 = append(f3f0, f3f0elem)
				}
				f3.BlockDeviceMappings = f3f0
			}
			if elem.LaunchTemplateData.CapacityReservationSpecification != nil {
				f3f1 := &svcapitypes.LaunchTemplateCapacityReservationSpecificationRequest{}
				if elem.LaunchTemplateData.CapacityReservationSpecification.CapacityReservationPreference != nil {
					f3f1.CapacityReservationPreference = elem.LaunchTemplateData.CapacityReservationSpecification.CapacityReservationPreference
				}
				if elem.LaunchTemplateData.CapacityReservationSpecification.CapacityReservationTarget != nil {
					f3f1f1 := &svcapitypes.CapacityReservationTarget{}
					if elem.LaunchTemplateData.CapacityReservationSpecification.CapacityReservationTarget.CapacityReservationId != nil {
						f3f1f1.CapacityReservationID = elem.LaunchTemplateData.CapacityReservationSpecification.CapacityReservationTarget.CapacityReservationId
					}
					if elem.LaunchTemplateData.CapacityReservationSpecification.CapacityReservationTarget.CapacityReservationResourceGroupArn != nil {
						f3f1f1.CapacityReservationResourceGroupARN = elem.LaunchTemplateData.CapacityReservationSpecification.CapacityReservationTarget.CapacityReservationResourceGroupArn
					}
					f3f1.CapacityReservationTarget = f3f1f1
				}
				f3.CapacityReservationSpecification = f3f1
			}
			if elem.LaunchTemplateData.CpuOptions != nil {
				f3f2 := &svcapitypes.LaunchTemplateCPUOptionsRequest{}
				if elem.LaunchTemplateData.CpuOptions.AmdSevSnp != nil {
					f3f2.AmdSevSnp = elem.LaunchTemplateData.CpuOptions.AmdSevSnp
				}
				if elem.LaunchTemplateData.CpuOptions.CoreCount != nil {
					f3f2.CoreCount = elem.LaunchTemplateData.CpuOptions.CoreCount
				}
				if elem.LaunchTemplateData.CpuOptions.ThreadsPerCore != nil {
					f3f2.ThreadsPerCore = elem.LaunchTemplateData.CpuOptions.ThreadsPerCore
				}
				f3.CPUOptions = f3f2
			}
			if elem.LaunchTemplateData.CreditSpecification != nil {
				f3f3 := &svcapitypes.CreditSpecificationRequest{}
				if elem.LaunchTemplateData.CreditSpecification.CpuCredits != nil {
					f3f3.CPUCredits = elem.LaunchTemplateData.CreditSpecification.CpuCredits
				}
				f3.CreditSpecification = f3f3
			}
			if elem.LaunchTemplateData.DisableApiStop != nil {
				f3.DisableAPIStop = elem.LaunchTemplateData.DisableApiStop
			}
			if elem.LaunchTemplateData.DisableApiTermination != nil {
				f3.DisableAPITermination = elem.LaunchTemplateData.DisableApiTermination
			}
			if elem.LaunchTemplateData.EbsOptimized != nil {
				f3.EBSOptimized = elem.LaunchTemplateData.EbsOptimized
			}
			if elem.LaunchTemplateData.ElasticGpuSpecifications != nil {
				f3f7 := []*svcapitypes.ElasticGPUSpecification{}
				for _, f3f7iter := range elem.LaunchTemplateData.ElasticGpuSpecifications {
					f3f7elem := &svcapitypes.ElasticGPUSpecification{}
					if f3f7iter.Type != nil {
						f3f7elem.Type = f3f7iter.Type
					}
					f3f7 = append(f3f7, f3f7elem)
				}
				f3.ElasticGPUSpecifications = f3f7
			}
			if elem.LaunchTemplateData.ElasticInferenceAccelerators != nil {
				f3f8 := []*svcapitypes.LaunchTemplateElasticInferenceAccelerator{}
				for _, f3f8iter := range elem.LaunchTemplateData.ElasticInferenceAccelerators {
					f3f8elem := &svcapitypes.LaunchTemplateElasticInferenceAccelerator{}
					if f3f8iter.Count != nil {
						f3f8elem.Count = f3f8iter.Count
					}
					if f3f8iter.Type != nil {
						f3f8elem.Type = f3f8iter.Type
					}
					f3f8 = append(f3f8, f3f8elem)
				}
				f3.ElasticInferenceAccelerators = f3f8
			}
			if elem.LaunchTemplateData.EnclaveOptions != nil {
				f3f9 := &svcapitypes.LaunchTemplateEnclaveOptionsRequest{}
				if elem.LaunchTemplateData.EnclaveOptions.Enabled != nil {
					f3f9.Enabled = elem.LaunchTemplateData.EnclaveOptions.Enabled
				}
				f3.EnclaveOptions = f3f9
			}
			if elem.LaunchTemplateData.HibernationOptions != nil {
				f3f10 := &svcapitypes.LaunchTemplateHibernationOptionsRequest{}
				if elem.LaunchTemplateData.HibernationOptions.Configured != nil {
					f3f10.Configured = elem.LaunchTemplateData.HibernationOptions.Configured
				}
				f3.HibernationOptions = f3f10
			}
			if elem.LaunchTemplateData.IamInstanceProfile != nil {
				f3f11 := &svcapitypes.LaunchTemplateIAMInstanceProfileSpecificationRequest{}
				if elem.LaunchTemplateData.IamInstanceProfile.Arn != nil {
					f3f11.ARN = elem.LaunchTemplateData.IamInstanceProfile.Arn
				}
				if elem.LaunchTemplateData.IamInstanceProfile.Name != nil {
					f3f11.Name = elem.LaunchTemplateData.IamInstanceProfile.Name
				}
				f3.IAMInstanceProfile = f3f11
			}
			if elem.LaunchTemplateData.ImageId != nil {
				f3.ImageID = elem.LaunchTemplateData.ImageId
			}
			if elem.LaunchTemplateData.InstanceInitiatedShutdownBehavior != nil {
				f3.InstanceInitiatedShutdownBehavior = elem.LaunchTemplateData.InstanceInitiatedShutdownBehavior
			}
			if elem.LaunchTemplateData.InstanceMarketOptions != nil {
				f3f14 := &svcapitypes.LaunchTemplateInstanceMarketOptionsRequest{}
				if elem.LaunchTemplateData.InstanceMarketOptions.MarketType != nil {
					f3f14.MarketType = elem.LaunchTemplateData.InstanceMarketOptions.MarketType
				}
				if elem.LaunchTemplateData.InstanceMarketOptions.SpotOptions != nil {
					f3f14f1 := &svcapitypes.LaunchTemplateSpotMarketOptionsRequest{}
					if elem.LaunchTemplateData.InstanceMarketOptions.SpotOptions.BlockDurationMinutes != nil {
						f3f14f1.BlockDurationMinutes = elem.LaunchTemplateData.InstanceMarketOptions.SpotOptions.BlockDurationMinutes
					}
					if elem.LaunchTemplateData.InstanceMarketOptions.SpotOptions.InstanceInterruptionBehavior != nil {
						f3f14f1.InstanceInterruptionBehavior = elem.LaunchTemplateData.InstanceMarketOptions.SpotOptions.InstanceInterruptionBehavior
					}
					if elem.LaunchTemplateData.InstanceMarketOptions.SpotOptions.MaxPrice != nil {
						f3f14f1.MaxPrice = elem.LaunchTemplateData.InstanceMarketOptions.SpotOptions.MaxPrice
					}
					if elem.LaunchTemplateData.InstanceMarketOptions.SpotOptions.SpotInstanceType != nil {
						f3f14f1.SpotInstanceType = elem.LaunchTemplateData.InstanceMarketOptions.SpotOptions.SpotInstanceType
					}
					if elem.LaunchTemplateData.InstanceMarketOptions.SpotOptions.ValidUntil != nil {
						f3f14f1.ValidUntil = &metav1.Time{*elem.LaunchTemplateData.InstanceMarketOptions.SpotOptions.ValidUntil}
					}
					f3f14.SpotOptions = f3f14f1
				}
				f3.InstanceMarketOptions = f3f14
			}
			if elem.LaunchTemplateData.InstanceRequirements != nil {
				f3f15 := &svcapitypes.InstanceRequirementsRequest{}
				if elem.LaunchTemplateData.InstanceRequirements.AcceleratorCount != nil {
					f3f15f0 := &svcapitypes.AcceleratorCountRequest{}
					if elem.LaunchTemplateData.InstanceRequirements.AcceleratorCount.Max != nil {
						f3f15f0.Max = elem.LaunchTemplateData.InstanceRequirements.AcceleratorCount.Max
					}
					if elem.LaunchTemplateData.InstanceRequirements.AcceleratorCount.Min != nil {
						f3f15f0.Min = elem.LaunchTemplateData.InstanceRequirements.AcceleratorCount.Min
					}
					f3f15.AcceleratorCount = f3f15f0
				}
				if elem.LaunchTemplateData.InstanceRequirements.AcceleratorManufacturers != nil {
					f3f15f1 := []*string{}
					for _, f3f15f1iter := range elem.LaunchTemplateData.InstanceRequirements.AcceleratorManufacturers {
						var f3f15f1elem string
						f3f15f1elem = *f3f15f1iter
						f3f15f1 = append(f3f15f1, &f3f15f1elem)
					}
					f3f15.AcceleratorManufacturers = f3f15f1
				}
				if elem.LaunchTemplateData.InstanceRequirements.AcceleratorNames != nil {
					f3f15f2 := []*string{}
					for _, f3f15f2iter := range elem.LaunchTemplateData.InstanceRequirements.AcceleratorNames {
						var f3f15f2elem string
						f3f15f2elem = *f3f15f2iter
						f3f15f2 = append(f3f15f2, &f3f15f2elem)
					}
					f3f15.AcceleratorNames = f3f15f2
				}
				if elem.LaunchTemplateData.InstanceRequirements.AcceleratorTotalMemoryMiB != nil {
					f3f15f3 := &svcapitypes.AcceleratorTotalMemoryMiBRequest{}
					if elem.LaunchTemplateData.InstanceRequirements.AcceleratorTotalMemoryMiB.Max != nil {
						f3f15f3.Max = elem.LaunchTemplateData.InstanceRequirements.AcceleratorTotalMemoryMiB.Max
					}
					if elem.LaunchTemplateData.InstanceRequirements.AcceleratorTotalMemoryMiB.Min != nil {
						f3f15f3.Min = elem.LaunchTemplateData.InstanceRequirements.AcceleratorTotalMemoryMiB.Min
					}
					f3f15.AcceleratorTotalMemoryMiB = f3f15f3
				}
				if elem.LaunchTemplateData.InstanceRequirements.AcceleratorTypes != nil {
					f3f15f4 := []*string{}
					for _, f3f15f4iter := range elem.LaunchTemplateData.InstanceRequirements.AcceleratorTypes {
						var f3f15f4elem string
						f3f15f4elem = *f3f15f4iter
						f3f15f4 = append(f3f15f4, &f3f15f4elem)
					}
					f3f15.AcceleratorTypes = f3f15f4
				}
				if elem.LaunchTemplateData.InstanceRequirements.AllowedInstanceTypes != nil {
					f3f15f5 := []*string{}
					for _, f3f15f5iter := range elem.LaunchTemplateData.InstanceRequirements.AllowedInstanceTypes {
						var f3f15f5elem string
						f3f15f5elem = *f3f15f5iter
						f3f15f5 = append(f3f15f5, &f3f15f5elem)
					}
					f3f15.AllowedInstanceTypes = f3f15f5
				}
				if elem.LaunchTemplateData.InstanceRequirements.BareMetal != nil {
					f3f15.BareMetal = elem.LaunchTemplateData.InstanceRequirements.BareMetal
				}
				if elem.LaunchTemplateData.InstanceRequirements.BaselineEbsBandwidthMbps != nil {
					f3f15f7 := &svcapitypes.BaselineEBSBandwidthMbpsRequest{}
					if elem.LaunchTemplateData.InstanceRequirements.BaselineEbsBandwidthMbps.Max != nil {
						f3f15f7.Max = elem.LaunchTemplateData.InstanceRequirements.BaselineEbsBandwidthMbps.Max
					}
					if elem.LaunchTemplateData.InstanceRequirements.BaselineEbsBandwidthMbps.Min != nil {
						f3f15f7.Min = elem.LaunchTemplateData.InstanceRequirements.BaselineEbsBandwidthMbps.Min
					}
					f3f15.BaselineEBSBandwidthMbps = f3f15f7
				}
				if elem.LaunchTemplateData.InstanceRequirements.BurstablePerformance != nil {
					f3f15.BurstablePerformance = elem.LaunchTemplateData.InstanceRequirements.BurstablePerformance
				}
				if elem.LaunchTemplateData.InstanceRequirements.CpuManufacturers != nil {
					f3f15f9 := []*string{}
					for _, f3f15f9iter := range elem.LaunchTemplateData.InstanceRequirements.CpuManufacturers {
						var f3f15f9elem string
						f3f15f9elem = *f3f15f9iter
						f3f15f9 = append(f3f15f9, &f3f15f9elem)
					}
					f3f15.CPUManufacturers = f3f15f9
				}
				if elem.LaunchTemplateData.InstanceRequirements.ExcludedInstanceTypes != nil {
					f3f15f10 := []*string{}
					for _, f3f15f10iter := range elem.LaunchTemplateData.InstanceRequirements.ExcludedInstanceTypes {
						var f3f15f10elem string
						f3f15f10elem = *f3f15f10iter
						f3f15f10 = append(f3f15f10, &f3f15f10elem)
					}
					f3f15.ExcludedInstanceTypes = f3f15f10
				}
				if elem.LaunchTemplateData.InstanceRequirements.InstanceGenerations != nil {
					f3f15f11 := []*string{}
					for _, f3f15f11iter := range elem.LaunchTemplateData.InstanceRequirements.InstanceGenerations {
						var f3f15f11elem string
						f3f15f11elem = *f3f15f11iter
						f3f15f11 = append(f3f15f11, &f3f15f11elem)
					}
					f3f15.InstanceGenerations = f3f15f11
				}
				if elem.LaunchTemplateData.InstanceRequirements.LocalStorage != nil {
					f3f15.LocalStorage = elem.LaunchTemplateData.InstanceRequirements.LocalStorage
				}
				if elem.LaunchTemplateData.InstanceRequirements.LocalStorageTypes != nil {
					f3f15f13 := []*string{}
					for _, f3f15f13iter := range elem.LaunchTemplateData.InstanceRequirements.LocalStorageTypes {
						var f3f15f13elem string
						f3f15f13elem = *f3f15f13iter
						f3f15f13 = append(f3f15f13, &f3f15f13elem)
					}
					f3f15.LocalStorageTypes = f3f15f13
				}
				if elem.LaunchTemplateData.InstanceRequirements.MemoryGiBPerVCpu != nil {
					f3f15f14 := &svcapitypes.MemoryGiBPerVCPURequest{}
					if elem.LaunchTemplateData.InstanceRequirements.MemoryGiBPerVCpu.Max != nil {
						f3f15f14.Max = elem.LaunchTemplateData.InstanceRequirements.MemoryGiBPerVCpu.Max
					}
					if elem.LaunchTemplateData.InstanceRequirements.MemoryGiBPerVCpu.Min != nil {
						f3f15f14.Min = elem.LaunchTemplateData.InstanceRequirements.MemoryGiBPerVCpu.Min
					}
					f3f15.MemoryGiBPerVCPU = f3f15f14
				}
				if elem.LaunchTemplateData.InstanceRequirements.MemoryMiB != nil {
					f3f15f15 := &svcapitypes.MemoryMiBRequest{}
					if elem.LaunchTemplateData.InstanceRequirements.MemoryMiB.Max != nil {
						f3f15f15.Max = elem.LaunchTemplateData.InstanceRequirements.MemoryMiB.Max
					}
					if elem.LaunchTemplateData.InstanceRequirements.MemoryMiB.Min != nil {
						f3f15f15.Min = elem.LaunchTemplateData.InstanceRequirements.MemoryMiB.Min
					}
					f3f15.MemoryMiB = f3f15f15
				}
				if elem.LaunchTemplateData.InstanceRequirements.NetworkBandwidthGbps != nil {
					f3f15f16 := &svcapitypes.NetworkBandwidthGbpsRequest{}
					if elem.LaunchTemplateData.InstanceRequirements.NetworkBandwidthGbps.Max != nil {
						f3f15f16.Max = elem.LaunchTemplateData.InstanceRequirements.NetworkBandwidthGbps.Max
					}
					if elem.LaunchTemplateData.InstanceRequirements.NetworkBandwidthGbps.Min != nil {
						f3f15f16.Min = elem.LaunchTemplateData.InstanceRequirements.NetworkBandwidthGbps.Min
					}
					f3f15.NetworkBandwidthGbps = f3f15f16
				}
				if elem.LaunchTemplateData.InstanceRequirements.NetworkInterfaceCount != nil {
					f3f15f17 := &svcapitypes.NetworkInterfaceCountRequest{}
					if elem.LaunchTemplateData.InstanceRequirements.NetworkInterfaceCount.Max != nil {
						f3f15f17.Max = elem.LaunchTemplateData.InstanceRequirements.NetworkInterfaceCount.Max
					}
					if elem.LaunchTemplateData.InstanceRequirements.NetworkInterfaceCount.Min != nil {
						f3f15f17.Min = elem.LaunchTemplateData.InstanceRequirements.NetworkInterfaceCount.Min
					}
					f3f15.NetworkInterfaceCount = f3f15f17
				}
				if elem.LaunchTemplateData.InstanceRequirements.OnDemandMaxPricePercentageOverLowestPrice != nil {
					f3f15.OnDemandMaxPricePercentageOverLowestPrice = elem.LaunchTemplateData.InstanceRequirements.OnDemandMaxPricePercentageOverLowestPrice
				}
				if elem.LaunchTemplateData.InstanceRequirements.RequireHibernateSupport != nil {
					f3f15.RequireHibernateSupport = elem.LaunchTemplateData.InstanceRequirements.RequireHibernateSupport
				}
				if elem.LaunchTemplateData.InstanceRequirements.SpotMaxPricePercentageOverLowestPrice != nil {
					f3f15.SpotMaxPricePercentageOverLowestPrice = elem.LaunchTemplateData.InstanceRequirements.SpotMaxPricePercentageOverLowestPrice
				}
				if elem.LaunchTemplateData.InstanceRequirements.TotalLocalStorageGB != nil {
					f3f15f21 := &svcapitypes.TotalLocalStorageGBRequest{}
					if elem.LaunchTemplateData.InstanceRequirements.TotalLocalStorageGB.Max != nil {
						f3f15f21.Max = elem.LaunchTemplateData.InstanceRequirements.TotalLocalStorageGB.Max
					}
					if elem.LaunchTemplateData.InstanceRequirements.TotalLocalStorageGB.Min != nil {
						f3f15f21.Min = elem.LaunchTemplateData.InstanceRequirements.TotalLocalStorageGB.Min
					}
					f3f15.TotalLocalStorageGB = f3f15f21
				}
				if elem.LaunchTemplateData.InstanceRequirements.VCpuCount != nil {
					f3f15f22 := &svcapitypes.VCPUCountRangeRequest{}
					if elem.LaunchTemplateData.InstanceRequirements.VCpuCount.Max != nil {
						f3f15f22.Max = elem.LaunchTemplateData.InstanceRequirements.VCpuCount.Max
					}
					if elem.LaunchTemplateData.InstanceRequirements.VCpuCount.Min != nil {
						f3f15f22.Min = elem.LaunchTemplateData.InstanceRequirements.VCpuCount.Min
					}
					f3f15.VCPUCount = f3f15f22
				}
				f3.InstanceRequirements = f3f15
			}
			if elem.LaunchTemplateData.InstanceType != nil {
				f3.InstanceType = elem.LaunchTemplateData.InstanceType
			}
			if elem.LaunchTemplateData.KernelId != nil {
				f3.KernelID = elem.LaunchTemplateData.KernelId
			}
			if elem.LaunchTemplateData.KeyName != nil {
				f3.KeyName = elem.LaunchTemplateData.KeyName
			}
			if elem.LaunchTemplateData.LicenseSpecifications != nil {
				f3f19 := []*svcapitypes.LaunchTemplateLicenseConfigurationRequest{}
				for _, f3f19iter := range elem.LaunchTemplateData.LicenseSpecifications {
					f3f19elem := &svcapitypes.LaunchTemplateLicenseConfigurationRequest{}
					if f3f19iter.LicenseConfigurationArn != nil {
						f3f19elem.LicenseConfigurationARN = f3f19iter.LicenseConfigurationArn
					}
					f3f19 = append(f3f19, f3f19elem)
				}
				f3.LicenseSpecifications = f3f19
			}
			if elem.LaunchTemplateData.MaintenanceOptions != nil {
				f3f20 := &svcapitypes.LaunchTemplateInstanceMaintenanceOptionsRequest{}
				if elem.LaunchTemplateData.MaintenanceOptions.AutoRecovery != nil {
					f3f20.AutoRecovery = elem.LaunchTemplateData.MaintenanceOptions.AutoRecovery
				}
				f3.MaintenanceOptions = f3f20
			}
			if elem.LaunchTemplateData.MetadataOptions != nil {
				f3f21 := &svcapitypes.LaunchTemplateInstanceMetadataOptionsRequest{}
				if elem.LaunchTemplateData.MetadataOptions.HttpEndpoint != nil {
					f3f21.HTTPEndpoint = elem.LaunchTemplateData.MetadataOptions.HttpEndpoint
				}
				if elem.LaunchTemplateData.MetadataOptions.HttpProtocolIpv6 != nil {
					f3f21.HTTPProtocolIPv6 = elem.LaunchTemplateData.MetadataOptions.HttpProtocolIpv6
				}
				if elem.LaunchTemplateData.MetadataOptions.HttpPutResponseHopLimit != nil {
					f3f21.HTTPPutResponseHopLimit = elem.LaunchTemplateData.MetadataOptions.HttpPutResponseHopLimit
				}
				if elem.LaunchTemplateData.MetadataOptions.HttpTokens != nil {
					f3f21.HTTPTokens = elem.LaunchTemplateData.MetadataOptions.HttpTokens
				}
				if elem.LaunchTemplateData.MetadataOptions.InstanceMetadataTags != nil {
					f3f21.InstanceMetadataTags = elem.LaunchTemplateData.MetadataOptions.InstanceMetadataTags
				}
				f3.MetadataOptions = f3f21
			}
			if elem.LaunchTemplateData.Monitoring != nil {
				f3f22 := &svcapitypes.LaunchTemplatesMonitoringRequest{}
				if elem.LaunchTemplateData.Monitoring.Enabled != nil {
					f3f22.Enabled = elem.LaunchTemplateData.Monitoring.Enabled
				}
				f3.Monitoring = f3f22
			}
			if elem.LaunchTemplateData.NetworkInterfaces != nil {
				f3f23 := []*svcapitypes.LaunchTemplateInstanceNetworkInterfaceSpecificationRequest{}
				for _, f3f23iter := range elem.LaunchTemplateData.NetworkInterfaces {
					f3f23elem := &svcapitypes.LaunchTemplateInstanceNetworkInterfaceSpecificationRequest{}
					if f3f23iter.AssociateCarrierIpAddress != nil {
						f3f23elem.AssociateCarrierIPAddress = f3f23iter.AssociateCarrierIpAddress
					}
					if f3f23iter.AssociatePublicIpAddress != nil {
						f3f23elem.AssociatePublicIPAddress = f3f23iter.AssociatePublicIpAddress
					}
					if f3f23iter.ConnectionTrackingSpecification != nil {
						f3f23elemf2 := &svcapitypes.ConnectionTrackingSpecificationRequest{}
						if f3f23iter.ConnectionTrackingSpecification.TcpEstablishedTimeout != nil {
							f3f23elemf2.TCPEstablishedTimeout = f3f23iter.ConnectionTrackingSpecification.TcpEstablishedTimeout
						}
						if f3f23iter.ConnectionTrackingSpecification.UdpStreamTimeout != nil {
							f3f23elemf2.UDPStreamTimeout = f3f23iter.ConnectionTrackingSpecification.UdpStreamTimeout
						}
						if f3f23iter.ConnectionTrackingSpecification.UdpTimeout != nil {
							f3f23elemf2.UDPTimeout = f3f23iter.ConnectionTrackingSpecification.UdpTimeout
						}
						f3f23elem.ConnectionTrackingSpecification = f3f23elemf2
					}
					if f3f23iter.DeleteOnTermination != nil {
						f3f23elem.DeleteOnTermination = f3f23iter.DeleteOnTermination
					}
					if f3f23iter.Description != nil {
						f3f23elem.Description = f3f23iter.Description
					}
					if f3f23iter.DeviceIndex != nil {
						f3f23elem.DeviceIndex = f3f23iter.DeviceIndex
					}
					if f3f23iter.EnaSrdSpecification != nil {
						f3f23elemf6 := &svcapitypes.ENASrdSpecificationRequest{}
						if f3f23iter.EnaSrdSpecification.EnaSrdEnabled != nil {
							f3f23elemf6.ENASrdEnabled = f3f23iter.EnaSrdSpecification.EnaSrdEnabled
						}
						if f3f23iter.EnaSrdSpecification.EnaSrdUdpSpecification != nil {
							f3f23elemf6f1 := &svcapitypes.ENASrdUDPSpecificationRequest{}
							if f3f23iter.EnaSrdSpecification.EnaSrdUdpSpecification.EnaSrdUdpEnabled != nil {
								f3f23elemf6f1.ENASrdUDPEnabled = f3f23iter.EnaSrdSpecification.EnaSrdUdpSpecification.EnaSrdUdpEnabled
							}
							f3f23elemf6.ENASrdUDPSpecification = f3f23elemf6f1
						}
						f3f23elem.ENASrdSpecification = f3f23elemf6
					}
					if f3f23iter.Groups != nil {
						f3f23elemf7 := []*string{}
						for _, f3f23elemf7iter := range f3f23iter.Groups {
							var f3f23elemf7elem string
							f3f23elemf7elem = *f3f23elemf7iter
							f3f23elemf7 = append(f3f23elemf7, &f3f23elemf7elem)
						}
						f3f23elem.Groups = f3f23elemf7
					}
					if f3f23iter.InterfaceType != nil {
						f3f23elem.InterfaceType = f3f23iter.InterfaceType
					}
					if f3f23iter.Ipv4PrefixCount != nil {
						f3f23elem.IPv4PrefixCount = f3f23iter.Ipv4PrefixCount
					}
					if f3f23iter.Ipv4Prefixes != nil {
						f3f23elemf10 := []*svcapitypes.IPv4PrefixSpecificationRequest{}
						for _, f3f23elemf10iter := range f3f23iter.Ipv4Prefixes {
							f3f23elemf10elem := &svcapitypes.IPv4PrefixSpecificationRequest{}
							if f3f23elemf10iter.Ipv4Prefix != nil {
								f3f23elemf10elem.IPv4Prefix = f3f23elemf10iter.Ipv4Prefix
							}
							f3f23elemf10 = append(f3f23elemf10, f3f23elemf10elem)
						}
						f3f23elem.IPv4Prefixes = f3f23elemf10
					}
					if f3f23iter.Ipv6AddressCount != nil {
						f3f23elem.IPv6AddressCount = f3f23iter.Ipv6AddressCount
					}
					if f3f23iter.Ipv6Addresses != nil {
						f3f23elemf12 := []*svcapitypes.InstanceIPv6AddressRequest{}
						for _, f3f23elemf12iter := range f3f23iter.Ipv6Addresses {
							f3f23elemf12elem := &svcapitypes.InstanceIPv6AddressRequest{}
							if f3f23elemf12iter.Ipv6Address != nil {
								f3f23elemf12elem.IPv6Address = f3f23elemf12iter.Ipv6Address
							}
							f3f23elemf12 = append(f3f23elemf12, f3f23elemf12elem)
						}
						f3f23elem.IPv6Addresses = f3f23elemf12
					}
					if f3f23iter.Ipv6PrefixCount != nil {
						f3f23elem.IPv6PrefixCount = f3f23iter.Ipv6PrefixCount
					}
					if f3f23iter.Ipv6Prefixes != nil {
						f3f23elemf14 := []*svcapitypes.IPv6PrefixSpecificationRequest{}
						for _, f3f23elemf14iter := range f3f23iter.Ipv6Prefixes {
							f3f23elemf14elem := &svcapitypes.IPv6PrefixSpecificationRequest{}
							if f3f23elemf14iter.Ipv6Prefix != nil {
								f3f23elemf14elem.IPv6Prefix = f3f23elemf14iter.Ipv6Prefix
							}
							f3f23elemf14 = append(f3f23elemf14, f3f23elemf14elem)
						}
						f3f23elem.IPv6Prefixes = f3f23elemf14
					}
					if f3f23iter.NetworkCardIndex != nil {
						f3f23elem.NetworkCardIndex = f3f23iter.NetworkCardIndex
					}
					if f3f23iter.NetworkInterfaceId != nil {
						f3f23elem.NetworkInterfaceID = f3f23iter.NetworkInterfaceId
					}
					if f3f23iter.PrimaryIpv6 != nil {
						f3f23elem.PrimaryIPv6 = f3f23iter.PrimaryIpv6
					}
					if f3f23iter.PrivateIpAddress != nil {
						f3f23elem.PrivateIPAddress = f3f23iter.PrivateIpAddress
					}
					if f3f23iter.PrivateIpAddresses != nil {
						f3f23elemf19 := []*svcapitypes.PrivateIPAddressSpecification{}
						for _, f3f23elemf19iter := range f3f23iter.PrivateIpAddresses {
							f3f23elemf19elem := &svcapitypes.PrivateIPAddressSpecification{}
							if f3f23elemf19iter.Primary != nil {
								f3f23elemf19elem.Primary = f3f23elemf19iter.Primary
							}
							if f3f23elemf19iter.PrivateIpAddress != nil {
								f3f23elemf19elem.PrivateIPAddress = f3f23elemf19iter.PrivateIpAddress
							}
							f3f23elemf19 = append(f3f23elemf19, f3f23elemf19elem)
						}
						f3f23elem.PrivateIPAddresses = f3f23elemf19
					}
					if f3f23iter.SecondaryPrivateIpAddressCount != nil {
						f3f23elem.SecondaryPrivateIPAddressCount = f3f23iter.SecondaryPrivateIpAddressCount
					}
					if f3f23iter.SubnetId != nil {
						f3f23elem.SubnetID = f3f23iter.SubnetId
					}
					f3f23 = append(f3f23, f3f23elem)
				}
				f3.NetworkInterfaces = f3f23
			}
			if elem.LaunchTemplateData.Placement != nil {
				f3f24 := &svcapitypes.LaunchTemplatePlacementRequest{}
				if elem.LaunchTemplateData.Placement.Affinity != nil {
					f3f24.Affinity = elem.LaunchTemplateData.Placement.Affinity
				}
				if elem.LaunchTemplateData.Placement.AvailabilityZone != nil {
					f3f24.AvailabilityZone = elem.LaunchTemplateData.Placement.AvailabilityZone
				}
				if elem.LaunchTemplateData.Placement.GroupId != nil {
					f3f24.GroupID = elem.LaunchTemplateData.Placement.GroupId
				}
				if elem.LaunchTemplateData.Placement.GroupName != nil {
					f3f24.GroupName = elem.LaunchTemplateData.Placement.GroupName
				}
				if elem.LaunchTemplateData.Placement.HostId != nil {
					f3f24.HostID = elem.LaunchTemplateData.Placement.HostId
				}
				if elem.LaunchTemplateData.Placement.HostResourceGroupArn != nil {
					f3f24.HostResourceGroupARN = elem.LaunchTemplateData.Placement.HostResourceGroupArn
				}
				if elem.LaunchTemplateData.Placement.PartitionNumber != nil {
					f3f24.PartitionNumber = elem.LaunchTemplateData.Placement.PartitionNumber
				}
				if elem.LaunchTemplateData.Placement.SpreadDomain != nil {
					f3f24.SpreadDomain = elem.LaunchTemplateData.Placement.SpreadDomain
				}
				if elem.LaunchTemplateData.Placement.Tenancy != nil {
					f3f24.Tenancy = elem.LaunchTemplateData.Placement.Tenancy
				}
				f3.Placement = f3f24
			}
			if elem.LaunchTemplateData.PrivateDnsNameOptions != nil {
				f3f25 := &svcapitypes.LaunchTemplatePrivateDNSNameOptionsRequest{}
				if elem.LaunchTemplateData.PrivateDnsNameOptions.EnableResourceNameDnsAAAARecord != nil {
					f3f25.EnableResourceNameDNSAAAARecord = elem.LaunchTemplateData.PrivateDnsNameOptions.EnableResourceNameDnsAAAARecord
				}
				if elem.LaunchTemplateData.PrivateDnsNameOptions.EnableResourceNameDnsARecord != nil {
					f3f25.EnableResourceNameDNSARecord = elem.LaunchTemplateData.PrivateDnsNameOptions.EnableResourceNameDnsARecord
				}
				if elem.LaunchTemplateData.PrivateDnsNameOptions.HostnameType != nil {
					f3f25.HostnameType = elem.LaunchTemplateData.PrivateDnsNameOptions.HostnameType
				}
				f3.PrivateDNSNameOptions = f3f25
			}
			if elem.LaunchTemplateData.RamDiskId != nil {
				f3.RAMDiskID = elem.LaunchTemplateData.RamDiskId
			}
			if elem.LaunchTemplateData.SecurityGroupIds != nil {
				f3f27 := []*string{}
				for _, f3f27iter := range elem.LaunchTemplateData.SecurityGroupIds {
					var f3f27elem string
					f3f27elem = *f3f27iter
					f3f27 = append(f3f27, &f3f27elem)
				}
				f3.SecurityGroupIDs = f3f27
			}
			if elem.LaunchTemplateData.SecurityGroups != nil {
				f3f28 := []*string{}
				for _, f3f28iter := range elem.LaunchTemplateData.SecurityGroups {
					var f3f28elem string
					f3f28elem = *f3f28iter
					f3f28 = append(f3f28, &f3f28elem)
				}
				f3.SecurityGroups = f3f28
			}
			if elem.LaunchTemplateData.TagSpecifications != nil {
				f3f29 := []*svcapitypes.LaunchTemplateTagSpecificationRequest{}
				for _, f3f29iter := range elem.LaunchTemplateData.TagSpecifications {
					f3f29elem := &svcapitypes.LaunchTemplateTagSpecificationRequest{}
					if f3f29iter.ResourceType != nil {
						f3f29elem.ResourceType = f3f29iter.ResourceType
					}
					if f3f29iter.Tags != nil {
						f3f29elemf1 := []*svcapitypes.Tag{}
						for _, f3f29elemf1iter := range f3f29iter.Tags {
							f3f29elemf1elem := &svcapitypes.Tag{}
							if f3f29elemf1iter.Key != nil {
								f3f29elemf1elem.Key = f3f29elemf1iter.Key
							}
							if f3f29elemf1iter.Value != nil {
								f3f29elemf1elem.Value = f3f29elemf1iter.Value
							}
							f3f29elemf1 = append(f3f29elemf1, f3f29elemf1elem)
						}
						f3f29elem.Tags = f3f29elemf1
					}
					f3f29 = append(f3f29, f3f29elem)
				}
				f3.TagSpecifications = f3f29
			}
			if elem.LaunchTemplateData.UserData != nil {
				f3.UserData = elem.LaunchTemplateData.UserData
			}
			cr.Spec.ForProvider.LaunchTemplateData = f3
		} else {
			cr.Spec.ForProvider.LaunchTemplateData = nil
		}
		if elem.VersionDescription != nil {
			cr.Spec.ForProvider.VersionDescription = elem.VersionDescription
		} else {
			cr.Spec.ForProvider.VersionDescription = nil
		}
		found = true
		break
	}
	if !found {
		return cr
	}

	return cr
}

// GenerateCreateLaunchTemplateVersionInput returns a create input.
func GenerateCreateLaunchTemplateVersionInput(cr *svcapitypes.LaunchTemplateVersion) *svcsdk.CreateLaunchTemplateVersionInput {
	res := &svcsdk.CreateLaunchTemplateVersionInput{}

	if cr.Spec.ForProvider.LaunchTemplateData != nil {
		f0 := &svcsdk.RequestLaunchTemplateData{}
		if cr.Spec.ForProvider.LaunchTemplateData.BlockDeviceMappings != nil {
			f0f0 := []*svcsdk.LaunchTemplateBlockDeviceMappingRequest{}
			for _, f0f0iter := range cr.Spec.ForProvider.LaunchTemplateData.BlockDeviceMappings {
				f0f0elem := &svcsdk.LaunchTemplateBlockDeviceMappingRequest{}
				if f0f0iter.DeviceName != nil {
					f0f0elem.SetDeviceName(*f0f0iter.DeviceName)
				}
				if f0f0iter.EBS != nil {
					f0f0elemf1 := &svcsdk.LaunchTemplateEbsBlockDeviceRequest{}
					if f0f0iter.EBS.DeleteOnTermination != nil {
						f0f0elemf1.SetDeleteOnTermination(*f0f0iter.EBS.DeleteOnTermination)
					}
					if f0f0iter.EBS.Encrypted != nil {
						f0f0elemf1.SetEncrypted(*f0f0iter.EBS.Encrypted)
					}
					if f0f0iter.EBS.IOPS != nil {
						f0f0elemf1.SetIops(*f0f0iter.EBS.IOPS)
					}
					if f0f0iter.EBS.KMSKeyID != nil {
						f0f0elemf1.SetKmsKeyId(*f0f0iter.EBS.KMSKeyID)
					}
					if f0f0iter.EBS.SnapshotID != nil {
						f0f0elemf1.SetSnapshotId(*f0f0iter.EBS.SnapshotID)
					}
					if f0f0iter.EBS.Throughput != nil {
						f0f0elemf1.SetThroughput(*f0f0iter.EBS.Throughput)
					}
					if f0f0iter.EBS.VolumeSize != nil {
						f0f0elemf1.SetVolumeSize(*f0f0iter.EBS.VolumeSize)
					}
					if f0f0iter.EBS.VolumeType != nil {
						f0f0elemf1.SetVolumeType(*f0f0iter.EBS.VolumeType)
					}
					f0f0elem.SetEbs(f0f0elemf1)
				}
				if f0f0iter.NoDevice != nil {
					f0f0elem.SetNoDevice(*f0f0iter.NoDevice)
				}
				if f0f0iter.VirtualName != nil {
					f0f0elem.SetVirtualName(*f0f0iter.VirtualName)
				}
				f0f0 = append(f0f0, f0f0elem)
			}
			f0.SetBlockDeviceMappings(f0f0)
		}
		if cr.Spec.ForProvider.LaunchTemplateData.CapacityReservationSpecification != nil {
			f0f1 := &svcsdk.LaunchTemplateCapacityReservationSpecificationRequest{}
			if cr.Spec.ForProvider.LaunchTemplateData.CapacityReservationSpecification.CapacityReservationPreference != nil {
				f0f1.SetCapacityReservationPreference(*cr.Spec.ForProvider.LaunchTemplateData.CapacityReservationSpecification.CapacityReservationPreference)
			}
			if cr.Spec.ForProvider.LaunchTemplateData.CapacityReservationSpecification.CapacityReservationTarget != nil {
				f0f1f1 := &svcsdk.CapacityReservationTarget{}
				if cr.Spec.ForProvider.LaunchTemplateData.CapacityReservationSpecification.CapacityReservationTarget.CapacityReservationID != nil {
					f0f1f1.SetCapacityReservationId(*cr.Spec.ForProvider.LaunchTemplateData.CapacityReservationSpecification.CapacityReservationTarget.CapacityReservationID)
				}
				if cr.Spec.ForProvider.LaunchTemplateData.CapacityReservationSpecification.CapacityReservationTarget.CapacityReservationResourceGroupARN != nil {
					f0f1f1.SetCapacityReservationResourceGroupArn(*cr.Spec.ForProvider.LaunchTemplateData.CapacityReservationSpecification.CapacityReservationTarget.CapacityReservationResourceGroupARN)
				}
				f0f1.SetCapacityReservationTarget(f0f1f1)
			}
			f0.SetCapacityReservationSpecification(f0f1)
		}
		if cr.Spec.ForProvider.LaunchTemplateData.CPUOptions != nil {
			f0f2 := &svcsdk.LaunchTemplateCpuOptionsRequest{}
			if cr.Spec.ForProvider.LaunchTemplateData.CPUOptions.AmdSevSnp != nil {
				f0f2.SetAmdSevSnp(*cr.Spec.ForProvider.LaunchTemplateData.CPUOptions.AmdSevSnp)
			}
			if cr.Spec.ForProvider.LaunchTemplateData.CPUOptions.CoreCount != nil {
				f0f2.SetCoreCount(*cr.Spec.ForProvider.LaunchTemplateData.CPUOptions.CoreCount)
			}
			if cr.Spec.ForProvider.LaunchTemplateData.CPUOptions.ThreadsPerCore != nil {
				f0f2.SetThreadsPerCore(*cr.Spec.ForProvider.LaunchTemplateData.CPUOptions.ThreadsPerCore)
			}
			f0.SetCpuOptions(f0f2)
		}
		if cr.Spec.ForProvider.LaunchTemplateData.CreditSpecification != nil {
			f0f3 := &svcsdk.CreditSpecificationRequest{}
			if cr.Spec.ForProvider.LaunchTemplateData.CreditSpecification.CPUCredits != nil {
				f0f3.SetCpuCredits(*cr.Spec.ForProvider.LaunchTemplateData.CreditSpecification.CPUCredits)
			}
			f0.SetCreditSpecification(f0f3)
		}
		if cr.Spec.ForProvider.LaunchTemplateData.DisableAPIStop != nil {
			f0.SetDisableApiStop(*cr.Spec.ForProvider.LaunchTemplateData.DisableAPIStop)
		}
		if cr.Spec.ForProvider.LaunchTemplateData.DisableAPITermination != nil {
			f0.SetDisableApiTermination(*cr.Spec.ForProvider.LaunchTemplateData.DisableAPITermination)
		}
		if cr.Spec.ForProvider.LaunchTemplateData.EBSOptimized != nil {
			f0.SetEbsOptimized(*cr.Spec.ForProvider.LaunchTemplateData.EBSOptimized)
		}
		if cr.Spec.ForProvider.LaunchTemplateData.ElasticGPUSpecifications != nil {
			f0f7 := []*svcsdk.ElasticGpuSpecification{}
			for _, f0f7iter := range cr.Spec.ForProvider.LaunchTemplateData.ElasticGPUSpecifications {
				f0f7elem := &svcsdk.ElasticGpuSpecification{}
				if f0f7iter.Type != nil {
					f0f7elem.SetType(*f0f7iter.Type)
				}
				f0f7 = append(f0f7, f0f7elem)
			}
			f0.SetElasticGpuSpecifications(f0f7)
		}
		if cr.Spec.ForProvider.LaunchTemplateData.ElasticInferenceAccelerators != nil {
			f0f8 := []*svcsdk.LaunchTemplateElasticInferenceAccelerator{}
			for _, f0f8iter := range cr.Spec.ForProvider.LaunchTemplateData.ElasticInferenceAccelerators {
				f0f8elem := &svcsdk.LaunchTemplateElasticInferenceAccelerator{}
				if f0f8iter.Count != nil {
					f0f8elem.SetCount(*f0f8iter.Count)
				}
				if f0f8iter.Type != nil {
					f0f8elem.SetType(*f0f8iter.Type)
				}
				f0f8 = append(f0f8, f0f8elem)
			}
			f0.SetElasticInferenceAccelerators(f0f8)
		}
		if cr.Spec.ForProvider.LaunchTemplateData.EnclaveOptions != nil {
			f0f9 := &svcsdk.LaunchTemplateEnclaveOptionsRequest{}
			if cr.Spec.ForProvider.LaunchTemplateData.EnclaveOptions.Enabled != nil {
				f0f9.SetEnabled(*cr.Spec.ForProvider.LaunchTemplateData.EnclaveOptions.Enabled)
			}
			f0.SetEnclaveOptions(f0f9)
		}
		if cr.Spec.ForProvider.LaunchTemplateData.HibernationOptions != nil {
			f0f10 := &svcsdk.LaunchTemplateHibernationOptionsRequest{}
			if cr.Spec.ForProvider.LaunchTemplateData.HibernationOptions.Configured != nil {
				f0f10.SetConfigured(*cr.Spec.ForProvider.LaunchTemplateData.HibernationOptions.Configured)
			}
			f0.SetHibernationOptions(f0f10)
		}
		if cr.Spec.ForProvider.LaunchTemplateData.IAMInstanceProfile != nil {
			f0f11 := &svcsdk.LaunchTemplateIamInstanceProfileSpecificationRequest{}
			if cr.Spec.ForProvider.LaunchTemplateData.IAMInstanceProfile.ARN != nil {
				f0f11.SetArn(*cr.Spec.ForProvider.LaunchTemplateData.IAMInstanceProfile.ARN)
			}
			if cr.Spec.ForProvider.LaunchTemplateData.IAMInstanceProfile.Name != nil {
				f0f11.SetName(*cr.Spec.ForProvider.LaunchTemplateData.IAMInstanceProfile.Name)
			}
			f0.SetIamInstanceProfile(f0f11)
		}
		if cr.Spec.ForProvider.LaunchTemplateData.ImageID != nil {
			f0.SetImageId(*cr.Spec.ForProvider.LaunchTemplateData.ImageID)
		}
		if cr.Spec.ForProvider.LaunchTemplateData.InstanceInitiatedShutdownBehavior != nil {
			f0.SetInstanceInitiatedShutdownBehavior(*cr.Spec.ForProvider.LaunchTemplateData.InstanceInitiatedShutdownBehavior)
		}
		if cr.Spec.ForProvider.LaunchTemplateData.InstanceMarketOptions != nil {
			f0f14 := &svcsdk.LaunchTemplateInstanceMarketOptionsRequest{}
			if cr.Spec.ForProvider.LaunchTemplateData.InstanceMarketOptions.MarketType != nil {
				f0f14.SetMarketType(*cr.Spec.ForProvider.LaunchTemplateData.InstanceMarketOptions.MarketType)
			}
			if cr.Spec.ForProvider.LaunchTemplateData.InstanceMarketOptions.SpotOptions != nil {
				f0f14f1 := &svcsdk.LaunchTemplateSpotMarketOptionsRequest{}
				if cr.Spec.ForProvider.LaunchTemplateData.InstanceMarketOptions.SpotOptions.BlockDurationMinutes != nil {
					f0f14f1.SetBlockDurationMinutes(*cr.Spec.ForProvider.LaunchTemplateData.InstanceMarketOptions.SpotOptions.BlockDurationMinutes)
				}
				if cr.Spec.ForProvider.LaunchTemplateData.InstanceMarketOptions.SpotOptions.InstanceInterruptionBehavior != nil {
					f0f14f1.SetInstanceInterruptionBehavior(*cr.Spec.ForProvider.LaunchTemplateData.InstanceMarketOptions.SpotOptions.InstanceInterruptionBehavior)
				}
				if cr.Spec.ForProvider.LaunchTemplateData.InstanceMarketOptions.SpotOptions.MaxPrice != nil {
					f0f14f1.SetMaxPrice(*cr.Spec.ForProvider.LaunchTemplateData.InstanceMarketOptions.SpotOptions.MaxPrice)
				}
				if cr.Spec.ForProvider.LaunchTemplateData.InstanceMarketOptions.SpotOptions.SpotInstanceType != nil {
					f0f14f1.SetSpotInstanceType(*cr.Spec.ForProvider.LaunchTemplateData.InstanceMarketOptions.SpotOptions.SpotInstanceType)
				}
				if cr.Spec.ForProvider.LaunchTemplateData.InstanceMarketOptions.SpotOptions.ValidUntil != nil {
					f0f14f1.SetValidUntil(cr.Spec.ForProvider.LaunchTemplateData.InstanceMarketOptions.SpotOptions.ValidUntil.Time)
				}
				f0f14.SetSpotOptions(f0f14f1)
			}
			f0.SetInstanceMarketOptions(f0f14)
		}
		if cr.Spec.ForProvider.LaunchTemplateData.InstanceRequirements != nil {
			f0f15 := &svcsdk.InstanceRequirementsRequest{}
			if cr.Spec.ForProvider.LaunchTemplateData.InstanceRequirements.AcceleratorCount != nil {
				f0f15f0 := &svcsdk.AcceleratorCountRequest{}
				if cr.Spec.ForProvider.LaunchTemplateData.InstanceRequirements.AcceleratorCount.Max != nil {
					f0f15f0.SetMax(*cr.Spec.ForProvider.LaunchTemplateData.InstanceRequirements.AcceleratorCount.Max)
				}
				if cr.Spec.ForProvider.LaunchTemplateData.InstanceRequirements.AcceleratorCount.Min != nil {
					f0f15f0.SetMin(*cr.Spec.ForProvider.LaunchTemplateData.InstanceRequirements.AcceleratorCount.Min)
				}
				f0f15.SetAcceleratorCount(f0f15f0)
			}
			if cr.Spec.ForProvider.LaunchTemplateData.InstanceRequirements.AcceleratorManufacturers != nil {
				f0f15f1 := []*string{}
				for _, f0f15f1iter := range cr.Spec.ForProvider.LaunchTemplateData.InstanceRequirements.AcceleratorManufacturers {
					var f0f15f1elem string
					f0f15f1elem = *f0f15f1iter
					f0f15f1 = append(f0f15f1, &f0f15f1elem)
				}
				f0f15.SetAcceleratorManufacturers(f0f15f1)
			}
			if cr.Spec.ForProvider.LaunchTemplateData.InstanceRequirements.AcceleratorNames != nil {
				f0f15f2 := []*string{}
				for _, f0f15f2iter := range cr.Spec.ForProvider.LaunchTemplateData.InstanceRequirements.AcceleratorNames {
					var f0f15f2elem string
					f0f15f2elem = *f0f15f2iter
					f0f15f2 = append(f0f15f2, &f0f15f2elem)
				}
				f0f15.SetAcceleratorNames(f0f15f2)
			}
			if cr.Spec.ForProvider.LaunchTemplateData.InstanceRequirements.AcceleratorTotalMemoryMiB != nil {
				f0f15f3 := &svcsdk.AcceleratorTotalMemoryMiBRequest{}
				if cr.Spec.ForProvider.LaunchTemplateData.InstanceRequirements.AcceleratorTotalMemoryMiB.Max != nil {
					f0f15f3.SetMax(*cr.Spec.ForProvider.LaunchTemplateData.InstanceRequirements.AcceleratorTotalMemoryMiB.Max)
				}
				if cr.Spec.ForProvider.LaunchTemplateData.InstanceRequirements.AcceleratorTotalMemoryMiB.Min != nil {
					f0f15f3.SetMin(*cr.Spec.ForProvider.LaunchTemplateData.InstanceRequirements.AcceleratorTotalMemoryMiB.Min)
				}
				f0f15.SetAcceleratorTotalMemoryMiB(f0f15f3)
			}
			if cr.Spec.ForProvider.LaunchTemplateData.InstanceRequirements.AcceleratorTypes != nil {
				f0f15f4 := []*string{}
				for _, f0f15f4iter := range cr.Spec.ForProvider.LaunchTemplateData.InstanceRequirements.AcceleratorTypes {
					var f0f15f4elem string
					f0f15f4elem = *f0f15f4iter
					f0f15f4 = append(f0f15f4, &f0f15f4elem)
				}
				f0f15.SetAcceleratorTypes(f0f15f4)
			}
			if cr.Spec.ForProvider.LaunchTemplateData.InstanceRequirements.AllowedInstanceTypes != nil {
				f0f15f5 := []*string{}
				for _, f0f15f5iter := range cr.Spec.ForProvider.LaunchTemplateData.InstanceRequirements.AllowedInstanceTypes {
					var f0f15f5elem string
					f0f15f5elem = *f0f15f5iter
					f0f15f5 = append(f0f15f5, &f0f15f5elem)
				}
				f0f15.SetAllowedInstanceTypes(f0f15f5)
			}
			if cr.Spec.ForProvider.LaunchTemplateData.InstanceRequirements.BareMetal != nil {
				f0f15.SetBareMetal(*cr.Spec.ForProvider.LaunchTemplateData.InstanceRequirements.BareMetal)
			}
			if cr.Spec.ForProvider.LaunchTemplateData.InstanceRequirements.BaselineEBSBandwidthMbps != nil {
				f0f15f7 := &svcsdk.BaselineEbsBandwidthMbpsRequest{}
				if cr.Spec.ForProvider.LaunchTemplateData.InstanceRequirements.BaselineEBSBandwidthMbps.Max != nil {
					f0f15f7.SetMax(*cr.Spec.ForProvider.LaunchTemplateData.InstanceRequirements.BaselineEBSBandwidthMbps.Max)
				}
				if cr.Spec.ForProvider.LaunchTemplateData.InstanceRequirements.BaselineEBSBandwidthMbps.Min != nil {
					f0f15f7.SetMin(*cr.Spec.ForProvider.LaunchTemplateData.InstanceRequirements.BaselineEBSBandwidthMbps.Min)
				}
				f0f15.SetBaselineEbsBandwidthMbps(f0f15f7)
			}
			if cr.Spec.ForProvider.LaunchTemplateData.InstanceRequirements.BurstablePerformance != nil {
				f0f15.SetBurstablePerformance(*cr.Spec.ForProvider.LaunchTemplateData.InstanceRequirements.BurstablePerformance)
			}
			if cr.Spec.ForProvider.LaunchTemplateData.InstanceRequirements.CPUManufacturers != nil {
				f0f15f9 := []*string{}
				for _, f0f15f9iter := range cr.Spec.ForProvider.LaunchTemplateData.InstanceRequirements.CPUManufacturers {
					var f0f15f9elem string
					f0f15f9elem = *f0f15f9iter
					f0f15f9 = append(f0f15f9, &f0f15f9elem)
				}
				f0f15.SetCpuManufacturers(f0f15f9)
			}
			if cr.Spec.ForProvider.LaunchTemplateData.InstanceRequirements.ExcludedInstanceTypes != nil {
				f0f15f10 := []*string{}
				for _, f0f15f10iter := range cr.Spec.ForProvider.LaunchTemplateData.InstanceRequirements.ExcludedInstanceTypes {
					var f0f15f10elem string
					f0f15f10elem = *f0f15f10iter
					f0f15f10 = append(f0f15f10, &f0f15f10elem)
				}
				f0f15.SetExcludedInstanceTypes(f0f15f10)
			}
			if cr.Spec.ForProvider.LaunchTemplateData.InstanceRequirements.InstanceGenerations != nil {
				f0f15f11 := []*string{}
				for _, f0f15f11iter := range cr.Spec.ForProvider.LaunchTemplateData.InstanceRequirements.InstanceGenerations {
					var f0f15f11elem string
					f0f15f11elem = *f0f15f11iter
					f0f15f11 = append(f0f15f11, &f0f15f11elem)
				}
				f0f15.SetInstanceGenerations(f0f15f11)
			}
			if cr.Spec.ForProvider.LaunchTemplateData.InstanceRequirements.LocalStorage != nil {
				f0f15.SetLocalStorage(*cr.Spec.ForProvider.LaunchTemplateData.InstanceRequirements.LocalStorage)
			}
			if cr.Spec.ForProvider.LaunchTemplateData.InstanceRequirements.LocalStorageTypes != nil {
				f0f15f13 := []*string{}
				for _, f0f15f13iter := range cr.Spec.ForProvider.LaunchTemplateData.InstanceRequirements.LocalStorageTypes {
					var f0f15f13elem string
					f0f15f13elem = *f0f15f13iter
					f0f15f13 = append(f0f15f13, &f0f15f13elem)
				}
				f0f15.SetLocalStorageTypes(f0f15f13)
			}
			if cr.Spec.ForProvider.LaunchTemplateData.InstanceRequirements.MemoryGiBPerVCPU != nil {
				f0f15f14 := &svcsdk.MemoryGiBPerVCpuRequest{}
				if cr.Spec.ForProvider.LaunchTemplateData.InstanceRequirements.MemoryGiBPerVCPU.Max != nil {
					f0f15f14.SetMax(*cr.Spec.ForProvider.LaunchTemplateData.InstanceRequirements.MemoryGiBPerVCPU.Max)
				}
				if cr.Spec.ForProvider.LaunchTemplateData.InstanceRequirements.MemoryGiBPerVCPU.Min != nil {
					f0f15f14.SetMin(*cr.Spec.ForProvider.LaunchTemplateData.InstanceRequirements.MemoryGiBPerVCPU.Min)
				}
				f0f15.SetMemoryGiBPerVCpu(f0f15f14)
			}
			if cr.Spec.ForProvider.LaunchTemplateData.InstanceRequirements.MemoryMiB != nil {
				f0f15f15 := &svcsdk.MemoryMiBRequest{}
				if cr.Spec.ForProvider.LaunchTemplateData.InstanceRequirements.MemoryMiB.Max != nil {
					f0f15f15.SetMax(*cr.Spec.ForProvider.LaunchTemplateData.InstanceRequirements.MemoryMiB.Max)
				}
				if cr.Spec.ForProvider.LaunchTemplateData.InstanceRequirements.MemoryMiB.Min != nil {
					f0f15f15.SetMin(*cr.Spec.ForProvider.LaunchTemplateData.InstanceRequirements.MemoryMiB.Min)
				}
				f0f15.SetMemoryMiB(f0f15f15)
			}
			if cr.Spec.ForProvider.LaunchTemplateData.InstanceRequirements.NetworkBandwidthGbps != nil {
				f0f15f16 := &svcsdk.NetworkBandwidthGbpsRequest{}
				if cr.Spec.ForProvider.LaunchTemplateData.InstanceRequirements.NetworkBandwidthGbps.Max != nil {
					f0f15f16.SetMax(*cr.Spec.ForProvider.LaunchTemplateData.InstanceRequirements.NetworkBandwidthGbps.Max)
				}
				if cr.Spec.ForProvider.LaunchTemplateData.InstanceRequirements.NetworkBandwidthGbps.Min != nil {
					f0f15f16.SetMin(*cr.Spec.ForProvider.LaunchTemplateData.InstanceRequirements.NetworkBandwidthGbps.Min)
				}
				f0f15.SetNetworkBandwidthGbps(f0f15f16)
			}
			if cr.Spec.ForProvider.LaunchTemplateData.InstanceRequirements.NetworkInterfaceCount != nil {
				f0f15f17 := &svcsdk.NetworkInterfaceCountRequest{}
				if cr.Spec.ForProvider.LaunchTemplateData.InstanceRequirements.NetworkInterfaceCount.Max != nil {
					f0f15f17.SetMax(*cr.Spec.ForProvider.LaunchTemplateData.InstanceRequirements.NetworkInterfaceCount.Max)
				}
				if cr.Spec.ForProvider.LaunchTemplateData.InstanceRequirements.NetworkInterfaceCount.Min != nil {
					f0f15f17.SetMin(*cr.Spec.ForProvider.LaunchTemplateData.InstanceRequirements.NetworkInterfaceCount.Min)
				}
				f0f15.SetNetworkInterfaceCount(f0f15f17)
			}
			if cr.Spec.ForProvider.LaunchTemplateData.InstanceRequirements.OnDemandMaxPricePercentageOverLowestPrice != nil {
				f0f15.SetOnDemandMaxPricePercentageOverLowestPrice(*cr.Spec.ForProvider.LaunchTemplateData.InstanceRequirements.OnDemandMaxPricePercentageOverLowestPrice)
			}
			if cr.Spec.ForProvider.LaunchTemplateData.InstanceRequirements.RequireHibernateSupport != nil {
				f0f15.SetRequireHibernateSupport(*cr.Spec.ForProvider.LaunchTemplateData.InstanceRequirements.RequireHibernateSupport)
			}
			if cr.Spec.ForProvider.LaunchTemplateData.InstanceRequirements.SpotMaxPricePercentageOverLowestPrice != nil {
				f0f15.SetSpotMaxPricePercentageOverLowestPrice(*cr.Spec.ForProvider.LaunchTemplateData.InstanceRequirements.SpotMaxPricePercentageOverLowestPrice)
			}
			if cr.Spec.ForProvider.LaunchTemplateData.InstanceRequirements.TotalLocalStorageGB != nil {
				f0f15f21 := &svcsdk.TotalLocalStorageGBRequest{}
				if cr.Spec.ForProvider.LaunchTemplateData.InstanceRequirements.TotalLocalStorageGB.Max != nil {
					f0f15f21.SetMax(*cr.Spec.ForProvider.LaunchTemplateData.InstanceRequirements.TotalLocalStorageGB.Max)
				}
				if cr.Spec.ForProvider.LaunchTemplateData.InstanceRequirements.TotalLocalStorageGB.Min != nil {
					f0f15f21.SetMin(*cr.Spec.ForProvider.LaunchTemplateData.InstanceRequirements.TotalLocalStorageGB.Min)
				}
				f0f15.SetTotalLocalStorageGB(f0f15f21)
			}
			if cr.Spec.ForProvider.LaunchTemplateData.InstanceRequirements.VCPUCount != nil {
				f0f15f22 := &svcsdk.VCpuCountRangeRequest{}
				if cr.Spec.ForProvider.LaunchTemplateData.InstanceRequirements.VCPUCount.Max != nil {
					f0f15f22.SetMax(*cr.Spec.ForProvider.LaunchTemplateData.InstanceRequirements.VCPUCount.Max)
				}
				if cr.Spec.ForProvider.LaunchTemplateData.InstanceRequirements.VCPUCount.Min != nil {
					f0f15f22.SetMin(*cr.Spec.ForProvider.LaunchTemplateData.InstanceRequirements.VCPUCount.Min)
				}
				f0f15.SetVCpuCount(f0f15f22)
			}
			f0.SetInstanceRequirements(f0f15)
		}
		if cr.Spec.ForProvider.LaunchTemplateData.InstanceType != nil {
			f0.SetInstanceType(*cr.Spec.ForProvider.LaunchTemplateData.InstanceType)
		}
		if cr.Spec.ForProvider.LaunchTemplateData.KernelID != nil {
			f0.SetKernelId(*cr.Spec.ForProvider.LaunchTemplateData.KernelID)
		}
		if cr.Spec.ForProvider.LaunchTemplateData.KeyName != nil {
			f0.SetKeyName(*cr.Spec.ForProvider.LaunchTemplateData.KeyName)
		}
		if cr.Spec.ForProvider.LaunchTemplateData.LicenseSpecifications != nil {
			f0f19 := []*svcsdk.LaunchTemplateLicenseConfigurationRequest{}
			for _, f0f19iter := range cr.Spec.ForProvider.LaunchTemplateData.LicenseSpecifications {
				f0f19elem := &svcsdk.LaunchTemplateLicenseConfigurationRequest{}
				if f0f19iter.LicenseConfigurationARN != nil {
					f0f19elem.SetLicenseConfigurationArn(*f0f19iter.LicenseConfigurationARN)
				}
				f0f19 = append(f0f19, f0f19elem)
			}
			f0.SetLicenseSpecifications(f0f19)
		}
		if cr.Spec.ForProvider.LaunchTemplateData.MaintenanceOptions != nil {
			f0f20 := &svcsdk.LaunchTemplateInstanceMaintenanceOptionsRequest{}
			if cr.Spec.ForProvider.LaunchTemplateData.MaintenanceOptions.AutoRecovery != nil {
				f0f20.SetAutoRecovery(*cr.Spec.ForProvider.LaunchTemplateData.MaintenanceOptions.AutoRecovery)
			}
			f0.SetMaintenanceOptions(f0f20)
		}
		if cr.Spec.ForProvider.LaunchTemplateData.MetadataOptions != nil {
			f0f21 := &svcsdk.LaunchTemplateInstanceMetadataOptionsRequest{}
			if cr.Spec.ForProvider.LaunchTemplateData.MetadataOptions.HTTPEndpoint != nil {
				f0f21.SetHttpEndpoint(*cr.Spec.ForProvider.LaunchTemplateData.MetadataOptions.HTTPEndpoint)
			}
			if cr.Spec.ForProvider.LaunchTemplateData.MetadataOptions.HTTPProtocolIPv6 != nil {
				f0f21.SetHttpProtocolIpv6(*cr.Spec.ForProvider.LaunchTemplateData.MetadataOptions.HTTPProtocolIPv6)
			}
			if cr.Spec.ForProvider.LaunchTemplateData.MetadataOptions.HTTPPutResponseHopLimit != nil {
				f0f21.SetHttpPutResponseHopLimit(*cr.Spec.ForProvider.LaunchTemplateData.MetadataOptions.HTTPPutResponseHopLimit)
			}
			if cr.Spec.ForProvider.LaunchTemplateData.MetadataOptions.HTTPTokens != nil {
				f0f21.SetHttpTokens(*cr.Spec.ForProvider.LaunchTemplateData.MetadataOptions.HTTPTokens)
			}
			if cr.Spec.ForProvider.LaunchTemplateData.MetadataOptions.InstanceMetadataTags != nil {
				f0f21.SetInstanceMetadataTags(*cr.Spec.ForProvider.LaunchTemplateData.MetadataOptions.InstanceMetadataTags)
			}
			f0.SetMetadataOptions(f0f21)
		}
		if cr.Spec.ForProvider.LaunchTemplateData.Monitoring != nil {
			f0f22 := &svcsdk.LaunchTemplatesMonitoringRequest{}
			if cr.Spec.ForProvider.LaunchTemplateData.Monitoring.Enabled != nil {
				f0f22.SetEnabled(*cr.Spec.ForProvider.LaunchTemplateData.Monitoring.Enabled)
			}
			f0.SetMonitoring(f0f22)
		}
		if cr.Spec.ForProvider.LaunchTemplateData.NetworkInterfaces != nil {
			f0f23 := []*svcsdk.LaunchTemplateInstanceNetworkInterfaceSpecificationRequest{}
			for _, f0f23iter := range cr.Spec.ForProvider.LaunchTemplateData.NetworkInterfaces {
				f0f23elem := &svcsdk.LaunchTemplateInstanceNetworkInterfaceSpecificationRequest{}
				if f0f23iter.AssociateCarrierIPAddress != nil {
					f0f23elem.SetAssociateCarrierIpAddress(*f0f23iter.AssociateCarrierIPAddress)
				}
				if f0f23iter.AssociatePublicIPAddress != nil {
					f0f23elem.SetAssociatePublicIpAddress(*f0f23iter.AssociatePublicIPAddress)
				}
				if f0f23iter.ConnectionTrackingSpecification != nil {
					f0f23elemf2 := &svcsdk.ConnectionTrackingSpecificationRequest{}
					if f0f23iter.ConnectionTrackingSpecification.TCPEstablishedTimeout != nil {
						f0f23elemf2.SetTcpEstablishedTimeout(*f0f23iter.ConnectionTrackingSpecification.TCPEstablishedTimeout)
					}
					if f0f23iter.ConnectionTrackingSpecification.UDPStreamTimeout != nil {
						f0f23elemf2.SetUdpStreamTimeout(*f0f23iter.ConnectionTrackingSpecification.UDPStreamTimeout)
					}
					if f0f23iter.ConnectionTrackingSpecification.UDPTimeout != nil {
						f0f23elemf2.SetUdpTimeout(*f0f23iter.ConnectionTrackingSpecification.UDPTimeout)
					}
					f0f23elem.SetConnectionTrackingSpecification(f0f23elemf2)
				}
				if f0f23iter.DeleteOnTermination != nil {
					f0f23elem.SetDeleteOnTermination(*f0f23iter.DeleteOnTermination)
				}
				if f0f23iter.Description != nil {
					f0f23elem.SetDescription(*f0f23iter.Description)
				}
				if f0f23iter.DeviceIndex != nil {
					f0f23elem.SetDeviceIndex(*f0f23iter.DeviceIndex)
				}
				if f0f23iter.ENASrdSpecification != nil {
					f0f23elemf6 := &svcsdk.EnaSrdSpecificationRequest{}
					if f0f23iter.ENASrdSpecification.ENASrdEnabled != nil {
						f0f23elemf6.SetEnaSrdEnabled(*f0f23iter.ENASrdSpecification.ENASrdEnabled)
					}
					if f0f23iter.ENASrdSpecification.ENASrdUDPSpecification != nil {
						f0f23elemf6f1 := &svcsdk.EnaSrdUdpSpecificationRequest{}
						if f0f23iter.ENASrdSpecification.ENASrdUDPSpecification.ENASrdUDPEnabled != nil {
							f0f23elemf6f1.SetEnaSrdUdpEnabled(*f0f23iter.ENASrdSpecification.ENASrdUDPSpecification.ENASrdUDPEnabled)
						}
						f0f23elemf6.SetEnaSrdUdpSpecification(f0f23elemf6f1)
					}
					f0f23elem.SetEnaSrdSpecification(f0f23elemf6)
				}
				if f0f23iter.Groups != nil {
					f0f23elemf7 := []*string{}
					for _, f0f23elemf7iter := range f0f23iter.Groups {
						var f0f23elemf7elem string
						f0f23elemf7elem = *f0f23elemf7iter
						f0f23elemf7 = append(f0f23elemf7, &f0f23elemf7elem)
					}
					f0f23elem.SetGroups(f0f23elemf7)
				}
				if f0f23iter.InterfaceType != nil {
					f0f23elem.SetInterfaceType(*f0f23iter.InterfaceType)
				}
				if f0f23iter.IPv4PrefixCount != nil {
					f0f23elem.SetIpv4PrefixCount(*f0f23iter.IPv4PrefixCount)
				}
				if f0f23iter.IPv4Prefixes != nil {
					f0f23elemf10 := []*svcsdk.Ipv4PrefixSpecificationRequest{}
					for _, f0f23elemf10iter := range f0f23iter.IPv4Prefixes {
						f0f23elemf10elem := &svcsdk.Ipv4PrefixSpecificationRequest{}
						if f0f23elemf10iter.IPv4Prefix != nil {
							f0f23elemf10elem.SetIpv4Prefix(*f0f23elemf10iter.IPv4Prefix)
						}
						f0f23elemf10 = append(f0f23elemf10, f0f23elemf10elem)
					}
					f0f23elem.SetIpv4Prefixes(f0f23elemf10)
				}
				if f0f23iter.IPv6AddressCount != nil {
					f0f23elem.SetIpv6AddressCount(*f0f23iter.IPv6AddressCount)
				}
				if f0f23iter.IPv6Addresses != nil {
					f0f23elemf12 := []*svcsdk.InstanceIpv6AddressRequest{}
					for _, f0f23elemf12iter := range f0f23iter.IPv6Addresses {
						f0f23elemf12elem := &svcsdk.InstanceIpv6AddressRequest{}
						if f0f23elemf12iter.IPv6Address != nil {
							f0f23elemf12elem.SetIpv6Address(*f0f23elemf12iter.IPv6Address)
						}
						f0f23elemf12 = append(f0f23elemf12, f0f23elemf12elem)
					}
					f0f23elem.SetIpv6Addresses(f0f23elemf12)
				}
				if f0f23iter.IPv6PrefixCount != nil {
					f0f23elem.SetIpv6PrefixCount(*f0f23iter.IPv6PrefixCount)
				}
				if f0f23iter.IPv6Prefixes != nil {
					f0f23elemf14 := []*svcsdk.Ipv6PrefixSpecificationRequest{}
					for _, f0f23elemf14iter := range f0f23iter.IPv6Prefixes {
						f0f23elemf14elem := &svcsdk.Ipv6PrefixSpecificationRequest{}
						if f0f23elemf14iter.IPv6Prefix != nil {
							f0f23elemf14elem.SetIpv6Prefix(*f0f23elemf14iter.IPv6Prefix)
						}
						f0f23elemf14 = append(f0f23elemf14, f0f23elemf14elem)
					}
					f0f23elem.SetIpv6Prefixes(f0f23elemf14)
				}
				if f0f23iter.NetworkCardIndex != nil {
					f0f23elem.SetNetworkCardIndex(*f0f23iter.NetworkCardIndex)
				}
				if f0f23iter.NetworkInterfaceID != nil {
					f0f23elem.SetNetworkInterfaceId(*f0f23iter.NetworkInterfaceID)
				}
				if f0f23iter.PrimaryIPv6 != nil {
					f0f23elem.SetPrimaryIpv6(*f0f23iter.PrimaryIPv6)
				}
				if f0f23iter.PrivateIPAddress != nil {
					f0f23elem.SetPrivateIpAddress(*f0f23iter.PrivateIPAddress)
				}
				if f0f23iter.PrivateIPAddresses != nil {
					f0f23elemf19 := []*svcsdk.PrivateIpAddressSpecification{}
					for _, f0f23elemf19iter := range f0f23iter.PrivateIPAddresses {
						f0f23elemf19elem := &svcsdk.PrivateIpAddressSpecification{}
						if f0f23elemf19iter.Primary != nil {
							f0f23elemf19elem.SetPrimary(*f0f23elemf19iter.Primary)
						}
						if f0f23elemf19iter.PrivateIPAddress != nil {
							f0f23elemf19elem.SetPrivateIpAddress(*f0f23elemf19iter.PrivateIPAddress)
						}
						f0f23elemf19 = append(f0f23elemf19, f0f23elemf19elem)
					}
					f0f23elem.SetPrivateIpAddresses(f0f23elemf19)
				}
				if f0f23iter.SecondaryPrivateIPAddressCount != nil {
					f0f23elem.SetSecondaryPrivateIpAddressCount(*f0f23iter.SecondaryPrivateIPAddressCount)
				}
				if f0f23iter.SubnetID != nil {
					f0f23elem.SetSubnetId(*f0f23iter.SubnetID)
				}
				f0f23 = append(f0f23, f0f23elem)
			}
			f0.SetNetworkInterfaces(f0f23)
		}
		if cr.Spec.ForProvider.LaunchTemplateData.Placement != nil {
			f0f24 := &svcsdk.LaunchTemplatePlacementRequest{}
			if cr.Spec.ForProvider.LaunchTemplateData.Placement.Affinity != nil {
				f0f24.SetAffinity(*cr.Spec.ForProvider.LaunchTemplateData.Placement.Affinity)
			}
			if cr.Spec.ForProvider.LaunchTemplateData.Placement.AvailabilityZone != nil {
				f0f24.SetAvailabilityZone(*cr.Spec.ForProvider.LaunchTemplateData.Placement.AvailabilityZone)
			}
			if cr.Spec.ForProvider.LaunchTemplateData.Placement.GroupID != nil {
				f0f24.SetGroupId(*cr.Spec.ForProvider.LaunchTemplateData.Placement.GroupID)
			}
			if cr.Spec.ForProvider.LaunchTemplateData.Placement.GroupName != nil {
				f0f24.SetGroupName(*cr.Spec.ForProvider.LaunchTemplateData.Placement.GroupName)
			}
			if cr.Spec.ForProvider.LaunchTemplateData.Placement.HostID != nil {
				f0f24.SetHostId(*cr.Spec.ForProvider.LaunchTemplateData.Placement.HostID)
			}
			if cr.Spec.ForProvider.LaunchTemplateData.Placement.HostResourceGroupARN != nil {
				f0f24.SetHostResourceGroupArn(*cr.Spec.ForProvider.LaunchTemplateData.Placement.HostResourceGroupARN)
			}
			if cr.Spec.ForProvider.LaunchTemplateData.Placement.PartitionNumber != nil {
				f0f24.SetPartitionNumber(*cr.Spec.ForProvider.LaunchTemplateData.Placement.PartitionNumber)
			}
			if cr.Spec.ForProvider.LaunchTemplateData.Placement.SpreadDomain != nil {
				f0f24.SetSpreadDomain(*cr.Spec.ForProvider.LaunchTemplateData.Placement.SpreadDomain)
			}
			if cr.Spec.ForProvider.LaunchTemplateData.Placement.Tenancy != nil {
				f0f24.SetTenancy(*cr.Spec.ForProvider.LaunchTemplateData.Placement.Tenancy)
			}
			f0.SetPlacement(f0f24)
		}
		if cr.Spec.ForProvider.LaunchTemplateData.PrivateDNSNameOptions != nil {
			f0f25 := &svcsdk.LaunchTemplatePrivateDnsNameOptionsRequest{}
			if cr.Spec.ForProvider.LaunchTemplateData.PrivateDNSNameOptions.EnableResourceNameDNSAAAARecord != nil {
				f0f25.SetEnableResourceNameDnsAAAARecord(*cr.Spec.ForProvider.LaunchTemplateData.PrivateDNSNameOptions.EnableResourceNameDNSAAAARecord)
			}
			if cr.Spec.ForProvider.LaunchTemplateData.PrivateDNSNameOptions.EnableResourceNameDNSARecord != nil {
				f0f25.SetEnableResourceNameDnsARecord(*cr.Spec.ForProvider.LaunchTemplateData.PrivateDNSNameOptions.EnableResourceNameDNSARecord)
			}
			if cr.Spec.ForProvider.LaunchTemplateData.PrivateDNSNameOptions.HostnameType != nil {
				f0f25.SetHostnameType(*cr.Spec.ForProvider.LaunchTemplateData.PrivateDNSNameOptions.HostnameType)
			}
			f0.SetPrivateDnsNameOptions(f0f25)
		}
		if cr.Spec.ForProvider.LaunchTemplateData.RAMDiskID != nil {
			f0.SetRamDiskId(*cr.Spec.ForProvider.LaunchTemplateData.RAMDiskID)
		}
		if cr.Spec.ForProvider.LaunchTemplateData.SecurityGroupIDs != nil {
			f0f27 := []*string{}
			for _, f0f27iter := range cr.Spec.ForProvider.LaunchTemplateData.SecurityGroupIDs {
				var f0f27elem string
				f0f27elem = *f0f27iter
				f0f27 = append(f0f27, &f0f27elem)
			}
			f0.SetSecurityGroupIds(f0f27)
		}
		if cr.Spec.ForProvider.LaunchTemplateData.SecurityGroups != nil {
			f0f28 := []*string{}
			for _, f0f28iter := range cr.Spec.ForProvider.LaunchTemplateData.SecurityGroups {
				var f0f28elem string
				f0f28elem = *f0f28iter
				f0f28 = append(f0f28, &f0f28elem)
			}
			f0.SetSecurityGroups(f0f28)
		}
		if cr.Spec.ForProvider.LaunchTemplateData.TagSpecifications != nil {
			f0f29 := []*svcsdk.LaunchTemplateTagSpecificationRequest{}
			for _, f0f29iter := range cr.Spec.ForProvider.LaunchTemplateData.TagSpecifications {
				f0f29elem := &svcsdk.LaunchTemplateTagSpecificationRequest{}
				if f0f29iter.ResourceType != nil {
					f0f29elem.SetResourceType(*f0f29iter.ResourceType)
				}
				if f0f29iter.Tags != nil {
					f0f29elemf1 := []*svcsdk.Tag{}
					for _, f0f29elemf1iter := range f0f29iter.Tags {
						f0f29elemf1elem := &svcsdk.Tag{}
						if f0f29elemf1iter.Key != nil {
							f0f29elemf1elem.SetKey(*f0f29elemf1iter.Key)
						}
						if f0f29elemf1iter.Value != nil {
							f0f29elemf1elem.SetValue(*f0f29elemf1iter.Value)
						}
						f0f29elemf1 = append(f0f29elemf1, f0f29elemf1elem)
					}
					f0f29elem.SetTags(f0f29elemf1)
				}
				f0f29 = append(f0f29, f0f29elem)
			}
			f0.SetTagSpecifications(f0f29)
		}
		if cr.Spec.ForProvider.LaunchTemplateData.UserData != nil {
			f0.SetUserData(*cr.Spec.ForProvider.LaunchTemplateData.UserData)
		}
		res.SetLaunchTemplateData(f0)
	}
	if cr.Spec.ForProvider.ResolveAlias != nil {
		res.SetResolveAlias(*cr.Spec.ForProvider.ResolveAlias)
	}
	if cr.Spec.ForProvider.SourceVersion != nil {
		res.SetSourceVersion(*cr.Spec.ForProvider.SourceVersion)
	}
	if cr.Spec.ForProvider.VersionDescription != nil {
		res.SetVersionDescription(*cr.Spec.ForProvider.VersionDescription)
	}

	return res
}

// IsNotFound returns whether the given error is of type NotFound or not.
func IsNotFound(err error) bool {
	awsErr, ok := err.(awserr.Error)
	return ok && awsErr.Code() == "InvalidLaunchTemplateName.NotFoundException"
}
