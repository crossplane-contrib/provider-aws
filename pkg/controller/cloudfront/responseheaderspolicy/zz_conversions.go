/*
Copyright 2021 The Crossplane Authors.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by ack-generate. DO NOT EDIT.

package responseheaderspolicy

import (
	"github.com/aws/aws-sdk-go/aws/awserr"
	svcsdk "github.com/aws/aws-sdk-go/service/cloudfront"
	metav1 "k8s.io/apimachinery/pkg/apis/meta/v1"

	svcapitypes "github.com/crossplane-contrib/provider-aws/apis/cloudfront/v1alpha1"
)

// NOTE(muvaf): We return pointers in case the function needs to start with an
// empty object, hence need to return a new pointer.

// GenerateGetResponseHeadersPolicyInput returns input for read
// operation.
func GenerateGetResponseHeadersPolicyInput(cr *svcapitypes.ResponseHeadersPolicy) *svcsdk.GetResponseHeadersPolicyInput {
	res := &svcsdk.GetResponseHeadersPolicyInput{}

	return res
}

// GenerateResponseHeadersPolicy returns the current state in the form of *svcapitypes.ResponseHeadersPolicy.
func GenerateResponseHeadersPolicy(resp *svcsdk.GetResponseHeadersPolicyOutput) *svcapitypes.ResponseHeadersPolicy {
	cr := &svcapitypes.ResponseHeadersPolicy{}

	if resp.ETag != nil {
		cr.Status.AtProvider.ETag = resp.ETag
	} else {
		cr.Status.AtProvider.ETag = nil
	}
	if resp.ResponseHeadersPolicy != nil {
		f1 := &svcapitypes.ResponseHeadersPolicy_SDK{}
		if resp.ResponseHeadersPolicy.Id != nil {
			f1.ID = resp.ResponseHeadersPolicy.Id
		}
		if resp.ResponseHeadersPolicy.LastModifiedTime != nil {
			f1.LastModifiedTime = &metav1.Time{*resp.ResponseHeadersPolicy.LastModifiedTime}
		}
		if resp.ResponseHeadersPolicy.ResponseHeadersPolicyConfig != nil {
			f1f2 := &svcapitypes.ResponseHeadersPolicyConfig{}
			if resp.ResponseHeadersPolicy.ResponseHeadersPolicyConfig.Comment != nil {
				f1f2.Comment = resp.ResponseHeadersPolicy.ResponseHeadersPolicyConfig.Comment
			}
			if resp.ResponseHeadersPolicy.ResponseHeadersPolicyConfig.CorsConfig != nil {
				f1f2f1 := &svcapitypes.ResponseHeadersPolicyCORSConfig{}
				if resp.ResponseHeadersPolicy.ResponseHeadersPolicyConfig.CorsConfig.AccessControlAllowCredentials != nil {
					f1f2f1.AccessControlAllowCredentials = resp.ResponseHeadersPolicy.ResponseHeadersPolicyConfig.CorsConfig.AccessControlAllowCredentials
				}
				if resp.ResponseHeadersPolicy.ResponseHeadersPolicyConfig.CorsConfig.AccessControlAllowHeaders != nil {
					f1f2f1f1 := &svcapitypes.ResponseHeadersPolicyAccessControlAllowHeaders{}
					if resp.ResponseHeadersPolicy.ResponseHeadersPolicyConfig.CorsConfig.AccessControlAllowHeaders.Items != nil {
						f1f2f1f1f0 := []*string{}
						for _, f1f2f1f1f0iter := range resp.ResponseHeadersPolicy.ResponseHeadersPolicyConfig.CorsConfig.AccessControlAllowHeaders.Items {
							var f1f2f1f1f0elem string
							f1f2f1f1f0elem = *f1f2f1f1f0iter
							f1f2f1f1f0 = append(f1f2f1f1f0, &f1f2f1f1f0elem)
						}
						f1f2f1f1.Items = f1f2f1f1f0
					}
					f1f2f1.AccessControlAllowHeaders = f1f2f1f1
				}
				if resp.ResponseHeadersPolicy.ResponseHeadersPolicyConfig.CorsConfig.AccessControlAllowMethods != nil {
					f1f2f1f2 := &svcapitypes.ResponseHeadersPolicyAccessControlAllowMethods{}
					if resp.ResponseHeadersPolicy.ResponseHeadersPolicyConfig.CorsConfig.AccessControlAllowMethods.Items != nil {
						f1f2f1f2f0 := []*string{}
						for _, f1f2f1f2f0iter := range resp.ResponseHeadersPolicy.ResponseHeadersPolicyConfig.CorsConfig.AccessControlAllowMethods.Items {
							var f1f2f1f2f0elem string
							f1f2f1f2f0elem = *f1f2f1f2f0iter
							f1f2f1f2f0 = append(f1f2f1f2f0, &f1f2f1f2f0elem)
						}
						f1f2f1f2.Items = f1f2f1f2f0
					}
					f1f2f1.AccessControlAllowMethods = f1f2f1f2
				}
				if resp.ResponseHeadersPolicy.ResponseHeadersPolicyConfig.CorsConfig.AccessControlAllowOrigins != nil {
					f1f2f1f3 := &svcapitypes.ResponseHeadersPolicyAccessControlAllowOrigins{}
					if resp.ResponseHeadersPolicy.ResponseHeadersPolicyConfig.CorsConfig.AccessControlAllowOrigins.Items != nil {
						f1f2f1f3f0 := []*string{}
						for _, f1f2f1f3f0iter := range resp.ResponseHeadersPolicy.ResponseHeadersPolicyConfig.CorsConfig.AccessControlAllowOrigins.Items {
							var f1f2f1f3f0elem string
							f1f2f1f3f0elem = *f1f2f1f3f0iter
							f1f2f1f3f0 = append(f1f2f1f3f0, &f1f2f1f3f0elem)
						}
						f1f2f1f3.Items = f1f2f1f3f0
					}
					f1f2f1.AccessControlAllowOrigins = f1f2f1f3
				}
				if resp.ResponseHeadersPolicy.ResponseHeadersPolicyConfig.CorsConfig.AccessControlExposeHeaders != nil {
					f1f2f1f4 := &svcapitypes.ResponseHeadersPolicyAccessControlExposeHeaders{}
					if resp.ResponseHeadersPolicy.ResponseHeadersPolicyConfig.CorsConfig.AccessControlExposeHeaders.Items != nil {
						f1f2f1f4f0 := []*string{}
						for _, f1f2f1f4f0iter := range resp.ResponseHeadersPolicy.ResponseHeadersPolicyConfig.CorsConfig.AccessControlExposeHeaders.Items {
							var f1f2f1f4f0elem string
							f1f2f1f4f0elem = *f1f2f1f4f0iter
							f1f2f1f4f0 = append(f1f2f1f4f0, &f1f2f1f4f0elem)
						}
						f1f2f1f4.Items = f1f2f1f4f0
					}
					f1f2f1.AccessControlExposeHeaders = f1f2f1f4
				}
				if resp.ResponseHeadersPolicy.ResponseHeadersPolicyConfig.CorsConfig.AccessControlMaxAgeSec != nil {
					f1f2f1.AccessControlMaxAgeSec = resp.ResponseHeadersPolicy.ResponseHeadersPolicyConfig.CorsConfig.AccessControlMaxAgeSec
				}
				if resp.ResponseHeadersPolicy.ResponseHeadersPolicyConfig.CorsConfig.OriginOverride != nil {
					f1f2f1.OriginOverride = resp.ResponseHeadersPolicy.ResponseHeadersPolicyConfig.CorsConfig.OriginOverride
				}
				f1f2.CORSConfig = f1f2f1
			}
			if resp.ResponseHeadersPolicy.ResponseHeadersPolicyConfig.CustomHeadersConfig != nil {
				f1f2f2 := &svcapitypes.ResponseHeadersPolicyCustomHeadersConfig{}
				if resp.ResponseHeadersPolicy.ResponseHeadersPolicyConfig.CustomHeadersConfig.Items != nil {
					f1f2f2f0 := []*svcapitypes.ResponseHeadersPolicyCustomHeader{}
					for _, f1f2f2f0iter := range resp.ResponseHeadersPolicy.ResponseHeadersPolicyConfig.CustomHeadersConfig.Items {
						f1f2f2f0elem := &svcapitypes.ResponseHeadersPolicyCustomHeader{}
						if f1f2f2f0iter.Header != nil {
							f1f2f2f0elem.Header = f1f2f2f0iter.Header
						}
						if f1f2f2f0iter.Override != nil {
							f1f2f2f0elem.Override = f1f2f2f0iter.Override
						}
						if f1f2f2f0iter.Value != nil {
							f1f2f2f0elem.Value = f1f2f2f0iter.Value
						}
						f1f2f2f0 = append(f1f2f2f0, f1f2f2f0elem)
					}
					f1f2f2.Items = f1f2f2f0
				}
				f1f2.CustomHeadersConfig = f1f2f2
			}
			if resp.ResponseHeadersPolicy.ResponseHeadersPolicyConfig.Name != nil {
				f1f2.Name = resp.ResponseHeadersPolicy.ResponseHeadersPolicyConfig.Name
			}
			if resp.ResponseHeadersPolicy.ResponseHeadersPolicyConfig.SecurityHeadersConfig != nil {
				f1f2f4 := &svcapitypes.ResponseHeadersPolicySecurityHeadersConfig{}
				if resp.ResponseHeadersPolicy.ResponseHeadersPolicyConfig.SecurityHeadersConfig.ContentSecurityPolicy != nil {
					f1f2f4f0 := &svcapitypes.ResponseHeadersPolicyContentSecurityPolicy{}
					if resp.ResponseHeadersPolicy.ResponseHeadersPolicyConfig.SecurityHeadersConfig.ContentSecurityPolicy.ContentSecurityPolicy != nil {
						f1f2f4f0.ContentSecurityPolicy = resp.ResponseHeadersPolicy.ResponseHeadersPolicyConfig.SecurityHeadersConfig.ContentSecurityPolicy.ContentSecurityPolicy
					}
					if resp.ResponseHeadersPolicy.ResponseHeadersPolicyConfig.SecurityHeadersConfig.ContentSecurityPolicy.Override != nil {
						f1f2f4f0.Override = resp.ResponseHeadersPolicy.ResponseHeadersPolicyConfig.SecurityHeadersConfig.ContentSecurityPolicy.Override
					}
					f1f2f4.ContentSecurityPolicy = f1f2f4f0
				}
				if resp.ResponseHeadersPolicy.ResponseHeadersPolicyConfig.SecurityHeadersConfig.ContentTypeOptions != nil {
					f1f2f4f1 := &svcapitypes.ResponseHeadersPolicyContentTypeOptions{}
					if resp.ResponseHeadersPolicy.ResponseHeadersPolicyConfig.SecurityHeadersConfig.ContentTypeOptions.Override != nil {
						f1f2f4f1.Override = resp.ResponseHeadersPolicy.ResponseHeadersPolicyConfig.SecurityHeadersConfig.ContentTypeOptions.Override
					}
					f1f2f4.ContentTypeOptions = f1f2f4f1
				}
				if resp.ResponseHeadersPolicy.ResponseHeadersPolicyConfig.SecurityHeadersConfig.FrameOptions != nil {
					f1f2f4f2 := &svcapitypes.ResponseHeadersPolicyFrameOptions{}
					if resp.ResponseHeadersPolicy.ResponseHeadersPolicyConfig.SecurityHeadersConfig.FrameOptions.FrameOption != nil {
						f1f2f4f2.FrameOption = resp.ResponseHeadersPolicy.ResponseHeadersPolicyConfig.SecurityHeadersConfig.FrameOptions.FrameOption
					}
					if resp.ResponseHeadersPolicy.ResponseHeadersPolicyConfig.SecurityHeadersConfig.FrameOptions.Override != nil {
						f1f2f4f2.Override = resp.ResponseHeadersPolicy.ResponseHeadersPolicyConfig.SecurityHeadersConfig.FrameOptions.Override
					}
					f1f2f4.FrameOptions = f1f2f4f2
				}
				if resp.ResponseHeadersPolicy.ResponseHeadersPolicyConfig.SecurityHeadersConfig.ReferrerPolicy != nil {
					f1f2f4f3 := &svcapitypes.ResponseHeadersPolicyReferrerPolicy{}
					if resp.ResponseHeadersPolicy.ResponseHeadersPolicyConfig.SecurityHeadersConfig.ReferrerPolicy.Override != nil {
						f1f2f4f3.Override = resp.ResponseHeadersPolicy.ResponseHeadersPolicyConfig.SecurityHeadersConfig.ReferrerPolicy.Override
					}
					if resp.ResponseHeadersPolicy.ResponseHeadersPolicyConfig.SecurityHeadersConfig.ReferrerPolicy.ReferrerPolicy != nil {
						f1f2f4f3.ReferrerPolicy = resp.ResponseHeadersPolicy.ResponseHeadersPolicyConfig.SecurityHeadersConfig.ReferrerPolicy.ReferrerPolicy
					}
					f1f2f4.ReferrerPolicy = f1f2f4f3
				}
				if resp.ResponseHeadersPolicy.ResponseHeadersPolicyConfig.SecurityHeadersConfig.StrictTransportSecurity != nil {
					f1f2f4f4 := &svcapitypes.ResponseHeadersPolicyStrictTransportSecurity{}
					if resp.ResponseHeadersPolicy.ResponseHeadersPolicyConfig.SecurityHeadersConfig.StrictTransportSecurity.AccessControlMaxAgeSec != nil {
						f1f2f4f4.AccessControlMaxAgeSec = resp.ResponseHeadersPolicy.ResponseHeadersPolicyConfig.SecurityHeadersConfig.StrictTransportSecurity.AccessControlMaxAgeSec
					}
					if resp.ResponseHeadersPolicy.ResponseHeadersPolicyConfig.SecurityHeadersConfig.StrictTransportSecurity.IncludeSubdomains != nil {
						f1f2f4f4.IncludeSubdomains = resp.ResponseHeadersPolicy.ResponseHeadersPolicyConfig.SecurityHeadersConfig.StrictTransportSecurity.IncludeSubdomains
					}
					if resp.ResponseHeadersPolicy.ResponseHeadersPolicyConfig.SecurityHeadersConfig.StrictTransportSecurity.Override != nil {
						f1f2f4f4.Override = resp.ResponseHeadersPolicy.ResponseHeadersPolicyConfig.SecurityHeadersConfig.StrictTransportSecurity.Override
					}
					if resp.ResponseHeadersPolicy.ResponseHeadersPolicyConfig.SecurityHeadersConfig.StrictTransportSecurity.Preload != nil {
						f1f2f4f4.Preload = resp.ResponseHeadersPolicy.ResponseHeadersPolicyConfig.SecurityHeadersConfig.StrictTransportSecurity.Preload
					}
					f1f2f4.StrictTransportSecurity = f1f2f4f4
				}
				if resp.ResponseHeadersPolicy.ResponseHeadersPolicyConfig.SecurityHeadersConfig.XSSProtection != nil {
					f1f2f4f5 := &svcapitypes.ResponseHeadersPolicyXSSProtection{}
					if resp.ResponseHeadersPolicy.ResponseHeadersPolicyConfig.SecurityHeadersConfig.XSSProtection.ModeBlock != nil {
						f1f2f4f5.ModeBlock = resp.ResponseHeadersPolicy.ResponseHeadersPolicyConfig.SecurityHeadersConfig.XSSProtection.ModeBlock
					}
					if resp.ResponseHeadersPolicy.ResponseHeadersPolicyConfig.SecurityHeadersConfig.XSSProtection.Override != nil {
						f1f2f4f5.Override = resp.ResponseHeadersPolicy.ResponseHeadersPolicyConfig.SecurityHeadersConfig.XSSProtection.Override
					}
					if resp.ResponseHeadersPolicy.ResponseHeadersPolicyConfig.SecurityHeadersConfig.XSSProtection.Protection != nil {
						f1f2f4f5.Protection = resp.ResponseHeadersPolicy.ResponseHeadersPolicyConfig.SecurityHeadersConfig.XSSProtection.Protection
					}
					if resp.ResponseHeadersPolicy.ResponseHeadersPolicyConfig.SecurityHeadersConfig.XSSProtection.ReportUri != nil {
						f1f2f4f5.ReportURI = resp.ResponseHeadersPolicy.ResponseHeadersPolicyConfig.SecurityHeadersConfig.XSSProtection.ReportUri
					}
					f1f2f4.XSSProtection = f1f2f4f5
				}
				f1f2.SecurityHeadersConfig = f1f2f4
			}
			f1.ResponseHeadersPolicyConfig = f1f2
		}
		cr.Status.AtProvider.ResponseHeadersPolicy = f1
	} else {
		cr.Status.AtProvider.ResponseHeadersPolicy = nil
	}

	return cr
}

// GenerateCreateResponseHeadersPolicyInput returns a create input.
func GenerateCreateResponseHeadersPolicyInput(cr *svcapitypes.ResponseHeadersPolicy) *svcsdk.CreateResponseHeadersPolicyInput {
	res := &svcsdk.CreateResponseHeadersPolicyInput{}

	if cr.Spec.ForProvider.ResponseHeadersPolicyConfig != nil {
		f0 := &svcsdk.ResponseHeadersPolicyConfig{}
		if cr.Spec.ForProvider.ResponseHeadersPolicyConfig.Comment != nil {
			f0.SetComment(*cr.Spec.ForProvider.ResponseHeadersPolicyConfig.Comment)
		}
		if cr.Spec.ForProvider.ResponseHeadersPolicyConfig.CORSConfig != nil {
			f0f1 := &svcsdk.ResponseHeadersPolicyCorsConfig{}
			if cr.Spec.ForProvider.ResponseHeadersPolicyConfig.CORSConfig.AccessControlAllowCredentials != nil {
				f0f1.SetAccessControlAllowCredentials(*cr.Spec.ForProvider.ResponseHeadersPolicyConfig.CORSConfig.AccessControlAllowCredentials)
			}
			if cr.Spec.ForProvider.ResponseHeadersPolicyConfig.CORSConfig.AccessControlAllowHeaders != nil {
				f0f1f1 := &svcsdk.ResponseHeadersPolicyAccessControlAllowHeaders{}
				if cr.Spec.ForProvider.ResponseHeadersPolicyConfig.CORSConfig.AccessControlAllowHeaders.Items != nil {
					f0f1f1f0 := []*string{}
					for _, f0f1f1f0iter := range cr.Spec.ForProvider.ResponseHeadersPolicyConfig.CORSConfig.AccessControlAllowHeaders.Items {
						var f0f1f1f0elem string
						f0f1f1f0elem = *f0f1f1f0iter
						f0f1f1f0 = append(f0f1f1f0, &f0f1f1f0elem)
					}
					f0f1f1.SetItems(f0f1f1f0)
				}
				f0f1.SetAccessControlAllowHeaders(f0f1f1)
			}
			if cr.Spec.ForProvider.ResponseHeadersPolicyConfig.CORSConfig.AccessControlAllowMethods != nil {
				f0f1f2 := &svcsdk.ResponseHeadersPolicyAccessControlAllowMethods{}
				if cr.Spec.ForProvider.ResponseHeadersPolicyConfig.CORSConfig.AccessControlAllowMethods.Items != nil {
					f0f1f2f0 := []*string{}
					for _, f0f1f2f0iter := range cr.Spec.ForProvider.ResponseHeadersPolicyConfig.CORSConfig.AccessControlAllowMethods.Items {
						var f0f1f2f0elem string
						f0f1f2f0elem = *f0f1f2f0iter
						f0f1f2f0 = append(f0f1f2f0, &f0f1f2f0elem)
					}
					f0f1f2.SetItems(f0f1f2f0)
				}
				f0f1.SetAccessControlAllowMethods(f0f1f2)
			}
			if cr.Spec.ForProvider.ResponseHeadersPolicyConfig.CORSConfig.AccessControlAllowOrigins != nil {
				f0f1f3 := &svcsdk.ResponseHeadersPolicyAccessControlAllowOrigins{}
				if cr.Spec.ForProvider.ResponseHeadersPolicyConfig.CORSConfig.AccessControlAllowOrigins.Items != nil {
					f0f1f3f0 := []*string{}
					for _, f0f1f3f0iter := range cr.Spec.ForProvider.ResponseHeadersPolicyConfig.CORSConfig.AccessControlAllowOrigins.Items {
						var f0f1f3f0elem string
						f0f1f3f0elem = *f0f1f3f0iter
						f0f1f3f0 = append(f0f1f3f0, &f0f1f3f0elem)
					}
					f0f1f3.SetItems(f0f1f3f0)
				}
				f0f1.SetAccessControlAllowOrigins(f0f1f3)
			}
			if cr.Spec.ForProvider.ResponseHeadersPolicyConfig.CORSConfig.AccessControlExposeHeaders != nil {
				f0f1f4 := &svcsdk.ResponseHeadersPolicyAccessControlExposeHeaders{}
				if cr.Spec.ForProvider.ResponseHeadersPolicyConfig.CORSConfig.AccessControlExposeHeaders.Items != nil {
					f0f1f4f0 := []*string{}
					for _, f0f1f4f0iter := range cr.Spec.ForProvider.ResponseHeadersPolicyConfig.CORSConfig.AccessControlExposeHeaders.Items {
						var f0f1f4f0elem string
						f0f1f4f0elem = *f0f1f4f0iter
						f0f1f4f0 = append(f0f1f4f0, &f0f1f4f0elem)
					}
					f0f1f4.SetItems(f0f1f4f0)
				}
				f0f1.SetAccessControlExposeHeaders(f0f1f4)
			}
			if cr.Spec.ForProvider.ResponseHeadersPolicyConfig.CORSConfig.AccessControlMaxAgeSec != nil {
				f0f1.SetAccessControlMaxAgeSec(*cr.Spec.ForProvider.ResponseHeadersPolicyConfig.CORSConfig.AccessControlMaxAgeSec)
			}
			if cr.Spec.ForProvider.ResponseHeadersPolicyConfig.CORSConfig.OriginOverride != nil {
				f0f1.SetOriginOverride(*cr.Spec.ForProvider.ResponseHeadersPolicyConfig.CORSConfig.OriginOverride)
			}
			f0.SetCorsConfig(f0f1)
		}
		if cr.Spec.ForProvider.ResponseHeadersPolicyConfig.CustomHeadersConfig != nil {
			f0f2 := &svcsdk.ResponseHeadersPolicyCustomHeadersConfig{}
			if cr.Spec.ForProvider.ResponseHeadersPolicyConfig.CustomHeadersConfig.Items != nil {
				f0f2f0 := []*svcsdk.ResponseHeadersPolicyCustomHeader{}
				for _, f0f2f0iter := range cr.Spec.ForProvider.ResponseHeadersPolicyConfig.CustomHeadersConfig.Items {
					f0f2f0elem := &svcsdk.ResponseHeadersPolicyCustomHeader{}
					if f0f2f0iter.Header != nil {
						f0f2f0elem.SetHeader(*f0f2f0iter.Header)
					}
					if f0f2f0iter.Override != nil {
						f0f2f0elem.SetOverride(*f0f2f0iter.Override)
					}
					if f0f2f0iter.Value != nil {
						f0f2f0elem.SetValue(*f0f2f0iter.Value)
					}
					f0f2f0 = append(f0f2f0, f0f2f0elem)
				}
				f0f2.SetItems(f0f2f0)
			}
			f0.SetCustomHeadersConfig(f0f2)
		}
		if cr.Spec.ForProvider.ResponseHeadersPolicyConfig.Name != nil {
			f0.SetName(*cr.Spec.ForProvider.ResponseHeadersPolicyConfig.Name)
		}
		if cr.Spec.ForProvider.ResponseHeadersPolicyConfig.SecurityHeadersConfig != nil {
			f0f4 := &svcsdk.ResponseHeadersPolicySecurityHeadersConfig{}
			if cr.Spec.ForProvider.ResponseHeadersPolicyConfig.SecurityHeadersConfig.ContentSecurityPolicy != nil {
				f0f4f0 := &svcsdk.ResponseHeadersPolicyContentSecurityPolicy{}
				if cr.Spec.ForProvider.ResponseHeadersPolicyConfig.SecurityHeadersConfig.ContentSecurityPolicy.ContentSecurityPolicy != nil {
					f0f4f0.SetContentSecurityPolicy(*cr.Spec.ForProvider.ResponseHeadersPolicyConfig.SecurityHeadersConfig.ContentSecurityPolicy.ContentSecurityPolicy)
				}
				if cr.Spec.ForProvider.ResponseHeadersPolicyConfig.SecurityHeadersConfig.ContentSecurityPolicy.Override != nil {
					f0f4f0.SetOverride(*cr.Spec.ForProvider.ResponseHeadersPolicyConfig.SecurityHeadersConfig.ContentSecurityPolicy.Override)
				}
				f0f4.SetContentSecurityPolicy(f0f4f0)
			}
			if cr.Spec.ForProvider.ResponseHeadersPolicyConfig.SecurityHeadersConfig.ContentTypeOptions != nil {
				f0f4f1 := &svcsdk.ResponseHeadersPolicyContentTypeOptions{}
				if cr.Spec.ForProvider.ResponseHeadersPolicyConfig.SecurityHeadersConfig.ContentTypeOptions.Override != nil {
					f0f4f1.SetOverride(*cr.Spec.ForProvider.ResponseHeadersPolicyConfig.SecurityHeadersConfig.ContentTypeOptions.Override)
				}
				f0f4.SetContentTypeOptions(f0f4f1)
			}
			if cr.Spec.ForProvider.ResponseHeadersPolicyConfig.SecurityHeadersConfig.FrameOptions != nil {
				f0f4f2 := &svcsdk.ResponseHeadersPolicyFrameOptions{}
				if cr.Spec.ForProvider.ResponseHeadersPolicyConfig.SecurityHeadersConfig.FrameOptions.FrameOption != nil {
					f0f4f2.SetFrameOption(*cr.Spec.ForProvider.ResponseHeadersPolicyConfig.SecurityHeadersConfig.FrameOptions.FrameOption)
				}
				if cr.Spec.ForProvider.ResponseHeadersPolicyConfig.SecurityHeadersConfig.FrameOptions.Override != nil {
					f0f4f2.SetOverride(*cr.Spec.ForProvider.ResponseHeadersPolicyConfig.SecurityHeadersConfig.FrameOptions.Override)
				}
				f0f4.SetFrameOptions(f0f4f2)
			}
			if cr.Spec.ForProvider.ResponseHeadersPolicyConfig.SecurityHeadersConfig.ReferrerPolicy != nil {
				f0f4f3 := &svcsdk.ResponseHeadersPolicyReferrerPolicy{}
				if cr.Spec.ForProvider.ResponseHeadersPolicyConfig.SecurityHeadersConfig.ReferrerPolicy.Override != nil {
					f0f4f3.SetOverride(*cr.Spec.ForProvider.ResponseHeadersPolicyConfig.SecurityHeadersConfig.ReferrerPolicy.Override)
				}
				if cr.Spec.ForProvider.ResponseHeadersPolicyConfig.SecurityHeadersConfig.ReferrerPolicy.ReferrerPolicy != nil {
					f0f4f3.SetReferrerPolicy(*cr.Spec.ForProvider.ResponseHeadersPolicyConfig.SecurityHeadersConfig.ReferrerPolicy.ReferrerPolicy)
				}
				f0f4.SetReferrerPolicy(f0f4f3)
			}
			if cr.Spec.ForProvider.ResponseHeadersPolicyConfig.SecurityHeadersConfig.StrictTransportSecurity != nil {
				f0f4f4 := &svcsdk.ResponseHeadersPolicyStrictTransportSecurity{}
				if cr.Spec.ForProvider.ResponseHeadersPolicyConfig.SecurityHeadersConfig.StrictTransportSecurity.AccessControlMaxAgeSec != nil {
					f0f4f4.SetAccessControlMaxAgeSec(*cr.Spec.ForProvider.ResponseHeadersPolicyConfig.SecurityHeadersConfig.StrictTransportSecurity.AccessControlMaxAgeSec)
				}
				if cr.Spec.ForProvider.ResponseHeadersPolicyConfig.SecurityHeadersConfig.StrictTransportSecurity.IncludeSubdomains != nil {
					f0f4f4.SetIncludeSubdomains(*cr.Spec.ForProvider.ResponseHeadersPolicyConfig.SecurityHeadersConfig.StrictTransportSecurity.IncludeSubdomains)
				}
				if cr.Spec.ForProvider.ResponseHeadersPolicyConfig.SecurityHeadersConfig.StrictTransportSecurity.Override != nil {
					f0f4f4.SetOverride(*cr.Spec.ForProvider.ResponseHeadersPolicyConfig.SecurityHeadersConfig.StrictTransportSecurity.Override)
				}
				if cr.Spec.ForProvider.ResponseHeadersPolicyConfig.SecurityHeadersConfig.StrictTransportSecurity.Preload != nil {
					f0f4f4.SetPreload(*cr.Spec.ForProvider.ResponseHeadersPolicyConfig.SecurityHeadersConfig.StrictTransportSecurity.Preload)
				}
				f0f4.SetStrictTransportSecurity(f0f4f4)
			}
			if cr.Spec.ForProvider.ResponseHeadersPolicyConfig.SecurityHeadersConfig.XSSProtection != nil {
				f0f4f5 := &svcsdk.ResponseHeadersPolicyXSSProtection{}
				if cr.Spec.ForProvider.ResponseHeadersPolicyConfig.SecurityHeadersConfig.XSSProtection.ModeBlock != nil {
					f0f4f5.SetModeBlock(*cr.Spec.ForProvider.ResponseHeadersPolicyConfig.SecurityHeadersConfig.XSSProtection.ModeBlock)
				}
				if cr.Spec.ForProvider.ResponseHeadersPolicyConfig.SecurityHeadersConfig.XSSProtection.Override != nil {
					f0f4f5.SetOverride(*cr.Spec.ForProvider.ResponseHeadersPolicyConfig.SecurityHeadersConfig.XSSProtection.Override)
				}
				if cr.Spec.ForProvider.ResponseHeadersPolicyConfig.SecurityHeadersConfig.XSSProtection.Protection != nil {
					f0f4f5.SetProtection(*cr.Spec.ForProvider.ResponseHeadersPolicyConfig.SecurityHeadersConfig.XSSProtection.Protection)
				}
				if cr.Spec.ForProvider.ResponseHeadersPolicyConfig.SecurityHeadersConfig.XSSProtection.ReportURI != nil {
					f0f4f5.SetReportUri(*cr.Spec.ForProvider.ResponseHeadersPolicyConfig.SecurityHeadersConfig.XSSProtection.ReportURI)
				}
				f0f4.SetXSSProtection(f0f4f5)
			}
			f0.SetSecurityHeadersConfig(f0f4)
		}
		res.SetResponseHeadersPolicyConfig(f0)
	}

	return res
}

// GenerateUpdateResponseHeadersPolicyInput returns an update input.
func GenerateUpdateResponseHeadersPolicyInput(cr *svcapitypes.ResponseHeadersPolicy) *svcsdk.UpdateResponseHeadersPolicyInput {
	res := &svcsdk.UpdateResponseHeadersPolicyInput{}

	if cr.Spec.ForProvider.ResponseHeadersPolicyConfig != nil {
		f2 := &svcsdk.ResponseHeadersPolicyConfig{}
		if cr.Spec.ForProvider.ResponseHeadersPolicyConfig.Comment != nil {
			f2.SetComment(*cr.Spec.ForProvider.ResponseHeadersPolicyConfig.Comment)
		}
		if cr.Spec.ForProvider.ResponseHeadersPolicyConfig.CORSConfig != nil {
			f2f1 := &svcsdk.ResponseHeadersPolicyCorsConfig{}
			if cr.Spec.ForProvider.ResponseHeadersPolicyConfig.CORSConfig.AccessControlAllowCredentials != nil {
				f2f1.SetAccessControlAllowCredentials(*cr.Spec.ForProvider.ResponseHeadersPolicyConfig.CORSConfig.AccessControlAllowCredentials)
			}
			if cr.Spec.ForProvider.ResponseHeadersPolicyConfig.CORSConfig.AccessControlAllowHeaders != nil {
				f2f1f1 := &svcsdk.ResponseHeadersPolicyAccessControlAllowHeaders{}
				if cr.Spec.ForProvider.ResponseHeadersPolicyConfig.CORSConfig.AccessControlAllowHeaders.Items != nil {
					f2f1f1f0 := []*string{}
					for _, f2f1f1f0iter := range cr.Spec.ForProvider.ResponseHeadersPolicyConfig.CORSConfig.AccessControlAllowHeaders.Items {
						var f2f1f1f0elem string
						f2f1f1f0elem = *f2f1f1f0iter
						f2f1f1f0 = append(f2f1f1f0, &f2f1f1f0elem)
					}
					f2f1f1.SetItems(f2f1f1f0)
				}
				f2f1.SetAccessControlAllowHeaders(f2f1f1)
			}
			if cr.Spec.ForProvider.ResponseHeadersPolicyConfig.CORSConfig.AccessControlAllowMethods != nil {
				f2f1f2 := &svcsdk.ResponseHeadersPolicyAccessControlAllowMethods{}
				if cr.Spec.ForProvider.ResponseHeadersPolicyConfig.CORSConfig.AccessControlAllowMethods.Items != nil {
					f2f1f2f0 := []*string{}
					for _, f2f1f2f0iter := range cr.Spec.ForProvider.ResponseHeadersPolicyConfig.CORSConfig.AccessControlAllowMethods.Items {
						var f2f1f2f0elem string
						f2f1f2f0elem = *f2f1f2f0iter
						f2f1f2f0 = append(f2f1f2f0, &f2f1f2f0elem)
					}
					f2f1f2.SetItems(f2f1f2f0)
				}
				f2f1.SetAccessControlAllowMethods(f2f1f2)
			}
			if cr.Spec.ForProvider.ResponseHeadersPolicyConfig.CORSConfig.AccessControlAllowOrigins != nil {
				f2f1f3 := &svcsdk.ResponseHeadersPolicyAccessControlAllowOrigins{}
				if cr.Spec.ForProvider.ResponseHeadersPolicyConfig.CORSConfig.AccessControlAllowOrigins.Items != nil {
					f2f1f3f0 := []*string{}
					for _, f2f1f3f0iter := range cr.Spec.ForProvider.ResponseHeadersPolicyConfig.CORSConfig.AccessControlAllowOrigins.Items {
						var f2f1f3f0elem string
						f2f1f3f0elem = *f2f1f3f0iter
						f2f1f3f0 = append(f2f1f3f0, &f2f1f3f0elem)
					}
					f2f1f3.SetItems(f2f1f3f0)
				}
				f2f1.SetAccessControlAllowOrigins(f2f1f3)
			}
			if cr.Spec.ForProvider.ResponseHeadersPolicyConfig.CORSConfig.AccessControlExposeHeaders != nil {
				f2f1f4 := &svcsdk.ResponseHeadersPolicyAccessControlExposeHeaders{}
				if cr.Spec.ForProvider.ResponseHeadersPolicyConfig.CORSConfig.AccessControlExposeHeaders.Items != nil {
					f2f1f4f0 := []*string{}
					for _, f2f1f4f0iter := range cr.Spec.ForProvider.ResponseHeadersPolicyConfig.CORSConfig.AccessControlExposeHeaders.Items {
						var f2f1f4f0elem string
						f2f1f4f0elem = *f2f1f4f0iter
						f2f1f4f0 = append(f2f1f4f0, &f2f1f4f0elem)
					}
					f2f1f4.SetItems(f2f1f4f0)
				}
				f2f1.SetAccessControlExposeHeaders(f2f1f4)
			}
			if cr.Spec.ForProvider.ResponseHeadersPolicyConfig.CORSConfig.AccessControlMaxAgeSec != nil {
				f2f1.SetAccessControlMaxAgeSec(*cr.Spec.ForProvider.ResponseHeadersPolicyConfig.CORSConfig.AccessControlMaxAgeSec)
			}
			if cr.Spec.ForProvider.ResponseHeadersPolicyConfig.CORSConfig.OriginOverride != nil {
				f2f1.SetOriginOverride(*cr.Spec.ForProvider.ResponseHeadersPolicyConfig.CORSConfig.OriginOverride)
			}
			f2.SetCorsConfig(f2f1)
		}
		if cr.Spec.ForProvider.ResponseHeadersPolicyConfig.CustomHeadersConfig != nil {
			f2f2 := &svcsdk.ResponseHeadersPolicyCustomHeadersConfig{}
			if cr.Spec.ForProvider.ResponseHeadersPolicyConfig.CustomHeadersConfig.Items != nil {
				f2f2f0 := []*svcsdk.ResponseHeadersPolicyCustomHeader{}
				for _, f2f2f0iter := range cr.Spec.ForProvider.ResponseHeadersPolicyConfig.CustomHeadersConfig.Items {
					f2f2f0elem := &svcsdk.ResponseHeadersPolicyCustomHeader{}
					if f2f2f0iter.Header != nil {
						f2f2f0elem.SetHeader(*f2f2f0iter.Header)
					}
					if f2f2f0iter.Override != nil {
						f2f2f0elem.SetOverride(*f2f2f0iter.Override)
					}
					if f2f2f0iter.Value != nil {
						f2f2f0elem.SetValue(*f2f2f0iter.Value)
					}
					f2f2f0 = append(f2f2f0, f2f2f0elem)
				}
				f2f2.SetItems(f2f2f0)
			}
			f2.SetCustomHeadersConfig(f2f2)
		}
		if cr.Spec.ForProvider.ResponseHeadersPolicyConfig.Name != nil {
			f2.SetName(*cr.Spec.ForProvider.ResponseHeadersPolicyConfig.Name)
		}
		if cr.Spec.ForProvider.ResponseHeadersPolicyConfig.SecurityHeadersConfig != nil {
			f2f4 := &svcsdk.ResponseHeadersPolicySecurityHeadersConfig{}
			if cr.Spec.ForProvider.ResponseHeadersPolicyConfig.SecurityHeadersConfig.ContentSecurityPolicy != nil {
				f2f4f0 := &svcsdk.ResponseHeadersPolicyContentSecurityPolicy{}
				if cr.Spec.ForProvider.ResponseHeadersPolicyConfig.SecurityHeadersConfig.ContentSecurityPolicy.ContentSecurityPolicy != nil {
					f2f4f0.SetContentSecurityPolicy(*cr.Spec.ForProvider.ResponseHeadersPolicyConfig.SecurityHeadersConfig.ContentSecurityPolicy.ContentSecurityPolicy)
				}
				if cr.Spec.ForProvider.ResponseHeadersPolicyConfig.SecurityHeadersConfig.ContentSecurityPolicy.Override != nil {
					f2f4f0.SetOverride(*cr.Spec.ForProvider.ResponseHeadersPolicyConfig.SecurityHeadersConfig.ContentSecurityPolicy.Override)
				}
				f2f4.SetContentSecurityPolicy(f2f4f0)
			}
			if cr.Spec.ForProvider.ResponseHeadersPolicyConfig.SecurityHeadersConfig.ContentTypeOptions != nil {
				f2f4f1 := &svcsdk.ResponseHeadersPolicyContentTypeOptions{}
				if cr.Spec.ForProvider.ResponseHeadersPolicyConfig.SecurityHeadersConfig.ContentTypeOptions.Override != nil {
					f2f4f1.SetOverride(*cr.Spec.ForProvider.ResponseHeadersPolicyConfig.SecurityHeadersConfig.ContentTypeOptions.Override)
				}
				f2f4.SetContentTypeOptions(f2f4f1)
			}
			if cr.Spec.ForProvider.ResponseHeadersPolicyConfig.SecurityHeadersConfig.FrameOptions != nil {
				f2f4f2 := &svcsdk.ResponseHeadersPolicyFrameOptions{}
				if cr.Spec.ForProvider.ResponseHeadersPolicyConfig.SecurityHeadersConfig.FrameOptions.FrameOption != nil {
					f2f4f2.SetFrameOption(*cr.Spec.ForProvider.ResponseHeadersPolicyConfig.SecurityHeadersConfig.FrameOptions.FrameOption)
				}
				if cr.Spec.ForProvider.ResponseHeadersPolicyConfig.SecurityHeadersConfig.FrameOptions.Override != nil {
					f2f4f2.SetOverride(*cr.Spec.ForProvider.ResponseHeadersPolicyConfig.SecurityHeadersConfig.FrameOptions.Override)
				}
				f2f4.SetFrameOptions(f2f4f2)
			}
			if cr.Spec.ForProvider.ResponseHeadersPolicyConfig.SecurityHeadersConfig.ReferrerPolicy != nil {
				f2f4f3 := &svcsdk.ResponseHeadersPolicyReferrerPolicy{}
				if cr.Spec.ForProvider.ResponseHeadersPolicyConfig.SecurityHeadersConfig.ReferrerPolicy.Override != nil {
					f2f4f3.SetOverride(*cr.Spec.ForProvider.ResponseHeadersPolicyConfig.SecurityHeadersConfig.ReferrerPolicy.Override)
				}
				if cr.Spec.ForProvider.ResponseHeadersPolicyConfig.SecurityHeadersConfig.ReferrerPolicy.ReferrerPolicy != nil {
					f2f4f3.SetReferrerPolicy(*cr.Spec.ForProvider.ResponseHeadersPolicyConfig.SecurityHeadersConfig.ReferrerPolicy.ReferrerPolicy)
				}
				f2f4.SetReferrerPolicy(f2f4f3)
			}
			if cr.Spec.ForProvider.ResponseHeadersPolicyConfig.SecurityHeadersConfig.StrictTransportSecurity != nil {
				f2f4f4 := &svcsdk.ResponseHeadersPolicyStrictTransportSecurity{}
				if cr.Spec.ForProvider.ResponseHeadersPolicyConfig.SecurityHeadersConfig.StrictTransportSecurity.AccessControlMaxAgeSec != nil {
					f2f4f4.SetAccessControlMaxAgeSec(*cr.Spec.ForProvider.ResponseHeadersPolicyConfig.SecurityHeadersConfig.StrictTransportSecurity.AccessControlMaxAgeSec)
				}
				if cr.Spec.ForProvider.ResponseHeadersPolicyConfig.SecurityHeadersConfig.StrictTransportSecurity.IncludeSubdomains != nil {
					f2f4f4.SetIncludeSubdomains(*cr.Spec.ForProvider.ResponseHeadersPolicyConfig.SecurityHeadersConfig.StrictTransportSecurity.IncludeSubdomains)
				}
				if cr.Spec.ForProvider.ResponseHeadersPolicyConfig.SecurityHeadersConfig.StrictTransportSecurity.Override != nil {
					f2f4f4.SetOverride(*cr.Spec.ForProvider.ResponseHeadersPolicyConfig.SecurityHeadersConfig.StrictTransportSecurity.Override)
				}
				if cr.Spec.ForProvider.ResponseHeadersPolicyConfig.SecurityHeadersConfig.StrictTransportSecurity.Preload != nil {
					f2f4f4.SetPreload(*cr.Spec.ForProvider.ResponseHeadersPolicyConfig.SecurityHeadersConfig.StrictTransportSecurity.Preload)
				}
				f2f4.SetStrictTransportSecurity(f2f4f4)
			}
			if cr.Spec.ForProvider.ResponseHeadersPolicyConfig.SecurityHeadersConfig.XSSProtection != nil {
				f2f4f5 := &svcsdk.ResponseHeadersPolicyXSSProtection{}
				if cr.Spec.ForProvider.ResponseHeadersPolicyConfig.SecurityHeadersConfig.XSSProtection.ModeBlock != nil {
					f2f4f5.SetModeBlock(*cr.Spec.ForProvider.ResponseHeadersPolicyConfig.SecurityHeadersConfig.XSSProtection.ModeBlock)
				}
				if cr.Spec.ForProvider.ResponseHeadersPolicyConfig.SecurityHeadersConfig.XSSProtection.Override != nil {
					f2f4f5.SetOverride(*cr.Spec.ForProvider.ResponseHeadersPolicyConfig.SecurityHeadersConfig.XSSProtection.Override)
				}
				if cr.Spec.ForProvider.ResponseHeadersPolicyConfig.SecurityHeadersConfig.XSSProtection.Protection != nil {
					f2f4f5.SetProtection(*cr.Spec.ForProvider.ResponseHeadersPolicyConfig.SecurityHeadersConfig.XSSProtection.Protection)
				}
				if cr.Spec.ForProvider.ResponseHeadersPolicyConfig.SecurityHeadersConfig.XSSProtection.ReportURI != nil {
					f2f4f5.SetReportUri(*cr.Spec.ForProvider.ResponseHeadersPolicyConfig.SecurityHeadersConfig.XSSProtection.ReportURI)
				}
				f2f4.SetXSSProtection(f2f4f5)
			}
			f2.SetSecurityHeadersConfig(f2f4)
		}
		res.SetResponseHeadersPolicyConfig(f2)
	}

	return res
}

// GenerateDeleteResponseHeadersPolicyInput returns a deletion input.
func GenerateDeleteResponseHeadersPolicyInput(cr *svcapitypes.ResponseHeadersPolicy) *svcsdk.DeleteResponseHeadersPolicyInput {
	res := &svcsdk.DeleteResponseHeadersPolicyInput{}

	return res
}

// IsNotFound returns whether the given error is of type NotFound or not.
func IsNotFound(err error) bool {
	awsErr, ok := err.(awserr.Error)
	return ok && awsErr.Code() == "NoSuchResponseHeadersPolicy"
}
